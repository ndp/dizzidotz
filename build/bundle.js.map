{"version":3,"sources":["webpack://dizzidotz/./node_modules/@babel/polyfill/lib/index.js","webpack://dizzidotz/./node_modules/@babel/polyfill/lib/noConflict.js","webpack://dizzidotz/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://dizzidotz/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://dizzidotz/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://dizzidotz/./node_modules/@babel/runtime/helpers/createClass.js","webpack://dizzidotz/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://dizzidotz/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://dizzidotz/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://dizzidotz/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://dizzidotz/./node_modules/automation-events/build/es5/bundle.js","webpack://dizzidotz/../src/AsyncSubject.ts","webpack://dizzidotz/../src/BehaviorSubject.ts","webpack://dizzidotz/../src/InnerSubscriber.ts","webpack://dizzidotz/../src/Notification.ts","webpack://dizzidotz/../src/Observable.ts","webpack://dizzidotz/../src/Observer.ts","webpack://dizzidotz/../src/OuterSubscriber.ts","webpack://dizzidotz/../src/ReplaySubject.ts","webpack://dizzidotz/../src/Rx.ts","webpack://dizzidotz/../src/Scheduler.ts","webpack://dizzidotz/../src/Subject.ts","webpack://dizzidotz/../src/SubjectSubscription.ts","webpack://dizzidotz/../src/Subscriber.ts","webpack://dizzidotz/../src/Subscription.ts","webpack://dizzidotz/../src/add/observable/bindCallback.ts","webpack://dizzidotz/../src/add/observable/bindNodeCallback.ts","webpack://dizzidotz/../src/add/observable/combineLatest.ts","webpack://dizzidotz/../src/add/observable/concat.ts","webpack://dizzidotz/../src/add/observable/defer.ts","webpack://dizzidotz/../src/add/observable/dom/ajax.ts","webpack://dizzidotz/../src/add/observable/dom/webSocket.ts","webpack://dizzidotz/../src/add/observable/empty.ts","webpack://dizzidotz/../src/add/observable/forkJoin.ts","webpack://dizzidotz/../src/add/observable/from.ts","webpack://dizzidotz/../src/add/observable/fromEvent.ts","webpack://dizzidotz/../src/add/observable/fromEventPattern.ts","webpack://dizzidotz/../src/add/observable/fromPromise.ts","webpack://dizzidotz/../src/add/observable/generate.ts","webpack://dizzidotz/../src/add/observable/if.ts","webpack://dizzidotz/../src/add/observable/interval.ts","webpack://dizzidotz/../src/add/observable/merge.ts","webpack://dizzidotz/../src/add/observable/never.ts","webpack://dizzidotz/../src/add/observable/of.ts","webpack://dizzidotz/../src/add/observable/onErrorResumeNext.ts","webpack://dizzidotz/../src/add/observable/pairs.ts","webpack://dizzidotz/../src/add/observable/race.ts","webpack://dizzidotz/../src/add/observable/range.ts","webpack://dizzidotz/../src/add/observable/throw.ts","webpack://dizzidotz/../src/add/observable/timer.ts","webpack://dizzidotz/../src/add/observable/using.ts","webpack://dizzidotz/../src/add/observable/zip.ts","webpack://dizzidotz/../src/add/operator/audit.ts","webpack://dizzidotz/../src/add/operator/auditTime.ts","webpack://dizzidotz/../src/add/operator/buffer.ts","webpack://dizzidotz/../src/add/operator/bufferCount.ts","webpack://dizzidotz/../src/add/operator/bufferTime.ts","webpack://dizzidotz/../src/add/operator/bufferToggle.ts","webpack://dizzidotz/../src/add/operator/bufferWhen.ts","webpack://dizzidotz/../src/add/operator/catch.ts","webpack://dizzidotz/../src/add/operator/combineAll.ts","webpack://dizzidotz/../src/add/operator/combineLatest.ts","webpack://dizzidotz/../src/add/operator/concat.ts","webpack://dizzidotz/../src/add/operator/concatAll.ts","webpack://dizzidotz/../src/add/operator/concatMap.ts","webpack://dizzidotz/../src/add/operator/concatMapTo.ts","webpack://dizzidotz/../src/add/operator/count.ts","webpack://dizzidotz/../src/add/operator/debounce.ts","webpack://dizzidotz/../src/add/operator/debounceTime.ts","webpack://dizzidotz/../src/add/operator/defaultIfEmpty.ts","webpack://dizzidotz/../src/add/operator/delay.ts","webpack://dizzidotz/../src/add/operator/delayWhen.ts","webpack://dizzidotz/../src/add/operator/dematerialize.ts","webpack://dizzidotz/../src/add/operator/distinct.ts","webpack://dizzidotz/../src/add/operator/distinctUntilChanged.ts","webpack://dizzidotz/../src/add/operator/distinctUntilKeyChanged.ts","webpack://dizzidotz/../src/add/operator/do.ts","webpack://dizzidotz/../src/add/operator/elementAt.ts","webpack://dizzidotz/../src/add/operator/every.ts","webpack://dizzidotz/../src/add/operator/exhaust.ts","webpack://dizzidotz/../src/add/operator/exhaustMap.ts","webpack://dizzidotz/../src/add/operator/expand.ts","webpack://dizzidotz/../src/add/operator/filter.ts","webpack://dizzidotz/../src/add/operator/finally.ts","webpack://dizzidotz/../src/add/operator/find.ts","webpack://dizzidotz/../src/add/operator/findIndex.ts","webpack://dizzidotz/../src/add/operator/first.ts","webpack://dizzidotz/../src/add/operator/groupBy.ts","webpack://dizzidotz/../src/add/operator/ignoreElements.ts","webpack://dizzidotz/../src/add/operator/isEmpty.ts","webpack://dizzidotz/../src/add/operator/last.ts","webpack://dizzidotz/../src/add/operator/let.ts","webpack://dizzidotz/../src/add/operator/map.ts","webpack://dizzidotz/../src/add/operator/mapTo.ts","webpack://dizzidotz/../src/add/operator/materialize.ts","webpack://dizzidotz/../src/add/operator/max.ts","webpack://dizzidotz/../src/add/operator/merge.ts","webpack://dizzidotz/../src/add/operator/mergeAll.ts","webpack://dizzidotz/../src/add/operator/mergeMap.ts","webpack://dizzidotz/../src/add/operator/mergeMapTo.ts","webpack://dizzidotz/../src/add/operator/mergeScan.ts","webpack://dizzidotz/../src/add/operator/min.ts","webpack://dizzidotz/../src/add/operator/multicast.ts","webpack://dizzidotz/../src/add/operator/observeOn.ts","webpack://dizzidotz/../src/add/operator/onErrorResumeNext.ts","webpack://dizzidotz/../src/add/operator/pairwise.ts","webpack://dizzidotz/../src/add/operator/partition.ts","webpack://dizzidotz/../src/add/operator/pluck.ts","webpack://dizzidotz/../src/add/operator/publish.ts","webpack://dizzidotz/../src/add/operator/publishBehavior.ts","webpack://dizzidotz/../src/add/operator/publishLast.ts","webpack://dizzidotz/../src/add/operator/publishReplay.ts","webpack://dizzidotz/../src/add/operator/race.ts","webpack://dizzidotz/../src/add/operator/reduce.ts","webpack://dizzidotz/../src/add/operator/repeat.ts","webpack://dizzidotz/../src/add/operator/repeatWhen.ts","webpack://dizzidotz/../src/add/operator/retry.ts","webpack://dizzidotz/../src/add/operator/retryWhen.ts","webpack://dizzidotz/../src/add/operator/sample.ts","webpack://dizzidotz/../src/add/operator/sampleTime.ts","webpack://dizzidotz/../src/add/operator/scan.ts","webpack://dizzidotz/../src/add/operator/sequenceEqual.ts","webpack://dizzidotz/../src/add/operator/share.ts","webpack://dizzidotz/../src/add/operator/shareReplay.ts","webpack://dizzidotz/../src/add/operator/single.ts","webpack://dizzidotz/../src/add/operator/skip.ts","webpack://dizzidotz/../src/add/operator/skipLast.ts","webpack://dizzidotz/../src/add/operator/skipUntil.ts","webpack://dizzidotz/../src/add/operator/skipWhile.ts","webpack://dizzidotz/../src/add/operator/startWith.ts","webpack://dizzidotz/../src/add/operator/subscribeOn.ts","webpack://dizzidotz/../src/add/operator/switch.ts","webpack://dizzidotz/../src/add/operator/switchMap.ts","webpack://dizzidotz/../src/add/operator/switchMapTo.ts","webpack://dizzidotz/../src/add/operator/take.ts","webpack://dizzidotz/../src/add/operator/takeLast.ts","webpack://dizzidotz/../src/add/operator/takeUntil.ts","webpack://dizzidotz/../src/add/operator/takeWhile.ts","webpack://dizzidotz/../src/add/operator/throttle.ts","webpack://dizzidotz/../src/add/operator/throttleTime.ts","webpack://dizzidotz/../src/add/operator/timeInterval.ts","webpack://dizzidotz/../src/add/operator/timeout.ts","webpack://dizzidotz/../src/add/operator/timeoutWith.ts","webpack://dizzidotz/../src/add/operator/timestamp.ts","webpack://dizzidotz/../src/add/operator/toArray.ts","webpack://dizzidotz/../src/add/operator/window.ts","webpack://dizzidotz/../src/add/operator/windowCount.ts","webpack://dizzidotz/../src/add/operator/windowTime.ts","webpack://dizzidotz/../src/add/operator/windowToggle.ts","webpack://dizzidotz/../src/add/operator/windowWhen.ts","webpack://dizzidotz/../src/add/operator/withLatestFrom.ts","webpack://dizzidotz/../src/add/operator/zip.ts","webpack://dizzidotz/../src/add/operator/zipAll.ts","webpack://dizzidotz/../src/observable/ArrayLikeObservable.ts","webpack://dizzidotz/../src/observable/ArrayObservable.ts","webpack://dizzidotz/../src/observable/BoundCallbackObservable.ts","webpack://dizzidotz/../src/observable/BoundNodeCallbackObservable.ts","webpack://dizzidotz/../src/observable/ConnectableObservable.ts","webpack://dizzidotz/../src/observable/DeferObservable.ts","webpack://dizzidotz/../src/observable/EmptyObservable.ts","webpack://dizzidotz/../src/observable/ErrorObservable.ts","webpack://dizzidotz/../src/observable/ForkJoinObservable.ts","webpack://dizzidotz/../src/observable/FromEventObservable.ts","webpack://dizzidotz/../src/observable/FromEventPatternObservable.ts","webpack://dizzidotz/../src/observable/FromObservable.ts","webpack://dizzidotz/../src/observable/GenerateObservable.ts","webpack://dizzidotz/../src/observable/IfObservable.ts","webpack://dizzidotz/../src/observable/IntervalObservable.ts","webpack://dizzidotz/../src/observable/IteratorObservable.ts","webpack://dizzidotz/../src/observable/NeverObservable.ts","webpack://dizzidotz/../src/observable/PairsObservable.ts","webpack://dizzidotz/../src/observable/PromiseObservable.ts","webpack://dizzidotz/../src/observable/RangeObservable.ts","webpack://dizzidotz/../src/observable/ScalarObservable.ts","webpack://dizzidotz/../src/observable/SubscribeOnObservable.ts","webpack://dizzidotz/../src/observable/TimerObservable.ts","webpack://dizzidotz/../src/observable/UsingObservable.ts","webpack://dizzidotz/../src/observable/bindCallback.ts","webpack://dizzidotz/../src/observable/bindNodeCallback.ts","webpack://dizzidotz/../src/observable/combineLatest.ts","webpack://dizzidotz/../src/observable/concat.ts","webpack://dizzidotz/../src/observable/defer.ts","webpack://dizzidotz/../src/observable/dom/AjaxObservable.ts","webpack://dizzidotz/../src/observable/dom/WebSocketSubject.ts","webpack://dizzidotz/../src/observable/dom/ajax.ts","webpack://dizzidotz/../src/observable/dom/webSocket.ts","webpack://dizzidotz/../src/observable/empty.ts","webpack://dizzidotz/../src/observable/forkJoin.ts","webpack://dizzidotz/../src/observable/from.ts","webpack://dizzidotz/../src/observable/fromEvent.ts","webpack://dizzidotz/../src/observable/fromEventPattern.ts","webpack://dizzidotz/../src/observable/fromPromise.ts","webpack://dizzidotz/../src/observable/generate.ts","webpack://dizzidotz/../src/observable/if.ts","webpack://dizzidotz/../src/observable/interval.ts","webpack://dizzidotz/../src/observable/merge.ts","webpack://dizzidotz/../src/observable/never.ts","webpack://dizzidotz/../src/observable/of.ts","webpack://dizzidotz/../src/observable/onErrorResumeNext.ts","webpack://dizzidotz/../src/observable/pairs.ts","webpack://dizzidotz/../src/observable/race.ts","webpack://dizzidotz/../src/observable/range.ts","webpack://dizzidotz/../src/observable/throw.ts","webpack://dizzidotz/../src/observable/timer.ts","webpack://dizzidotz/../src/observable/using.ts","webpack://dizzidotz/../src/observable/zip.ts","webpack://dizzidotz/../src/operator/audit.ts","webpack://dizzidotz/../src/operator/auditTime.ts","webpack://dizzidotz/../src/operator/buffer.ts","webpack://dizzidotz/../src/operator/bufferCount.ts","webpack://dizzidotz/../src/operator/bufferTime.ts","webpack://dizzidotz/../src/operator/bufferToggle.ts","webpack://dizzidotz/../src/operator/bufferWhen.ts","webpack://dizzidotz/../src/operator/catch.ts","webpack://dizzidotz/../src/operator/combineAll.ts","webpack://dizzidotz/../src/operator/combineLatest.ts","webpack://dizzidotz/../src/operator/concat.ts","webpack://dizzidotz/../src/operator/concatAll.ts","webpack://dizzidotz/../src/operator/concatMap.ts","webpack://dizzidotz/../src/operator/concatMapTo.ts","webpack://dizzidotz/../src/operator/count.ts","webpack://dizzidotz/../src/operator/debounce.ts","webpack://dizzidotz/../src/operator/debounceTime.ts","webpack://dizzidotz/../src/operator/defaultIfEmpty.ts","webpack://dizzidotz/../src/operator/delay.ts","webpack://dizzidotz/../src/operator/delayWhen.ts","webpack://dizzidotz/../src/operator/dematerialize.ts","webpack://dizzidotz/../src/operator/distinct.ts","webpack://dizzidotz/../src/operator/distinctUntilChanged.ts","webpack://dizzidotz/../src/operator/distinctUntilKeyChanged.ts","webpack://dizzidotz/../src/operator/do.ts","webpack://dizzidotz/../src/operator/elementAt.ts","webpack://dizzidotz/../src/operator/every.ts","webpack://dizzidotz/../src/operator/exhaust.ts","webpack://dizzidotz/../src/operator/exhaustMap.ts","webpack://dizzidotz/../src/operator/expand.ts","webpack://dizzidotz/../src/operator/filter.ts","webpack://dizzidotz/../src/operator/finally.ts","webpack://dizzidotz/../src/operator/find.ts","webpack://dizzidotz/../src/operator/findIndex.ts","webpack://dizzidotz/../src/operator/first.ts","webpack://dizzidotz/../src/operator/groupBy.ts","webpack://dizzidotz/../src/operator/ignoreElements.ts","webpack://dizzidotz/../src/operator/isEmpty.ts","webpack://dizzidotz/../src/operator/last.ts","webpack://dizzidotz/../src/operator/let.ts","webpack://dizzidotz/../src/operator/map.ts","webpack://dizzidotz/../src/operator/mapTo.ts","webpack://dizzidotz/../src/operator/materialize.ts","webpack://dizzidotz/../src/operator/max.ts","webpack://dizzidotz/../src/operator/merge.ts","webpack://dizzidotz/../src/operator/mergeAll.ts","webpack://dizzidotz/../src/operator/mergeMap.ts","webpack://dizzidotz/../src/operator/mergeMapTo.ts","webpack://dizzidotz/../src/operator/mergeScan.ts","webpack://dizzidotz/../src/operator/min.ts","webpack://dizzidotz/../src/operator/multicast.ts","webpack://dizzidotz/../src/operator/observeOn.ts","webpack://dizzidotz/../src/operator/onErrorResumeNext.ts","webpack://dizzidotz/../src/operator/pairwise.ts","webpack://dizzidotz/../src/operator/partition.ts","webpack://dizzidotz/../src/operator/pluck.ts","webpack://dizzidotz/../src/operator/publish.ts","webpack://dizzidotz/../src/operator/publishBehavior.ts","webpack://dizzidotz/../src/operator/publishLast.ts","webpack://dizzidotz/../src/operator/publishReplay.ts","webpack://dizzidotz/../src/operator/race.ts","webpack://dizzidotz/../src/operator/reduce.ts","webpack://dizzidotz/../src/operator/repeat.ts","webpack://dizzidotz/../src/operator/repeatWhen.ts","webpack://dizzidotz/../src/operator/retry.ts","webpack://dizzidotz/../src/operator/retryWhen.ts","webpack://dizzidotz/../src/operator/sample.ts","webpack://dizzidotz/../src/operator/sampleTime.ts","webpack://dizzidotz/../src/operator/scan.ts","webpack://dizzidotz/../src/operator/sequenceEqual.ts","webpack://dizzidotz/../src/operator/share.ts","webpack://dizzidotz/../src/operator/shareReplay.ts","webpack://dizzidotz/../src/operator/single.ts","webpack://dizzidotz/../src/operator/skip.ts","webpack://dizzidotz/../src/operator/skipLast.ts","webpack://dizzidotz/../src/operator/skipUntil.ts","webpack://dizzidotz/../src/operator/skipWhile.ts","webpack://dizzidotz/../src/operator/startWith.ts","webpack://dizzidotz/../src/operator/subscribeOn.ts","webpack://dizzidotz/../src/operator/switch.ts","webpack://dizzidotz/../src/operator/switchMap.ts","webpack://dizzidotz/../src/operator/switchMapTo.ts","webpack://dizzidotz/../src/operator/take.ts","webpack://dizzidotz/../src/operator/takeLast.ts","webpack://dizzidotz/../src/operator/takeUntil.ts","webpack://dizzidotz/../src/operator/takeWhile.ts","webpack://dizzidotz/../src/operator/throttle.ts","webpack://dizzidotz/../src/operator/throttleTime.ts","webpack://dizzidotz/../src/operator/timeInterval.ts","webpack://dizzidotz/../src/operator/timeout.ts","webpack://dizzidotz/../src/operator/timeoutWith.ts","webpack://dizzidotz/../src/operator/timestamp.ts","webpack://dizzidotz/../src/operator/toArray.ts","webpack://dizzidotz/../src/operator/window.ts","webpack://dizzidotz/../src/operator/windowCount.ts","webpack://dizzidotz/../src/operator/windowTime.ts","webpack://dizzidotz/../src/operator/windowToggle.ts","webpack://dizzidotz/../src/operator/windowWhen.ts","webpack://dizzidotz/../src/operator/withLatestFrom.ts","webpack://dizzidotz/../src/operator/zip.ts","webpack://dizzidotz/../src/operator/zipAll.ts","webpack://dizzidotz/../src/operators.ts","webpack://dizzidotz/../src/operators/audit.ts","webpack://dizzidotz/../src/operators/auditTime.ts","webpack://dizzidotz/../src/operators/buffer.ts","webpack://dizzidotz/../src/operators/bufferCount.ts","webpack://dizzidotz/../src/operators/bufferTime.ts","webpack://dizzidotz/../src/operators/bufferToggle.ts","webpack://dizzidotz/../src/operators/bufferWhen.ts","webpack://dizzidotz/../src/operators/catchError.ts","webpack://dizzidotz/../src/operators/combineAll.ts","webpack://dizzidotz/../src/operators/combineLatest.ts","webpack://dizzidotz/../src/operators/concat.ts","webpack://dizzidotz/../src/operators/concatAll.ts","webpack://dizzidotz/../src/operators/concatMap.ts","webpack://dizzidotz/../src/operators/concatMapTo.ts","webpack://dizzidotz/../src/operators/count.ts","webpack://dizzidotz/../src/operators/debounce.ts","webpack://dizzidotz/../src/operators/debounceTime.ts","webpack://dizzidotz/../src/operators/defaultIfEmpty.ts","webpack://dizzidotz/../src/operators/delay.ts","webpack://dizzidotz/../src/operators/delayWhen.ts","webpack://dizzidotz/../src/operators/dematerialize.ts","webpack://dizzidotz/../src/operators/distinct.ts","webpack://dizzidotz/../src/operators/distinctUntilChanged.ts","webpack://dizzidotz/../src/operators/distinctUntilKeyChanged.ts","webpack://dizzidotz/../src/operators/elementAt.ts","webpack://dizzidotz/../src/operators/every.ts","webpack://dizzidotz/../src/operators/exhaust.ts","webpack://dizzidotz/../src/operators/exhaustMap.ts","webpack://dizzidotz/../src/operators/expand.ts","webpack://dizzidotz/../src/operators/filter.ts","webpack://dizzidotz/../src/operators/finalize.ts","webpack://dizzidotz/../src/operators/find.ts","webpack://dizzidotz/../src/operators/findIndex.ts","webpack://dizzidotz/../src/operators/first.ts","webpack://dizzidotz/../src/operators/groupBy.ts","webpack://dizzidotz/../src/operators/ignoreElements.ts","webpack://dizzidotz/../src/operators/isEmpty.ts","webpack://dizzidotz/../src/operators/last.ts","webpack://dizzidotz/../src/operators/map.ts","webpack://dizzidotz/../src/operators/mapTo.ts","webpack://dizzidotz/../src/operators/materialize.ts","webpack://dizzidotz/../src/operators/max.ts","webpack://dizzidotz/../src/operators/merge.ts","webpack://dizzidotz/../src/operators/mergeAll.ts","webpack://dizzidotz/../src/operators/mergeMap.ts","webpack://dizzidotz/../src/operators/mergeMapTo.ts","webpack://dizzidotz/../src/operators/mergeScan.ts","webpack://dizzidotz/../src/operators/min.ts","webpack://dizzidotz/../src/operators/multicast.ts","webpack://dizzidotz/../src/operators/observeOn.ts","webpack://dizzidotz/../src/operators/onErrorResumeNext.ts","webpack://dizzidotz/../src/operators/pairwise.ts","webpack://dizzidotz/../src/operators/partition.ts","webpack://dizzidotz/../src/operators/pluck.ts","webpack://dizzidotz/../src/operators/publish.ts","webpack://dizzidotz/../src/operators/publishBehavior.ts","webpack://dizzidotz/../src/operators/publishLast.ts","webpack://dizzidotz/../src/operators/publishReplay.ts","webpack://dizzidotz/../src/operators/race.ts","webpack://dizzidotz/../src/operators/reduce.ts","webpack://dizzidotz/../src/operators/refCount.ts","webpack://dizzidotz/../src/operators/repeat.ts","webpack://dizzidotz/../src/operators/repeatWhen.ts","webpack://dizzidotz/../src/operators/retry.ts","webpack://dizzidotz/../src/operators/retryWhen.ts","webpack://dizzidotz/../src/operators/sample.ts","webpack://dizzidotz/../src/operators/sampleTime.ts","webpack://dizzidotz/../src/operators/scan.ts","webpack://dizzidotz/../src/operators/sequenceEqual.ts","webpack://dizzidotz/../src/operators/share.ts","webpack://dizzidotz/../src/operators/shareReplay.ts","webpack://dizzidotz/../src/operators/single.ts","webpack://dizzidotz/../src/operators/skip.ts","webpack://dizzidotz/../src/operators/skipLast.ts","webpack://dizzidotz/../src/operators/skipUntil.ts","webpack://dizzidotz/../src/operators/skipWhile.ts","webpack://dizzidotz/../src/operators/startWith.ts","webpack://dizzidotz/../src/operators/subscribeOn.ts","webpack://dizzidotz/../src/operators/switchAll.ts","webpack://dizzidotz/../src/operators/switchMap.ts","webpack://dizzidotz/../src/operators/switchMapTo.ts","webpack://dizzidotz/../src/operators/take.ts","webpack://dizzidotz/../src/operators/takeLast.ts","webpack://dizzidotz/../src/operators/takeUntil.ts","webpack://dizzidotz/../src/operators/takeWhile.ts","webpack://dizzidotz/../src/operators/tap.ts","webpack://dizzidotz/../src/operators/throttle.ts","webpack://dizzidotz/../src/operators/throttleTime.ts","webpack://dizzidotz/../src/operators/timeInterval.ts","webpack://dizzidotz/../src/operators/timeout.ts","webpack://dizzidotz/../src/operators/timeoutWith.ts","webpack://dizzidotz/../src/operators/timestamp.ts","webpack://dizzidotz/../src/operators/toArray.ts","webpack://dizzidotz/../src/operators/window.ts","webpack://dizzidotz/../src/operators/windowCount.ts","webpack://dizzidotz/../src/operators/windowTime.ts","webpack://dizzidotz/../src/operators/windowToggle.ts","webpack://dizzidotz/../src/operators/windowWhen.ts","webpack://dizzidotz/../src/operators/withLatestFrom.ts","webpack://dizzidotz/../src/operators/zip.ts","webpack://dizzidotz/../src/operators/zipAll.ts","webpack://dizzidotz/../src/scheduler/Action.ts","webpack://dizzidotz/../src/scheduler/AnimationFrameAction.ts","webpack://dizzidotz/../src/scheduler/AnimationFrameScheduler.ts","webpack://dizzidotz/../src/scheduler/AsapAction.ts","webpack://dizzidotz/../src/scheduler/AsapScheduler.ts","webpack://dizzidotz/../src/scheduler/AsyncAction.ts","webpack://dizzidotz/../src/scheduler/AsyncScheduler.ts","webpack://dizzidotz/../src/scheduler/QueueAction.ts","webpack://dizzidotz/../src/scheduler/QueueScheduler.ts","webpack://dizzidotz/../src/scheduler/VirtualTimeScheduler.ts","webpack://dizzidotz/../src/scheduler/animationFrame.ts","webpack://dizzidotz/../src/scheduler/asap.ts","webpack://dizzidotz/../src/scheduler/async.ts","webpack://dizzidotz/../src/scheduler/queue.ts","webpack://dizzidotz/../src/symbol/iterator.ts","webpack://dizzidotz/../src/symbol/observable.ts","webpack://dizzidotz/../src/symbol/rxSubscriber.ts","webpack://dizzidotz/../src/testing/ColdObservable.ts","webpack://dizzidotz/../src/testing/HotObservable.ts","webpack://dizzidotz/../src/testing/SubscriptionLog.ts","webpack://dizzidotz/../src/testing/SubscriptionLoggable.ts","webpack://dizzidotz/../src/testing/TestScheduler.ts","webpack://dizzidotz/../src/util/AnimationFrame.ts","webpack://dizzidotz/../src/util/ArgumentOutOfRangeError.ts","webpack://dizzidotz/../src/util/EmptyError.ts","webpack://dizzidotz/../src/util/FastMap.ts","webpack://dizzidotz/../src/util/Immediate.ts","webpack://dizzidotz/../src/util/Map.ts","webpack://dizzidotz/../src/util/MapPolyfill.ts","webpack://dizzidotz/../src/util/ObjectUnsubscribedError.ts","webpack://dizzidotz/../src/util/Set.ts","webpack://dizzidotz/../src/util/TimeoutError.ts","webpack://dizzidotz/../src/util/UnsubscriptionError.ts","webpack://dizzidotz/../src/util/applyMixins.ts","webpack://dizzidotz/../src/util/assign.ts","webpack://dizzidotz/../src/util/errorObject.ts","webpack://dizzidotz/../src/util/identity.ts","webpack://dizzidotz/../src/util/isArray.ts","webpack://dizzidotz/../src/util/isArrayLike.ts","webpack://dizzidotz/../src/util/isDate.ts","webpack://dizzidotz/../src/util/isFunction.ts","webpack://dizzidotz/../src/util/isNumeric.ts","webpack://dizzidotz/../src/util/isObject.ts","webpack://dizzidotz/../src/util/isPromise.ts","webpack://dizzidotz/../src/util/isScheduler.ts","webpack://dizzidotz/../src/util/noop.ts","webpack://dizzidotz/../src/util/not.ts","webpack://dizzidotz/../src/util/pipe.ts","webpack://dizzidotz/../src/util/root.ts","webpack://dizzidotz/../src/util/subscribeToResult.ts","webpack://dizzidotz/../src/util/toSubscriber.ts","webpack://dizzidotz/../src/util/tryCatch.ts","webpack://dizzidotz/./src/dial.js","webpack://dizzidotz/./src/lib/ndp-software/svg.js","webpack://dizzidotz/./src/editor.js","webpack://dizzidotz/./src/lib/ndp-software/generators.js","webpack://dizzidotz/./src/lib/ndp-software/trig.js","webpack://dizzidotz/./src/lib/ndp-software/util.js","webpack://dizzidotz/./src/machine.js","webpack://dizzidotz/./src/name.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/globals.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/constants.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/module.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack://dizzidotz/./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/Debug.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/TypeCheck.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/AudioContext.js","webpack://dizzidotz/./node_modules/tslib/tslib.es6.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/clock/Ticker.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/Defaults.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/Tone.js","webpack://dizzidotz/./node_modules/tone/build/esm/version.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/Math.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/Timeline.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/ContextInitialization.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/Emitter.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/BaseContext.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/Context.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/Interface.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/OfflineContext.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/Global.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/DummyContext.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/type/Conversions.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/type/TimeBase.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/type/Time.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/type/Frequency.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/type/TransportTime.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/ToneWithContext.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/StateTimeline.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/Param.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/ToneAudioNode.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/Gain.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/OneShotSource.js","webpack://dizzidotz/./node_modules/tone/build/esm/signal/ToneConstantSource.js","webpack://dizzidotz/./node_modules/tone/build/esm/signal/Signal.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/clock/TickParam.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/clock/TickSignal.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/clock/TickSource.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/clock/Clock.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/type/Midi.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/type/Ticks.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/Draw.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/IntervalTimeline.js","webpack://dizzidotz/./node_modules/tone/build/esm/component/channel/Volume.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/Destination.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/TimelineValue.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/clock/TransportEvent.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/clock/Transport.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/Source.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/Oscillator.js","webpack://dizzidotz/./node_modules/tone/build/esm/signal/SignalOperator.js","webpack://dizzidotz/./node_modules/tone/build/esm/signal/WaveShaper.js","webpack://dizzidotz/./node_modules/tone/build/esm/signal/AudioToGain.js","webpack://dizzidotz/./node_modules/tone/build/esm/signal/Multiply.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/AMOscillator.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/FMOscillator.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/FatOscillator.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/util/Decorator.js","webpack://dizzidotz/./node_modules/tone/build/esm/source/buffer/Player.js","webpack://dizzidotz/./node_modules/tone/build/esm/component/envelope/Envelope.js","webpack://dizzidotz/./node_modules/tone/build/esm/instrument/Instrument.js","webpack://dizzidotz/./node_modules/tone/build/esm/instrument/Monophonic.js","webpack://dizzidotz/./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","webpack://dizzidotz/./node_modules/tone/build/esm/instrument/Synth.js","webpack://dizzidotz/./node_modules/tone/build/esm/instrument/MembraneSynth.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js","webpack://dizzidotz/./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js","webpack://dizzidotz/./node_modules/tone/build/esm/instrument/PolySynth.js","webpack://dizzidotz/./node_modules/tone/build/esm/instrument/Sampler.js","webpack://dizzidotz/./node_modules/tone/build/esm/component/channel/Panner.js","webpack://dizzidotz/./node_modules/tone/build/esm/effect/BitCrusher.worklet.js","webpack://dizzidotz/./node_modules/tone/build/esm/component/channel/Solo.js","webpack://dizzidotz/./node_modules/tone/build/esm/component/channel/PanVol.js","webpack://dizzidotz/./node_modules/tone/build/esm/component/channel/Channel.js","webpack://dizzidotz/./node_modules/tone/build/esm/core/context/Listener.js","webpack://dizzidotz/./node_modules/tone/build/esm/index.js","webpack://dizzidotz/./src/noise.js","webpack://dizzidotz/./src/draggable.js","webpack://dizzidotz/./src/pattern-drawer.js","webpack://dizzidotz/./src/deck.js","webpack://dizzidotz/./src/pattern-store.js","webpack://dizzidotz/./src/play-pause.js","webpack://dizzidotz/./src/tempo.js","webpack://dizzidotz/./src/lib/ndp-software/map-behavior-subject.js","webpack://dizzidotz/./src/tonality-factory.js","webpack://dizzidotz/./src/tonality.js","webpack://dizzidotz/./node_modules/core-js/es6/index.js","webpack://dizzidotz/./node_modules/core-js/fn/array/flat-map.js","webpack://dizzidotz/./node_modules/core-js/fn/array/includes.js","webpack://dizzidotz/./node_modules/core-js/fn/object/entries.js","webpack://dizzidotz/./node_modules/core-js/fn/object/get-own-property-descriptors.js","webpack://dizzidotz/./node_modules/core-js/fn/object/values.js","webpack://dizzidotz/./node_modules/core-js/fn/promise/finally.js","webpack://dizzidotz/./node_modules/core-js/fn/string/pad-end.js","webpack://dizzidotz/./node_modules/core-js/fn/string/pad-start.js","webpack://dizzidotz/./node_modules/core-js/fn/string/trim-end.js","webpack://dizzidotz/./node_modules/core-js/fn/string/trim-start.js","webpack://dizzidotz/./node_modules/core-js/fn/symbol/async-iterator.js","webpack://dizzidotz/./node_modules/core-js/library/fn/global.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_a-function.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_an-object.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_core.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_ctx.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_descriptors.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_dom-create.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_export.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_fails.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_global.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_has.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_hide.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_is-object.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_object-dp.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_property-desc.js","webpack://dizzidotz/./node_modules/core-js/library/modules/_to-primitive.js","webpack://dizzidotz/./node_modules/core-js/library/modules/es7.global.js","webpack://dizzidotz/./node_modules/core-js/modules/_a-function.js","webpack://dizzidotz/./node_modules/core-js/modules/_a-number-value.js","webpack://dizzidotz/./node_modules/core-js/modules/_add-to-unscopables.js","webpack://dizzidotz/./node_modules/core-js/modules/_advance-string-index.js","webpack://dizzidotz/./node_modules/core-js/modules/_an-instance.js","webpack://dizzidotz/./node_modules/core-js/modules/_an-object.js","webpack://dizzidotz/./node_modules/core-js/modules/_array-copy-within.js","webpack://dizzidotz/./node_modules/core-js/modules/_array-fill.js","webpack://dizzidotz/./node_modules/core-js/modules/_array-includes.js","webpack://dizzidotz/./node_modules/core-js/modules/_array-methods.js","webpack://dizzidotz/./node_modules/core-js/modules/_array-reduce.js","webpack://dizzidotz/./node_modules/core-js/modules/_array-species-constructor.js","webpack://dizzidotz/./node_modules/core-js/modules/_array-species-create.js","webpack://dizzidotz/./node_modules/core-js/modules/_bind.js","webpack://dizzidotz/./node_modules/core-js/modules/_classof.js","webpack://dizzidotz/./node_modules/core-js/modules/_cof.js","webpack://dizzidotz/./node_modules/core-js/modules/_collection-strong.js","webpack://dizzidotz/./node_modules/core-js/modules/_collection-weak.js","webpack://dizzidotz/./node_modules/core-js/modules/_collection.js","webpack://dizzidotz/./node_modules/core-js/modules/_core.js","webpack://dizzidotz/./node_modules/core-js/modules/_create-property.js","webpack://dizzidotz/./node_modules/core-js/modules/_ctx.js","webpack://dizzidotz/./node_modules/core-js/modules/_date-to-iso-string.js","webpack://dizzidotz/./node_modules/core-js/modules/_date-to-primitive.js","webpack://dizzidotz/./node_modules/core-js/modules/_defined.js","webpack://dizzidotz/./node_modules/core-js/modules/_descriptors.js","webpack://dizzidotz/./node_modules/core-js/modules/_dom-create.js","webpack://dizzidotz/./node_modules/core-js/modules/_enum-bug-keys.js","webpack://dizzidotz/./node_modules/core-js/modules/_enum-keys.js","webpack://dizzidotz/./node_modules/core-js/modules/_export.js","webpack://dizzidotz/./node_modules/core-js/modules/_fails-is-regexp.js","webpack://dizzidotz/./node_modules/core-js/modules/_fails.js","webpack://dizzidotz/./node_modules/core-js/modules/_fix-re-wks.js","webpack://dizzidotz/./node_modules/core-js/modules/_flags.js","webpack://dizzidotz/./node_modules/core-js/modules/_flatten-into-array.js","webpack://dizzidotz/./node_modules/core-js/modules/_for-of.js","webpack://dizzidotz/./node_modules/core-js/modules/_function-to-string.js","webpack://dizzidotz/./node_modules/core-js/modules/_global.js","webpack://dizzidotz/./node_modules/core-js/modules/_has.js","webpack://dizzidotz/./node_modules/core-js/modules/_hide.js","webpack://dizzidotz/./node_modules/core-js/modules/_html.js","webpack://dizzidotz/./node_modules/core-js/modules/_ie8-dom-define.js","webpack://dizzidotz/./node_modules/core-js/modules/_inherit-if-required.js","webpack://dizzidotz/./node_modules/core-js/modules/_invoke.js","webpack://dizzidotz/./node_modules/core-js/modules/_iobject.js","webpack://dizzidotz/./node_modules/core-js/modules/_is-array-iter.js","webpack://dizzidotz/./node_modules/core-js/modules/_is-array.js","webpack://dizzidotz/./node_modules/core-js/modules/_is-integer.js","webpack://dizzidotz/./node_modules/core-js/modules/_is-object.js","webpack://dizzidotz/./node_modules/core-js/modules/_is-regexp.js","webpack://dizzidotz/./node_modules/core-js/modules/_iter-call.js","webpack://dizzidotz/./node_modules/core-js/modules/_iter-create.js","webpack://dizzidotz/./node_modules/core-js/modules/_iter-define.js","webpack://dizzidotz/./node_modules/core-js/modules/_iter-detect.js","webpack://dizzidotz/./node_modules/core-js/modules/_iter-step.js","webpack://dizzidotz/./node_modules/core-js/modules/_iterators.js","webpack://dizzidotz/./node_modules/core-js/modules/_library.js","webpack://dizzidotz/./node_modules/core-js/modules/_math-expm1.js","webpack://dizzidotz/./node_modules/core-js/modules/_math-fround.js","webpack://dizzidotz/./node_modules/core-js/modules/_math-log1p.js","webpack://dizzidotz/./node_modules/core-js/modules/_math-sign.js","webpack://dizzidotz/./node_modules/core-js/modules/_meta.js","webpack://dizzidotz/./node_modules/core-js/modules/_microtask.js","webpack://dizzidotz/./node_modules/core-js/modules/_new-promise-capability.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-assign.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-create.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-dp.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-dps.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-gopd.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-gopn-ext.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-gopn.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-gops.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-gpo.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-keys-internal.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-keys.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-pie.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-sap.js","webpack://dizzidotz/./node_modules/core-js/modules/_object-to-array.js","webpack://dizzidotz/./node_modules/core-js/modules/_own-keys.js","webpack://dizzidotz/./node_modules/core-js/modules/_parse-float.js","webpack://dizzidotz/./node_modules/core-js/modules/_parse-int.js","webpack://dizzidotz/./node_modules/core-js/modules/_perform.js","webpack://dizzidotz/./node_modules/core-js/modules/_promise-resolve.js","webpack://dizzidotz/./node_modules/core-js/modules/_property-desc.js","webpack://dizzidotz/./node_modules/core-js/modules/_redefine-all.js","webpack://dizzidotz/./node_modules/core-js/modules/_redefine.js","webpack://dizzidotz/./node_modules/core-js/modules/_regexp-exec-abstract.js","webpack://dizzidotz/./node_modules/core-js/modules/_regexp-exec.js","webpack://dizzidotz/./node_modules/core-js/modules/_same-value.js","webpack://dizzidotz/./node_modules/core-js/modules/_set-proto.js","webpack://dizzidotz/./node_modules/core-js/modules/_set-species.js","webpack://dizzidotz/./node_modules/core-js/modules/_set-to-string-tag.js","webpack://dizzidotz/./node_modules/core-js/modules/_shared-key.js","webpack://dizzidotz/./node_modules/core-js/modules/_shared.js","webpack://dizzidotz/./node_modules/core-js/modules/_species-constructor.js","webpack://dizzidotz/./node_modules/core-js/modules/_strict-method.js","webpack://dizzidotz/./node_modules/core-js/modules/_string-at.js","webpack://dizzidotz/./node_modules/core-js/modules/_string-context.js","webpack://dizzidotz/./node_modules/core-js/modules/_string-html.js","webpack://dizzidotz/./node_modules/core-js/modules/_string-pad.js","webpack://dizzidotz/./node_modules/core-js/modules/_string-repeat.js","webpack://dizzidotz/./node_modules/core-js/modules/_string-trim.js","webpack://dizzidotz/./node_modules/core-js/modules/_string-ws.js","webpack://dizzidotz/./node_modules/core-js/modules/_task.js","webpack://dizzidotz/./node_modules/core-js/modules/_to-absolute-index.js","webpack://dizzidotz/./node_modules/core-js/modules/_to-index.js","webpack://dizzidotz/./node_modules/core-js/modules/_to-integer.js","webpack://dizzidotz/./node_modules/core-js/modules/_to-iobject.js","webpack://dizzidotz/./node_modules/core-js/modules/_to-length.js","webpack://dizzidotz/./node_modules/core-js/modules/_to-object.js","webpack://dizzidotz/./node_modules/core-js/modules/_to-primitive.js","webpack://dizzidotz/./node_modules/core-js/modules/_typed-array.js","webpack://dizzidotz/./node_modules/core-js/modules/_typed-buffer.js","webpack://dizzidotz/./node_modules/core-js/modules/_typed.js","webpack://dizzidotz/./node_modules/core-js/modules/_uid.js","webpack://dizzidotz/./node_modules/core-js/modules/_user-agent.js","webpack://dizzidotz/./node_modules/core-js/modules/_validate-collection.js","webpack://dizzidotz/./node_modules/core-js/modules/_wks-define.js","webpack://dizzidotz/./node_modules/core-js/modules/_wks-ext.js","webpack://dizzidotz/./node_modules/core-js/modules/_wks.js","webpack://dizzidotz/./node_modules/core-js/modules/core.get-iterator-method.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.copy-within.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.every.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.fill.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.filter.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.find-index.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.find.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.for-each.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.from.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.index-of.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.is-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.iterator.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.join.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.last-index-of.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.map.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.of.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.reduce-right.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.reduce.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.slice.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.some.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.sort.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.array.species.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.date.now.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.date.to-iso-string.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.date.to-json.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.date.to-primitive.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.date.to-string.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.function.bind.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.function.has-instance.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.function.name.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.map.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.acosh.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.asinh.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.atanh.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.cbrt.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.clz32.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.cosh.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.expm1.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.fround.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.hypot.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.imul.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.log10.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.log1p.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.log2.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.sign.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.sinh.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.tanh.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.math.trunc.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.constructor.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.epsilon.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.is-finite.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.is-integer.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.is-nan.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.is-safe-integer.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.max-safe-integer.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.min-safe-integer.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.parse-float.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.parse-int.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.to-fixed.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.number.to-precision.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.assign.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.create.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.define-properties.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.define-property.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.freeze.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.get-own-property-names.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.get-prototype-of.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.is-extensible.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.is-frozen.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.is-sealed.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.is.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.keys.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.prevent-extensions.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.seal.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.set-prototype-of.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.object.to-string.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.parse-float.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.parse-int.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.promise.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.apply.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.construct.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.define-property.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.delete-property.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.enumerate.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.get-prototype-of.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.get.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.has.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.is-extensible.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.own-keys.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.prevent-extensions.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.set-prototype-of.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.reflect.set.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.regexp.constructor.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.regexp.exec.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.regexp.flags.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.regexp.match.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.regexp.replace.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.regexp.search.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.regexp.split.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.regexp.to-string.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.set.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.anchor.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.big.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.blink.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.bold.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.code-point-at.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.ends-with.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.fixed.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.fontcolor.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.fontsize.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.from-code-point.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.includes.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.italics.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.iterator.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.link.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.raw.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.repeat.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.small.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.starts-with.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.strike.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.sub.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.sup.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.string.trim.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.symbol.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.array-buffer.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.data-view.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.float32-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.float64-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.int16-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.int32-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.int8-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.uint16-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.uint32-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.uint8-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.weak-map.js","webpack://dizzidotz/./node_modules/core-js/modules/es6.weak-set.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.array.flat-map.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.array.includes.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.object.entries.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.object.values.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.promise.finally.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.string.pad-end.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.string.pad-start.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.string.trim-left.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.string.trim-right.js","webpack://dizzidotz/./node_modules/core-js/modules/es7.symbol.async-iterator.js","webpack://dizzidotz/./node_modules/core-js/modules/web.dom.iterable.js","webpack://dizzidotz/./node_modules/core-js/modules/web.immediate.js","webpack://dizzidotz/./node_modules/core-js/modules/web.timers.js","webpack://dizzidotz/./node_modules/core-js/web/index.js","webpack://dizzidotz/./node_modules/pilota/lib/pilota.js","webpack://dizzidotz/./node_modules/regenerator-runtime/runtime.js","webpack://dizzidotz/webpack/bootstrap","webpack://dizzidotz/webpack/runtime/compat get default export","webpack://dizzidotz/webpack/runtime/define property getters","webpack://dizzidotz/webpack/runtime/global","webpack://dizzidotz/webpack/runtime/hasOwnProperty shorthand","webpack://dizzidotz/webpack/startup"],"names":["obj","_global","__esModule","_babelPolyfill","console","warn","module","exports","arr","len","length","i","arr2","Array","isArray","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","o","minLen","n","toString","slice","constructor","name","from","test","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","e","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","undefined","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","getValueCurveValueAtTime","theoreticIndex","lowerIndex","floor","upperIndex","ceil","interpolateValue","isSetTargetAutomationEvent","AutomationEventList","this","_automationEvents","_currenTime","_defaultValue","eventTime","findIndex","removedAutomationEvent","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","factory","hasNext","hasCompleted","_subscribe","subscriber","hasError","error","thrownError","Subscription","EMPTY","complete","Subject","AsyncSubject","subscription","closed","ObjectUnsubscribedError","BehaviorSubject","parent","outerValue","outerIndex","_next","notifyNext","_error","notifyError","unsubscribe","_complete","notifyComplete","Subscriber","InnerSubscriber","kind","hasValue","observe","observer","accept","nextOrObserver","toObservable","Observable","of","empty","createNext","Notification","undefinedValueNotification","createError","createComplete","completeNotification","subscribe","_isScalar","lift","operator","observable","source","observerOrNext","sink","toSubscriber","add","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","forEach","PromiseCtor","root","Rx","config","Promise","resolve","reject","pipe","operations","pipeFromArray","toPromise","x","create","innerValue","innerIndex","innerSub","destination","OuterSubscriber","bufferSize","windowTime","scheduler","Number","POSITIVE_INFINITY","_events","_bufferSize","_windowTime","now","_getNow","ReplayEvent","_trimBufferThenGetEvents","isStopped","observers","SubjectSubscription","ObserveOnSubscriber","queue","eventsCount","spliceCount","max","ReplaySubject","AnonymousSubject","ConnectableObservable","EmptyError","ArgumentOutOfRangeError","TimeoutError","UnsubscriptionError","TimeInterval","Timestamp","TestScheduler","VirtualTimeScheduler","AjaxResponse","AjaxError","AjaxTimeoutError","Scheduler","asap","animationFrame","async","rxSubscriber","SchedulerAction","schedule","work","delay","state","Date","SubjectSubscriber","subject","copy","asObservable","subscriberIndex","indexOf","destinationOrNext","arguments","isTrustedSubscriber","trustedSubscriber","SafeSubscriber","_unsubscribeAndRecycle","_parent","_parents","_parentSubscriber","context","isFunction","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","_unsubscribe","_subscriptions","errors","hasErrors","remove","tryCatch","errorObject","flattenUnsubscriptionErrors","sub","isObject","concat","teardown","_addParent","tmp","subscriptions","subscriptionIndex","reduce","errs","bindCallback","bindNodeCallback","combineLatest","defer","ajax","webSocket","forkJoin","fromEvent","fromEventPattern","fromPromise","generate","_if","interval","merge","never","onErrorResumeNext","pairs","race","range","_throw","timer","using","zip","audit","auditTime","buffer","bufferCount","bufferTime","bufferToggle","bufferWhen","_catch","combineAll","concatAll","concatMap","concatMapTo","count","debounce","debounceTime","defaultIfEmpty","delayWhen","dematerialize","distinct","distinctUntilChanged","distinctUntilKeyChanged","_do","elementAt","every","exhaust","exhaustMap","expand","filter","_finally","find","first","groupBy","ignoreElements","isEmpty","last","letProto","letBind","map","mapTo","materialize","mergeAll","mergeMap","flatMap","flatMapTo","mergeMapTo","mergeScan","min","multicast","observeOn","pairwise","partition","pluck","publish","publishBehavior","publishLast","publishReplay","repeat","repeatWhen","retry","retryWhen","sample","sampleTime","scan","sequenceEqual","share","shareReplay","single","skip","skipLast","skipUntil","skipWhile","startWith","subscribeOn","_switch","switchMap","switchMapTo","take","takeLast","takeUntil","takeWhile","throttle","throttleTime","timeInterval","timeout","timeoutWith","timestamp","toArray","window","windowCount","windowToggle","windowWhen","withLatestFrom","zipProto","zipAll","arrayLike","EmptyObservable","ScalarObservable","ArrayLikeObservable","dispatch","array","ArrayObservable","isScheduler","pop","callbackFunc","selector","args","func","BoundCallbackObservable","handler","handlerFn","apply","innerArgs","self","dispatchError","dispatchNext","arg","BoundNodeCallbackObservable","shift","subjectFactory","_refCount","_isComplete","getSubject","_subject","connect","connection","_connection","ConnectableSubscriber","refCount","connectableProto","connectableObservableDescriptor","connectable","sharedConnection","observableFactory","DeferObservable","DeferSubscriber","tryDefer","_callFactory","result","subscribeToResult","ErrorObservable","sources","resultSelector","ForkJoinObservable","ForkJoinSubscriber","completed","haveValues","total","innerSubscription","_hasValue","sourceObj","eventName","options","FromEventObservable","setupSubscription","isNodeList","isHTMLCollection","addEventListener","removeEventListener","isEventTarget","on","off","isJQueryStyleEventEmitter","addListener","removeListener","isNodeStyleEventEmitter","addHandler","removeHandler","FromEventPatternObservable","_callSelector","retValue","_callAddHandler","errorSubscriber","ish","FromObservable","isPromise","PromiseObservable","IteratorObservable","isArrayLike","selfSelector","initialState","condition","iterate","initialStateOrOptions","resultSelectorOrObservable","GenerateObservable","conditionResult","needIterate","thenSource","elseSource","IfObservable","IfSubscriber","tryIf","period","isNumeric","IntervalObservable","StringIterator","ArrayIterator","getIterator","str","idx","charAt","isNaN","isFinite","valueAsNumber","sign","abs","maxSafeInteger","toLength","NeverObservable","noop","keys","PairsObservable","promise","then","setTimeout","start","_count","RangeObservable","delayTime","SubscribeOnObservable","dueTime","isDate","initialDelay","TimerObservable","resourceFactory","UsingObservable","resource","UsingSubscriber","tryUse","project","observables","CombineLatestOperator","getCORSRequest","XMLHttpRequest","XDomainRequest","url","headers","AjaxObservable","method","body","ajaxGet","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","mapResponse","responseType","ajaxGetJSON","urlOrRequest","request","createXHR","crossDomain","progId","progIds","ActiveXObject","getXMLHttpRequest","withCredentials","prop","hasOwnProperty","AjaxSubscriber","get","post","put","patch","getJSON","FormData","serializeBody","send","xhr","response","user","password","setupEvents","open","setHeaders","contentType","splitIndex","substring","encodeURIComponent","join","JSON","stringify","setRequestHeader","progressSubscriber","ontimeout","xhrTimeout","upload","onprogress","onerror","readyState","status","responseText","onreadystatechange","xhrReadyStateChange","abort","originalEvent","parseXhrResponse","message","parse","responseXML","urlConfigOrSource","WebSocketCtor","WebSocket","_output","assign","data","WebSocketSubject","sock","_resetState","socket","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","protocol","binaryType","close","onopen","openObserver","closingObserver","code","reason","onclose","closeObserver","wasClean","onmessage","concurrent","onErrorResumeNextStatic","RaceOperator","RaceSubscriber","hasFirst","zipStatic","durationSelector","closingNotifier","startBufferEvery","bufferTimeSpan","bufferCreationInterval","maxBufferSize","openings","closingSelector","innerObservable","predicate","delayDurationSelector","subscriptionDelay","keySelector","flushes","compare","thisArg","callback","finalize","GroupedObservable","elementSelector","subjectSelector","comparer","accumulator","seed","subjectOrSubjectFactory","nextSources","properties","selectorOrScheduler","notifier","compareTo","comparor","due","withObservable","windowBoundaries","windowSize","startWindowEvery","windowTimeSpan","windowCreationInterval","maxWindowSize","catchError","switchAll","tap","AuditOperator","AuditSubscriber","throttled","clearThrottle","BufferOperator","BufferSubscriber","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","BufferTimeOperator","BufferTimeSubscriber","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","Context","prevContext","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","CatchOperator","caught","CatchSubscriber","err2","none","CombineLatestSubscriber","active","toRespond","unused","oldVal","_tryProject","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","durationSubscription","_tryNext","emitValue","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","delayFor","DelayOperator","DelaySubscriber","errored","notification","_schedule","scheduleNotification","DelayMessage","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","DeMaterializeOperator","DeMaterializeSubscriber","DistinctOperator","DistinctSubscriber","Set","clear","_useKeySelector","_finalizeNext","has","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","Boolean","ElementAtOperator","ElementAtSubscriber","EveryOperator","EverySubscriber","everyValueMatch","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapOperator","SwitchFirstMapSubscriber","tryNext","trySelectResult","ExpandOperator","ExpandSubscriber","subscribeToProjection","FilterOperator","FilterSubscriber","FinallyOperator","FinallySubscriber","FindValueOperator","yieldIndex","FindValueSubscriber","FirstOperator","FirstSubscriber","_emitted","_emit","_tryResultSelector","_emitFinal","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","FastMap","Map","element","group","set","groupedObservable","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptySubscriber","LastOperator","LastSubscriber","MapOperator","MapSubscriber","MapToOperator","MapToSubscriber","MaterializeOperator","MaterializeSubscriber","identity","MergeMapOperator","MergeMapSubscriber","_innerSub","_notifyResultSelector","MergeMapToOperator","MergeMapToSubscriber","MergeScanOperator","MergeScanSubscriber","acc","MulticastOperator","ObserveOnOperator","scheduleMessage","ObserveOnMessage","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","subscribeToNextSource","PairwiseSubscriber","hasPrev","prev","not","plucker","currentProp","p","RefCountOperator","refCounter","RefCountSubscriber","RepeatOperator","RepeatSubscriber","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","hasSeed","ScanOperator","ScanSubscriber","_seed","SequenceEqualOperator","SequenceEqualSubscriber","_a","_b","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","a","b","areEqual","nextB","shareSubjectFactory","isComplete","shareReplayOperator","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_ring","skipCount","currentIndex","ring","oldValue","SkipUntilOperator","SkipUntilSubscriber","isInnerStopped","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","SubscribeOnOperator","SwitchMapOperator","SwitchMapSubscriber","_tryNotifyNext","SwitchMapToOperator","SwitchMapToSubscriber","inner","tryResultSelector","TakeOperator","TakeSubscriber","TakeLastOperator","TakeLastSubscriber","TakeUntilOperator","TakeUntilSubscriber","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","DoOperator","DoSubscriber","safeSubscriber","defaultThrottleConfig","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","_trailingValue","tryDurationSelector","_sendTrailing","ThrottleTimeOperator","ThrottleTimeSubscriber","TimeIntervalOperator","TimeIntervalSubscriber","lastTime","span","absoluteTimeout","waitFor","TimeoutOperator","errorInstance","TimeoutSubscriber","action","scheduleTimeout","dispatchTimeout","TimeoutWithOperator","TimeoutWithSubscriber","toArrayReducer","item","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","WindowCountOperator","WindowCountSubscriber","windows","c","WindowTimeOperator","WindowTimeSubscriber","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","CountedSubject","timeSpanState","WindowToggleOperator","WindowToggleSubscriber","openSubscription","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","found","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","Action","requestAsyncId","id","actions","scheduled","AnimationFrame","requestAnimationFrame","flush","recycleAsyncId","cancelAnimationFrame","AsyncAction","AnimationFrameAction","execute","AsyncScheduler","AnimationFrameScheduler","Immediate","setImmediate","clearImmediate","AsapAction","AsapScheduler","pending","setInterval","clearInterval","_execute","errorValue","QueueAction","QueueScheduler","maxFrames","frame","frameTimeFactor","VirtualAction","sort","sortActions","getOwnPropertyNames","symbolIteratorPonyfill","$$iterator","$$observable","getSymbolObservable","$$rxSubscriber","messages","logSubscribedFrame","logUnsubscribedFrame","scheduleMessages","messagesLength","ColdObservable","applyMixins","SubscriptionLoggable","setup","HotObservable","SubscriptionLog","subscribedFrame","unsubscribedFrame","subscriptionLogs","oldSubscriptionLog","assertDeepEqual","hotObservables","coldObservables","flushTests","createTime","marbles","createColdObservable","parseMarbles","cold","createHotObservable","materializeInnerObservable","outerFrame","expectObservable","unsubscriptionMarbles","actual","flushTest","ready","unsubscriptionFrame","parseMarblesAsSubscriptions","toBe","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","readyFlushTests","groupStart","subscriptionFrame","materializeInnerObservables","testMessages","subIndex","frameOffset","mozRequestAnimationFrame","mozCancelAnimationFrame","webkitRequestAnimationFrame","webkitCancelAnimationFrame","msRequestAnimationFrame","msCancelAnimationFrame","oRequestAnimationFrame","oCancelAnimationFrame","clearTimeout","cb","RequestAnimationFrameDefinition","stack","nextHandle","tasksByHandle","currentlyRunningATask","canUseProcessNextTick","createProcessNextTickSetImmediate","canUsePostMessage","createPostMessageSetImmediate","canUseMessageChannel","createMessageChannelSetImmediate","canUseReadyStateChange","createReadyStateChangeSetImmediate","createSetTimeoutSetImmediate","ci","handle","identify","process","MessageChannel","document","createElement","postMessage","importScripts","oldOnMessage","partiallyApplied","Function","addFromSetImmediateArguments","nextTick","runIfPresent","messagePrefix","random","onGlobalMessage","globalMessageHandler","event","task","channel","port1","port2","doc","html","documentElement","script","removeChild","appendChild","ImmediateDefinition","MapPolyfill","size","_values","_keys","minimalSetImpl","derivedCtor","baseCtors","baseCtor","propertyKeys","j","len2","k","assignImpl","getAssign","val","parseFloat","pred","notPred","fns","input","__window","__self","WorkerGlobalScope","__global","g","_root","outerSubscriber","obs","msg","tryCatchTarget","tryCatcher","arc","startAngle","innerRadius","outerRadius","endAngle","startOuter","polarToCartesian","endOuter","startInner","endInner","arcSweep","svgClippedArc","newDial","dom","model$","eventToPt","layerX","clientWidth","layerY","clientHeight","ptToNormalizedValue","pt","rads","ptToVector","PI","normalizeRadians","preview$","paused","previewCmd$","newCmdBus$","pause","resume","change","cmd","logCmdBus","querySelector","setAttribute","previewElem","click$","preventDefault","mouseMove$","editorPegs$","editorCmdBus$","newPeg","normalized","getTime","sound","newSoundData","peg","pattern","exec","name$","currentTonality$","tonality","msPerPeriod$","periodMs","getElementById","classList","pegs","pegModel","iterateWith","doubleIter","counterIter","it","f","whileLessThan","ownPropertiesIter","radiansPerPeriod","r","pi","atan2","sqrt","vectorToPt","angle","dist","cos","sin","centerX","centerY","radius","angleInDegrees","angleInRadians","pin","ptInRect","rect","left","right","top","bottom","ptInInscribedCircle","center","linearScaleFns","minOrMax","flipFn","localStorageKeys","localStorage","labelLog","label","msgs","global","log","humanizeTempo","speed","round","NORMALIZED_RADIUS","radiansPerTick","trig","normalizeValues","rad","mag","sz","playState$","radians$","activePegs$","_","editor","wheel","pegsEl","getElementsByClassName","saveButton","Color","newPegs","screen","normalizedToScreen","renderPeg","ids","pegEls","el","getAttribute","createElementNS","findOrCreatePeg","highlightcolor","color","svg","outerHTML","replace","patternStoreBus$","editorMousedown$","editorMouseup$","bounds","getBoundingClientRect","startedPegAt","calcSizeWhileGrowing","parentNode","hand","Velocity","x1","y1","x2","y2","MS_PER_TICK","easing","highlightDuration","soundOut$","scratch$","shiftKey","roundForJSON","maxPegSize","normalizeEvent","s","frequency","scratch","confirm","model","json","LZString","compressToEncodedURIComponent","compressedModel","alert","serialized","newHref","location","href","history","replaceState","search","decompressFromEncodedURIComponent","innerHTML","prompt","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","WeakMap","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","match","unresolvedUrl","importStatementWithResolvedUrl","URL","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","constructible","Proxy","isConstructible","getValueForKey","pickElementFromSet","matchingElements","matchingElement","delete","deletePassiveInputConnectionToAudioNode","passiveInputs","output","passiveInputConnections","matchingConnection","passiveInputConnection","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","eventListener","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","activeInputs","connections","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","isOwnedByContext","nativeAudioNode","nativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","createIndexSizeError","DOMException","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","loop","loopEnd","loopStart","playbackRate","getAudioNodeConnections","getAudioParamConnections","audioParam","deactivateActiveAudioNodeInputConnections","trace","includes","audioParams","isAudioBufferSourceNode","parameters","isBiquadFilterNode","Q","detune","gain","isConstantSourceNode","offset","isGainNode","isOscillatorNode","isStereoPannerNode","pan","audioParamConnections","deactivateAudioGraph","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","insertElementInSet","ignoreDuplicates","lmnt","addActiveInputConnectionToAudioParam","activeInputConnection","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","inputs","deleteActiveInputConnection","activeInputConnections","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","disconnect","getNativeAudioNode","getNativeAudioParam","isPartOfACycle","isPassiveAudioNode","testAudioNodeDisconnectMethodSupport","nativeAudioContext","analyzer","createScriptProcessor","dummy","createGain","ones","createBuffer","channelData","createBufferSource","onaudioprocess","chnnlDt","inputBuffer","some","stop","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","destinationOrOutput","filteredConnections","deleteInputsOfAudioNode","isOffline","listener","isActive","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","ReadOnlyMap","_map","entries","numberOfInputs","numberOfOutputs","parameterData","processorOptions","copyFromChannel","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","arrays","processBuffer","proxy","renderedBuffer","nativeOfflineAudioContext","outputChannelCount","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","sampleRate","audioNodeConnections","audioWorkletProcessor","nodeToProcessorMap","nativeAudioWorkletNode","getAudioWorkletProcessor","outputs","prmtrs","potentiallyEmptyInputs","activeSourceFlag","outputChannelSplitterNodeOutput","dispatchEvent","ErrorEvent","colno","filename","lineno","disableNormalization","maxDelayTime","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","attack","knee","ratio","release","threshold","createInvalidStateError","createInvalidAccessError","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","testPromiseSupport","uint32Array","Uint32Array","decodeAudioData","catch","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","when","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","baseLatency","log2","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","wrapChannelSplitterNode","interceptConnections","original","interceptor","createNativeDelayNode","nativeDelayNode","createDelay","createNativeGainNode","nativeGainNode","divide","denominator","evaluatePolynomial","coefficient","z","createNativeScriptProcessorNode","createNotSupportedError","periodicWave","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","createUnknownError","curve","oversample","isDCCurve","overwriteAccessors","object","property","createGetter","createSetter","getPrototypeOf","getOwnPropertyDescriptor","setValueAtTimeUntilPossible","setValueAtTime","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","wrapEventListener","defineProperties","currentTarget","handleEvent","addActiveInputConnectionToAudioNode","createAddActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","createAddPassiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioNode","createDeleteActiveInputConnectionToAudioNode","audioNodeTailTimeStore","getAudioNodeTailTime","createGetAudioNodeTailTime","cacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createNativeAnalyserNode","createAnalyser","byteTimeDomainData","Uint8Array","getByteTimeDomainData","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","getAudioNodeRenderer","renderer","createGetAudioNodeRenderer","renderInputsOfAudioNode","nextTrace","all","audioNodeRenderer","renderedNativeAudioNode","render","allRenderingPromises","renderingPromises","createRenderInputsOfAudioNode","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","renderedNativeAnalyserNode","createAnalyserNode","createAnalyserNodeRendererFactory","getNativeContext","contextStore","nativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","anything","createIsNativeOfflineAudioContext","audioParamAudioNodeStore","eventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","createEventTargetConstructor","nativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioContextConstructor","isNativeAudioContext","createIsNativeAudioContext","AudioNode","createIsNativeAudioNode","isNativeAudioParam","AudioParam","createIsNativeAudioParam","audioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","decrementCycleCounter","detectCycles","super","_nativeAudioNode","isPassive","nativeAudioParam","maxValue","eventListeners","partialConnection","deleteActiveInputConnectionToAudioParam","addConnectionToAudioParamOfAudioContext","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","audioNodeConnectionsStore","tailTimeTimeoutIds","tailTime","tailTimeTimeoutId","createAddConnectionToAudioNode","cycleCounters","cycleCounter","nativeDestinationAudioParam","createIncrementCycleCounterFactory","createDecrementCycleCounter","chain","nextLink","isDelayNode","mergedCycles","nestedCycles","createDetectCycles","analyserNodeConstructor","audionNodeConstructor","mergedOptions","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getFloatFrequencyData","createAnalyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","AudioBuffer","createNativeAudioBufferConstructor","convertNumberToUnsignedLong","unit32Array","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","hasInstance","createAudioBufferConstructor","createTestAudioBufferConstructorSupport","addSilentConnection","createAddSilentConnection","renderInputsOfAudioParam","createRenderInputsOfAudioParam","connectAudioParam","createConnectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","clampedOffset","createNativeAudioBufferSourceNodeFactory","nullifiedBuffer","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createRenderAutomation","createGetAudioParamRenderer","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioBufferSourceNode","createAudioBufferSourceNodeRendererFactory","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","minValue","automationEventList","audioParamRenderer","exponentialRampToValueAtTime","linearRampToValueAtTime","setTargetAtTime","setValueCurveAtTime","currentTime","cancelAndHoldAtTime","previousLastEvent","currentLastEvent","cancelScheduledValues","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","createAudioParamFactory","audioParamConnectionsStore","audioBufferSourceNodeConstructor","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","wrappedListener","onended","nativeOnEnded","resetInternalStateToPassive","createAudioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","nativeAudioDestinationNodePromise","createAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","createAudioDestinationNodeConstructor","isNodeOfNativeOfflineAudioContext","gainNode","createNativeAudioDestinationNodeFactory","createBiquadFilterNodeRenderer","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","createBiquadFilterNode","createBiquadFilterNodeRendererFactory","setAudioNodeTailTime","createSetAudioNodeTailTime","biquadFilterNodeConstructor","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse","createBiquadFilterNodeConstructor","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","createMonitorConnections","createNativeChannelMergerNode","wrapChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createNativeChannelMergerNodeFactory","channelMergerNode","audioBufferSourceNode","createWrapChannelMergerNode","channelMergerNodeConstructor","createChannelMergerNodeRenderer","createChannelMergerNodeConstructor","renderedNativeAudioNodes","createAudioNode","createChannelMergerNodeRendererFactory","channelSplitterNodeConstructor","createChannelSplitterNodeRenderer","sanitizeChannelSplitterOptions","createChannelSplitterNodeConstructor","createChannelSplitterNodeRendererFactory","createNativeConstantSourceNodeFaker","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConstantSourceNodeFakerFactory","createNativeConstantSourceNode","createConstantSource","nativeConstantSourceNode","createNativeConstantSourceNodeFactory","constantSourceNodeConstructor","createConstantSourceNodeRendererFactory","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createConstantSourceNodeConstructor","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","createConstantSourceNode","createNativeConvolverNode","nativeConvolverNode","createConvolver","normalize","createNativeConvolverNodeFactory","convolverNodeConstructor","createConvolverNodeRenderer","_nativeConvolverNode","createConvolverNodeConstructor","renderedNativeConvolverNodes","renderedNativeConvolverNode","createConvolverNode","createConvolverNodeRendererFactory","delayNodeConstructor","createDelayNodeRenderer","_delayTime","createDelayNodeConstructor","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","createDelayNode","createDelayNodeRendererFactory","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createNativeDynamicsCompressorNodeFactory","dynamicsCompressorNodeConstructor","createDynamicsCompressorNodeRenderer","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeConstructor","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","createDynamicsCompressorNode","createDynamicsCompressorNodeRendererFactory","gainNodeConstructor","createGainNodeRenderer","createGainNodeConstructor","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","createGainNode","createGainNodeRendererFactory","createNativeIIRFilterNodeFaker","convertedFeedback","Float64Array","convertedFeedforward","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","fill","outputBuffer","nyquist","omega","createNativeIIRFilterNodeFakerFactory","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","startRendering","createRenderNativeOfflineAudioContext","createTestOfflineAudioContextCurrentTimeSupport","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","filteredBuffer","filterFullBuffer","createIIRFilterNodeRendererFactory","iIRFilterNodeConstructor","createNativeIIRFilterNode","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createIIRFilterNodeConstructor","createNativeIIRFilterNodeFactory","createAudioListener","nativeListener","forwardX","forwardY","forwardZ","upX","upY","upZ","createFakeAudioParam","constantSourceNode","lastOrientation","lastPosition","orientation","setOrientation","positon","setPosition","createFakeAudioParams","createAudioListenerFactory","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalBaseAudioContextConstructor","createNativeOscillatorNode","nativeOscillatorNode","setPeriodicWave","createNativeOscillatorNodeFactory","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","createOscillatorNode","createOscillatorNodeRendererFactory","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createConnectedNativeAudioBufferSourceNodeFactory","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNodeFakerFactory","createNativeWaveShaperNode","nativeWaveShaperNode","automationRate","createNativeWaveShaperNodeFactory","createNativePannerNode","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNodeFakerFactory","nativePannerNode","createPannerNodeRenderer","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","createPannerNodeRendererFactory","pannerNodeConstructor","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeConstructor","periodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","imag","real","createPeriodicWaveConstructor","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","createNativePeriodicWaveFactory","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","connectGraph","disconnectGraph","nativeStereoPannerNodeFakerFactory","createNativeStereoPannerNodeFakerFactory","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","createStereoPannerNode","createStereoPannerNodeRendererFactory","stereoPannerNodeConstructor","_pan","createStereoPannerNodeConstructor","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","createWaveShaperNode","createWaveShaperNodeRendererFactory","waveShaperNodeConstructor","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeConstructor","isSecureContext","createIsSecureContext","currentFrame","createExposeCurrentFrameAndCurrentTime","backupOfflineAudioContextStore","getOrCreateBackupOfflineAudioContext","backupOfflineAudioContext","createGetOrCreateBackupOfflineAudioContext","nativeAudioWorkletNodeConstructor","AudioWorkletNode","createNativeAudioWorkletNodeConstructor","addAudioWorkletModule","evaluateSource","fetchSource","ongoingRequests","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","credentials","audioWorklet","absoluteUrl","isSupportingPostMessage","patchedSourceWithoutImportStatements","blob","Blob","createObjectURL","addModule","finally","revokeObjectURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","trim","nodeNameToProcessorConstructorMap","rslvdRqstsFCntxt","ngngRqstsFCntxt","createAddAudioWorkletModule","head","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","src","onload","createEvaluateSource","fetch","ok","text","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","audioWorkletNode","oscillator","port","onprocessorerror","createTestAudioWorkletProcessorPostMessageSupport","isNativeContext","createIsNativeContext","baseAudioContextConstructor","_audioWorklet","constraints","audioData","successCallback","errorCallback","createBaseAudioContextConstructor","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","arrayBuffer","detachArrayBuffer","fail","createDecodeAudioData","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","createMediaElementSource","mediaElement","_nativeMediaElementAudioSourceNode","createMediaElementAudioSourceNodeConstructor","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","createMediaStreamDestination","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioDestinationNodeConstructor","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","mediaStream","audioStreamTracks","getAudioTracks","filteredAudioStreamTracks","createMediaStreamSource","MediaStream","_nativeMediaStreamAudioSourceNode","createMediaStreamAudioSourceNodeConstructor","mediaStreamTrackAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","mediaStreamTrack","createMediaStreamTrackSource","createNativeMediaStreamTrackAudioSourceNodeFactory","audioContextConstructor","latencyHint","isValidLatencyHint","_baseLatency","_nativeAudioContext","_nativeGainNode","_state","revokeState","resolvePromise","suspend","createAudioContextConstructor","getUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodes","createGetUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","createAddUnrenderedAudioWorkletNode","connectMultipleOutputs","createConnectMultipleOutputs","deleteUnrenderedAudioWorkletNode","createDeleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createDisconnectMultipleOutputs","activeAudioWorkletNodeInputsStore","getActiveAudioWorkletNodeInputs","createGetActiveAudioWorkletNodeInputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletNodeOptions","audioWorkletProcessorPromise","onmessageerror","cloneAudioWorkletNodeOptions","createAudioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","activeInputIndexes","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNodeFakerFactory","createNativeAudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createAudioWorkletNodeRenderer","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","createAudioWorkletNodeRendererFactory","getBackupOfflineAudioContext","createGetBackupOfflineAudioContext","setActiveAudioWorkletNodeInputs","createSetActiveAudioWorkletNodeInputs","audioWorkletNodeConstructor","sanitizeAudioWorkletNodeOptions","nativeContextOrBackupOfflineAudioContext","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createAudioWorkletNodeConstructor","createNativeOfflineAudioContext","createCreateNativeOfflineAudioContext","createStartRendering","offlineAudioContextConstructor","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","createOfflineAudioContextConstructor","isAnyAudioContext","createIsAnyAudioContext","isAnyAudioNode","audioNodeStore","createIsAnyAudioNode","isAnyAudioParam","createIsAnyAudioParam","isAnyOfflineAudioContext","createIsAnyOfflineAudioContext","statement","gte","lte","Infinity","assertContextRunning","defaultLogger","isNote","hasAudioContext","__decorate","decorators","desc","d","Reflect","decorate","_arguments","P","generator","fulfilled","step","rejected","Ticker","updateInterval","_callback","_type","_updateInterval","_createClock","toFixed","blobUrl","worker","Worker","_worker","_timeout","_createTimeout","_createWorker","terminate","_disposeClock","isAudioParam","isOfflineAudioContext","isAudioContext","isAudioBuffer","noCopy","defaults","argsArray","objKey","opts","given","fallback","omit","Tone","debug","_wasDisposed","version","EPSILON","GT","GTE","EQ","LT","Timeline","_timeline","getDefaults","memory","increasing","valueOf","_search","diff","param","after","beginning","end","midPoint","nextEvent","lowerBound","upperBound","_iterate","dispose","notifyNewContext","onContextInit","notifyCloseContext","onContextClose","Emitter","split","boundCallback","eventList","constr","BaseContext","_constants","_timeouts","_timeoutIds","_initialized","_workletModules","createAudioContext","_ticker","clockSource","_timeoutLoop","_setLatencyHint","lookAhead","ctx","feedForward","initialize","l","_transport","t","_draw","createAudioWorkletNode","rawContext","promises","_latencyHint","hint","lookAheadValue","constant","firstEvent","peek","intervalFn","reverse","load","_buffer","loaded","_reversed","_reverse","doneLoading","downloads","isMultidimensional","channels","multiChannelArray","chanNum","fromArray","outputArray","numChannels","channelArray","ret","startSamples","endSamples","retBuffer","subarray","rev","matches","extensions","extension","ext","supportsType","baseUrl","endsWith","canPlayType","_currentTime","_duration","asynchronous","yieldEvery","workletsAreReady","_renderClock","dummyContext","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_element","_audioData","_name","_options","_url","_fn","_id","_interval","_val","globalContext","printString","A4","ftom","ftomf","mtof","midi","TimeBaseClass","units","defaultUnits","_units","_expressions","_getExpressions","hz","_frequencyToUnits","regexp","_ticksToUnits","parseInt","m","_beatsToUnits","_getTimeSignature","dot","numericValue","scalar","number","_secondsToUnits","samples","tr","q","fromType","_noArg","typeName","quantity","expr","matching","freq","beats","_getBpm","seconds","ticks","_getPPQ","_now","transport","bpm","timeSignature","PPQ","toSeconds","toTicks","toFrequency","toMidi","TimeClass","capture","quantize","quantTo","nextSubdivision","subdiv","percent","subdivision","testNotations","power","closest","closestSeconds","notation","notationSeconds","quarterTime","quarters","measures","sixteenths","sixteenthString","FrequencyClass","setA4","note","pitch","octave","noteNumber","noteToScaleIndex","toLowerCase","intervals","transpose","scaleIndexToNote","cbb","cx","dbb","db","dx","ebb","eb","ex","fbb","fb","fx","gbb","gb","gx","abb","ab","ax","bbb","bb","bx","defaultContext","attribute","member","_getPartialProperties","initial","_initial","setStateAtTime","overridden","_minOutput","_param","_swappable","swappable","_initialValue","convert","_minValue","_maxValue","_toType","getValueAtTime","_fromType","_is","LN10","computedTime","_assertRange","getAfter","before","beforeValue","previous","getBefore","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","currentVal","rampTime","setRampPoint","exponentialApproachValueAtTime","scaling","startingValue","segTime","cancel","valueAtTime","exponentialRampTo","linearRampTo","previousEvent","subdivisions","forEachAfter","t0","v0","v1","t1","_internalChannels","node","nodeList","_isAudioNode","_getInternalNodes","_getChannelProperties","_setChannelProperties","outputNum","inputNum","toDestination","srcNode","dstNode","outputNumber","inputNumber","nodes","current","_gainNode","OneShotSource","_stopTime","getStateAtTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","fadeInTime","_stopGain","cancelStop","fadeOutTime","targetRampTo","additionalTail","_stopSource","disposeCallback","requestIdleCallback","_source","_startGain","override","_constantSource","rampTo","signal","TickParam","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","currentTick","getTicksAtTime","getTimeOfTick","tick","delta","sol1","sol2","getDurationOfTicks","computedDuration","startTicks","TickSignal","ticksToTime","timeToTicks","TickSource","_tickOffset","setTicksAtTime","stopEvent","getLastState","tmpEvent","lastState","elapsedTicks","forEachBetween","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","absoluteTicks","lastStateEvent","forEachTickBetween","maxStartTime","nextTickTime","_lastUpdate","_boundLoop","_loop","_tickSource","mixin","_buffers","_loadingCount","urls","_bufferLoaded","MidiClass","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","draw","IntervalTimeline","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","_removeNode","forEachFrom","replacement","isLeftChild","_setRoot","_replaceNodeInParent","temp","getBalance","pivotNode","balance","_rotateLeft","_rotateRight","low","allNodes","traverse","searchAfter","high","_left","_right","height","point","volume","_unmutedVolume","mute","Destination","TimelineValue","initialValue","TransportEvent","_eventId","_once","once","TransportRepeatEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","_createEvents","invoke","scheduleOnce","Transport","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","swing","swingSubdivision","tickTime","progress","amount","forEachAtTime","_addEvent","eventId","timeline","computedAfter","offsetTicks","timeSig","startPosition","endPosition","toNotation","toBarsBeatsSixteenths","remainingTicks","computedFreq","ratioSignal","syncedSignal","_synced","_scheduled","_syncedStart","_syncedStop","_volume","onstop","_clampToCurrentTime","sched","_start","immediate","restart","getNextState","_stop","stateEvent","startOffset","unsync","_sourceStarted","_sourceStopped","computedOffset","loopDuration","computedDur","generateWaveform","_oscillator","_partials","partials","_partialCount","partialCount","baseType","phase","_wave","syncSignal","unsyncSignal","_periodicWaveCache","description","_phase","arrayA","arrayB","oscProps","isBasicType","cache","_getCachedPeriodicWave","wave","_getRealImaginary","partial","fullPartials","v","periodicWaveSize","piFactor","twoPi","_inverseFFT","_shaper","mapping","setMap","oversampling","_norm","_mult","factor","AMOscillator","_modulationScale","_modulationNode","_carrier","_modulator","modulationType","harmonicity","modulationIndex","PulseOscillator","_widthGate","_thresh","width","_triangle","FatOscillator","_oscillators","_spread","spread","_forEach","osc","PWMOscillator","sourceType","_scale","_pulse","modulationFrequency","carrierType","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","prefix","_sourceType","substr","_createNewOscillator","_getOscType","oscType","OscConstructor","oldOsc","blockTime","sType","mType","valueMap","propertyKey","newValue","timeRange","_activeSources","_onload","autostart","origDuration","_onSourceEnd","implicitEnd","rate","_sig","decay","sustain","attackCurve","releaseCurve","decayCurve","direction","curveName","EnvelopeCurves","curveDef","_getCurve","_attackCurve","_setCurve","_releaseCurve","_decayCurve","velocity","currentValue","decayValue","decayStart","triggerAttack","triggerRelease","attackPortion","envelopeDuration","sustainTime","totalDuration","clone","triggerAttackRelease","curveLen","cosineCurve","rippleCurve","sineWave","stairsCurve","sineCurve","bounceCurve","invertCurve","out","bounce","In","Out","cosine","exponential","linear","ripple","sine","_original_triggerAttack","_original_triggerRelease","_syncState","_syncMethod","changed","timePosition","originalMethod","portamento","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","envelope","computedAttack","computedDecay","MembraneSynth","pitchDecay","octaves","hertz","maxNote","workletContext","addToWorklet","classOrFunction","registerProcessor","classDesc","processor","PolySynth","_availableVoices","_activeVoices","_voices","_gcTimeout","_averageActiveVoices","voice","maxPolyphony","_dummyVoice","_getNextAvailableVoice","_collectGarbage","activeVoiceIndex","_makeVoiceAvailable","activeVoices","firstAvail","notes","midiNote","released","disposed","_triggerAttack","_triggerRelease","_scheduleEvent","durationSeconds","sanitizedOptions","Sampler","urlMap","mid","midiFloat","remainder","difference","_findClosest","closestNote","_panner","Solo","_allSolos","solo","_isSoloed","_addSolo","_removeSolo","_updateSolo","_soloed","_noSolos","PanVol","Channel","_solo","_panVol","muted","buses","bus","_getBus","sendKnob","Listener","gSynth","synth","tonalities","ACTION_DRAG_START","ACTION_DRAG_MOVE","ACTION_DRAG_END","event$","drawingCtx$","focus$","state$","focus","deleteAllButtonEl","drawingCtx","domCntr","listEl","className","findOrCreateListEl","list","precedingItemEl","itemCntrEl","cntrEl","nameEl","itemEl","children","insertBefore","setAttributeNS","focused","findOrCreateListItem","renderItem","draggableCntr","mapDraggable","mapDropTarget","createOutlineEl","mouseup$","mousemove$","editorEl","drag$","getElementsByTagName","li","getClientRects","clientX","clientY","pos","draggedEl","outline","style","position","cloneNode","startMs","originalTopLeft","dragAction$","mme","dest","ms","finishAction$","dragAction","transition","opacity","display","toggle","itemClick$","contains","newDeck","cntr","patternStore$","patterns","getItem","setItem","removeItem","template","playStateBus$","playPauseEl","keyCode","unwrapFn","wrapFn","normalizedTempo$","subject$","wrapped$","mapBehaviorSubject","msPerPeriodCmd$","dial","textElem","preview","textContent","cls","createTonalities","octaveIter","semitone","majorSecondAbove","ν","minorThirdAbove","majorThirdAbove","perfectFourthAbove","flatFiveAbove","perfectFifthAbove","majorSixthAbove","minorSeventhAbove","majorSeventhAbove","generators","buildTonality","noteFns","tonalityCalculator","tonalityName","scaleCurrentElem","core","__e","aFunction","that","is","hide","$export","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","U","__g","dP","createDesc","anObject","IE8_DOM_DEFINE","toPrimitive","O","Attributes","bitmap","cof","UNSCOPABLES","ArrayProto","at","unicode","forbiddenField","toObject","toAbsoluteIndex","copyWithin","to","inc","aLen","endPos","toIObject","IS_INCLUDES","$this","fromIndex","IObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","res","memo","isRight","SPECIES","speciesConstructor","arraySlice","factories","partArgs","bound","TAG","ARG","T","tryGet","callee","redefineAll","anInstance","forOf","$iterDefine","setSpecies","DESCRIPTORS","fastKey","validate","SIZE","getEntry","entry","_f","getConstructor","wrapper","NAME","ADDER","iterable","_t","_l","def","setStrong","iterated","_k","getWeak","createArrayMethod","$has","arrayFind","arrayFindIndex","uncaughtFrozenStore","UncaughtFrozenStore","findUncaughtFrozen","store","ufstore","redefine","meta","fails","$iterDetect","setToStringTag","inheritIfRequired","methods","common","IS_WEAK","Base","proto","fixMethod","KEY","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","iter","BUGGY_ZERO","$instance","NEED","$defineProperty","$toISOString","toISOString","lz","num","NaN","getUTCFullYear","getUTCMilliseconds","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","NUMBER","getKeys","gOPS","pIE","getSymbols","symbols","isEnum","MATCH","re","defined","wks","regexpExec","REPLACE_SUPPORTS_NAMED_GROUPS","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","nativeMethod","arg2","forceStringMethod","strfn","rxfn","String","RegExp","string","ignoreCase","multiline","sticky","IS_CONCAT_SPREADABLE","flattenIntoArray","sourceLen","depth","mapper","spreadable","targetIndex","sourceIndex","mapFn","isArrayIter","getIterFn","BREAK","RETURN","ITERATOR","iterFn","setPrototypeOf","un","propertyIsEnumerable","Iterators","isRegExp","IteratorPrototype","LIBRARY","$iterCreate","BUGGY","KEYS","VALUES","returnThis","DEFAULT","IS_SET","FORCED","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","SAFE_CLOSING","riter","skipClosing","safe","$expm1","expm1","EPSILON32","MAX32","MIN32","fround","$abs","$sign","log1p","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","onFreeze","macrotask","Observer","MutationObserver","WebKitMutationObserver","isNode","notify","domain","exit","enter","navigator","standalone","createTextNode","characterData","PromiseCapability","$$resolve","$$reject","$assign","A","K","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","contentWindow","write","lt","Properties","gOPD","gOPN","windowNames","getWindowNames","$keys","hiddenKeys","getOwnPropertySymbols","ObjectProto","arrayIndexOf","names","isEntries","ownKeys","$parseFloat","$trim","$parseInt","ws","hex","radix","newPromiseCapability","promiseCapability","SRC","$toString","TO_STRING","TPL","classof","builtinExec","re1","re2","regexpFlags","nativeExec","nativeReplace","patchedExec","UPDATES_LAST_INDEX_WRONG","NPCG_INCLUDED","lastIndex","reCopy","check","buggy","__proto__","tag","stat","shared","uid","SHARED","mode","copyright","D","toInteger","charCodeAt","searchString","quot","createHTML","p1","maxLength","fillString","stringLength","fillStr","intMaxLength","fillLen","stringFiller","spaces","space","ltrim","rtrim","exporter","ALIAS","FORCE","cel","setTask","clearTask","Dispatch","counter","run","$typed","$buffer","propertyDesc","toIndex","createArrayIncludes","ArrayIterators","arrayFill","arrayCopyWithin","$DP","$GOPD","ARRAY_BUFFER","SHARED_BUFFER","$ArrayBuffer","ArrayBuffer","$DataView","DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayIncludes","arrayValues","arrayKeys","arrayEntries","arrayLastIndexOf","lastIndexOf","arrayReduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","arrayToString","arrayToLocaleString","toLocaleString","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","CONSTR","TYPED_ARRAY","TYPED","VIEW","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","toOffset","BYTES","speciesFromList","fromList","addGetter","internal","$from","mapfn","$of","TO_LOCALE_BUG","$toLocaleString","searchElement","separator","middle","comparefn","begin","$begin","byteOffset","$slice","$set","$iterators","isTAIndex","$getDesc","$setDesc","$TypedArrayPrototype$","CLAMPED","GETTER","SETTER","TypedArray","TAC","ABV","TypedArrayPrototype","addElement","getter","setter","$offset","$length","klass","$len","$nativeIterator","CORRECT_ITER_NAME","$iterator","DATA_VIEW","WRONG_INDEX","BaseBuffer","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","unpackIEEE754","nBits","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","view","isLittleEndian","intIndex","pack","conversion","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","Typed","TypedArrayConstructors","px","userAgent","wksExt","$Symbol","USE_SYMBOL","$every","$filter","$find","forced","$forEach","STRICT","createProperty","$indexOf","NEGATIVE_ZERO","addToUnscopables","Arguments","$reduce","upTo","cloned","$some","$sort","toJSON","pv","TO_PRIMITIVE","DateProto","INVALID_DATE","HAS_INSTANCE","FunctionProto","FProto","nameRE","strong","MAP","$acosh","acosh","MAX_VALUE","$asinh","asinh","$atanh","atanh","cbrt","clz32","LOG2E","cosh","hypot","value1","value2","div","larg","$imul","imul","UINT16","xn","yn","xl","yl","LOG10E","sinh","E","tanh","trunc","$Number","BROKEN_COF","TRIM","toNumber","argument","third","maxCode","digits","_isFinite","isInteger","isSafeInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","aNumberValue","$toFixed","ERROR","ZERO","multiply","c2","numToString","fractionDigits","$fails","$toPrecision","toPrecision","precision","$freeze","$getOwnPropertyDescriptor","$getPrototypeOf","$isExtensible","$isFrozen","$isSealed","$preventExtensions","$seal","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","versions","v8","$Promise","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","isReject","_c","_v","reaction","exited","_h","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","onunhandledrejection","onrejectionhandled","$reject","_w","$resolve","executor","onFulfilled","onRejected","capability","remaining","$index","alreadyCalled","rApply","fApply","thisArgument","argumentsList","L","rConstruct","NEW_TARGET_BUG","ARGS_BUG","Target","newTarget","$args","attributes","deleteProperty","Enumerate","enumerate","getProto","receiver","setProto","V","existingDescriptor","ownDesc","$flags","$RegExp","CORRECT_NEW","tiRE","piRE","fiU","flags","advanceStringIndex","regExpExec","$match","maybeCallNative","rx","fullUnicode","matchStr","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","REPLACE","$replace","searchValue","replaceValue","functionalReplace","accumulatedResult","nextSourcePosition","matched","captures","namedCaptures","replacerArgs","getSubstitution","tailPos","ch","sameValue","SEARCH","$search","previousLastIndex","callRegExpExec","$min","$push","MAX_UINT32","SUPPORTS_Y","SPLIT","$split","internalSplit","limit","lastLength","lastLastIndex","splitLimit","separatorCopy","splitter","unicodeMatching","lim","define","$at","codePointAt","ENDS_WITH","$endsWith","fromCharCode","$fromCodePoint","fromCodePoint","INCLUDES","raw","callSite","tpl","STARTS_WITH","$startsWith","startsWith","wksDefine","enumKeys","_create","gOPNExt","$GOPS","$JSON","_stringify","HIDDEN","SymbolRegistry","AllSymbols","OPSymbols","QObject","findChild","setSymbolDesc","protoDesc","wrap","sym","isSymbol","$defineProperties","$propertyIsEnumerable","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","es6Symbols","wellKnownSymbols","keyFor","useSetter","useSimple","FAILS_ON_PRIMITIVES","replacer","$replacer","$isView","isView","fin","viewS","viewT","init","InternalMap","each","weak","NATIVE_WEAK_MAP","IS_IE11","WEAK_MAP","$WeakMap","WEAK_SET","arraySpeciesCreate","$includes","getOwnPropertyDescriptors","getDesc","$values","onFinally","$pad","WEBKIT_BUG","padEnd","padStart","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","$task","MSIE","boundArgs","default","__extends","u","h","boolean","function","precondition","subscribeLog","for","eval","newObjectResolver","newDispatcher","submodelCmd","runtime","Op","hasOwn","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","skipTempReset","rootRecord","rval","exception","loc","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","globalThis"],"mappings":";0CAEA,EAAQ,OAER,IAEgCA,EAF5BC,GAE4BD,EAFK,EAAQ,SAEQA,EAAIE,WAAaF,EAAM,CAAE,QAAWA,GAErFC,EAAiB,QAAEE,gBAAqC,oBAAZC,SAA2BA,QAAQC,MACjFD,QAAQC,KAAK,+SAGfJ,EAAiB,QAAEE,gBAAiB,G,6BCVpC,EAAQ,OAER,EAAQ,OAER,EAAQ,OAER,EAAQ,OAER,EAAQ,MAER,EAAQ,OAER,EAAQ,OAER,EAAQ,OAER,EAAQ,OAER,EAAQ,OAER,EAAQ,OAER,EAAQ,OAER,EAAQ,OAER,EAAQ,Q,UClBRG,EAAOC,QAVP,SAA2BC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GAITN,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQL,YAAa,G,UCPxEI,EAAOC,QAJP,SAAyBC,GACvB,GAAIK,MAAMC,QAAQN,GAAM,OAAOA,GAIjCF,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQL,YAAa,G,UCCxEI,EAAOC,QANP,SAAyBQ,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,sCAKxBX,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQL,YAAa,G,UCPxE,SAASgB,EAAkBC,EAAQC,GACjC,IAAK,IAAIT,EAAI,EAAGA,EAAIS,EAAMV,OAAQC,IAAK,CACrC,IAAIU,EAAaD,EAAMT,GACvBU,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAUlDf,EAAOC,QANP,SAAsBS,EAAaY,EAAYC,GAG7C,OAFID,GAAYV,EAAkBF,EAAYc,UAAWF,GACrDC,GAAaX,EAAkBF,EAAaa,GACzCb,GAITV,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQL,YAAa,G,UCaxEI,EAAOC,QA9BP,SAA+BC,EAAKG,GAClC,IAAIoB,EAAKvB,IAA0B,oBAAXwB,QAA0BxB,EAAIwB,OAAOC,WAAazB,EAAI,eAE9E,GAAU,MAANuB,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAK/B,KAAQ6B,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGS,QAEThC,GAAKyB,EAAK1B,SAAWC,GAH4B0B,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,IAIT9B,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQL,YAAa,G,UC3BxEI,EAAOC,QAJP,WACE,MAAM,IAAIU,UAAU,8IAItBX,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQL,YAAa,G,gBCLxE,IAAI2C,EAAiB,EAAQ,OAEzBC,EAAuB,EAAQ,OAE/BC,EAA6B,EAAQ,OAErCC,EAAkB,EAAQ,OAM9B1C,EAAOC,QAJP,SAAwBC,EAAKG,GAC3B,OAAOkC,EAAerC,IAAQsC,EAAqBtC,EAAKG,IAAMoC,EAA2BvC,EAAKG,IAAMqC,KAItG1C,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQL,YAAa,G,gBCbxE,IAAI+C,EAAmB,EAAQ,OAW/B3C,EAAOC,QATP,SAAqC2C,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOD,EAAiBC,EAAGC,GACtD,IAAIC,EAAI3B,OAAOK,UAAUuB,SAASd,KAAKW,GAAGI,MAAM,GAAI,GAEpD,MADU,WAANF,GAAkBF,EAAEK,cAAaH,EAAIF,EAAEK,YAAYC,MAC7C,QAANJ,GAAqB,QAANA,EAAoBvC,MAAM4C,KAAKP,GACxC,cAANE,GAAqB,2CAA2CM,KAAKN,GAAWH,EAAiBC,EAAGC,QAAxG,IAIF7C,EAAOC,QAAP,QAA4BD,EAAOC,QAASD,EAAOC,QAAQL,YAAa,G,uBCRhE,SAAWK,EAASoD,EAAgBC,EAAiBC,GAAgB,aAEzE,SAASC,EAAuBC,GAAK,OAAOA,GAAkB,iBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAAE,QAAWA,GAE5G,IAAIC,EAAuCF,EAAsBH,GAC7DM,EAAwCH,EAAsBF,GAC9DM,EAAqCJ,EAAsBD,GAE3DM,EAAsD,SAA6DxB,EAAOyB,EAASC,GACrI,MAAO,CACLD,QAASA,EACTC,WAAYA,EACZC,KAAM,yBACN3B,MAAOA,IAIP4B,EAAiD,SAAwD5B,EAAOyB,EAASC,GAC3H,MAAO,CACLD,QAASA,EACTC,WAAYA,EACZC,KAAM,oBACN3B,MAAOA,IAIP6B,EAAgC,SAAuC7B,EAAO8B,GAChF,MAAO,CACLA,UAAWA,EACXH,KAAM,WACN3B,MAAOA,IAIP+B,EAAqC,SAA4CC,EAAQF,EAAWG,GACtG,MAAO,CACLA,SAAUA,EACVH,UAAWA,EACXH,KAAM,gBACNK,OAAQA,IAIRE,EAAuB,SAA8BC,EAAMC,EAAkBC,GAC/E,IAAIP,EAAYO,EAAKP,UACjBtD,EAAS6D,EAAK7D,OACd8D,EAAeD,EAAKC,aACxB,OAAO9D,GAAU4D,EAAmB5D,GAAU+D,KAAKC,KAAKV,EAAYK,GAAQG,IAG1EG,EAA0C,SAAiDC,GAC7F,MAAgC,2BAAzBA,EAAgBf,MAGrBgB,EAAqC,SAA4CD,GACnF,MAAgC,sBAAzBA,EAAgBf,MAGrBiB,EAAkC,SAAyCF,GAC7E,OAAOD,EAAwCC,IAAoBC,EAAmCD,IAGpGG,EAA4B,SAAmCH,GACjE,MAAgC,aAAzBA,EAAgBf,MAGrBmB,EAAiC,SAAwCJ,GAC3E,MAAgC,kBAAzBA,EAAgBf,MAGrBoB,EAAyC,SAASA,EAAuCC,EAAkBC,EAAOd,EAAMe,GAC1H,IAAIR,EAAkBM,EAAiBC,GACvC,YAA2BE,IAApBT,EAAgCQ,EAAeN,EAAgCF,IAAoBG,EAA0BH,GAAmBA,EAAgB1C,MAAQ8C,EAA+BJ,GAAmBA,EAAgBV,OAAOU,EAAgBV,OAAOjE,OAAS,GAAKmE,EAAqBC,EAAMY,EAAuCC,EAAkBC,EAAQ,EAAGP,EAAgBZ,UAAWoB,GAAeR,IAGpaU,EAA8C,SAAqDJ,EAAkBC,EAAOI,EAAwBC,EAAqBJ,GAC3K,YAAkCC,IAA3BE,EAAuC,CAACC,EAAoB5B,WAAYwB,GAAgBN,EAAgCS,GAA0B,CAACA,EAAuB5B,QAAS4B,EAAuBrD,OAAS6C,EAA0BQ,GAA0B,CAACA,EAAuBvB,UAAWuB,EAAuBrD,OAAS8C,EAA+BO,GAA0B,CAACA,EAAuBvB,UAAYuB,EAAuBpB,SAAUoB,EAAuBrB,OAAOqB,EAAuBrB,OAAOjE,OAAS,IAAM,CAACsF,EAAuBvB,UAAWiB,EAAuCC,EAAkBC,EAAQ,EAAGI,EAAuBvB,UAAWoB,KAGjqBK,EAAiC,SAAwCb,GAC3E,MAAgC,kBAAzBA,EAAgBf,MAGrB6B,EAAyC,SAAgDd,GAC3F,MAAgC,0BAAzBA,EAAgBf,MAGrB8B,EAAe,SAAsBf,GACvC,OAAIa,EAA+Bb,IAAoBc,EAAuCd,GACrFA,EAAgBgB,WAGrBjB,EAAwCC,IAAoBC,EAAmCD,GAC1FA,EAAgBjB,QAGlBiB,EAAgBZ,WAGrB6B,EAAgC,SAAuCxB,EAAML,EAAWM,EAAkBC,GAC5G,IAAIZ,EAAUY,EAAKZ,QACfzB,EAAQqC,EAAKrC,MAEjB,OAAIoC,IAAqBpC,EAChBA,EAGL,EAAIoC,GAAoB,EAAIpC,GAASoC,EAAmB,GAAKpC,EAAQ,EAChEoC,EAAmBG,KAAKqB,IAAI5D,EAAQoC,GAAmBD,EAAOL,IAAcL,EAAUK,IAGxF,GAGL+B,EAA2B,SAAkC1B,EAAML,EAAWM,EAAkBC,GAGlG,OAAOD,GAAoBD,EAAOL,IAFpBO,EAAKZ,QAEuCK,IAD9CO,EAAKrC,MAC+DoC,IAc9E0B,EAA2B,SAAkC3B,EAAME,GACrE,IAAIJ,EAAWI,EAAKJ,SAChBH,EAAYO,EAAKP,UACjBE,EAASK,EAAKL,OAElB,OAhBqB,SAA0BA,EAAQ+B,GACvD,IAAIC,EAAazB,KAAK0B,MAAMF,GACxBG,EAAa3B,KAAK4B,KAAKJ,GAE3B,OAAIC,IAAeE,EACVlC,EAAOgC,IAGR,GAAKD,EAAiBC,IAAehC,EAAOgC,IAAe,GAAKE,EAAaH,IAAmB/B,EAAOkC,GAQxGE,CAAiBpC,GADFG,EAAOL,GAAaG,GAAYD,EAAOjE,OAAS,KAIpEsG,EAA6B,SAAoC3B,GACnE,MAAgC,cAAzBA,EAAgBf,MAGrB2C,EAAmC,WACrC,SAASA,EAAoBpB,GAC3B5B,EAAkC,QAAEiD,KAAMD,GAE1CC,KAAKC,kBAAoB,GACzBD,KAAKE,YAAc,EACnBF,KAAKG,cAAgBxB,EA0JvB,OAvJA3B,EAA+B,QAAE+C,EAAqB,CAAC,CACrDtF,IAAKK,OAAOC,SACZU,MAAO,WACL,OAAOuE,KAAKC,kBAAkBnF,OAAOC,cAEtC,CACDN,IAAK,MACLgB,MAAO,SAAa0C,GAClB,IAAIiC,EAAYlB,EAAaf,GAE7B,GAAIa,EAA+Bb,IAAoBc,EAAuCd,GAAkB,CAC9G,IAAIO,EAAQsB,KAAKC,kBAAkBI,WAAU,SAAUvB,GACrD,OAAIG,EAAuCd,IAAoBI,EAA+BO,GACrFA,EAAuBvB,UAAYuB,EAAuBpB,UAAY0C,EAGxElB,EAAaJ,IAA2BsB,KAG7CE,EAAyBN,KAAKC,kBAAkBvB,GAMpD,IAJe,IAAXA,IACFsB,KAAKC,kBAAoBD,KAAKC,kBAAkB7D,MAAM,EAAGsC,IAGvDM,EAA+Bb,GAAkB,CACnD,IAAIoC,EAAsBP,KAAKC,kBAAkBD,KAAKC,kBAAkBzG,OAAS,GAEjF,QAA+BoF,IAA3B0B,GAAwCjC,EAAgCiC,GAAyB,CACnG,GAAIR,EAA2BS,GAC7B,MAAM,IAAIC,MAAM,mCAGlB,IAAIjD,EAAYgB,EAA+BgC,GAAuBA,EAAoBhD,UAAYgD,EAAoB7C,SAAWwB,EAAaqB,GAC9IE,EAAalC,EAA+BgC,GAAuBA,EAAoB9C,OAAO8C,EAAoB9C,OAAOjE,OAAS,GAAK+G,EAAoB9E,MAC3JA,EAAQyC,EAAwCoC,GAA0BlB,EAA8BgB,EAAW7C,EAAWkD,EAAYH,GAA0BhB,EAAyBc,EAAW7C,EAAWkD,EAAYH,GAC/NI,EAA2BxC,EAAwCoC,GAA0BrD,EAAoDxB,EAAO2E,EAAWJ,KAAKE,aAAe7C,EAA+C5B,EAAO2E,EAAWJ,KAAKE,aAEjQF,KAAKC,kBAAkBzE,KAAKkF,QAGF9B,IAAxB2B,GAAqCT,EAA2BS,IAClEP,KAAKC,kBAAkBzE,KAAK8B,EAA8B0C,KAAKW,SAASP,GAAYA,SAG1DxB,IAAxB2B,GAAqChC,EAA+BgC,IAAwBA,EAAoBhD,UAAYgD,EAAoB7C,SAAW0C,IAC7JJ,KAAKC,kBAAkBD,KAAKC,kBAAkBzG,OAAS,GAAKgE,EAAmC,IAAIoD,aAAa,CAAC,EAAG,IAAKL,EAAoBhD,UAAW6C,EAAYG,EAAoBhD,iBAGvL,CACL,IAAIsD,EAASb,KAAKC,kBAAkBI,WAAU,SAAUvB,GACtD,OAAOI,EAAaJ,GAA0BsB,KAG5CU,GAAsC,IAAZD,EAAgBb,KAAKC,kBAAkBD,KAAKC,kBAAkBzG,OAAS,GAAKwG,KAAKC,kBAAkBY,EAAS,GAE1I,QAAgCjC,IAA5BkC,GAAyCvC,EAA+BuC,IAA4B5B,EAAa4B,GAA2BA,EAAwBpD,SAAW0C,EACjL,OAAO,EAGT,IAAIW,EAA4B7C,EAAwCC,GAAmBlB,EAAoDkB,EAAgB1C,MAAO0C,EAAgBjB,QAAS8C,KAAKE,aAAe9B,EAAmCD,GAAmBd,EAA+Cc,EAAgB1C,MAAO2E,EAAWJ,KAAKE,aAAe/B,EAE9W,IAAgB,IAAZ0C,EACFb,KAAKC,kBAAkBzE,KAAKuF,OACvB,CACL,GAAIxC,EAA+BJ,IAAoBiC,EAAYjC,EAAgBT,SAAWwB,EAAac,KAAKC,kBAAkBY,IAChI,OAAO,EAGTb,KAAKC,kBAAkBe,OAAOH,EAAQ,EAAGE,IAI7C,OAAO,IAER,CACDtG,IAAK,QACLgB,MAAO,SAAemC,GACpB,IAAIc,EAAQsB,KAAKC,kBAAkBI,WAAU,SAAUvB,GACrD,OAAOI,EAAaJ,GAA0BlB,KAGhD,GAAIc,EAAQ,EAAG,CACb,IAAIuC,EAA4BjB,KAAKC,kBAAkB7D,MAAMsC,EAAQ,GAEjEwC,EAAgCD,EAA0B,GAE1DnB,EAA2BoB,IAC7BD,EAA0BE,QAAQ7D,EAA8BkB,EAAuCwB,KAAKC,kBAAmBvB,EAAQ,EAAGwC,EAA8B3D,UAAWyC,KAAKG,eAAgBe,EAA8B3D,YAGxOyC,KAAKC,kBAAoBgB,KAG5B,CACDxG,IAAK,WACLgB,MAAO,SAAkBmC,GACvB,GAAsC,IAAlCoC,KAAKC,kBAAkBzG,OACzB,OAAOwG,KAAKG,cAGd,IAAIiB,EAAmBpB,KAAKC,kBAAkBI,WAAU,SAAUlC,GAChE,OAAOe,EAAaf,GAAmBP,KAGrCmB,EAAsBiB,KAAKC,kBAAkBmB,GAC7CC,IAA6C,IAAtBD,EAA0BpB,KAAKC,kBAAkBzG,OAAS4H,GAAoB,EACrGtC,EAAyBkB,KAAKC,kBAAkBoB,GAEpD,QAA+BzC,IAA3BE,GAAwCgB,EAA2BhB,UAAoDF,IAAxBG,IAAsCV,EAAgCU,IAAwBA,EAAoB5B,WAAaS,GAChO,OAAOD,EAAqBC,EAAMY,EAAuCwB,KAAKC,kBAAmBoB,EAAsB,EAAGvC,EAAuBvB,UAAWyC,KAAKG,eAAgBrB,GAGnL,QAA+BF,IAA3BE,GAAwCR,EAA0BQ,UAAoDF,IAAxBG,IAAsCV,EAAgCU,IACtK,OAAOD,EAAuBrD,MAGhC,QAA+BmD,IAA3BE,GAAwCP,EAA+BO,UAAoDF,IAAxBG,IAAsCV,EAAgCU,IAAwBD,EAAuBvB,UAAYuB,EAAuBpB,SAAWE,GACxQ,OAAIA,EAAOkB,EAAuBvB,UAAYuB,EAAuBpB,SAC5D6B,EAAyB3B,EAAMkB,GAGjCA,EAAuBrB,OAAOqB,EAAuBrB,OAAOjE,OAAS,GAG9E,QAA+BoF,IAA3BE,GAAwCT,EAAgCS,UAAoDF,IAAxBG,IAAsCV,EAAgCU,IAC5K,OAAOD,EAAuBrD,MAGhC,QAA4BmD,IAAxBG,GAAqCb,EAAwCa,GAAsB,CACrG,IAAIuC,EAAwBzC,EAA4CmB,KAAKC,kBAAmBoB,EAAqBvC,EAAwBC,EAAqBiB,KAAKG,eACnKoB,EAAyBzE,EAAiC,QAAEwE,EAAuB,GACnF/D,EAAYgE,EAAuB,GACnC9F,EAAQ8F,EAAuB,GAEnC,OAAOnC,EAA8BxB,EAAML,EAAW9B,EAAOsD,GAG/D,QAA4BH,IAAxBG,GAAqCX,EAAmCW,GAAsB,CAChG,IAAIyC,EAAyB3C,EAA4CmB,KAAKC,kBAAmBoB,EAAqBvC,EAAwBC,EAAqBiB,KAAKG,eACpKsB,EAAyB3E,EAAiC,QAAE0E,EAAwB,GACpFE,EAAaD,EAAuB,GACpCE,EAASF,EAAuB,GAEpC,OAAOnC,EAAyB1B,EAAM8D,EAAYC,EAAQ5C,GAG5D,OAAOiB,KAAKG,kBAITJ,EAhK8B,GA0MvC1G,EAAQ0G,oBAAsBA,EAC9B1G,EAAQuI,mCAxCiC,SAA4CzC,GACnF,MAAO,CACLA,WAAYA,EACZ/B,KAAM,kBAsCV/D,EAAQwI,2CAlCyC,SAAoD1C,GACnG,MAAO,CACLA,WAAYA,EACZ/B,KAAM,0BAgCV/D,EAAQyI,4CA5B0C,SAAqDrG,EAAOyB,GAC5G,MAAO,CACLA,QAASA,EACTE,KAAM,yBACN3B,MAAOA,IAyBXpC,EAAQ0I,uCArBqC,SAAgDtG,EAAOyB,GAClG,MAAO,CACLA,QAASA,EACTE,KAAM,oBACN3B,MAAOA,IAkBXpC,EAAQ2I,+BAd6B,SAAwC/H,EAAQsD,EAAWQ,GAC9F,MAAO,CACLR,UAAWA,EACXtD,OAAQA,EACR8D,aAAcA,EACdX,KAAM,cAUV/D,EAAQiE,8BAAgCA,EACxCjE,EAAQmE,mCAAqCA,EAE7CjD,OAAOC,eAAenB,EAAS,aAAc,CAAEoC,OAAO,IArWSwG,CAAQ5I,EAAS,EAAQ,OAAyC,EAAQ,OAA0C,EAAQ,S,oOCD/L,IAAwB,OAExB,IAA6B,OAK7B,2BAAqC,wBAC3B,KAAAoC,MAAW,KACX,KAAAyG,SAAmB,EACnB,KAAAC,cAAwB,EAkClC,OArCqC,OAKE,YAAAC,WAAA,SAAWC,GAC9C,OAAIrC,KAAKsC,UACPD,EAAWE,MAAMvC,KAAKwC,aACf,EAAAC,aAAaC,OACX1C,KAAKmC,cAAgBnC,KAAKkC,SACnCG,EAAW/G,KAAK0E,KAAKvE,OACrB4G,EAAWM,WACJ,EAAAF,aAAaC,OAEf,YAAMN,WAAU,UAACC,IAG1B,YAAA/G,KAAA,SAAKG,GACEuE,KAAKmC,eACRnC,KAAKvE,MAAQA,EACbuE,KAAKkC,SAAU,IAInB,YAAAK,MAAA,SAAMA,GACCvC,KAAKmC,cACR,YAAMI,MAAK,UAACA,IAIhB,YAAAI,SAAA,WACE3C,KAAKmC,cAAe,EAChBnC,KAAKkC,SACP,YAAM5G,KAAI,UAAC0E,KAAKvE,OAElB,YAAMkH,SAAQ,YAElB,EArCA,CAAqC,EAAAC,SAAxB,EAAAC,aAAY,G,oOCPzB,IAAwB,OAGxB,IAAwC,OAKxC,cAEE,WAAoBlB,GAClB,aADkB,KAAAA,SA6BtB,OA/BwC,OAMtC,sBAAI,oBAAK,C,IAAT,WACE,OAAO3B,KAAKW,Y,gCAGuB,YAAAyB,WAAA,SAAWC,GAC9C,IAAMS,EAAe,YAAMV,WAAU,UAACC,GAItC,OAHIS,IAAiCA,EAAcC,QACjDV,EAAW/G,KAAK0E,KAAK2B,QAEhBmB,GAGT,YAAAnC,SAAA,WACE,GAAIX,KAAKsC,SACP,MAAMtC,KAAKwC,YACN,GAAIxC,KAAK+C,OACd,MAAM,IAAI,EAAAC,wBAEV,OAAOhD,KAAK2B,QAIhB,YAAArG,KAAA,SAAKG,GACH,YAAMH,KAAI,UAAC0E,KAAK2B,OAASlG,IAE7B,EA/BA,CAAwC,EAAAmH,SAA3B,EAAAK,gBAAe,G,mOCA5B,cAGE,WAAoBC,EAAuCC,EAAuBC,GAChF,aADkB,KAAAF,SAAuC,KAAAC,aAAuB,KAAAC,aAF1E,KAAA1E,MAAgB,EAmB1B,OApB2C,OAO/B,YAAA2E,MAAV,SAAgB5H,GACduE,KAAKkD,OAAOI,WAAWtD,KAAKmD,WAAY1H,EAAOuE,KAAKoD,WAAYpD,KAAKtB,QAASsB,OAGtE,YAAAuD,OAAV,SAAiBhB,GACfvC,KAAKkD,OAAOM,YAAYjB,EAAOvC,MAC/BA,KAAKyD,eAGG,YAAAC,UAAV,WACE1D,KAAKkD,OAAOS,eAAe3D,MAC3BA,KAAKyD,eAET,EApBA,CARA,EAA2B,MAQgBG,YAA9B,EAAAC,gBAAe,G,6BCP5B,QAA2B,OAgB3B,aAGE,WAAmBC,EAAqBrI,EAAkB8G,GAAvC,KAAAuB,OAAqB,KAAArI,QAAkB,KAAA8G,QACxDvC,KAAK+D,SAAoB,MAATD,EA6GpB,OArGE,YAAAE,QAAA,SAAQC,GACN,OAAQjE,KAAK8D,MACX,IAAK,IACH,OAAOG,EAAS3I,MAAQ2I,EAAS3I,KAAK0E,KAAKvE,OAC7C,IAAK,IACH,OAAOwI,EAAS1B,OAAS0B,EAAS1B,MAAMvC,KAAKuC,OAC/C,IAAK,IACH,OAAO0B,EAAStB,UAAYsB,EAAStB,aAY3C,wBAAGrH,EAA0BiH,EAA4BI,GAEvD,OADa3C,KAAK8D,MAEhB,IAAK,IACH,OAAOxI,GAAQA,EAAK0E,KAAKvE,OAC3B,IAAK,IACH,OAAO8G,GAASA,EAAMvC,KAAKuC,OAC7B,IAAK,IACH,OAAOI,GAAYA,MAazB,YAAAuB,OAAA,SAAOC,EAA2D5B,EAA4BI,GAC5F,OAAIwB,GAAuE,mBAAzBA,EAAgB7I,KACzD0E,KAAKgE,QAA4BG,GAEjCnE,KAAA,GAA4BmE,EAAgB5B,EAAOI,IAS9D,YAAAyB,aAAA,WAEE,OADapE,KAAK8D,MAEhB,IAAK,IACH,OAAO,EAAAO,WAAWC,GAAGtE,KAAKvE,OAC5B,IAAK,IACH,OAAO,EAAA4I,WAAA,MAAiBrE,KAAKuC,OAC/B,IAAK,IACH,OAAO,EAAA8B,WAAWE,QAEtB,MAAM,IAAI/D,MAAM,uCAaX,EAAAgE,WAAP,SAAqB/I,GACnB,YAAqB,IAAVA,EACF,IAAIgJ,EAAa,IAAKhJ,GAExBgJ,EAAaC,4BAUf,EAAAC,YAAP,SAAsBjJ,GACpB,OAAO,IAAI+I,EAAa,SAAK7F,EAAWlD,IAOnC,EAAAkJ,eAAP,WACE,OAAOH,EAAaI,sBAjCP,EAAAA,qBAA0C,IAAIJ,EAAa,KAC3D,EAAAC,2BAAgD,IAAID,EAAa,SAAK7F,GAkCvF,EAjHA,GAAa,EAAA6F,aAAY,G,6BCbzB,QAAqB,OACrB,IAA6B,MAG7B,IAAgD,MAEhD,IAA8B,MAiB9B,aAcE,WAAYK,GAZL,KAAAC,WAAqB,EAatBD,IACF9E,KAAKoC,WAAa0C,GAuTxB,OA9RE,YAAAE,KAAA,SAAQC,GACN,IAAMC,EAAa,IAAIb,EAGvB,OAFAa,EAAWC,OAASnF,KACpBkF,EAAWD,SAAWA,EACfC,GAuHT,YAAAJ,UAAA,SAAUM,EACA7C,EACAI,GAEA,IAAAsC,EAAA,KAAAA,SACFI,EAAO,EAAAC,aAAaF,EAAgB7C,EAAOI,GAQjD,GANIsC,EACFA,EAAS5J,KAAKgK,EAAMrF,KAAKmF,QAEzBE,EAAKE,IAAIvF,KAAKmF,SAAWE,EAAKG,mBAAqBxF,KAAKoC,WAAWiD,GAAQrF,KAAKyF,cAAcJ,IAG5FA,EAAKG,qBACPH,EAAKG,oBAAqB,EACtBH,EAAKK,iBACP,MAAML,EAAKM,eAIf,OAAON,GAGC,YAAAI,cAAV,SAAwBJ,GACtB,IACE,OAAOrF,KAAKoC,WAAWiD,GACvB,MAAO3J,GACP2J,EAAKK,iBAAkB,EACvBL,EAAKM,eAAiBjK,EACtB2J,EAAK9C,MAAM7G,KAWf,YAAAkK,QAAA,SAAQtK,EAA0BuK,GAAlC,WASE,GARKA,IACC,EAAAC,KAAKC,IAAM,EAAAD,KAAKC,GAAGC,QAAU,EAAAF,KAAKC,GAAGC,OAAOC,QAC9CJ,EAAc,EAAAC,KAAKC,GAAGC,OAAOC,QACpB,EAAAH,KAAKG,UACdJ,EAAc,EAAAC,KAAKG,WAIlBJ,EACH,MAAM,IAAIrF,MAAM,yBAGlB,OAAO,IAAIqF,GAAkB,SAACK,EAASC,GAGrC,IAAIrD,EACJA,EAAe,EAAKgC,WAAU,SAACrJ,GAC7B,GAAIqH,EAKF,IACExH,EAAKG,GACL,MAAOC,GACPyK,EAAOzK,GACPoH,EAAaW,mBASfnI,EAAKG,KAEN0K,EAAQD,OAIsB,YAAA9D,WAAA,SAAWC,GAC9C,OAAOrC,KAAKmF,OAAOL,UAAUzC,IAY/B,YAAC,cAAD,WACE,OAAOrC,MAmCT,YAAAoG,KAAA,W,IAAQ,wDACN,OAA0B,IAAtBC,EAAW7M,OACNwG,KAGF,EAAAsG,cAAcD,EAAd,CAA0BrG,OASnC,YAAAuG,UAAA,SAAUV,GAAV,WASE,GARKA,IACC,EAAAC,KAAKC,IAAM,EAAAD,KAAKC,GAAGC,QAAU,EAAAF,KAAKC,GAAGC,OAAOC,QAC9CJ,EAAc,EAAAC,KAAKC,GAAGC,OAAOC,QACpB,EAAAH,KAAKG,UACdJ,EAAc,EAAAC,KAAKG,WAIlBJ,EACH,MAAM,IAAIrF,MAAM,yBAGlB,OAAO,IAAIqF,GAAY,SAACK,EAASC,GAC/B,IAAI1K,EACJ,EAAKqJ,WAAU,SAAC0B,GAAS,OAAA/K,EAAA,KAAW,SAACC,GAAa,OAAAyK,EAAA,MAAa,WAAM,OAAAD,EAAA,UAtSlE,EAAAO,OAAmB,SAAI3B,GAC5B,OAAO,IAAIT,EAAcS,IAwS7B,EAvUA,GAAa,EAAAT,WAAU,G,2BCGV,EAAAE,MAAuB,CAClCxB,QAAQ,EACRzH,KAAI,SAACG,KACL8G,MAAK,SAAC7G,GAAkB,MAAMA,GAC9BiH,SAAQ,e,oOC1BV,2BAA2C,wBAc3C,OAd2C,OACzC,YAAAW,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAK6G,YAAYvL,KAAKoL,IAGxB,YAAAlD,YAAA,SAAYjB,EAAYqE,GACtB5G,KAAK6G,YAAYtE,MAAMA,IAGzB,YAAAoB,eAAA,SAAeiD,GACb5G,KAAK6G,YAAYlE,YAErB,EAdA,CARA,EAA2B,MAQgBiB,YAA9B,EAAAkD,gBAAe,G,oOCR5B,IAAwB,OAExB,IAAsB,MAEtB,IAA6B,OAC7B,IAAoC,OACpC,IAAwC,OACxC,IAAoC,OAIpC,cAKE,WAAYC,EACAC,EACQC,QAFR,IAAAF,MAAqBG,OAAOC,wBAC5B,IAAAH,MAAqBE,OAAOC,mBAEtC,aADkB,KAAAF,YANZ,KAAAG,QAA4B,GAQlCpH,KAAKqH,YAAcN,EAAa,EAAI,EAAIA,EACxC/G,KAAKsH,YAAcN,EAAa,EAAI,EAAIA,EA6E5C,OAvFsC,OAapC,YAAA1L,KAAA,SAAKG,GACH,IAAM8L,EAAMvH,KAAKwH,UACjBxH,KAAKoH,QAAQ5L,KAAK,IAAIiM,EAAYF,EAAK9L,IACvCuE,KAAK0H,2BACL,YAAMpM,KAAI,UAACG,IAGwB,YAAA2G,WAAA,SAAWC,GAC9C,IAEIS,EAFEsE,EAAUpH,KAAK0H,2BACfT,EAAYjH,KAAKiH,UAGvB,GAAIjH,KAAK+C,OACP,MAAM,IAAI,EAAAC,wBACDhD,KAAKsC,UAELtC,KAAK2H,UADd7E,EAAe,EAAAL,aAAaC,OAI5B1C,KAAK4H,UAAUpM,KAAK6G,GACpBS,EAAe,IAAI,EAAA+E,oBAAoB7H,KAAMqC,IAG3C4E,GACF5E,EAAWkD,IAAIlD,EAAa,IAAI,EAAAyF,oBAAuBzF,EAAY4E,IAIrE,IADA,IAAM1N,EAAM6N,EAAQ5N,OACXC,EAAI,EAAGA,EAAIF,IAAQ8I,EAAWU,OAAQtJ,IAC7C4I,EAAW/G,KAAK8L,EAAQ3N,GAAGgC,OAS7B,OANIuE,KAAKsC,SACPD,EAAWE,MAAMvC,KAAKwC,aACbxC,KAAK2H,WACdtF,EAAWM,WAGNG,GAGT,YAAA0E,QAAA,WACE,OAAQxH,KAAKiH,WAAa,EAAAc,OAAOR,OAG3B,YAAAG,yBAAR,WAYE,IAXA,IAAMH,EAAMvH,KAAKwH,UACXH,EAAcrH,KAAKqH,YACnBC,EAActH,KAAKsH,YACnBF,EAAUpH,KAAKoH,QAEjBY,EAAcZ,EAAQ5N,OACtByO,EAAc,EAKXA,EAAcD,KACdT,EAAMH,EAAQa,GAAarK,KAAQ0J,IAGxCW,IAWF,OARID,EAAcX,IAChBY,EAAcjK,KAAKkK,IAAID,EAAaD,EAAcX,IAGhDY,EAAc,GAChBb,EAAQpG,OAAO,EAAGiH,GAGbb,GAEX,EAvFA,CAAsC,EAAAxE,SAAzB,EAAAuF,cAAa,EAyF1B,MACE,SAAmBvK,EAAqBnC,GAArB,KAAAmC,OAAqB,KAAAnC,U,iCCjG1C,IAAwC,OAAhC,EAAAmH,QAAS,EAAAwF,iBAEjB,QAAyB,OAAjnB5B,aACR,EAAyB,MAAjBmB,WACR,EAA2B,OAAnBf,aACR,EAA4B,OAApBsF,cACR,EAA8B,OAAtBlF,gBACR,EAAoC,OAA5BoF,sBACR,EAA2B,OAAnB5D,aACR,EAAyB,MAAjB6D,WACR,EAAsC,OAA9BC,wBACR,EAAsC,OAA9BvF,wBACR,EAA2B,OAAnBwF,aACR,EAAkC,OAA1BC,oBACR,EAA2B,OAAnBC,aACR,EAAwB,OAAhBC,UACR,EAA4B,OAApBC,cACR,EAAmC,OAA3BC,qBACR,QAAqE,OAAhD,EAAAC,aAAc,EAAAC,UAAW,EAAAC,iBAC9C,EAAqB,MAAZ5C,KAET,QAAqB,OACrB,IAAsB,OACtB,IAAsB,MACtB,IAA+B,OAK/B,IAA6B,OAC7B,IAAyB,IACzB,IAA2B,MAEL,EAAM,MAmB5B,IAAI6C,EAAY,CACdC,KAAA,EAAAA,KACAnB,MAAA,EAAAA,MACAoB,eAAA,EAAAA,eACAC,MAAA,EAAAA,OAuBE,KAtBF,EAgBA,EAAAC,aACA,EAAAnE,WACA,EAAAnK,U,2BCrMF,iBAIE,WAAoBuO,EACR/B,QAAA,IAAAA,MAAoB0B,EAAU1B,KADtB,KAAA+B,kBAElBtJ,KAAKuH,IAAMA,EAiCf,OAHS,YAAAgC,SAAP,SAAmBC,EAA4CC,EAAmBC,GAChF,YAD6D,IAAAD,MAAA,GACtD,IAAIzJ,KAAKsJ,gBAAmBtJ,KAAMwJ,GAAMD,SAASG,EAAOD,IAnCnD,EAAAlC,IAAoBoC,KAAKpC,IAAMoC,KAAKpC,IAAM,WAAM,OAAC,IAAD,MAqChE,EAvCA,GAAa,EAAA0B,UAAS,G,oOCrBtB,IAA2B,OAC3B,IAA2B,MAC3B,IAA2D,OAC3D,IAAwC,OACxC,IAAoC,OACpC,IAAmD,OAKnD,cACE,WAAsBpC,GACpB,YAAMA,GADc,KAAAA,cAGxB,OAJ0C,OAI1C,EAJA,CAA0C,EAAAjD,YAA7B,EAAAgG,kBAAiB,EAS9B,kBAgBE,aACE,aAXF,KAAAhC,UAA2B,GAE3B,KAAA7E,QAAS,EAET,KAAA4E,WAAY,EAEZ,KAAArF,UAAW,EAEX,KAAAE,YAAmB,KA8FrB,OA5GgC,OAE9B,YAAC,EAAA6G,cAAD,WACE,OAAO,IAAIO,EAAkB5J,OAqB/B,YAAAgF,KAAA,SAAQC,GACN,IAAM4E,EAAU,IAAIzB,EAAiBpI,KAAMA,MAE3C,OADA6J,EAAQ5E,SAAgBA,EACZ4E,GAGd,YAAAvO,KAAA,SAAKG,GACH,GAAIuE,KAAK+C,OACP,MAAM,IAAI,EAAAC,wBAEZ,IAAKhD,KAAK2H,UAIR,IAHQ,IAAAC,EAAA,KAAAA,UACFrO,EAAMqO,EAAUpO,OAChBsQ,EAAOlC,EAAUxL,QACd3C,EAAI,EAAGA,EAAIF,EAAKE,IACvBqQ,EAAKrQ,GAAG6B,KAAKG,IAKnB,YAAA8G,MAAA,SAAM7G,GACJ,GAAIsE,KAAK+C,OACP,MAAM,IAAI,EAAAC,wBAEZhD,KAAKsC,UAAW,EAChBtC,KAAKwC,YAAc9G,EACnBsE,KAAK2H,WAAY,EAIjB,IAHQ,IAAAC,EAAA,KAAAA,UACFrO,EAAMqO,EAAUpO,OAChBsQ,EAAOlC,EAAUxL,QACd3C,EAAI,EAAGA,EAAIF,EAAKE,IACvBqQ,EAAKrQ,GAAG8I,MAAM7G,GAEhBsE,KAAK4H,UAAUpO,OAAS,GAG1B,YAAAmJ,SAAA,WACE,GAAI3C,KAAK+C,OACP,MAAM,IAAI,EAAAC,wBAEZhD,KAAK2H,WAAY,EAIjB,IAHQ,IAAAC,EAAA,KAAAA,UACFrO,EAAMqO,EAAUpO,OAChBsQ,EAAOlC,EAAUxL,QACd3C,EAAI,EAAGA,EAAIF,EAAKE,IACvBqQ,EAAKrQ,GAAGkJ,WAEV3C,KAAK4H,UAAUpO,OAAS,GAG1B,YAAAiK,YAAA,WACEzD,KAAK2H,WAAY,EACjB3H,KAAK+C,QAAS,EACd/C,KAAK4H,UAAY,MAGT,YAAAnC,cAAV,SAAwBpD,GACtB,GAAIrC,KAAK+C,OACP,MAAM,IAAI,EAAAC,wBAEV,OAAO,YAAMyC,cAAa,UAACpD,IAIM,YAAAD,WAAA,SAAWC,GAC9C,GAAIrC,KAAK+C,OACP,MAAM,IAAI,EAAAC,wBACL,OAAIhD,KAAKsC,UACdD,EAAWE,MAAMvC,KAAKwC,aACf,EAAAC,aAAaC,OACX1C,KAAK2H,WACdtF,EAAWM,WACJ,EAAAF,aAAaC,QAEpB1C,KAAK4H,UAAUpM,KAAK6G,GACb,IAAI,EAAAwF,oBAAoB7H,KAAMqC,KAIzC,YAAA0H,aAAA,WACE,IAAM7E,EAAa,IAAI,EAAAb,WAEvB,OADMa,EAAYC,OAASnF,KACpBkF,GAtFF,EAAAuB,OAAmB,SAAII,EAA0B1B,GACtD,OAAO,IAAIiD,EAAoBvB,EAAa1B,IAuFhD,EA5GA,CAAgC,EAAAd,YAAnB,EAAAzB,QAAO,EAiHpB,kBACE,WAAsBiE,EAA2B1B,GAC/C,aADoB,KAAA0B,cAEpB7G,KAAKmF,OAASA,EAgClB,OAnCyC,OAMvC,YAAA7J,KAAA,SAAKG,GACK,IAAAoL,EAAA,KAAAA,YACJA,GAAeA,EAAYvL,MAC7BuL,EAAYvL,KAAKG,IAIrB,YAAA8G,MAAA,SAAM7G,GACI,IAAAmL,EAAA,KAAAA,YACJA,GAAeA,EAAYtE,OAC7BvC,KAAK6G,YAAYtE,MAAM7G,IAI3B,YAAAiH,SAAA,WACU,IAAAkE,EAAA,KAAAA,YACJA,GAAeA,EAAYlE,UAC7B3C,KAAK6G,YAAYlE,YAIgB,YAAAP,WAAA,SAAWC,GAE9C,OADQ,KAAA8C,OAECnF,KAAKmF,OAAOL,UAAUzC,GAEtB,EAAAI,aAAaC,OAG1B,EAnCA,CAAyCE,GAA5B,EAAAwF,iBAAgB,G,oOC7H7B,cAGE,WAAmByB,EAA4BxH,GAC7C,aADiB,KAAAwH,UAA4B,KAAAxH,aAF/C,KAAAU,QAAkB,EA4BpB,OA7B4C,OAO1C,YAAAU,YAAA,WACE,IAAIzD,KAAK+C,OAAT,CAIA/C,KAAK+C,QAAS,EAEd,IAAM8G,EAAU7J,KAAK6J,QACfjC,EAAYiC,EAAQjC,UAI1B,GAFA5H,KAAK6J,QAAU,KAEVjC,GAAkC,IAArBA,EAAUpO,SAAgBqQ,EAAQlC,YAAakC,EAAQ9G,OAAzE,CAIA,IAAMiH,EAAkBpC,EAAUqC,QAAQjK,KAAKqC,aAEtB,IAArB2H,GACFpC,EAAU5G,OAAOgJ,EAAiB,MAGxC,EA7BA,CAPA,EAA6B,OAOevH,cAA/B,EAAAoF,oBAAmB,G,wcCThC,IAA2B,OAE3B,IAA6B,OAC7B,IAAuC,OACvC,IAAmD,OAYnD,cAsCE,WAAYqC,EACA3H,EACAI,GAGV,OAFA,aAlBK,KAAAgD,eAAsB,KACtB,KAAAD,iBAA2B,EAC3B,KAAAF,oBAA8B,EAE3B,KAAAmC,WAAqB,EAgBrBwC,UAAU3Q,QAChB,KAAK,EACHwG,KAAK6G,YAAc,EAAAtC,MACnB,MACF,KAAK,EACH,IAAK2F,EAAmB,CACtBlK,KAAK6G,YAAc,EAAAtC,MACnB,MAEF,GAAiC,WAA7B,EAAO2F,GAAgC,CAGzC,GAAIE,EAAoBF,GAAoB,CAC1C,IAAMG,EAAoBH,EAAkB,EAAAb,gBAC5CrJ,KAAKwF,mBAAqB6E,EAAkB7E,mBAC5CxF,KAAK6G,YAAcwD,EACnBA,EAAkB9E,IAAIvF,WAEtBA,KAAKwF,oBAAqB,EAC1BxF,KAAK6G,YAAc,IAAIyD,EAAkBtK,KAA6BkK,GAExE,MAEJ,QACElK,KAAKwF,oBAAqB,EAC1BxF,KAAK6G,YAAc,IAAIyD,EAAkBtK,KAA6BkK,EAAmB3H,EAAOI,IA8ExG,OAlJmC,OAEjC,YAAC,EAAA0G,cAAD,WAAyB,OAAOrJ,MAazB,EAAAyG,OAAP,SAAiBnL,EACAiH,EACAI,GACf,IAAMN,EAAa,IAAIuB,EAAWtI,EAAMiH,EAAOI,GAE/C,OADAN,EAAWmD,oBAAqB,EACzBnD,GA4DT,YAAA/G,KAAA,SAAKG,GACEuE,KAAK2H,WACR3H,KAAKqD,MAAM5H,IAWf,YAAA8G,MAAA,SAAM7G,GACCsE,KAAK2H,YACR3H,KAAK2H,WAAY,EACjB3H,KAAKuD,OAAO7H,KAUhB,YAAAiH,SAAA,WACO3C,KAAK2H,YACR3H,KAAK2H,WAAY,EACjB3H,KAAK0D,cAIT,YAAAD,YAAA,WACMzD,KAAK+C,SAGT/C,KAAK2H,WAAY,EACjB,YAAMlE,YAAW,aAGT,YAAAJ,MAAV,SAAgB5H,GACduE,KAAK6G,YAAYvL,KAAKG,IAGd,YAAA8H,OAAV,SAAiB7H,GACfsE,KAAK6G,YAAYtE,MAAM7G,GACvBsE,KAAKyD,eAGG,YAAAC,UAAV,WACE1D,KAAK6G,YAAYlE,WACjB3C,KAAKyD,eAG8B,YAAA8G,uBAAA,WACnC,IAAQC,EAAR,KAAQA,QAASC,EAAjB,KAAiBA,SAQjB,OAPAzK,KAAKwK,QAAU,KACfxK,KAAKyK,SAAW,KAChBzK,KAAKyD,cACLzD,KAAK+C,QAAS,EACd/C,KAAK2H,WAAY,EACjB3H,KAAKwK,QAAUA,EACfxK,KAAKyK,SAAWA,EACTzK,MAEX,EAlJA,CAAmC,EAAAyC,cAAtB,EAAAmB,WAAU,EAyJvB,kBAIE,WAAoB8G,EACRtF,EACA7C,EACAI,GAGV,IAAIrH,EAFJ,aAJkB,KAAAoP,oBAOlB,IAAIC,EAAe3K,KAEf,EAAA4K,WAAWxF,GACb9J,EAA+B8J,EACtBA,IACT9J,EAA6B8J,EAAgB9J,KAC7CiH,EAA8B6C,EAAgB7C,MAC9CI,EAAiCyC,EAAgBzC,SAC7CyC,IAAmB,EAAAb,QACrBoG,EAAUpQ,OAAOkM,OAAOrB,GACpB,EAAAwF,WAAWD,EAAQlH,cACrBzD,KAAKuF,IAAiBoF,EAAQlH,YAAYoH,KAAKF,IAEjDA,EAAQlH,YAAczD,KAAKyD,YAAYoH,KAAK7K,QAIhDA,KAAK8K,SAAWH,EAChB3K,KAAKqD,MAAQ/H,EACb0E,KAAKuD,OAAShB,EACdvC,KAAK0D,UAAYf,EAiFrB,OAhHgC,OAkC9B,YAAArH,KAAA,SAAKG,GACH,IAAKuE,KAAK2H,WAAa3H,KAAKqD,MAAO,CACzB,IAAAqH,EAAA,KAAAA,kBACHA,EAAkBlF,mBAEZxF,KAAK+K,gBAAgBL,EAAmB1K,KAAKqD,MAAO5H,IAC7DuE,KAAKyD,cAFLzD,KAAKgL,aAAahL,KAAKqD,MAAO5H,KAOpC,YAAA8G,MAAA,SAAM7G,GACJ,IAAKsE,KAAK2H,UAAW,CACX,IAAA+C,EAAA,KAAAA,kBACR,GAAI1K,KAAKuD,OACFmH,EAAkBlF,oBAIrBxF,KAAK+K,gBAAgBL,EAAmB1K,KAAKuD,OAAQ7H,GACrDsE,KAAKyD,gBAJLzD,KAAKgL,aAAahL,KAAKuD,OAAQ7H,GAC/BsE,KAAKyD,mBAKF,KAAKiH,EAAkBlF,mBAE5B,MADAxF,KAAKyD,cACC/H,EAENgP,EAAkB/E,eAAiBjK,EACnCgP,EAAkBhF,iBAAkB,EACpC1F,KAAKyD,iBAKX,YAAAd,SAAA,sBACE,IAAK3C,KAAK2H,UAAW,CACX,IAAA+C,EAAA,KAAAA,kBACR,GAAI1K,KAAK0D,UAAW,CAClB,IAAMuH,EAAkB,WAAM,SAAKvH,UAAUrI,KAAK,EAApB,WAEzBqP,EAAkBlF,oBAIrBxF,KAAK+K,gBAAgBL,EAAmBO,GACxCjL,KAAKyD,gBAJLzD,KAAKgL,aAAaC,GAClBjL,KAAKyD,oBAMPzD,KAAKyD,gBAKH,YAAAuH,aAAR,SAAqBE,EAAczP,GACjC,IACEyP,EAAG7P,KAAK2E,KAAK8K,SAAUrP,GACvB,MAAOC,GAEP,MADAsE,KAAKyD,cACC/H,IAIF,YAAAqP,gBAAR,SAAwB7H,EAAuBgI,EAAczP,GAC3D,IACEyP,EAAG7P,KAAK2E,KAAK8K,SAAUrP,GACvB,MAAOC,GAGP,OAFAwH,EAAOyC,eAAiBjK,EACxBwH,EAAOwC,iBAAkB,GAClB,EAET,OAAO,GAG4B,YAAAyF,aAAA,WAC3B,IAAAT,EAAA,KAAAA,kBACR1K,KAAK8K,SAAW,KAChB9K,KAAK0K,kBAAoB,KACzBA,EAAkBjH,eAEtB,EAhHA,CAAgCG,GAkHhC,SAASwG,EAAoBtR,GAC3B,OAAOA,aAAe8K,GAAe,uBAAwB9K,GAAOA,EAAI,EAAAuQ,gB,kQC5R1E,QAAwB,OACxB,IAAyB,OACzB,IAA2B,OAC3B,IAAyB,OACzB,IAA4B,MAC5B,IAAoC,OAyBpC,aAoBE,WAAY5F,GAVL,KAAAV,QAAkB,EAEf,KAAAyH,QAAwB,KACxB,KAAAC,SAA2B,KAC7B,KAAAW,eAAkC,KAOpC3H,IACKzD,KAAMmL,aAAe1H,GArBK,IAASc,EA0LhD,OA3JE,YAAAd,YAAA,WACE,IACI4H,EADAC,GAAY,EAGhB,IAAItL,KAAK+C,OAAT,CAIA,WAAMyH,EAAA,EAAAA,QAASC,EAAA,EAAAA,SAAUU,EAAA,EAAAA,aAAcC,EAAA,EAAAA,eAEvCpL,KAAK+C,QAAS,EACd/C,KAAKwK,QAAU,KACfxK,KAAKyK,SAAW,KAGhBzK,KAAKoL,eAAiB,KAOtB,IALA,IAAI1M,GAAS,EACTnF,EAAMkR,EAAWA,EAASjR,OAAS,EAIhCgR,GACLA,EAAQe,OAAOvL,MAGfwK,IAAY9L,EAAQnF,GAAOkR,EAAS/L,IAAU,KAchD,GAXI,EAAAkM,WAAWO,IACD,EAAAK,SAASL,GAAc9P,KAAK2E,QAC1B,EAAAyL,cACZH,GAAY,EACZD,EAASA,IACP,EAAAI,YAAY5O,aAAa,EAAA4L,oBACvBiD,EAA4B,EAAAD,YAAY5O,EAAEwO,QAAU,CAAC,EAAAI,YAAY5O,KAKrE,EAAAjD,QAAQwR,GAKV,IAHA1M,GAAS,EACTnF,EAAM6R,EAAe5R,SAEZkF,EAAQnF,GAAK,CACpB,IAAMoS,EAAMP,EAAe1M,GAC3B,GAAI,EAAAkN,SAASD,IACC,EAAAH,SAASG,EAAIlI,aAAapI,KAAKsQ,KAC7B,EAAAF,YAAa,CACzBH,GAAY,EACZD,EAASA,GAAU,GACnB,IAAI3P,EAAM,EAAA+P,YAAY5O,EAClBnB,aAAe,EAAA+M,oBACjB4C,EAASA,EAAOQ,OAAOH,EAA4BhQ,EAAI2P,SAEvDA,EAAO7P,KAAKE,IAOtB,GAAI4P,EACF,MAAM,IAAI,EAAA7C,oBAAoB4C,KAsBlC,YAAA9F,IAAA,SAAIuG,GACF,IAAKA,GAAaA,IAAarJ,EAAaC,MAC1C,OAAOD,EAAaC,MAGtB,GAAIoJ,IAAa9L,KACf,OAAOA,KAGT,IAAI8C,EAA+BgJ,EAEnC,SAAeA,IACb,IAAK,WACHhJ,EAAe,IAAIL,EAA6BqJ,GAClD,IAAK,SACH,GAAIhJ,EAAaC,QAA8C,mBAA7BD,EAAaW,YAC7C,OAAOX,EACF,GAAI9C,KAAK+C,OAEd,OADAD,EAAaW,cACNX,EACF,GAAuC,mBAA5BA,EAAaiJ,WAA6C,CAC1E,IAAMC,EAAMlJ,GACZA,EAAe,IAAIL,GACN2I,eAAiB,CAACY,GAEjC,MACF,QACE,MAAM,IAAIxL,MAAM,yBAA2BsL,EAAW,2BAQ1D,OALsB9L,KAAKoL,iBAAmBpL,KAAKoL,eAAiB,KAEtD5P,KAAKsH,GACnBA,EAAaiJ,WAAW/L,MAEjB8C,GAST,YAAAyI,OAAA,SAAOzI,GACL,IAAMmJ,EAAgBjM,KAAKoL,eAC3B,GAAIa,EAAe,CACjB,IAAMC,EAAoBD,EAAchC,QAAQnH,IACrB,IAAvBoJ,GACFD,EAAcjL,OAAOkL,EAAmB,KAKtC,YAAAH,WAAR,SAAmB7I,GACjB,IAAMsH,EAAN,KAAMA,QAASC,EAAf,KAAeA,SACVD,GAAWA,IAAYtH,EAIhBuH,GAI6B,IAA9BA,EAASR,QAAQ/G,IAE1BuH,EAASjP,KAAK0H,GAHdlD,KAAKyK,SAAW,CAACvH,GAJjBlD,KAAKwK,QAAUtH,GAhLL,EAAAR,QAAgC6B,EAG5C,IAAI9B,GAFEM,QAAS,EACRwB,GAwLX,EA3LA,GA6LA,SAASmH,EAA4BL,GACpC,OAAOA,EAAOc,QAAO,SAACC,EAAM1Q,GAAQ,OAAA0Q,EAAKP,OAAQnQ,aAAe,EAAA+M,oBAAuB/M,EAAI2P,OAAvD3P,KAAsE,IA9L9F,EAAA+G,aAAY,G,6BC9BzB,QAA2B,OAC3B,IAAmD,OAEnD,EAAA4B,WAAWgI,aAAe,gB,6BCH1B,QAA2B,OAC3B,IAA2D,MAE3D,EAAAhI,WAAWiI,iBAAmB,oB,6BCH9B,QAA2B,OAC3B,IAAqD,OAErD,EAAAjI,WAAWkI,cAAgB,EAAAA,e,6BCH3B,QAA2B,OAC3B,IAAuC,OAEvC,EAAAlI,WAAWwH,OAAS,EAAAA,Q,4BCHpB,QAA2B,OAC3B,IAAqC,OAErC,EAAAxH,WAAWmI,MAAQ,S,6BCHnB,QAA2B,OAC3B,IAAmC,OAGnC,EAAAnI,WAAWoI,KAAO,Q,6BCJlB,QAA2B,OAC3B,IAA6C,OAE7C,EAAApI,WAAWqI,UAAY,a,6BCHvB,QAA2B,OAC3B,IAAqC,OAErC,EAAArI,WAAWE,MAAQ,S,6BCHnB,QAA2B,OAC3B,IAA2C,OAE3C,EAAAF,WAAWsI,SAAW,Y,6BCHtB,QAA2B,OAC3B,IAAmC,OAEnC,EAAAtI,WAAW9H,KAAO,Q,6BCHlB,QAA2B,OAC3B,IAA6C,OAE7C,EAAA8H,WAAWuI,UAAY,a,6BCHvB,QAA2B,OAC3B,IAA2D,OAE3D,EAAAvI,WAAWwI,iBAAmB,oB,6BCH9B,QAA2B,OAC3B,IAAiD,OAEjD,EAAAxI,WAAWyI,YAAc,e,6BCHzB,QAA2B,OAC3B,IAA2C,OAE3C,EAAAzI,WAAW0I,SAAW,Y,6BCHtB,QAA2B,OAC3B,IAAoB,OAEpB,EAAA1I,WAAA,GAAgB,EAAA2I,K,6BCHhB,QAA2B,OAC3B,IAA2C,OAE3C,EAAA3I,WAAW4I,SAAW,Y,6BCHtB,QAA2B,OAC3B,IAAqC,OAErC,EAAA5I,WAAW6I,MAAQ,EAAAA,O,6BCHnB,QAA2B,OAC3B,IAAqC,OAErC,EAAA7I,WAAW8I,MAAQ,S,6BCHnB,QAA2B,OAC3B,IAA+B,OAE/B,EAAA9I,WAAWC,GAAK,M,6BCHhB,QAA2B,OAC3B,IAA6D,OAE7D,EAAAD,WAAW+I,kBAAoB,qB,6BCH/B,QAA2B,OAC3B,IAAqC,OAErC,EAAA/I,WAAWgJ,MAAQ,S,6BCHnB,QAA2B,OAC3B,IAAmC,OAEnC,EAAAhJ,WAAWiJ,KAAO,Q,6BCHlB,QAA2B,OAC3B,IAAqC,OAErC,EAAAjJ,WAAWkJ,MAAQ,S,6BCHnB,QAA2B,OAC3B,IAAuB,OAEvB,EAAAlJ,WAAA,MAAmB,EAAAmJ,Q,6BCHnB,QAA2B,OAC3B,IAAqC,OAErC,EAAAnJ,WAAWoJ,MAAQ,S,6BCHnB,QAA2B,OAC3B,IAAqC,OAErC,EAAApJ,WAAWqJ,MAAQ,S,6BCHnB,QAA2B,OAC3B,IAAiC,OAEjC,EAAArJ,WAAWsJ,IAAM,EAAAA,K,6BCHjB,QAA2B,OAC3B,IAAsB,OAEtB,EAAAtJ,WAAWzJ,UAAUgT,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAA0B,OAE1B,EAAAvJ,WAAWzJ,UAAUiT,UAAY,EAAAA,W,6BCFjC,QAA2B,OAC3B,IAAuB,OAEvB,EAAAxJ,WAAWzJ,UAAUkT,OAAS,EAAAA,Q,6BCH9B,QAA2B,OAC3B,IAA4B,OAE5B,EAAAzJ,WAAWzJ,UAAUmT,YAAc,EAAAA,a,6BCHnC,QAA2B,OAC3B,IAA2B,OAE3B,EAAA1J,WAAWzJ,UAAUoT,WAAa,EAAAA,Y,6BCHlC,QAA2B,OAC3B,IAA6B,OAE7B,EAAA3J,WAAWzJ,UAAUqT,aAAe,EAAAA,c,6BCHpC,QAA2B,OAC3B,IAA2B,KAE3B,EAAA5J,WAAWzJ,UAAUsT,WAAa,EAAAA,Y,6BCHlC,QAA2B,OAC3B,IAAuB,OAEvB,EAAA7J,WAAWzJ,UAAX,MAA6B,EAAAuT,OAC7B,EAAA9J,WAAWzJ,UAAUuT,OAAS,EAAAA,Q,6BCJ9B,QAA2B,OAC3B,IAA2B,OAE3B,EAAA9J,WAAWzJ,UAAUwT,WAAa,EAAAA,Y,6BCHlC,QAA2B,OAC3B,IAA8B,OAE9B,EAAA/J,WAAWzJ,UAAU2R,cAAgB,EAAAA,e,6BCHrC,QAA2B,OAC3B,IAAuB,OAEvB,EAAAlI,WAAWzJ,UAAUiR,OAAS,EAAAA,Q,6BCH9B,QAA2B,OAC3B,IAA0B,OAE1B,EAAAxH,WAAWzJ,UAAUyT,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAA0B,OAE1B,EAAAhK,WAAWzJ,UAAU0T,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAA4B,MAE5B,EAAAjK,WAAWzJ,UAAU2T,YAAc,EAAAA,a,6BCHnC,QAA2B,OAC3B,IAAsB,OAEtB,EAAAlK,WAAWzJ,UAAU4T,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAAyB,OAEzB,EAAAnK,WAAWzJ,UAAU6T,SAAW,EAAAA,U,6BCHhC,QAA2B,OAC3B,IAA6B,OAE7B,EAAApK,WAAWzJ,UAAU8T,aAAe,EAAAA,c,6BCHpC,QAA2B,OAC3B,IAA+B,OAE/B,EAAArK,WAAWzJ,UAAU+T,eAAiB,EAAAA,gB,6BCHtC,QAA2B,OAC3B,IAAsB,OAEtB,EAAAtK,WAAWzJ,UAAU6O,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAA0B,OAE1B,EAAApF,WAAWzJ,UAAUgU,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAA8B,OAE9B,EAAAvK,WAAWzJ,UAAUiU,cAAgB,EAAAA,e,6BCJrC,QAA2B,OAC3B,IAAyB,OAEzB,EAAAxK,WAAWzJ,UAAUkU,SAAW,EAAAA,U,6BCFhC,QAA2B,OAC3B,IAAqC,OAErC,EAAAzK,WAAWzJ,UAAUmU,qBAAuB,EAAAA,sB,6BCH5C,QAA2B,OAC3B,IAAwC,OAExC,EAAA1K,WAAWzJ,UAAUoU,wBAA0B,EAAAA,yB,6BCH/C,QAA2B,OAC3B,IAAoB,OAEpB,EAAA3K,WAAWzJ,UAAX,GAA0B,EAAAqU,IAC1B,EAAA5K,WAAWzJ,UAAUqU,IAAM,EAAAA,K,6BCJ3B,QAA2B,OAC3B,IAA0B,MAE1B,EAAA5K,WAAWzJ,UAAUsU,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAAsB,OAEtB,EAAA7K,WAAWzJ,UAAUuU,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAAwB,MAExB,EAAA9K,WAAWzJ,UAAUwU,QAAU,EAAAA,S,6BCH/B,QAA2B,OAC3B,IAA2B,OAE3B,EAAA/K,WAAWzJ,UAAUyU,WAAa,EAAAA,Y,6BCHlC,QAA2B,OAC3B,IAAuB,OAEvB,EAAAhL,WAAWzJ,UAAU0U,OAAS,EAAAA,Q,6BCH9B,QAA2B,OAC3B,IAAuB,OAEvB,EAAAjL,WAAWzJ,UAAU2U,OAAS,EAAAA,Q,6BCH9B,QAA2B,OAC3B,IAAyB,OAEzB,EAAAlL,WAAWzJ,UAAX,QAA+B,EAAA4U,SAC/B,EAAAnL,WAAWzJ,UAAU4U,SAAW,EAAAA,U,6BCJhC,QAA2B,OAC3B,IAAqB,OAErB,EAAAnL,WAAWzJ,UAAU6U,KAAO,EAAAA,M,6BCH5B,QAA2B,OAC3B,IAA0B,OAE1B,EAAApL,WAAWzJ,UAAUyF,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAAsB,OAEtB,EAAAgE,WAAWzJ,UAAU8U,MAAa,EAAAA,O,6BCHlC,QAA2B,OAC3B,IAAwB,OAExB,EAAArL,WAAWzJ,UAAU+U,QAAe,EAAAA,S,6BCHpC,QAA2B,OAC3B,IAA+B,KAE/B,EAAAtL,WAAWzJ,UAAUgV,eAAiB,EAAAA,gB,6BCHtC,QAA2B,OAC3B,IAAwB,OAExB,EAAAvL,WAAWzJ,UAAUiV,QAAU,EAAAA,S,6BCH/B,QAA2B,OAC3B,IAAqB,OAErB,EAAAxL,WAAWzJ,UAAUkV,KAAY,EAAAA,M,4BCHjC,QAA2B,OAC3B,IAAyB,MAEzB,EAAAzL,WAAWzJ,UAAX,IAA2B,EAAAmV,SAC3B,EAAA1L,WAAWzJ,UAAUoV,QAAU,EAAAD,U,6BCJ/B,QAA2B,OAC3B,IAAoB,OAEpB,EAAA1L,WAAWzJ,UAAUqV,IAAM,EAAAA,K,6BCH3B,QAA2B,OAC3B,IAAsB,OAEtB,EAAA5L,WAAWzJ,UAAUsV,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAA4B,OAE5B,EAAA7L,WAAWzJ,UAAUuV,YAAc,EAAAA,a,6BCHnC,QAA2B,OAC3B,IAAoB,OAEpB,EAAA9L,WAAWzJ,UAAUsN,IAAM,EAAAA,K,4BCH3B,QAA2B,OAC3B,IAAsB,OAEtB,EAAA7D,WAAWzJ,UAAUsS,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAAyB,OAEzB,EAAA7I,WAAWzJ,UAAUwV,SAAW,EAAAA,U,6BCHhC,QAA2B,OAC3B,IAAyB,OAEzB,EAAA/L,WAAWzJ,UAAUyV,SAAgB,EAAAA,SACrC,EAAAhM,WAAWzJ,UAAU0V,QAAe,EAAAD,U,6BCJpC,QAA2B,OAC3B,IAA2B,MAE3B,EAAAhM,WAAWzJ,UAAU2V,UAAiB,EAAAC,WACtC,EAAAnM,WAAWzJ,UAAU4V,WAAkB,EAAAA,Y,2BCJvC,QAA2B,OAC3B,IAA0B,OAE1B,EAAAnM,WAAWzJ,UAAU6V,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAAoB,OAEpB,EAAApM,WAAWzJ,UAAU8V,IAAM,EAAAA,K,6BCH3B,QAA2B,OAC3B,IAA0B,OAE1B,EAAArM,WAAWzJ,UAAU+V,UAAiB,EAAAA,W,6BCHtC,QAA2B,OAC3B,IAA0B,OAE1B,EAAAtM,WAAWzJ,UAAUgW,UAAY,EAAAA,W,6BCJjC,QAA2B,OAC3B,IAAkC,OAElC,EAAAvM,WAAWzJ,UAAUwS,kBAAoB,EAAAA,mB,6BCFzC,QAA2B,OAC3B,IAAyB,OAEzB,EAAA/I,WAAWzJ,UAAUiW,SAAW,EAAAA,U,6BCHhC,QAA2B,OAC3B,IAA0B,OAE1B,EAAAxM,WAAWzJ,UAAUkW,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAAsB,OAEtB,EAAAzM,WAAWzJ,UAAUmW,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAAwB,OAExB,EAAA1M,WAAWzJ,UAAUoW,QAAe,EAAAA,S,6BCHpC,QAA2B,OAC3B,IAAgC,OAEhC,EAAA3M,WAAWzJ,UAAUqW,gBAAkB,EAAAA,iB,6BCHvC,QAA2B,OAC3B,IAA4B,OAE5B,EAAA5M,WAAWzJ,UAAUsW,YAAc,EAAAA,a,6BCHnC,QAA2B,OAC3B,IAA8B,OAE9B,EAAA7M,WAAWzJ,UAAUuW,cAAgB,EAAAA,e,6BCHrC,QAA2B,OAC3B,IAAqB,OAErB,EAAA9M,WAAWzJ,UAAU0S,KAAO,EAAAA,M,6BCH5B,QAA2B,OAC3B,IAAuB,OAEvB,EAAAjJ,WAAWzJ,UAAUuR,OAAS,EAAAA,Q,6BCH9B,QAA2B,OAC3B,IAAuB,OAEvB,EAAA9H,WAAWzJ,UAAUwW,OAAS,EAAAA,Q,6BCH9B,QAA2B,OAC3B,IAA2B,OAE3B,EAAA/M,WAAWzJ,UAAUyW,WAAa,EAAAA,Y,6BCHlC,QAA2B,OAC3B,IAAsB,OAEtB,EAAAhN,WAAWzJ,UAAU0W,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAA0B,OAE1B,EAAAjN,WAAWzJ,UAAU2W,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAAuB,OAEvB,EAAAlN,WAAWzJ,UAAU4W,OAAS,EAAAA,Q,6BCH9B,QAA2B,OAC3B,IAA2B,OAE3B,EAAAnN,WAAWzJ,UAAU6W,WAAa,EAAAA,Y,6BCHlC,QAA2B,OAE3B,IAAqB,OAErB,EAAApN,WAAWzJ,UAAU8W,KAAO,EAAAA,M,6BCJ5B,QAA2B,OAC3B,IAA8B,MAE9B,EAAArN,WAAWzJ,UAAU+W,cAAgB,EAAAA,e,6BCHrC,QAA2B,OAC3B,IAAsB,OAEtB,EAAAtN,WAAWzJ,UAAUgX,MAAQ,EAAAA,O,6BCH7B,QAA2B,OAC3B,IAA4B,OAE5B,EAAAvN,WAAWzJ,UAAUiX,YAAc,EAAAA,a,6BCHnC,QAA2B,OAC3B,IAAuB,OAEvB,EAAAxN,WAAWzJ,UAAUkX,OAAS,EAAAA,Q,4BCH9B,QAA2B,OAC3B,IAAqB,MAErB,EAAAzN,WAAWzJ,UAAUmX,KAAO,EAAAA,M,6BCJ5B,QAA2B,OAC3B,IAAyB,OAEzB,EAAA1N,WAAWzJ,UAAUoX,SAAW,EAAAA,U,6BCFhC,QAA2B,OAC3B,IAA0B,OAE1B,EAAA3N,WAAWzJ,UAAUqX,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAA0B,OAE1B,EAAA5N,WAAWzJ,UAAUsX,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAA0B,OAE1B,EAAA7N,WAAWzJ,UAAUuX,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAA4B,OAE5B,EAAA9N,WAAWzJ,UAAUwX,YAAc,EAAAA,a,6BCHnC,QAA2B,OAC3B,IAAwB,OAExB,EAAA/N,WAAWzJ,UAAX,OAA8B,EAAAyX,QAC9B,EAAAhO,WAAWzJ,UAAUyX,QAAU,EAAAA,S,6BCJ/B,QAA2B,OAC3B,IAA0B,MAE1B,EAAAhO,WAAWzJ,UAAU0X,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAA4B,OAE5B,EAAAjO,WAAWzJ,UAAU2X,YAAc,EAAAA,a,6BCHnC,QAA2B,OAC3B,IAAqB,OAErB,EAAAlO,WAAWzJ,UAAU4X,KAAO,EAAAA,M,6BCJ5B,QAA2B,OAC3B,IAAyB,OAEzB,EAAAnO,WAAWzJ,UAAU6X,SAAW,EAAAA,U,4BCFhC,QAA2B,OAC3B,IAA0B,OAE1B,EAAApO,WAAWzJ,UAAU8X,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAA0B,OAE1B,EAAArO,WAAWzJ,UAAU+X,UAAY,EAAAA,W,6BCHjC,QAA2B,OAC3B,IAAyB,OAEzB,EAAAtO,WAAWzJ,UAAUgY,SAAW,EAAAA,U,6BCHhC,QAA2B,OAC3B,IAA6B,OAE7B,EAAAvO,WAAWzJ,UAAUiY,aAAe,EAAAA,c,6BCHpC,QAA2B,OAC3B,IAA6B,OAE7B,EAAAxO,WAAWzJ,UAAUkY,aAAe,EAAAA,c,6BCHpC,QAA2B,OAC3B,IAAwB,OAExB,EAAAzO,WAAWzJ,UAAUmY,QAAU,EAAAA,S,6BCH/B,QAA2B,OAC3B,IAA4B,OAE5B,EAAA1O,WAAWzJ,UAAUoY,YAAc,EAAAA,a,6BCJnC,QAA2B,OAC3B,IAA0B,OAE1B,EAAA3O,WAAWzJ,UAAUqY,UAAY,EAAAA,W,6BCFjC,QAA2B,OAC3B,IAAwB,OAExB,EAAA5O,WAAWzJ,UAAUsY,QAAU,EAAAA,S,0CCH/B,QAA2B,OAC3B,IAAuB,OAEvB,EAAA7O,WAAWzJ,UAAUuY,OAAS,EAAAA,Q,6BCH9B,QAA2B,OAC3B,IAA4B,OAE5B,EAAA9O,WAAWzJ,UAAUwY,YAAc,EAAAA,a,6BCHnC,QAA2B,OAC3B,IAA2B,OAE3B,EAAA/O,WAAWzJ,UAAUoM,WAAa,EAAAA,Y,6BCHlC,QAA2B,OAC3B,IAA6B,OAE7B,EAAA3C,WAAWzJ,UAAUyY,aAAe,EAAAA,c,6BCHpC,QAA2B,OAC3B,IAA2B,OAE3B,EAAAhP,WAAWzJ,UAAU0Y,WAAa,EAAAA,Y,6BCHlC,QAA2B,OAC3B,IAA+B,OAE/B,EAAAjP,WAAWzJ,UAAU2Y,eAAiB,EAAAA,gB,6BCHtC,QAA2B,OAC3B,IAAyB,OAEzB,EAAAlP,WAAWzJ,UAAU+S,IAAM,EAAA6F,U,6BCH3B,QAA2B,OAC3B,IAAuB,OAEvB,EAAAnP,WAAWzJ,UAAU6Y,OAAS,EAAAA,Q,oOCH9B,IAA2B,OAC3B,IAAiC,OACjC,IAAgC,OAShC,cAmCE,WAAoBC,EAAiCzM,GACnD,aADkB,KAAAyM,YAAiC,KAAAzM,YAE9CA,GAAkC,IAArByM,EAAUla,SAC1BwG,KAAK+E,WAAY,EACjB/E,KAAKvE,MAAQiY,EAAU,IAoB7B,OA3D4C,OAEnC,EAAAjN,OAAP,SAAiBiN,EAAyBzM,GACxC,IAAMzN,EAASka,EAAUla,OACzB,OAAe,IAAXA,EACK,IAAI,EAAAma,gBACS,IAAXna,EACF,IAAI,EAAAoa,iBAAyBF,EAAU,GAAIzM,GAE3C,IAAI4M,EAAoBH,EAAWzM,IAIvC,EAAA6M,SAAP,SAAgBpK,GACN,IAAAgK,EAAA,EAAAA,UAAWhV,EAAA,EAAAA,MAAOlF,EAAA,EAAAA,OAAQ6I,EAAA,EAAAA,WAE9BA,EAAWU,SAIXrE,GAASlF,EACX6I,EAAWM,YAIbN,EAAW/G,KAAKoY,EAAUhV,IAE1BgL,EAAMhL,MAAQA,EAAQ,EAEfsB,KAAMuJ,SAASG,MAca,YAAAtH,WAAA,SAAWC,GAC9C,IACQqR,EAAR,KAAQA,UAAWzM,EAAnB,KAAmBA,UACbzN,EAASka,EAAUla,OAEzB,GAAIyN,EACF,OAAOA,EAAUsC,SAASsK,EAAoBC,SAAU,EAAG,CACzDJ,YAAWhV,MANH,EAMUlF,SAAQ6I,eAG5B,IAAK,IAAI5I,EAAI,EAAGA,EAAID,IAAW6I,EAAWU,OAAQtJ,IAChD4I,EAAW/G,KAAKoY,EAAUja,IAE5B4I,EAAWM,YAGjB,EA3DA,CAA4C,EAAA0B,YAA/B,EAAAwP,oBAAmB,G,oOCXhC,IAA2B,OAC3B,IAAiC,OACjC,IAAgC,OAEhC,IAA4B,OAQ5B,cA0FE,WAAoBE,EAAoB9M,GACtC,aADkB,KAAA8M,QAAoB,KAAA9M,YAEjCA,GAA8B,IAAjB8M,EAAMva,SACtBwG,KAAK+E,WAAY,EACjB/E,KAAKvE,MAAQsY,EAAM,IAqBzB,OAnHwC,OAE/B,EAAAtN,OAAP,SAAiBsN,EAAY9M,GAC3B,OAAO,IAAI+M,EAAgBD,EAAO9M,IA8C7B,EAAA3C,GAAP,W,IAAa,wDACX,IAAI2C,EAAwB8M,EAAMA,EAAMva,OAAS,GAC7C,EAAAya,YAAYhN,GACd8M,EAAMG,MAENjN,EAAY,KAGd,IAAM1N,EAAMwa,EAAMva,OAClB,OAAID,EAAM,EACD,IAAIya,EAAwBD,EAAO9M,GACzB,IAAR1N,EACF,IAAI,EAAAqa,iBAAyBG,EAAM,GAAI9M,GAEvC,IAAI,EAAA0M,gBAAmB1M,IAI3B,EAAA6M,SAAP,SAAgBpK,GAEN,IAAAqK,EAAA,EAAAA,MAAOrV,EAAA,EAAAA,MAAO8P,EAAA,EAAAA,MAAOnM,EAAA,EAAAA,WAEzB3D,GAAS8P,EACXnM,EAAWM,YAIbN,EAAW/G,KAAKyY,EAAMrV,IAElB2D,EAAWU,SAIf2G,EAAMhL,MAAQA,EAAQ,EAEfsB,KAAMuJ,SAASG,MAca,YAAAtH,WAAA,SAAWC,GAC9C,IACM0R,EAAQ/T,KAAK+T,MACbvF,EAAQuF,EAAMva,OACdyN,EAAYjH,KAAKiH,UAEvB,GAAIA,EACF,OAAOA,EAAUsC,SAASyK,EAAgBF,SAAU,EAAG,CACrDC,QAAOrV,MAPC,EAOM8P,QAAOnM,eAGvB,IAAK,IAAI5I,EAAI,EAAGA,EAAI+U,IAAUnM,EAAWU,OAAQtJ,IAC/C4I,EAAW/G,KAAKyY,EAAMta,IAExB4I,EAAWM,YAGjB,EAnHA,CAAwC,EAAA0B,YAA3B,EAAA2P,gBAAe,G,oOCb5B,IAA2B,OAI3B,IAAyB,OACzB,IAA4B,MAC5B,IAA6B,OAO7B,cAsKE,WAAoBG,EACAC,EACAC,EACA1J,EACA1D,GAClB,aALkB,KAAAkN,eACA,KAAAC,WACA,KAAAC,OACA,KAAA1J,UACA,KAAA1D,YA8EtB,OAxPgD,OA8JvC,EAAAR,OAAP,SAAiB6N,EACAF,EACAnN,GACf,YAFe,IAAAmN,WAAA,GAER,W,IAAoB,wDACzB,OAAO,IAAIG,EAA2BD,EAAWF,EAAUC,EAAMrU,KAAMiH,KAYtC,YAAA7E,WAAA,SAAWC,GAC9C,IAAM8R,EAAenU,KAAKmU,aACpBE,EAAOrU,KAAKqU,KACZpN,EAAYjH,KAAKiH,UACnB4C,EAAU7J,KAAK6J,QAEnB,GAAK5C,EA6BH,OAAOA,EAAUsC,SAASgL,EAAwBT,SAAU,EAAG,CAAE3O,OAAQnF,KAAMqC,aAAYsI,QAAS3K,KAAK2K,UA5BzG,IAAKd,EAAS,CACZA,EAAU7J,KAAK6J,QAAU,IAAI,EAAAhH,aAC7B,IAAM2R,EAAU,SAASC,I,IAAqB,wDAC5C,IAAMtP,EAAesP,EAAWtP,OACxBiP,EAAA,EAAAA,SAAUvK,EAAA,EAAAA,QAClB,GAAIuK,EAAU,CACZ,IAAM,EAAS,EAAA5I,SAAS4I,GAAUM,MAAM1U,KAAM2U,GAC1C,IAAW,EAAAlJ,YACb5B,EAAQtH,MAAM,EAAAkJ,YAAY5O,IAE1BgN,EAAQvO,KAAK,GACbuO,EAAQlH,iBAGVkH,EAAQvO,KAAKqZ,EAAUnb,QAAU,EAAImb,EAAU,GAAKA,GACpD9K,EAAQlH,YAIN6R,EAASrP,OAASnF,KAET,EAAAwL,SAAS2I,GAAcO,MAAM1U,KAAK2K,QAAS0J,EAAKxI,OAAO2I,MACvD,EAAA/I,aACb5B,EAAQtH,MAAM,EAAAkJ,YAAY5O,GAG9B,OAAOgN,EAAQ/E,UAAUzC,IAMtB,EAAAyR,SAAP,SAAmBpK,GACjB,IAAMkL,EAA2B5U,KACzBmF,EAAA,EAAAA,OAAQ9C,EAAA,EAAAA,WAAYsI,EAAA,EAAAA,QACpBwJ,EAAA,EAAAA,aAAcE,EAAA,EAAAA,KAAMpN,EAAA,EAAAA,UACxB4C,EAAU1E,EAAO0E,QAErB,IAAKA,EAAS,CACZA,EAAU1E,EAAO0E,QAAU,IAAI,EAAAhH,aAE/B,IAAM2R,EAAU,SAASC,I,IAAqB,wDAC5C,IAAMtP,EAAesP,EAAWtP,OACxBiP,EAAA,EAAAA,SAAUvK,EAAA,EAAAA,QAClB,GAAIuK,EAAU,CACZ,IAAM,EAAS,EAAA5I,SAAS4I,GAAUM,MAAM1U,KAAM2U,GAC1C,IAAW,EAAAlJ,YACbmJ,EAAKrP,IAAI0B,EAAUsC,SAASsL,EAAe,EAAG,CAAEnZ,IAAK,EAAA+P,YAAY5O,EAAGgN,aAEpE+K,EAAKrP,IAAI0B,EAAUsC,SAASuL,EAAc,EAAG,CAAErZ,MAAO,EAAQoO,iBAE3D,CACL,IAAMpO,EAAQkZ,EAAUnb,QAAU,EAAImb,EAAU,GAAKA,EACrDC,EAAKrP,IAAI0B,EAAUsC,SAASuL,EAAc,EAAG,CAAErZ,QAAOoO,eAIpD2K,EAASrP,OAASA,EAET,EAAAqG,SAAS2I,GAAcO,MAAM/J,EAAS0J,EAAKxI,OAAO2I,MAClD,EAAA/I,aACb5B,EAAQtH,MAAM,EAAAkJ,YAAY5O,GAI9B+X,EAAKrP,IAAIsE,EAAQ/E,UAAUzC,KAE/B,EAxPA,CAAgD,EAAAgC,YA8PhD,SAASyQ,EAAgBC,GACf,IAAAtZ,EAAA,EAAAA,MAAOoO,EAAA,EAAAA,QACfA,EAAQvO,KAAKG,GACboO,EAAQlH,WAOV,SAASkS,EAAiBE,GAChB,IAAArZ,EAAA,EAAAA,IAAK,EAAAmO,QACLtH,MAAM7G,GA1QH,EAAA6Y,wBAAuB,G,oOCbpC,IAA2B,OAK3B,IAAyB,OACzB,IAA4B,MAC5B,IAA6B,OAO7B,cAoJE,WAAoBJ,EACAC,EACAC,EACA1J,EACD1D,GACjB,aALkB,KAAAkN,eACA,KAAAC,WACA,KAAAC,OACA,KAAA1J,UACD,KAAA1D,YA8CrB,OAtMoD,OA4I3C,EAAAR,OAAP,SAAiB6N,EACAF,EACAnN,GACf,YAFe,IAAAmN,WAAA,GAER,W,IAAoB,wDACzB,OAAO,IAAIY,EAA+BV,EAAWF,EAAUC,EAAMrU,KAAMiH,KAY1C,YAAA7E,WAAA,SAAWC,GAC9C,IAAM8R,EAAenU,KAAKmU,aACpBE,EAAOrU,KAAKqU,KACZpN,EAAYjH,KAAKiH,UACnB4C,EAAU7J,KAAK6J,QAEnB,GAAK5C,EAiCH,OAAOA,EAAUsC,SAASuK,EAAU,EAAG,CAAE3O,OAAQnF,KAAMqC,aAAYsI,QAAS3K,KAAK2K,UAhCjF,IAAKd,EAAS,CACZA,EAAU7J,KAAK6J,QAAU,IAAI,EAAAhH,aAC7B,IAAM2R,EAAU,SAASC,I,IAAqB,wDAC5C,IAAMtP,EAAesP,EAAWtP,OACxBiP,EAAA,EAAAA,SAAUvK,EAAA,EAAAA,QACZnO,EAAMiZ,EAAUM,QAEtB,GAAIvZ,EACFmO,EAAQtH,MAAM7G,QACT,GAAI0Y,EAAU,CACnB,IAAM,EAAS,EAAA5I,SAAS4I,GAAUM,MAAM1U,KAAM2U,GAC1C,IAAW,EAAAlJ,YACb5B,EAAQtH,MAAM,EAAAkJ,YAAY5O,IAE1BgN,EAAQvO,KAAK,GACbuO,EAAQlH,iBAGVkH,EAAQvO,KAAKqZ,EAAUnb,QAAU,EAAImb,EAAU,GAAKA,GACpD9K,EAAQlH,YAIN6R,EAASrP,OAASnF,KAET,EAAAwL,SAAS2I,GAAcO,MAAM1U,KAAK2K,QAAS0J,EAAKxI,OAAO2I,MACvD,EAAA/I,aACb5B,EAAQtH,MAAM,EAAAkJ,YAAY5O,GAG9B,OAAOgN,EAAQ/E,UAAUzC,IAK/B,EAtMA,CAAoD,EAAAgC,YA8MpD,SAASyP,EAA4CpK,GACnD,IAAMkL,EAAuB5U,KACrBmF,EAAA,EAAAA,OAAQ9C,EAAA,EAAAA,WAAYsI,EAAA,EAAAA,QAE5B,IAAQwJ,EAAA,EAAAA,aAAcE,EAAA,EAAAA,KAAMpN,EAAA,EAAAA,UACxB4C,EAAU1E,EAAO0E,QAErB,IAAKA,EAAS,CACZA,EAAU1E,EAAO0E,QAAU,IAAI,EAAAhH,aAE/B,IAAM2R,EAAU,SAASC,I,IAAqB,wDAC5C,IAAMtP,EAAesP,EAAWtP,OACxBiP,EAAA,EAAAA,SAAUvK,EAAA,EAAAA,QACZnO,EAAMiZ,EAAUM,QAEtB,GAAIvZ,EACFkZ,EAAKrP,IAAI0B,EAAUsC,SAASsL,EAAe,EAAG,CAAEnZ,MAAKmO,kBAChD,GAAIuK,EAAU,CACnB,IAAM,EAAS,EAAA5I,SAAS4I,GAAUM,MAAM1U,KAAM2U,GAC1C,IAAW,EAAAlJ,YACbmJ,EAAKrP,IAAI0B,EAAUsC,SAASsL,EAAe,EAAG,CAAEnZ,IAAK,EAAA+P,YAAY5O,EAAGgN,aAEpE+K,EAAKrP,IAAI0B,EAAUsC,SAASuL,EAAc,EAAG,CAAErZ,MAAO,EAAQoO,iBAE3D,CACL,IAAMpO,EAAQkZ,EAAUnb,QAAU,EAAImb,EAAU,GAAKA,EACrDC,EAAKrP,IAAI0B,EAAUsC,SAASuL,EAAc,EAAG,CAAErZ,QAAOoO,eAIpD2K,EAASrP,OAASA,EAET,EAAAqG,SAAS2I,GAAcO,MAAM/J,EAAS0J,EAAKxI,OAAO2I,MAClD,EAAA/I,aACbmJ,EAAKrP,IAAI0B,EAAUsC,SAASsL,EAAe,EAAG,CAAEnZ,IAAK,EAAA+P,YAAY5O,EAAGgN,aAIxE+K,EAAKrP,IAAIsE,EAAQ/E,UAAUzC,IAO7B,SAASyS,EAAgBC,GACf,IAAAtZ,EAAA,EAAAA,MAAOoO,EAAA,EAAAA,QACfA,EAAQvO,KAAKG,GACboO,EAAQlH,WAOV,SAASkS,EAAiBE,GAChB,IAAArZ,EAAA,EAAAA,IAAK,EAAAmO,QACLtH,MAAM7G,GAvQH,EAAAsZ,4BAA2B,G,oOCdxC,IAA2C,OAE3C,IAA2B,OAC3B,IAA2B,MAC3B,IAA4C,OAC5C,IAAgD,OAKhD,cAOE,WAAwD7P,EACA+P,GACtD,aAFsD,KAAA/P,SACA,KAAA+P,iBALZ,KAAAC,UAAoB,EAEhE,KAAAC,aAAc,EAuChB,OA5C8C,OAYP,YAAAhT,WAAA,SAAWC,GAC9C,OAAOrC,KAAKqV,aAAavQ,UAAUzC,IAGO,YAAAgT,WAAP,WACnC,IAAMxL,EAAU7J,KAAKsV,SAIrB,OAHKzL,IAAWA,EAAQlC,YACtB3H,KAAKsV,SAAWtV,KAAKkV,kBAEhBlV,KAAKsV,UAGd,YAAAC,QAAA,WACE,IAAIC,EAAaxV,KAAKyV,YAatB,OAZKD,IACHxV,KAAKoV,aAAc,GACnBI,EAAaxV,KAAKyV,YAAc,IAAI,EAAAhT,cACzB8C,IAAIvF,KAAKmF,OACjBL,UAAU,IAAI4Q,EAAsB1V,KAAKqV,aAAcrV,QACtDwV,EAAWzS,QACb/C,KAAKyV,YAAc,KACnBD,EAAa,EAAA/S,aAAaC,OAE1B1C,KAAKyV,YAAcD,GAGhBA,GAGT,YAAAG,SAAA,WACE,OAAO,aAAsB3V,OAEjC,EA5CA,CAA8C,EAAAqE,YAAjC,EAAAgE,sBAAqB,EA8ClC,IAAMuN,EAAwBvN,EAAsBzN,UAEvC,EAAAib,gCAAyD,CACpE5Q,SAAU,CAAExJ,MAAO,MACnB0Z,UAAW,CAAE1Z,MAAO,EAAGnB,UAAU,GACjCgb,SAAU,CAAE7Z,MAAO,KAAMnB,UAAU,GACnCmb,YAAa,CAAEha,MAAO,KAAMnB,UAAU,GACtC8H,WAAY,CAAE3G,MAAOma,EAAiBxT,YACtCgT,YAAa,CAAE3Z,MAAOma,EAAiBR,YAAa9a,UAAU,GAC9D+a,WAAY,CAAE5Z,MAAOma,EAAiBP,YACtCE,QAAS,CAAE9Z,MAAOma,EAAiBL,SACnCI,SAAU,CAAEla,MAAOma,EAAiBD,WAGtC,kBACE,WAAY9O,EACQiP,GAClB,YAAMjP,GADY,KAAAiP,cAyBtB,OA3BuC,OAK3B,YAAAvS,OAAV,SAAiB7H,GACfsE,KAAKmL,eACL,YAAM5H,OAAM,UAAC7H,IAEL,YAAAgI,UAAV,WACE1D,KAAK8V,YAAYV,aAAc,EAC/BpV,KAAKmL,eACL,YAAMzH,UAAS,YAEoB,YAAAyH,aAAA,WACnC,IAAM2K,EAAmB9V,KAAK8V,YAC9B,GAAIA,EAAa,CACf9V,KAAK8V,YAAc,KACnB,IAAMN,EAAaM,EAAYL,YAC/BK,EAAYX,UAAY,EACxBW,EAAYR,SAAW,KACvBQ,EAAYL,YAAc,KACtBD,GACFA,EAAW/R,gBAInB,EA3BA,CAAuC,EAAAmG,oBAgDvC,YAIE,WAAY/C,EACQiP,GAClB,YAAMjP,GADY,KAAAiP,cALc,OASG,YAAA3K,aAAA,WAE3B,IAAA2K,EAAA,KAAAA,YACR,GAAKA,EAAL,CAKA9V,KAAK8V,YAAc,KACnB,IAAMH,EAAkBG,EAAaX,UACrC,GAAIQ,GAAY,EACd3V,KAAKwV,WAAa,UAKpB,GADOM,EAAaX,UAAYQ,EAAW,EACvCA,EAAW,EACb3V,KAAKwV,WAAa,SADpB,CA4BQ,IAAAA,EAAA,KAAAA,WACFO,EAA0BD,EAAaL,YAC7CzV,KAAKwV,WAAa,MAEdO,GAAsBP,GAAcO,IAAqBP,GAC3DO,EAAiBtS,oBA7CjBzD,KAAKwV,WAAa,MAbxB,CAAoC,EAAA5R,a,oOCtHpC,IAAkD,OAIlD,IAAkC,OAClC,IAAgC,OAMhC,cAoDE,WAAoBoS,GAClB,aADkB,KAAAA,oBAOtB,OA3DwC,OAgD/B,EAAAvP,OAAP,SAAiBuP,GACf,OAAO,IAAIC,EAAgBD,IAOQ,YAAA5T,WAAA,SAAWC,GAC9C,OAAO,IAAI6T,EAAgB7T,EAAYrC,KAAKgW,oBAEhD,EA3DA,CAAwC,EAAA3R,YAA3B,EAAA4R,gBAAe,EA6D5B,kBACE,WAAYpP,EACQ5E,GAClB,YAAM4E,GADY,KAAA5E,UAElBjC,KAAKmW,WAiBT,OArBiC,OAOvB,YAAAA,SAAR,WACE,IACEnW,KAAKoW,eACL,MAAO1a,GACPsE,KAAKuD,OAAO7H,KAIR,YAAA0a,aAAR,WACE,IAAMC,EAASrW,KAAKiC,UAChBoU,GACFrW,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMqW,KAGvC,EArBA,CAAiC,EAAAvP,kB,oOC1DjC,cAsDE,WAAoBG,GAClB,aADkB,KAAAA,YActB,OApEwC,OA6C/B,EAAAR,OAAP,SAAiBQ,GACf,OAAO,IAAI0M,EAAmB1M,IAGzB,EAAA6M,SAAP,SAAmBiB,GACT,EAAA1S,WACGM,YAOwB,YAAAP,WAAA,SAAWC,GAE9C,IAAM4E,EAAYjH,KAAKiH,UAEvB,GAAIA,EACF,OAAOA,EAAUsC,SAASoK,EAAgBG,SAAU,EAAG,CAAEzR,eAEzDA,EAAWM,YAGjB,EApEA,CAZA,EAA2B,OAYa0B,YAA3B,EAAAsP,gBAAe,G,oOCC5B,cAmDE,WAAmBpR,EAAoB0E,GACrC,aADiB,KAAA1E,QAAoB,KAAA0E,YAkBzC,OArEqC,OA0C5B,EAAAR,OAAP,SAAclE,EAAY0E,GACxB,OAAO,IAAIsP,EAAgBhU,EAAO0E,IAG7B,EAAA6M,SAAP,SAAgBiB,GACN,IAAAxS,EAAA,EAAAA,MAAO,EAAAF,WACJE,MAAMA,IAOkB,YAAAH,WAAA,SAAWC,GAC9C,IAAME,EAAQvC,KAAKuC,MACb0E,EAAYjH,KAAKiH,UAIvB,GAFA5E,EAAWmD,oBAAqB,EAE5ByB,EACF,OAAOA,EAAUsC,SAASgN,EAAgBzC,SAAU,EAAG,CACrDvR,QAAOF,eAGTA,EAAWE,MAAMA,IAGvB,EArEA,CAdA,EAA2B,OAcU8B,YAAxB,EAAAkS,gBAAe,G,oOCf5B,IAAkD,OAGlD,IAAgC,OAChC,IAAwB,OAExB,IAAkC,OAClC,IAAgC,OAQhC,cACE,WAAoBC,EACAC,GAClB,aAFkB,KAAAD,UACA,KAAAC,iBAqJtB,OAvJ2C,OA2HlC,EAAAhQ,OAAP,W,IAAiB,wDAGf,GAAgB,OAAZ+P,GAAyC,IAArBrM,UAAU3Q,OAChC,OAAO,IAAI,EAAAma,gBAGb,IAAI8C,EAAiD,KAWrD,MAV2C,mBAAhCD,EAAQA,EAAQhd,OAAS,KAClCid,EAAiDD,EAAQtC,OAKpC,IAAnBsC,EAAQhd,QAAgB,EAAAI,QAAQ4c,EAAQ,MAC1CA,EAA6CA,EAAQ,IAGhC,IAAnBA,EAAQhd,OACH,IAAI,EAAAma,gBAGN,IAAI+C,EAAsDF,EAASC,IAGvC,YAAArU,WAAA,SAAWC,GAC9C,OAAO,IAAIsU,EAAmBtU,EAAYrC,KAAKwW,QAASxW,KAAKyW,iBAEjE,EAvJA,CAA2C,EAAApS,YAA9B,EAAAqS,mBAAkB,EA8J/B,kBAME,WAAY7P,EACQ2P,EACAC,GAClB,YAAM5P,GAFY,KAAA2P,UACA,KAAAC,iBAPZ,KAAAG,UAAY,EAGZ,KAAAC,WAAa,EAOnB,IAAMtd,EAAMid,EAAQhd,OACpBwG,KAAK8W,MAAQvd,EACbyG,KAAKvC,OAAS,IAAI9D,MAAMJ,GAExB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAM0L,EAASqR,EAAQ/c,GACjBsd,EAAoB,EAAAT,kBAAkBtW,KAAMmF,EAAQ,KAAM1L,GAE5Dsd,IACKA,EAAmB3T,WAAa3J,EACvCuG,KAAKuF,IAAIwR,KAsCjB,OA3DoC,OA0BlC,YAAAzT,WAAA,SAAWH,EAAiBuD,EACjBtD,EAAoBuD,EACpBC,GACT5G,KAAKvC,OAAO2F,GAAcsD,EACfE,EAAUoQ,YACbpQ,EAAUoQ,WAAY,EAC5BhX,KAAK6W,eAIT,YAAAlT,eAAA,SAAeiD,GACb,IAAMC,EAAc7G,KAAK6G,YACzB,OAAQgQ,EAAA,EAAAA,WAAYJ,EAAA,EAAAA,eAAgBhZ,EAAA,EAAAA,OAC9BlE,EAAMkE,EAAOjE,OAEnB,GAAWoN,EAAUoQ,WAOrB,GAFAhX,KAAK4W,YAED5W,KAAK4W,YAAcrd,EAAvB,CAIA,GAAIsd,IAAetd,EAAK,CACtB,IAAMkC,EAAQgb,EAAiBA,EAAe/B,MAAM1U,KAAMvC,GAAUA,EACpEoJ,EAAYvL,KAAKG,GAGnBoL,EAAYlE,iBAfVkE,EAAYlE,YAiBlB,EA3DA,CAAoC,EAAAmE,kB,oOC7KpC,IAA2B,OAC3B,IAAyB,OACzB,IAA2B,OAC3B,IAA4B,MAC5B,IAA6B,OAGvB3K,EAAqB5B,OAAOK,UAAUuB,SAgD5C,cAwIE,WAAoB8a,EACAC,EACA9C,EACA+C,GAClB,aAJkB,KAAAF,YACA,KAAAC,YACA,KAAA9C,WACA,KAAA+C,UAiDtB,OA5L4C,OA6HnC,EAAA1Q,OAAP,SAAiBxM,EACAid,EACAC,EACA/C,GAKf,OAJI,EAAAxJ,WAAWuM,KACb/C,EAAgB+C,EAChBA,OAAUvY,GAEL,IAAIwY,EAAoBnd,EAAQid,EAAW9C,EAAU+C,IAU/C,EAAAE,kBAAf,SAAoCJ,EACAC,EACA1C,EACAnS,EACA8U,GAClC,IAAI1T,EACJ,GAhLJ,SAAoBwT,GAClB,QAASA,GAA0C,sBAA7B9a,EAASd,KAAK4b,GA+K9BK,CAAWL,IA5KnB,SAA0BA,GACxB,QAASA,GAA0C,4BAA7B9a,EAASd,KAAK4b,GA2KLM,CAAiBN,GAC5C,IAAK,IAAIxd,EAAI,EAAGF,EAAM0d,EAAUzd,OAAQC,EAAIF,EAAKE,IAC/C2d,EAAoBC,kBAAkBJ,EAAUxd,GAAIyd,EAAW1C,EAASnS,EAAY8U,QAEjF,GA5KX,SAAuBF,GACrB,QAASA,GAAmD,mBAA/BA,EAAUO,kBAA4E,mBAAlCP,EAAUQ,oBA2K9EC,CAAcT,GAAY,CACnC,IAAM,EAASA,EACfA,EAAUO,iBAAiBN,EAA0B1C,EAAkB2C,GACvE1T,EAAc,WAAM,SAAOgU,oBAAoBP,EAA0B1C,EAArD,SACf,GA5LX,SAAmCyC,GACjC,QAASA,GAAqC,mBAAjBA,EAAUU,IAA8C,mBAAlBV,EAAUW,IA2LhEC,CAA0BZ,GAAY,CAC/C,IAAM,EAASA,EACfA,EAAUU,GAAGT,EAAW1C,GACxB/Q,EAAc,WAAM,SAAOmU,IAAIV,EAAX,QACf,KAxMX,SAAiCD,GAC/B,QAASA,GAA8C,mBAA1BA,EAAUa,aAAkE,mBAA7Bb,EAAUc,eAuMzEC,CAAwBf,GAKjC,MAAM,IAAIld,UAAU,wBAJpB,IAAM,EAASkd,EACfA,EAAUa,YAAYZ,EAAW1C,GACjC/Q,EAAc,WAAM,SAAOsU,eAAeb,EAAtB,IAKtB7U,EAAWkD,IAAI,IAAI,EAAA9C,aAAagB,KAGG,YAAArB,WAAA,SAAWC,GAC9C,IAAM4U,EAAYjX,KAAKiX,UACjBC,EAAYlX,KAAKkX,UACjBC,EAAUnX,KAAKmX,QACf/C,EAAWpU,KAAKoU,SAClBI,EAAUJ,EAAW,W,IAAC,wDACxB,IAAIiC,EAAS,EAAA7K,SAAS4I,GAAS,aAAIC,GAC/BgC,IAAW,EAAA5K,YACbpJ,EAAWE,MAAM,EAAAkJ,YAAY5O,GAE7BwF,EAAW/G,KAAK+a,IAEhB,SAACxZ,GAAW,OAAAwF,EAAW/G,KAAX,IAEhB8b,EAAoBC,kBAAkBJ,EAAWC,EAAW1C,EAASnS,EAAY8U,IAErF,EA5LA,CAA4C,EAAA9S,YAA/B,EAAA+S,oBAAmB,G,oOCvDhC,IAA2B,OAC3B,IAA2B,OAC3B,IAA6B,OAQ7B,cAwDE,WAAoBa,EACAC,EACA9D,GAClB,aAHkB,KAAA6D,aACA,KAAAC,gBACA,KAAA9D,WAyCtB,OAnGmD,OAkD1C,EAAA3N,OAAP,SAAiBwR,EACAC,EACA9D,GACf,OAAO,IAAI+D,EAA2BF,EAAYC,EAAe9D,IAS9B,YAAAhS,WAAA,SAAWC,GAAX,WAC7B6V,EAAgBlY,KAAKkY,cAErB1D,EAAYxU,KAAKoU,SAAW,W,IAAC,wDACjC,EAAKgE,cAAc/V,EAAYgS,IAC7B,SAASxX,GAAUwF,EAAW/G,KAAKuB,IAEjCwb,EAAWrY,KAAKsY,gBAAgB9D,EAASnS,GAE1C,EAAAuI,WAAWsN,IAIhB7V,EAAWkD,IAAI,IAAI,EAAA9C,cAAa,WAE9ByV,EAAc1D,EAAS6D,QAInB,YAAAD,cAAR,SAAsB/V,EAA2BgS,GAC/C,IACE,IAAMgC,EAAYrW,KAAKoU,SAAQ,MAAbpU,KAAiBqU,GACnChS,EAAW/G,KAAK+a,GAElB,MAAOxZ,GACLwF,EAAWE,MAAM1F,KAIb,YAAAyb,gBAAR,SAAwB9D,EAA2B+D,GACjD,IACE,OAAOvY,KAAKiY,WAAWzD,IAAY,KAErC,MAAO3X,GACL0b,EAAgBhW,MAAM1F,KAG5B,EAnGA,CAAmD,EAAAwH,YAAtC,EAAA8T,2BAA0B,G,wcCVvC,IAAwB,OACxB,IAA4B,OAC5B,IAA0B,OAC1B,IAAkC,MAClC,IAAkC,OAClC,IAAgC,OAChC,IAAoC,OAGpC,IAA4C,IAC5C,IAA4C,OAE5C,IAAoC,OACpC,IAAgD,MAOhD,cACE,WAAoBK,EAAiCvR,GACnD,YAAM,MADY,KAAAuR,MAAiC,KAAAvR,YA6FvD,OA9FuC,OAgE9B,EAAAR,OAAP,SAAiB+R,EAAyBvR,GACxC,GAAW,MAAPuR,EAAa,CACf,GAAsC,mBAA3BA,EAAI,cACb,OAAIA,aAAe,EAAAnU,aAAe4C,EACzBuR,EAEF,IAAIC,EAAkBD,EAAKvR,GAC7B,GAAI,EAAArN,QAAQ4e,GACjB,OAAO,IAAI,EAAAxE,gBAAmBwE,EAAKvR,GAC9B,GAAI,EAAAyR,UAAaF,GACtB,OAAO,IAAI,EAAAG,kBAAqBH,EAAKvR,GAChC,GAAoC,mBAAzBuR,EAAI,aAAkD,iBAARA,EAC9D,OAAO,IAAI,EAAAI,mBAAsBJ,EAAKvR,GACjC,GAAI,EAAA4R,YAAYL,GACrB,OAAO,IAAI,EAAA3E,oBAAoB2E,EAAKvR,GAIxC,MAAM,IAAIlN,WAAmB,OAARye,GAAA,EAAuBA,IAAOA,GAAO,uBAGvB,YAAApW,WAAA,SAAWC,GAC9C,IAAMmW,EAAMxY,KAAKwY,IACXvR,EAAYjH,KAAKiH,UACvB,OAAiB,MAAbA,EACKuR,EAAI,gBAAqB1T,UAAUzC,GAEnCmW,EAAI,gBAAqB1T,UAAU,IAAI,EAAAgD,oBAAoBzF,EAAY4E,EAAW,KAG/F,EA9FA,CAAuC,EAAA5C,YAA1B,EAAAoU,eAAc,G,oOClB3B,IAA2B,OAG3B,IAA4B,OAEtBK,EAAe,SAAIrd,GAAa,OAAAA,GAiDtC,cACE,WAAoBsd,EACAC,EACAC,EACAxC,EACAxP,GAChB,aALgB,KAAA8R,eACA,KAAAC,YACA,KAAAC,UACA,KAAAxC,iBACA,KAAAxP,YAyOtB,OA9O8C,OAmHrC,EAAAR,OAAP,SAAoByS,EACAF,EACAC,EACAE,EACAlS,GAClB,OAAwB,GAApBkD,UAAU3Q,OACL,IAAI4f,EACeF,EAAuBH,aACvBG,EAAuBF,UACvBE,EAAuBD,QACvBC,EAAuBzC,gBAAkBqC,EACzCI,EAAuBjS,gBAGhBrI,IAA/Bua,GAA4C,EAAAlF,YAAYkF,GACnD,IAAIC,EACNF,EACHF,EACAC,EACAH,EACYK,GAGT,IAAIC,EACNF,EACHF,EACAC,EACkBE,EACNlS,IAGqB,YAAA7E,WAAA,SAAWC,GAC9C,IAAIqH,EAAQ1J,KAAK+Y,aACjB,GAAI/Y,KAAKiH,UACP,OAAOjH,KAAKiH,UAAUsC,SAA+B6P,EAAmBtF,SAAU,EAAG,CACnFzR,aACA4W,QAASjZ,KAAKiZ,QACdD,UAAWhZ,KAAKgZ,UAChBvC,eAAgBzW,KAAKyW,eACrB/M,UAGJ,IADA,WAAQsP,EAAA,EAAAA,UAAWvC,EAAA,EAAAA,eAAgBwC,EAAA,EAAAA,UAChC,CACD,GAAID,EAAW,CACb,IAAIK,OAAe,EACnB,IACEA,EAAkBL,EAAUtP,GAC5B,MAAOhO,GAEP,YADA2G,EAAWE,MAAM7G,GAGnB,IAAK2d,EAAiB,CACpBhX,EAAWM,WACX,OAGJ,IAAIlH,OAAK,EACT,IACEA,EAAQgb,EAAe/M,GACvB,MAAOhO,GAEP,YADA2G,EAAWE,MAAM7G,GAInB,GADA2G,EAAW/G,KAAKG,GACZ4G,EAAWU,OACb,MAEF,IACE2G,EAAQuP,EAAQvP,GAChB,MAAOhO,GAEP,YADA2G,EAAWE,MAAM7G,MAMR,EAAAoY,SAAf,SAA8BpK,GACpB,IAAArH,EAAA,EAAAA,WAAY2W,EAAA,EAAAA,UACpB,IAAI3W,EAAWU,OAAf,CAGA,GAAI2G,EAAM4P,YACR,IACE5P,EAAMA,MAAQA,EAAMuP,QAAQvP,EAAMA,OAClC,MAAOhO,GAEP,YADA2G,EAAWE,MAAM7G,QAInBgO,EAAM4P,aAAc,EAEtB,GAAIN,EAAW,CACb,IAAIK,OAAe,EACnB,IACEA,EAAkBL,EAAUtP,EAAMA,OAClC,MAAOhO,GAEP,YADA2G,EAAWE,MAAM7G,GAGnB,IAAK2d,EAEH,YADAhX,EAAWM,WAGb,GAAIN,EAAWU,OACb,OAGJ,IAAItH,EACJ,IACEA,EAAQiO,EAAM+M,eAAe/M,EAAMA,OACnC,MAAOhO,GAEP,YADA2G,EAAWE,MAAM7G,GAGnB,IAAI2G,EAAWU,SAGfV,EAAW/G,KAAKG,IACZ4G,EAAWU,QAGf,OAA2C/C,KAAMuJ,SAASG,KAE9D,EA9OA,CAA8C,EAAArF,YAAjC,EAAA+U,mBAAkB,G,oOCxD/B,IAAkD,OAIlD,IAAkC,OAClC,IAAgC,OAMhC,cAQE,WAAoBJ,EACAO,EACAC,GAClB,aAHkB,KAAAR,YACA,KAAAO,aACA,KAAAC,aAStB,OAnBwC,OAE/B,EAAA/S,OAAP,SAAoBuS,EACAO,EACAC,GAClB,OAAO,IAAIC,EAAaT,EAAWO,EAAYC,IASZ,YAAApX,WAAA,SAAWC,GAC9C,WAAQ2W,EAAA,EAAAA,UAAWO,EAAA,EAAAA,WAAYC,EAAA,EAAAA,WAE/B,OAAO,IAAIE,EAAarX,EAAY2W,EAAWO,EAAYC,IAE/D,EAnBA,CAAwC,EAAAnV,YAA3B,EAAAoV,aAAY,EAqBzB,kBACE,WAAY5S,EACQmS,EACAO,EACAC,GAClB,YAAM3S,GAHY,KAAAmS,YACA,KAAAO,aACA,KAAAC,aAElBxZ,KAAK2Z,QAoBT,OA1BiC,OASvB,YAAAA,MAAR,WACE,WAAQX,EAAA,EAAAA,UAAWO,EAAA,EAAAA,WAAYC,EAAA,EAAAA,WAG/B,IAEE,IAAMrU,EADY6T,IACMO,EAAaC,EAEjCrU,EACFnF,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMmF,IAEjCnF,KAAK0D,YAEP,MAAOhI,GACPsE,KAAKuD,OAAO7H,KAGlB,EA1BA,CAAiC,EAAAoL,kB,iOC/BjC,IAA0B,OAE1B,IAA2B,OAC3B,IAAsB,OAOtB,cAqDE,WAAoB8S,EACA3S,QADR,kBACA,mBACV,aAFkB,KAAA2S,SACA,KAAA3S,cAEb,EAAA4S,UAAUD,IAAWA,EAAS,KACjC5Z,KAAK4Z,OAAS,GAEX3S,GAA2C,mBAAvBA,EAAUsC,WACjCvJ,KAAKiH,UAAY,EAAAmC,OAavB,OAzEwC,OAkC/B,EAAA3C,OAAP,SAAcmT,EACA3S,GACZ,YAFY,IAAA2S,MAAA,QACA,IAAA3S,MAAA,SACL,IAAI6S,EAAmBF,EAAQ3S,IAGjC,EAAA6M,SAAP,SAAgBpK,GACN,IAAAhL,EAAA,EAAAA,MAAO2D,EAAA,EAAAA,WAAYuX,EAAA,EAAAA,OAE3BvX,EAAW/G,KAAKoD,GAEZ2D,EAAWU,SAIf2G,EAAMhL,OAAS,EAERsB,KAAMuJ,SAASG,EAAOkQ,KAcM,YAAAxX,WAAA,SAAWC,GAC9C,IACMuX,EAAS5Z,KAAK4Z,OACd3S,EAAYjH,KAAKiH,UAEvB5E,EAAWkD,IAAI0B,EAAUsC,SAASuQ,EAAmBhG,SAAU8F,EAAQ,CACrElb,MALY,EAKL2D,aAAYuX,aAGzB,EAzEA,CAAwC,EAAAvV,YAA3B,EAAAyV,mBAAkB,G,oOCX/B,IAAqB,OAErB,IAA2B,OAC3B,IAA4C,IAS5C,cAmCE,WAAY/e,EAAuBkM,GAGjC,GAFA,aADiC,KAAAA,YAGjB,MAAZlM,EACF,MAAM,IAAIyF,MAAM,4BAGlBR,KAAKjF,SAkET,SAAqBjC,GACnB,IAAMW,EAAIX,EAAI,YACd,IAAKW,GAAoB,iBAARX,EACf,OAAO,IAAIihB,EAAejhB,GAE5B,IAAKW,QAAoBmF,IAAf9F,EAAIU,OACZ,OAAO,IAAIwgB,EAAclhB,GAE3B,IAAKW,EACH,MAAM,IAAIM,UAAU,0BAEtB,OAAOjB,EAAI,cA7EOmhB,CAAYlf,GA8BhC,OAxE2C,OAGlC,EAAA0L,OAAP,SAAiB1L,EAAekM,GAC9B,OAAO,IAAI2R,EAAmB7d,EAAUkM,IAGnC,EAAA6M,SAAP,SAAgBpK,GAEN,IAAAhL,EAAA,EAAAA,MAAO4D,EAAA,EAAAA,SAAUvH,EAAA,EAAAA,SAAUsH,EAAA,EAAAA,WAEnC,GAAIC,EACFD,EAAWE,MAAMmH,EAAMnH,WADzB,CAKA,IAAI8T,EAAStb,EAASO,OAClB+a,EAAO9a,KACT8G,EAAWM,YAIbN,EAAW/G,KAAK+a,EAAO5a,OACvBiO,EAAMhL,MAAQA,EAAQ,EAElB2D,EAAWU,OACkB,mBAApBhI,EAAQ,QACjBA,EAAQ,SAKLiF,KAAMuJ,SAASG,MAaa,YAAAtH,WAAA,SAAWC,GAE9C,IACQtH,EAAR,KAAQA,SAAUkM,EAAlB,KAAkBA,UAElB,GAAIA,EACF,OAAOA,EAAUsC,SAASqP,EAAmB9E,SAAU,EAAG,CACxDpV,MALQ,EAKD3D,WAAUsH,eAGnB,OAAG,CACD,IAAIgU,EAAStb,EAASO,OACtB,GAAI+a,EAAO9a,KAAM,CACf8G,EAAWM,WACX,MAIF,GAFEN,EAAW/G,KAAK+a,EAAO5a,OAErB4G,EAAWU,OAAQ,CACU,mBAApBhI,EAAQ,QACjBA,EAAQ,SAEV,SAKV,EAxEA,CAA2C,EAAAsJ,YAA9B,EAAAuU,mBAAkB,EA0E/B,iBACE,WAAoBsB,EACAC,EACA5gB,QADR,kBACA,UAAsB2gB,EAAI1gB,QAFlB,KAAA0gB,MACA,KAAAC,MACA,KAAA5gB,MAYtB,OAVE,YAAC,YAAD,WAAsB,OAAQyG,MAC9B,YAAA1E,KAAA,WACE,OAAO0E,KAAKma,IAAMna,KAAKzG,IAAM,CACzBgC,MAAM,EACNE,MAAOuE,KAAKka,IAAIE,OAAOpa,KAAKma,QAC5B,CACA5e,MAAM,EACNE,WAAOmD,IAGf,EAfA,GAiBA,aACE,WAAoBtF,EACA6gB,EACA5gB,QADR,kBACA,UA8Bd,SAAkByC,GAChB,IAiBsBP,EAjBlBlC,GAAOyC,EAAExC,OACb,OAAI6gB,MAAM9gB,GACC,EAEC,IAARA,IAcoB,iBADFkC,EAbWlC,IAcG,EAAAuM,KAAKwU,SAAS7e,KAXlDlC,EAcF,SAAckC,GACZ,IAAI8e,GAAiB9e,EACrB,OAAsB,IAAlB8e,GAGAF,MAAME,GAFDA,EAKFA,EAAgB,GAAK,EAAI,EAtB1BC,CAAKjhB,GAAOyE,KAAK0B,MAAM1B,KAAKyc,IAAIlhB,MAC3B,EACA,EAEPA,EAAMmhB,EACCA,EAEJnhB,EATIA,EApCuBohB,CAASrhB,IAFvB,KAAAA,MACA,KAAA6gB,MACA,KAAA5gB,MAYtB,OAVE,YAAC,YAAD,WAAsB,OAAOyG,MAC7B,YAAA1E,KAAA,WACE,OAAO0E,KAAKma,IAAMna,KAAKzG,IAAM,CACzBgC,MAAM,EACNE,MAAOuE,KAAK1G,IAAI0G,KAAKma,QACrB,CACA5e,MAAM,EACNE,WAAOmD,IAGf,EAfA,GA+BM8b,EAAiB1c,KAAKqB,IAAI,EAAG,IAAM,G,oOCtIzC,IAA2B,OAE3B,IAAqB,OAOrB,cAoCE,aACE,aAMJ,OA3CwC,OAgC/B,EAAAoH,OAAP,WACE,OAAO,IAAImU,GAOwB,YAAAxY,WAAA,SAAWC,GAC9C,EAAAwY,QAEJ,EA3CA,CAAwC,EAAAxW,YAA3B,EAAAuW,gBAAe,G,oOCK5B,SAAS9G,EAA2CpK,GAC3C,IAAA5Q,EAAA,EAAAA,IAAKgiB,EAAA,EAAAA,KAAMthB,EAAA,EAAAA,OAAQkF,EAAA,EAAAA,MAAO2D,EAAA,EAAAA,WAEjC,GAAI3D,IAAUlF,EAAd,CAKA,IAAMiB,EAAMqgB,EAAKpc,GACjB2D,EAAW/G,KAAK,CAACb,EAAK3B,EAAI2B,KAE1BiP,EAAMhL,MAAQA,EAAQ,EAEtBsB,KAAKuJ,SAASG,QATZrH,EAAWM,WAiBf,kBAsCE,WAAoB7J,EAAqBmO,GACvC,aADkB,KAAAnO,MAAqB,KAAAmO,YAEvCjH,KAAK8a,KAAOvgB,OAAOugB,KAAKhiB,GAmB5B,OA3DwC,OAkC/B,EAAA2N,OAAP,SAAiB3N,EAAamO,GAC5B,OAAO,IAAI8T,EAAmBjiB,EAAKmO,IAQA,YAAA7E,WAAA,SAAWC,GAC9C,IAAOyY,EAAP,KAAOA,KAAM7T,EAAb,KAAaA,UACPzN,EAASshB,EAAKthB,OAEpB,GAAIyN,EACF,OAAOA,EAAUsC,SAASuK,EAAU,EAAG,CACrChb,IAAKkH,KAAKlH,IAAKgiB,OAAMthB,SAAQkF,MAAO,EAAG2D,eAGzC,IAAK,IAAI8X,EAAM,EAAGA,EAAM3gB,EAAQ2gB,IAAO,CACrC,IAAM1f,EAAMqgB,EAAKX,GACjB9X,EAAW/G,KAAK,CAACb,EAAKuF,KAAKlH,IAAI2B,KAEjC4H,EAAWM,YAGjB,EA3DA,CAjCA,EAA2B,OAiCa0B,YAA3B,EAAA0W,gBAAe,G,mOCnC5B,IAAqB,OAWrB,cAkCE,WAAoBC,EAAiC/T,GACnD,aADkB,KAAA+T,UAAiC,KAAA/T,YA6DvD,OA/F0C,OA8BjC,EAAAR,OAAP,SAAiBuU,EAAyB/T,GACxC,OAAO,IAAI0R,EAAkBqC,EAAS/T,IAOH,YAAA7E,WAAA,SAAWC,GAAX,WAC7B2Y,EAAUhb,KAAKgb,QACf/T,EAAYjH,KAAKiH,UAEvB,GAAiB,MAAbA,EACEjH,KAAK+E,UACF1C,EAAWU,SACdV,EAAW/G,KAAK0E,KAAKvE,OACrB4G,EAAWM,YAGbqY,EAAQC,MACN,SAACxf,GACC,EAAKA,MAAQA,EACb,EAAKsJ,WAAY,EACZ1C,EAAWU,SACdV,EAAW/G,KAAKG,GAChB4G,EAAWM,eAGf,SAACjH,GACM2G,EAAWU,QACdV,EAAWE,MAAM7G,MAItBuf,KAAK,MAAM,SAAAvf,GAEV,EAAAoK,KAAKoV,YAAW,WAAQ,MAAMxf,aAIlC,GAAIsE,KAAK+E,WACP,IAAK1C,EAAWU,OACd,OAAOkE,EAAUsC,SAASuL,EAAc,EAAG,CAAErZ,MAAOuE,KAAKvE,MAAO4G,oBAGlE2Y,EAAQC,MACN,SAACxf,GACC,EAAKA,MAAQA,EACb,EAAKsJ,WAAY,EACZ1C,EAAWU,QACdV,EAAWkD,IAAI0B,EAAUsC,SAASuL,EAAc,EAAG,CAAErZ,QAAO4G,mBAGhE,SAAC3G,GACM2G,EAAWU,QACdV,EAAWkD,IAAI0B,EAAUsC,SAASsL,EAAe,EAAG,CAAEnZ,MAAK2G,mBAG9D4Y,KAAK,MAAM,SAACvf,GAEX,EAAAoK,KAAKoV,YAAW,WAAQ,MAAMxf,SAK1C,EA/FA,CATA,EAA2B,OASe2I,YAqG1C,SAASyQ,EAAgBC,GACf,IAAAtZ,EAAA,EAAAA,MAAO4G,EAAA,EAAAA,WACVA,EAAWU,SACdV,EAAW/G,KAAKG,GAChB4G,EAAWM,YAQf,SAASkS,EAAiBE,GAChB,IAAArZ,EAAA,EAAAA,IAAK2G,EAAA,EAAAA,WACRA,EAAWU,QACdV,EAAWE,MAAM7G,GApHR,EAAAid,kBAAiB,G,mOCD9B,cA+DE,WAAYwC,EACA3M,EACAvH,GACV,aACAjH,KAAKmb,MAAQA,EACbnb,KAAKob,OAAS5M,EACdxO,KAAKiH,UAAYA,EA0BrB,OA/FqC,OAgC5B,EAAAR,OAAP,SAAc0U,EACA3M,EACAvH,GACZ,YAHY,IAAAkU,MAAA,QACA,IAAA3M,MAAA,GAEL,IAAI6M,EAAgBF,EAAO3M,EAAOvH,IAGpC,EAAA6M,SAAP,SAAgBpK,GAEN,IAAAyR,EAAA,EAAAA,MAAOzc,EAAA,EAAAA,MAAO8P,EAAA,EAAAA,MAAOnM,EAAA,EAAAA,WAEzB3D,GAAS8P,EACXnM,EAAWM,YAIbN,EAAW/G,KAAK6f,GAEZ9Y,EAAWU,SAIf2G,EAAMhL,MAAQA,EAAQ,EACtBgL,EAAMyR,MAAQA,EAAQ,EAEfnb,KAAMuJ,SAASG,MAgBa,YAAAtH,WAAA,SAAWC,GAC9C,IAAI3D,EAAQ,EACRyc,EAAQnb,KAAKmb,MACX3M,EAAQxO,KAAKob,OACbnU,EAAYjH,KAAKiH,UAEvB,GAAIA,EACF,OAAOA,EAAUsC,SAAS8R,EAAgBvH,SAAU,EAAG,CACrDpV,QAAO8P,QAAO2M,QAAO9Y,eAGvB,OAAG,CACD,GAAI3D,KAAW8P,EAAO,CACpBnM,EAAWM,WACX,MAGF,GADAN,EAAW/G,KAAK6f,KACZ9Y,EAAWU,OACb,QAKV,EA/FA,CATA,EAA2B,OASUsB,YAAxB,EAAAgX,gBAAe,G,oOCA5B,cAwBE,WAAmB5f,EAAkBwL,GACnC,aADiB,KAAAxL,QAAkB,KAAAwL,YAFrC,KAAAlC,WAAqB,EAIfkC,IACFjH,KAAK+E,WAAY,GAmBvB,OA9CyC,OAChC,EAAA0B,OAAP,SAAiBhL,EAAUwL,GACzB,OAAO,IAAI2M,EAAiBnY,EAAOwL,IAG9B,EAAA6M,SAAP,SAAgBpK,GACN,IAAAnO,EAAA,EAAAA,KAAME,EAAA,EAAAA,MAAO4G,EAAA,EAAAA,WAEjB9G,EACF8G,EAAWM,YAIbN,EAAW/G,KAAKG,GACZ4G,EAAWU,SAIf2G,EAAMnO,MAAO,EACNyE,KAAMuJ,SAASG,MAYa,YAAAtH,WAAA,SAAWC,GAC9C,IAAM5G,EAAQuE,KAAKvE,MACbwL,EAAYjH,KAAKiH,UAEvB,GAAIA,EACF,OAAOA,EAAUsC,SAASqK,EAAiBE,SAAU,EAAG,CACtDvY,MAAM,EAAOE,QAAO4G,eAGtBA,EAAW/G,KAAKG,GACX4G,EAAWU,QACdV,EAAWM,YAInB,EA9CA,CATA,EAA2B,OASc0B,YAA5B,EAAAuP,iBAAgB,G,oOCN7B,IAA2B,OAC3B,IAAqB,OACrB,IAA0B,OAY1B,cAUE,WAAmBzO,EACCmW,EACArU,QADR,kBACA,kBACV,aAHiB,KAAA9B,SACC,KAAAmW,YACA,KAAArU,cAEb,EAAA4S,UAAUyB,IAAcA,EAAY,KACvCtb,KAAKsb,UAAY,GAEdrU,GAA2C,mBAAvBA,EAAUsC,WACjCvJ,KAAKiH,UAAY,EAAAiC,MAavB,OA/B8C,OACrC,EAAAzC,OAAP,SAAiBtB,EAAuBsE,EAAmBxC,GACzD,YADsC,IAAAwC,MAAA,QAAmB,IAAAxC,MAAA,QAClD,IAAIsU,EAAsBpW,EAAQsE,EAAOxC,IAG3C,EAAA6M,SAAP,SAAoCiB,GAC1B,IAAA5P,EAAA,EAAAA,OAAQ9C,EAAA,EAAAA,WAChB,OAAOrC,KAAKuF,IAAIJ,EAAOL,UAAUzC,KAeE,YAAAD,WAAA,SAAWC,GAC9C,IAAMoH,EAAQzJ,KAAKsb,UACbnW,EAASnF,KAAKmF,OAGpB,OAFkBnF,KAAKiH,UAENsC,SAASgS,EAAsBzH,SAAUrK,EAAO,CAC/DtE,SAAQ9C,gBAGd,EA/BA,CAA8C,EAAAgC,YAAjC,EAAAkX,sBAAqB,G,oOClBlC,IAA0B,OAE1B,IAA2B,OAC3B,IAAsB,OACtB,IAA4B,OAC5B,IAAuB,MASvB,cAuEE,WAAYC,EACA5B,EACA3S,QAFA,IAAAuU,MAAA,GAGV,aAPM,KAAA5B,QAAkB,EAClB,KAAA4B,QAAkB,EAQpB,EAAA3B,UAAUD,GACZ5Z,KAAK4Z,OAAS1S,OAAO0S,GAAU,EAAK,EAAK1S,OAAO0S,GACvC,EAAA3F,YAAY2F,KACrB3S,EAAyB2S,GAGtB,EAAA3F,YAAYhN,KACfA,EAAY,EAAAmC,OAGdpJ,KAAKiH,UAAYA,EACjBjH,KAAKwb,QAAU,EAAAC,OAAOD,IAClBA,EAAUxb,KAAKiH,UAAUM,MACjBiU,EAWhB,OApGqC,OA4C5B,EAAA/U,OAAP,SAAciV,EACA9B,EACA3S,GACZ,YAHY,IAAAyU,MAAA,GAGL,IAAIC,EAAgBD,EAAc9B,EAAQ3S,IAG5C,EAAA6M,SAAP,SAAgBpK,GAEN,IAAAhL,EAAA,EAAAA,MAAOkb,EAAA,EAAAA,OAAQvX,EAAA,EAAAA,WAKvB,GAFAA,EAAW/G,KAAKoD,IAEZ2D,EAAWU,OAAf,CAEO,IAAgB,IAAZ6W,EACT,OAAOvX,EAAWM,WAGpB+G,EAAMhL,MAAQA,EAAQ,EAVAsB,KAWfuJ,SAASG,EAAOkQ,KA4BY,YAAAxX,WAAA,SAAWC,GAC9C,IACA,OAAQuX,EAAA,EAAAA,OAAQ4B,EAAA,EAAAA,QAEhB,OAFyB,EAAAvU,UAERsC,SAASoS,EAAgB7H,SAAU0H,EAAS,CAC3D9c,MAJY,EAILkb,SAAQvX,gBAGrB,EApGA,CAAqC,EAAAgC,YAAxB,EAAAsX,gBAAe,G,oOCd5B,IAAkD,OAIlD,IAAkC,OAClC,IAAgC,OAMhC,cAOE,WAAoBC,EACA5F,GAClB,aAFkB,KAAA4F,kBACA,KAAA5F,oBAgBtB,OAxBwC,OAE/B,EAAAvP,OAAP,SAAiBmV,EACA5F,GACf,OAAO,IAAI6F,EAAmBD,EAAiB5F,IAQZ,YAAA5T,WAAA,SAAWC,GAC9C,IAEIyZ,EAFIF,EAAR,KAAQA,gBAAiB5F,EAAzB,KAAyBA,kBAIzB,IAEE,OADA8F,EAAkCF,IAC3B,IAAIG,EAAgB1Z,EAAYyZ,EAAU9F,GACjD,MAAOta,GACP2G,EAAWE,MAAM7G,KAGvB,EAxBA,CAAwC,EAAA2I,YAA3B,EAAAwX,gBAAe,EA0B5B,kBACE,WAAYhV,EACQiV,EACA9F,GAClB,YAAMnP,GAFY,KAAAiV,WACA,KAAA9F,oBAElBnP,EAAYtB,IAAIuW,GAChB9b,KAAKgc,SAaT,OAnBiC,OASvB,YAAAA,OAAR,WACE,IACE,IAAM7W,EAASnF,KAAKgW,kBAAkB3a,KAAK2E,KAAMA,KAAK8b,UAClD3W,GACFnF,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMmF,IAEnC,MAAOzJ,GACPsE,KAAKuD,OAAO7H,KAGlB,EAnBA,CAAiC,EAAAoL,kB,6BCrCjC,QAA0C,OAE7B,EAAAuF,aAAe,EAAAkI,wBAAwB9N,Q,4BCFpD,QAA8C,OAEjC,EAAA6F,iBAAmB,EAAA0I,4BAA4BvO,Q,6BCA5D,QAA8B,OAC9B,IAA0B,OAC1B,IAAkC,OAClC,IAAwC,OAqIxB,EAAA8F,cAAhB,W,IAAoC,wDAIlC,IAAI0P,EAAyC,KACzChV,EAAwB,KAgB5B,OAdI,EAAAgN,YAAYiI,EAAYA,EAAY1iB,OAAS,MAC/CyN,EAAwBiV,EAAYhI,OAGa,mBAAxCgI,EAAYA,EAAY1iB,OAAS,KAC1CyiB,EAAwCC,EAAYhI,OAK3B,IAAvBgI,EAAY1iB,QAAgB,EAAAI,QAAQsiB,EAAY,MAClDA,EAAsCA,EAAY,IAG7C,IAAI,EAAAlI,gBAAgBkI,EAAajV,GAAWjC,KAAK,IAAI,EAAAmX,sBAA4BF,M,6BC7J1F,QAA4B,OAC5B,IAAmB,OACnB,IAAqB,OACrB,IAA0B,OAyGV,EAAApQ,OAAhB,W,IAA6B,wDAC3B,OAA2B,IAAvBqQ,EAAY1iB,QAAwC,IAAvB0iB,EAAY1iB,QAAgB,EAAAya,YAAYiI,EAAY,IAC5E,EAAA3f,KAAU2f,EAAY,IAExB,EAAA7N,WAAA,CAAY,EAAA/J,GAAE,aAAI4X,M,6BClH3B,QAAkC,OAErB,EAAA1P,MAAQ,EAAAyJ,gBAAgBxP,Q,oOCFrC,IAAqB,OACrB,IAAyB,OACzB,IAA4B,MAC5B,IAA2B,OAC3B,IAA2B,MAE3B,IAAoB,OAmBpB,SAAS2V,IACP,GAAI,EAAAtW,KAAKuW,eACP,OAAO,IAAI,EAAAvW,KAAKuW,eACX,GAAM,EAAAvW,KAAKwW,eAChB,OAAO,IAAI,EAAAxW,KAAKwW,eAEhB,MAAM,IAAI9b,MAAM,yCAsCpB,WAAwB+b,EAAaC,GACnC,YADmC,IAAAA,MAAA,MAC5B,IAAIC,EAA6B,CAAEC,OAAQ,MAAOH,MAAKC,YAGhE,WAAyBD,EAAaI,EAAYH,GAChD,OAAO,IAAIC,EAA6B,CAAEC,OAAQ,OAAQH,MAAKI,OAAMH,YAGvE,WAA2BD,EAAaC,GACtC,OAAO,IAAIC,EAA6B,CAAEC,OAAQ,SAAUH,MAAKC,YAGnE,WAAwBD,EAAaI,EAAYH,GAC/C,OAAO,IAAIC,EAA6B,CAAEC,OAAQ,MAAOH,MAAKI,OAAMH,YAGtE,WAA0BD,EAAaI,EAAYH,GACjD,OAAO,IAAIC,EAA6B,CAAEC,OAAQ,QAASH,MAAKI,OAAMH,YAjBxD,EAAAI,QAAO,EAIP,EAAAC,SAAQ,EAIR,EAAAC,WAAU,EAIV,EAAAC,QAAO,EAIP,EAAAC,UAAS,EAIzB,IAAMC,EAAc,EAAAhN,KAAI,SAACzJ,EAAiB9H,GAAkB,OAAA8H,EAAA,YAE5D,WAA+B+V,EAAaC,GAC1C,OAAOS,EACL,IAAIR,EAA6B,CAC/BC,OAAQ,MACRH,MACAW,aAAc,OACdV,aANU,EAAAW,YAAW,EAgB3B,kBA4CE,WAAYC,GACV,aAEA,IAAMC,EAAuB,CAC3BjU,OAAO,EACPkU,UAAW,WACT,OAAOtd,KAAKud,YAAcnB,EAAe/gB,KAAK2E,MA1HtD,WACE,GAAI,EAAA8F,KAAKuW,eACP,OAAO,IAAI,EAAAvW,KAAKuW,eAEhB,IAAImB,OAAM,EACV,IAEE,IADA,IAAMC,EAAU,CAAC,iBAAkB,oBAAqB,sBAC/ChkB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAEE,GADA+jB,EAASC,EAAQhkB,GACb,IAAI,EAAAqM,KAAK4X,cAAcF,GACzB,MAEF,MAAO3gB,IAIX,OAAO,IAAI,EAAAiJ,KAAK4X,cAAcF,GAC9B,MAAO3gB,GACP,MAAM,IAAI2D,MAAM,oDAuGwCmd,IAExDJ,aAAa,EACbK,iBAAiB,EACjBpB,QAAS,GACTE,OAAQ,MACRQ,aAAc,OACdnK,QAAS,GAGX,GAA4B,iBAAjBqK,EACTC,EAAQd,IAAMa,OAEd,IAAK,IAAMS,KAAQT,EACbA,EAAaU,eAAeD,KAC9BR,EAAQQ,GAAQT,EAAaS,IAKnC7d,KAAKqd,QAAUA,EA3CoB,IAC7B5W,EAgDV,OA5EuC,OAyEA,YAAArE,WAAA,SAAWC,GAC9C,OAAO,IAAI0b,EAAe1b,EAAYrC,KAAKqd,UA/CtC,EAAA5W,SACCA,EAAc,SAAC2W,GACnB,OAAO,IAAIX,EAAeW,KAGrBY,IAAMpB,EACbnW,EAAOwX,KAAOpB,EACdpW,EAAM,OAAUqW,EAChBrW,EAAOyX,IAAMnB,EACbtW,EAAO0X,MAAQnB,EACfvW,EAAO2X,QAAUjB,EAEU1W,GAqC/B,EA5EA,CAAuC,EAAApC,YAA1B,EAAAoY,eAAc,EAmF3B,kBAIE,WAAY5V,EAAmCwW,GAC7C,YAAMxW,GADuC,KAAAwW,UAFvC,KAAA9hB,MAAgB,EAKtB,IAAMihB,EAAUa,EAAQb,QAAUa,EAAQb,SAAW,GAGhDa,EAAQE,aAAgBf,EAAQ,sBACnCA,EAAQ,oBAAsB,kBAI1B,iBAAkBA,GAAc,EAAA1W,KAAKuY,UAAYhB,EAAQV,gBAAgB,EAAA7W,KAAKuY,eAAqC,IAAjBhB,EAAQV,OAC9GH,EAAQ,gBAAkB,oDAI5Ba,EAAQV,KAAO3c,KAAKse,cAAcjB,EAAQV,KAAMU,EAAQb,QAAQ,iBAEhExc,KAAKue,OAsLT,OA5MuC,OAyBrC,YAAAjjB,KAAA,SAAKuB,GACHmD,KAAKzE,MAAO,EACZ,WAAQijB,EAAA,EAAAA,IAAKnB,EAAA,EAAAA,QAASxW,EAAA,EAAAA,YAChB4X,EAAW,IAAI3V,EAAajM,EAAG2hB,EAAKnB,GAE1CxW,EAAYvL,KAAKmjB,IAGX,YAAAF,KAAR,WACE,IACElB,EADF,KACEA,QACA,EAFF,KAEEA,QAAWqB,EAAA,EAAAA,KAAMhC,EAAA,EAAAA,OAAQH,EAAA,EAAAA,IAAKnT,EAAA,EAAAA,MAAOuV,EAAA,EAAAA,SAAUnC,EAAA,EAAAA,QAASG,EAAA,EAAAA,KAEpDW,EAAYD,EAAQC,UACpBkB,EAAsB,EAAAhT,SAAS8R,GAAWjiB,KAAKgiB,GAErD,GAASmB,IAAQ,EAAA/S,YACfzL,KAAKuC,MAAM,EAAAkJ,YAAY5O,OAClB,CAgBL,GAfAmD,KAAKwe,IAAMA,EAMXxe,KAAK4e,YAAYJ,EAAKnB,IAGlBqB,EACO,EAAAlT,SAASgT,EAAIK,MAAMxjB,KAAKmjB,EAAK9B,EAAQH,EAAKnT,EAAOsV,EAAMC,GAEvD,EAAAnT,SAASgT,EAAIK,MAAMxjB,KAAKmjB,EAAK9B,EAAQH,EAAKnT,MAGtC,EAAAqC,YAEb,OADAzL,KAAKuC,MAAM,EAAAkJ,YAAY5O,GAChB,KAkBT,GAdIuM,IACFoV,EAAIzL,QAAUsK,EAAQtK,QACtByL,EAAItB,aAAeG,EAAQH,cAGzB,oBAAqBsB,IACvBA,EAAIZ,kBAAoBP,EAAQO,iBAIlC5d,KAAK8e,WAAWN,EAAKhC,IAGZG,EAAO,EAAAnR,SAASgT,EAAID,MAAMljB,KAAKmjB,EAAK7B,GAAQ,EAAAnR,SAASgT,EAAID,MAAMljB,KAAKmjB,MAC9D,EAAA/S,YAEb,OADAzL,KAAKuC,MAAM,EAAAkJ,YAAY5O,GAChB,KAIX,OAAO2hB,GAGD,YAAAF,cAAR,SAAsB3B,EAAWoC,GAC/B,IAAKpC,GAAwB,iBAATA,EAClB,OAAOA,EACF,GAAI,EAAA7W,KAAKuY,UAAY1B,aAAgB,EAAA7W,KAAKuY,SAC/C,OAAO1B,EAGT,GAAIoC,EAAa,CACf,IAAMC,EAAaD,EAAY9U,QAAQ,MACnB,IAAhB+U,IACFD,EAAcA,EAAYE,UAAU,EAAGD,IAI3C,OAAQD,GACN,IAAK,oCACH,OAAOxkB,OAAOugB,KAAK6B,GAAM1M,KAAI,SAAAxV,GAAO,OAAGykB,mBAAmBzkB,GAAI,IAAIykB,mBAAmBvC,EAAjD,OAA+DwC,KAAK,KAC1G,IAAK,mBACH,OAAOC,KAAKC,UAAU1C,GACxB,QACE,OAAOA,IAIL,YAAAmC,WAAR,SAAmBN,EAAqBhC,GACtC,IAAK,IAAI/hB,KAAO+hB,EACVA,EAAQsB,eAAerjB,IACzB+jB,EAAIc,iBAAiB7kB,EAAK+hB,EAAQ/hB,KAKhC,YAAAmkB,YAAR,SAAoBJ,EAAqBnB,GACvC,IAeQ,EAYF,EA3BAkC,EAAqBlC,EAAQkC,mBAEnC,WAA0C1iB,GACxC,QAAOwF,EAAA,EAAAA,WAAYkd,EAAA,EAAAA,mBAAoBlC,EAAA,EAAAA,QACnCkC,GACFA,EAAmBhd,MAAM1F,GAE3BwF,EAAWE,MAAM,IAAIyG,EAAiBhJ,KAAMqd,KAE9CmB,EAAIgB,UAAYC,EACVA,EAAYpC,QAAUA,EACtBoC,EAAYpd,WAAarC,KACzByf,EAAYF,mBAAqBA,EACnCf,EAAIkB,QAAU,oBAAqBlB,KACjCe,IAEF,EAAc,SAAS1iB,GACb,EAAA0iB,mBACWjkB,KAAKuB,IAEtB,EAAAiJ,KAAKwW,eACPkC,EAAImB,WAAa,EAEjBnB,EAAIkB,OAAOC,WAAa,EAEpB,EAAaJ,mBAAqBA,GAG1C,EAAW,SAA+B1iB,GACxC,QAAQ0iB,EAAA,EAAAA,mBAAoBld,EAAA,EAAAA,WAAYgb,EAAA,EAAAA,QACpCkC,GACFA,EAAmBhd,MAAM1F,GAE3BwF,EAAWE,MAAM,IAAIwG,EAAU,aAAc/I,KAAMqd,KAErDmB,EAAIoB,QAAU,EACR,EAAUvC,QAAUA,EACpB,EAAUhb,WAAarC,KACvB,EAAUuf,mBAAqBA,GAGvC,WAAmD1iB,GACjD,QAAQwF,EAAA,EAAAA,WAAYkd,EAAA,EAAAA,mBAAoBlC,EAAA,EAAAA,QACxC,GAAwB,IAApBrd,KAAK6f,WAAkB,CAEzB,IAAI,EAAiC,OAAhB7f,KAAK8f,OAAkB,IAAM9f,KAAK8f,OACnDrB,EAAuC,SAAtBze,KAAKkd,aACxBld,KAAKye,UAAYze,KAAK+f,aAAgB/f,KAAKye,SAK9B,IAAX,IACF,EAASA,EAAW,IAAM,GAGxB,KAAO,GAAU,EAAS,KACxBc,GACFA,EAAmB5c,WAErBN,EAAW/G,KAAKuB,GAChBwF,EAAWM,aAEP4c,GACFA,EAAmBhd,MAAM1F,GAE3BwF,EAAWE,MAAM,IAAIwG,EAAU,cAAgB,EAAQ/I,KAAMqd,MAInEmB,EAAIwB,mBAAqBC,EACnBA,EAAqB5d,WAAarC,KAClCigB,EAAqBV,mBAAqBA,EAC1CU,EAAqB5C,QAAUA,GAGvC,YAAA5Z,YAAA,WACE,IAAQlI,EAAR,KAAQA,KAAMijB,EAAd,KAAcA,KACTjjB,GAAQijB,GAA0B,IAAnBA,EAAIqB,YAAyC,mBAAdrB,EAAI0B,OACrD1B,EAAI0B,QAEN,YAAMzc,YAAW,YAErB,EA5MA,CAAuC,EAAAG,YAA1B,EAAAma,eAAc,EAqN3B,MAaE,SAAmBoC,EAA6B3B,EAA4BnB,GAAzD,KAAA8C,gBAA6B,KAAA3B,MAA4B,KAAAnB,UAC1Erd,KAAK8f,OAAStB,EAAIsB,OAClB9f,KAAKkd,aAAesB,EAAItB,cAAgBG,EAAQH,aAChDld,KAAKye,SAAW2B,EAAiBpgB,KAAKkd,aAAcsB,IAhB3C,EAAA1V,aAAY,EA2BzB,kBAgBE,WAAYuX,EAAiB7B,EAAqBnB,GAChD,YAAMgD,GACNrgB,KAAKqgB,QAAUA,EACfrgB,KAAKwe,IAAMA,EACXxe,KAAKqd,QAAUA,EACfrd,KAAK8f,OAAStB,EAAIsB,OAClB9f,KAAKkd,aAAesB,EAAItB,cAAgBG,EAAQH,aAChDld,KAAKye,SAAW2B,EAAiBpgB,KAAKkd,aAAcsB,GAExD,OAzB+B,OAyB/B,EAzBA,CAA+Bhe,OA2B/B,SAAS4f,EAAiBlD,EAAsBsB,GAC9C,OAAQtB,GACN,IAAK,OACD,MAAI,aAAcsB,EAETA,EAAItB,aAAesB,EAAIC,SAAWW,KAAKkB,MAAM9B,EAAIC,UAAYD,EAAIuB,cAAgB,QAIjFX,KAAKkB,MAAO9B,EAAYuB,cAAgB,QAEnD,IAAK,MACH,OAAOvB,EAAI+B,YACb,IAAK,OACL,QAGI,MAAS,aAAc/B,EAAOA,EAAIC,SAAYD,EAAYuB,cA5CvD,EAAAhX,UAAS,EAqDtB,kBACE,WAAYyV,EAAqBnB,GAC/B,YAAM,eAAgBmB,EAAKnB,GAE/B,OAJsC,OAItC,EAJA,CAAsCtU,GAAzB,EAAAC,iBAAgB,G,oOCne7B,IAA0C,OAC1C,IAA2B,MAC3B,IAA2B,OAC3B,IAA6B,OAE7B,IAAqB,OACrB,IAA8B,OAE9B,IAAyB,OACzB,IAA4B,MAC5B,IAAuB,OAkBvB,cA2DE,WAAYwX,EAAoE3Z,GAC9E,GAAI2Z,aAA6B,EAAAnc,WAC/B,YAAMwC,EAA6B2Z,OAC9B,CAUL,GATA,aACAxgB,KAAKygB,cAAgB,EAAA3a,KAAK4a,UAC1B1gB,KAAK2gB,QAAU,IAAI,EAAA/d,QACc,iBAAtB4d,EACTxgB,KAAKuc,IAAMiE,EAGX,EAAAI,OAAO5gB,KAAMwgB,IAEVxgB,KAAKygB,cACR,MAAM,IAAIjgB,MAAM,yCAElBR,KAAK6G,YAAc,IAAI,EAAAsB,eAgL7B,OA3PyC,OAavC,YAAAsO,eAAA,SAAe5Z,GACb,OAAOuiB,KAAKkB,MAAMzjB,EAAEgkB,OAyCf,EAAApa,OAAP,SAAiB+Z,GACf,OAAO,IAAIM,EAAoBN,IAuBjC,YAAAxb,KAAA,SAAQC,GACN,IAAM8b,EAAO,IAAID,EAAoB9gB,KAAYA,KAAK6G,aAEtD,OADAka,EAAK9b,SAAWA,EACT8b,GAGD,YAAAC,YAAR,WACEhhB,KAAKihB,OAAS,KACTjhB,KAAKmF,SACRnF,KAAK6G,YAAc,IAAI,EAAAsB,eAEzBnI,KAAK2gB,QAAU,IAAI,EAAA/d,SAIrB,YAAAse,UAAA,SAAUC,EAAmBC,EAAqBC,GAChD,IAAMzM,EAAO5U,KACb,OAAO,IAAI,EAAAqE,YAAW,SAACJ,GACrB,IAAMoS,EAAS,EAAA7K,SAAS2V,EAAT,GACX9K,IAAW,EAAA5K,YACbxH,EAAS1B,MAAM,EAAAkJ,YAAY5O,GAE3B+X,EAAKtZ,KAAK+a,GAGZ,IAAIvT,EAAe8R,EAAK9P,WAAU,SAAA0B,GAChC,IAAM6P,EAAS,EAAA7K,SAAS6V,EAAT,CAAwB7a,GACnC6P,IAAW,EAAA5K,YACbxH,EAAS1B,MAAM,EAAAkJ,YAAY5O,GAClBwZ,GACTpS,EAAS3I,KAAKkL,MAGhB,SAAA9K,GAAO,OAAAuI,EAAS1B,MAAT,MACP,WAAM,OAAA0B,EAAA,cAER,OAAO,WACL,IAAMoS,EAAS,EAAA7K,SAAS4V,EAAT,GACX/K,IAAW,EAAA5K,YACbxH,EAAS1B,MAAM,EAAAkJ,YAAY5O,GAE3B+X,EAAKtZ,KAAK+a,GAEZvT,EAAaW,mBAKX,YAAA6d,eAAR,sBACUb,EAAA,KAAAA,cACFxc,EAAWjE,KAAK2gB,QAElBM,EAAoB,KACxB,IACEA,EAASjhB,KAAKuhB,SACZ,IAAId,EAAczgB,KAAKuc,IAAKvc,KAAKuhB,UACjC,IAAId,EAAczgB,KAAKuc,KACzBvc,KAAKihB,OAASA,EACVjhB,KAAKwhB,aACPxhB,KAAKihB,OAAOO,WAAaxhB,KAAKwhB,YAEhC,MAAO3kB,GAEP,YADAoH,EAAS1B,MAAM1F,GAIjB,IAAMiG,EAAe,IAAI,EAAAL,cAAa,WACpC,EAAKwe,OAAS,KACVA,GAAgC,IAAtBA,EAAOpB,YACnBoB,EAAOQ,WAIXR,EAAOS,OAAS,SAAC7kB,GACf,IAAM8kB,EAAe,EAAKA,aACtBA,GACFA,EAAarmB,KAAKuB,GAGpB,IAAMkL,EAAQ,EAAKlB,YAEnB,EAAKA,YAAc,EAAAjD,WAAW6C,QAC5B,SAACD,GAAM,OAAsB,IAAtBya,EAAOpB,YAAoBoB,EAAO1C,KAAlC,MACP,SAAC1hB,GACC,IAAM+kB,EAAkB,EAAKA,gBACzBA,GACFA,EAAgBtmB,UAAKsD,GAEnB/B,GAAKA,EAAEglB,KACTZ,EAAOQ,MAAM5kB,EAAEglB,KAAMhlB,EAAEilB,QAEvB7d,EAAS1B,MAAM,IAAIxI,UAAU,sIAG/B,EAAKinB,iBAEP,WACE,IAAMY,EAAkB,EAAKA,gBACzBA,GACFA,EAAgBtmB,UAAKsD,GAEvBqiB,EAAOQ,QACP,EAAKT,iBAILjZ,GAASA,aAAiB,EAAAI,eAC5BrF,EAAayC,IAAuBwC,EAAOjD,UAAU,EAAK+B,eAI9Doa,EAAOrB,QAAU,SAAC/iB,GAChB,EAAKmkB,cACL/c,EAAS1B,MAAM1F,IAGjBokB,EAAOc,QAAU,SAACllB,GAChB,EAAKmkB,cACL,IAAMgB,EAAgB,EAAKA,cACvBA,GACFA,EAAc1mB,KAAKuB,GAEjBA,EAAEolB,SACJhe,EAAStB,WAETsB,EAAS1B,MAAM1F,IAInBokB,EAAOiB,UAAY,SAACrlB,GAClB,IAAMwZ,EAAS,EAAA7K,SAAS,EAAKiL,eAAd,CAA8B5Z,GACzCwZ,IAAW,EAAA5K,YACbxH,EAAS1B,MAAM,EAAAkJ,YAAY5O,GAE3BoH,EAAS3I,KAAK+a,KAKiB,YAAAjU,WAAA,SAAWC,GAAX,WAC3B8C,EAAA,KAAAA,OACR,GAAIA,EACF,OAAOA,EAAOL,UAAUzC,GAErBrC,KAAKihB,QACRjhB,KAAKshB,iBAEP,IAAIxe,EAAe,IAAI,EAAAL,aAWvB,OAVAK,EAAayC,IAAIvF,KAAK2gB,QAAQ7b,UAAUzC,IACxCS,EAAayC,KAAI,WACP,IAAA0b,EAAA,EAAAA,OAC8B,IAAlC,EAAKN,QAAQ/Y,UAAUpO,SACrBynB,GAAgC,IAAtBA,EAAOpB,YACnBoB,EAAOQ,QAET,EAAKT,kBAGFle,GAGT,YAAAW,YAAA,WACE,IAAQ0B,EAAR,KAAQA,OAAQ8b,EAAhB,KAAgBA,OACZA,GAAgC,IAAtBA,EAAOpB,aACnBoB,EAAOQ,QACPzhB,KAAKghB,eAEP,YAAMvd,YAAW,WACZ0B,IACHnF,KAAK6G,YAAc,IAAI,EAAAsB,gBAG7B,EA3PA,CAAyC,EAAAC,kBAA5B,EAAA0Y,iBAAgB,G,6BC5B7B,QAAqD,OAExC,EAAArU,KAA2B,EAAAgQ,eAAehW,Q,6BCFvD,QAAmC,OAEtB,EAAAiG,UAAY,EAAAoU,iBAAiBra,Q,6BCF1C,QAAkC,OAErB,EAAAlC,MAAQ,EAAAoP,gBAAgBlN,Q,6BCFrC,QAAqC,OAExB,EAAAkG,SAAW,EAAA+J,mBAAmBjQ,Q,6BCF3C,QAAiC,MAEpB,EAAAlK,KAAO,EAAAkc,eAAehS,Q,6BCFnC,QAAsC,OAEzB,EAAAmG,UAAY,EAAAwK,oBAAoB3Q,Q,6BCF7C,QAA6C,OAEhC,EAAAoG,iBAAmB,EAAAsL,2BAA2B1R,Q,6BCF3D,QAAoC,MAEvB,EAAAqG,YAAc,EAAA6L,kBAAkBlS,Q,6BCF7C,QAAmC,OAEtB,EAAAsG,SAAW,EAAAqM,mBAAmB3S,Q,6BCF3C,QAA+B,OAElB,EAAAuG,IAAM,EAAAyM,aAAahT,Q,6BCFhC,QAAqC,IAExB,EAAAwG,SAAW,EAAA6M,mBAAmBrT,Q,6BCF3C,QAA4C,OAE5C,IAAgC,OAChC,IAA4B,OAC5B,IAAyB,OA8ET,EAAAyG,MAAhB,W,IAA4B,wDAC3B,IAAIiV,EAAajb,OAAOC,kBACpBF,EAAwB,KACvB6I,EAAYoM,EAAYA,EAAY1iB,OAAS,GAUjD,OATI,EAAAya,YAAYnE,IACd7I,EAAwBiV,EAAYhI,MAChCgI,EAAY1iB,OAAS,GAAoD,iBAAxC0iB,EAAYA,EAAY1iB,OAAS,KACpE2oB,EAAqBjG,EAAYhI,QAEV,iBAATpE,IAChBqS,EAAqBjG,EAAYhI,OAGjB,OAAdjN,GAA6C,IAAvBiV,EAAY1iB,QAAgB0iB,EAAY,aAAc,EAAA7X,WACxD6X,EAAY,GAG7B,EAAA9L,SAAS+R,EAAT,CAAqB,IAAI,EAAAnO,gBAAqBkI,EAAajV,M,6BCnGpE,QAAkC,OAErB,EAAAkG,MAAQ,EAAAyN,gBAAgBnU,Q,6BCFrC,QAAkC,OAErB,EAAAnC,GAAK,EAAA0P,gBAAgB1P,I,6BCFlC,QAAwC,OAE3B,EAAA8I,kBAAoB,EAAAgV,yB,6BCFjC,QAAkC,OAErB,EAAA/U,MAAQ,EAAA0N,gBAAgBtU,Q,oOCDrC,IAAwB,OACxB,IAAgC,OAIhC,IAAgC,OAEhC,IAAkC,OAalB,EAAA6G,KAAhB,W,IAAwB,wDAGtB,GAA2B,IAAvB4O,EAAY1iB,OAAc,CAC5B,IAAI,EAAAI,QAAQsiB,EAAY,IAGtB,OAAwBA,EAAY,GAFpCA,EAAsCA,EAAY,GAMtD,OAAO,IAAI,EAAAlI,gBAAwBkI,GAAalX,KAAK,IAAIqd,IAG3D,+BAIA,OAHE,YAAAhnB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIwd,EAAejgB,KAE/C,EAJA,GAAa,EAAAggB,aAAY,EAWzB,kBAKE,WAAYxb,GACV,YAAMA,GALA,KAAA0b,UAAoB,EACpB,KAAArG,YAAiC,GACjC,KAAAjQ,cAAgC,GAkD1C,OArDuC,OAS3B,YAAA5I,MAAV,SAAgB6B,GACdlF,KAAKkc,YAAY1gB,KAAK0J,IAGd,YAAAxB,UAAV,WACE,IAAMwY,EAAclc,KAAKkc,YACnB3iB,EAAM2iB,EAAY1iB,OAExB,GAAY,IAARD,EACFyG,KAAK6G,YAAYlE,eACZ,CACL,IAAK,IAAIlJ,EAAI,EAAGA,EAAIF,IAAQyG,KAAKuiB,SAAU9oB,IAAK,CAC9C,IAAIyL,EAAagX,EAAYziB,GACzBqJ,EAAe,EAAAwT,kBAAkBtW,KAAMkF,EAAYA,EAAYzL,GAE/DuG,KAAKiM,eACPjM,KAAKiM,cAAczQ,KAAKsH,GAE1B9C,KAAKuF,IAAIzC,GAEX9C,KAAKkc,YAAc,OAIvB,YAAA5Y,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT,IAAK5G,KAAKuiB,SAAU,CAClBviB,KAAKuiB,UAAW,EAEhB,IAAK,IAAI9oB,EAAI,EAAGA,EAAIuG,KAAKiM,cAAczS,OAAQC,IAC7C,GAAIA,IAAM2J,EAAY,CACpB,IAAIN,EAAe9C,KAAKiM,cAAcxS,GAEtCqJ,EAAaW,cACbzD,KAAKuL,OAAOzI,GAIhB9C,KAAKiM,cAAgB,KAGvBjM,KAAK6G,YAAYvL,KAAKoL,IAE1B,EArDA,CAAuC,EAAAI,iBAA1B,EAAAwb,eAAc,G,6BC9C3B,QAAkC,MAErB,EAAA/U,MAAQ,EAAA8N,gBAAgB5U,Q,6BCFrC,QAAkC,OAErB,EAAA+G,OAAS,EAAA+I,gBAAgB9P,Q,6BCFtC,QAAkC,OAErB,EAAAgH,MAAQ,EAAAkO,gBAAgBlV,Q,6BCFrC,QAAkC,OAErB,EAAAiH,MAAQ,EAAAmO,gBAAgBpV,Q,6BCFrC,QAA4B,MAEf,EAAAkH,IAAM,EAAA6U,W,6BCAnB,QAAqC,MA0CrB,EAAA5U,MAAhB,SAA8C6U,GAC5C,OAAO,QAAYA,EAAZ,CAA8BziB,Q,6BC7CvC,QAAsB,OAGtB,IAAyC,OA4CzB,EAAA6N,UAAhB,SAAkDnQ,EAAkBuJ,GAClE,YADkE,IAAAA,MAAA,SAC3D,YAAYvJ,EAAUuJ,EAAtB,CAAiCjH,Q,6BC9C1C,QAAsC,OAkCtB,EAAA8N,OAAhB,SAA+C4U,GAC7C,OAAO,SAAYA,EAAZ,CAA6B1iB,Q,6BCnCtC,QAA2C,OA2C3B,EAAA+N,YAAhB,SAAoDhH,EAAoB4b,GACtE,YADsE,IAAAA,MAAA,MAC/D,cAAY5b,EAAY4b,EAAxB,CAA0C3iB,Q,6BC7CnD,QAAsB,OAEtB,IAA4B,OAC5B,IAA0C,OAmD1B,EAAAgO,WAAhB,SAAmD4U,GACjD,IAAIppB,EAAiB2Q,UAAU3Q,OAE3ByN,EAAwB,EAAAmC,MACxB,EAAA6K,YAAY9J,UAAUA,UAAU3Q,OAAS,MAC3CyN,EAAYkD,UAAUA,UAAU3Q,OAAS,GACzCA,KAGF,IAAIqpB,EAAiC,KACjCrpB,GAAU,IACZqpB,EAAyB1Y,UAAU,IAGrC,IAAI2Y,EAAwB5b,OAAOC,kBAKnC,OAJI3N,GAAU,IACZspB,EAAgB3Y,UAAU,IAGrB,aAAYyY,EAAgBC,EAAwBC,EAAe7b,EAAnE,CAA8EjH,Q,6BCxEvF,QAA4C,OAwC5B,EAAAiO,aAAhB,SAAwD8U,EACrBC,GACjC,OAAO,eAAYD,EAAUC,EAAtB,CAAuChjB,Q,2BC1ChD,QAA0C,OAmC1B,EAAAkO,WAAhB,SAAmD8U,GACjD,OAAO,aAAYA,EAAZ,CAA6BhjB,Q,6BCpCtC,QAA0C,OA6D1B,EAAAmO,OAAhB,SAAkDiG,GAChD,OAAO,aAAYA,EAAZ,CAAsBpU,Q,6BC9D/B,QAA0C,MA0C1B,EAAAoO,WAAhB,SAAsD6N,GACpD,OAAO,aAAYA,EAAZ,CAAqBjc,Q,6BC5C9B,QAA6C,OA8D7B,EAAAuM,cAAhB,W,IAAyD,wDAGvD,OAAO,gBAAW,aAAI2P,EAAf,CAA4Blc,Q,6BChErC,QAAsC,OAEtC,IAAuC,OAA9B,iBAAA6L,OA8DO,EAAAA,OAAhB,W,IAAkD,wDAChD,OAAO,SAAW,aAAIqQ,EAAf,CAA4Blc,Q,6BCjErC,QAAyC,OAuDzB,EAAAqO,UAAhB,WACE,OAAY,cAAcrO,Q,6BC1D5B,QAAkD,OAmElC,EAAAsO,UAAhB,SAAwD2N,EACrBxF,GACjC,OAAO,YAAqBwF,EAASxF,EAA9B,CAA8CzW,Q,4BCpEvD,QAA2C,OA+D3B,EAAAuO,YAAhB,SAA0D0U,EACrBxM,GACnC,OAAO,cAAYwM,EAAiBxM,EAA7B,CAA6CzW,Q,6BCjEtD,QAAqC,OAkDrB,EAAAwO,MAAhB,SAA8C0U,GAC5C,OAAO,QAAYA,EAAZ,CAAuBljB,Q,6BClDhC,QAAwC,OA4CxB,EAAAyO,SAAhB,SAAiDgU,GAC/C,OAAO,WAAYA,EAAZ,CAA8BziB,Q,6BC5CvC,QAAsB,OACtB,IAA4C,OAgD5B,EAAA0O,aAAhB,SAAqD8M,EAAiBvU,GACpE,YADoE,IAAAA,MAAA,SAC7D,eAAYuU,EAASvU,EAArB,CAAgCjH,Q,6BCnDzC,QAA8C,OAqC9B,EAAA2O,eAAhB,SAA0DhQ,GACxD,YADwD,IAAAA,MAAA,MACjD,iBAAkBA,EAAlB,CAAgCqB,Q,6BCxCzC,QAAsB,OAGtB,IAAqC,OAyCrB,EAAAyJ,MAAhB,SAA8CA,EACrBxC,GACvB,YADuB,IAAAA,MAAA,SAChB,QAAewC,EAAOxC,EAAtB,CAAiCjH,Q,6BC5C1C,QAAyC,OA+CzB,EAAA4O,UAAhB,SAAkDuU,EACrBC,GAC3B,OAAO,YAAYD,EAAuBC,EAAnC,CAAsDpjB,Q,6BChD/D,QAA6C,OA0C7B,EAAA6O,cAAhB,WACE,OAAO,kBAAc7O,Q,6BC7CvB,QAAwC,MA+CxB,EAAA8O,SAAhB,SAC+BuU,EACAC,GAC7B,OAAO,WAAYD,EAAaC,EAAzB,CAAkCtjB,Q,6BCjD3C,QAAoD,OA8CpC,EAAA+O,qBAAhB,SAAgEwU,EAAmCF,GACjG,OAAO,uBAAYE,EAASF,EAArB,CAAkCrjB,Q,6BC/C3C,QAAuD,OAgEvC,EAAAgP,wBAAhB,SAAgEvU,EAAa8oB,GAC3E,OAAO,0BAAkB9oB,EAAK8oB,EAAvB,CAAgCvjB,Q,6BChEzC,QAAmC,OAkDnB,EAAAiP,IAAhB,SAA4C9K,EACrB5B,EACAI,GACrB,OAAO,MAAiBwB,EAAgB5B,EAAOI,EAAxC,CAAkD3C,Q,4BCtD3D,QAAyC,OA4CzB,EAAAkP,UAAhB,SAAkDxQ,EAAeC,GAC/D,OAAO,YAAYD,EAAOC,EAAnB,CAAiCqB,Q,6BC7C1C,QAAqC,OAgBrB,EAAAmP,MAAhB,SAA8C+T,EACrBM,GACvB,OAAO,QAAYN,EAAWM,EAAvB,CAAgCxjB,Q,4BClBzC,QAAuC,OAqCvB,EAAAoP,QAAhB,WACE,OAAO,YAAcpP,Q,6BCtCvB,QAA0C,OAoD1B,EAAAqP,WAAhB,SAAyD4M,EACrBxF,GAClC,OAAO,aAAYwF,EAASxF,EAArB,CAAqCzW,Q,6BCtD9C,QAAsC,OAoDtB,EAAAsP,OAAhB,SAAkD2M,EACrBkG,EACAlb,GAG3B,YAJ2B,IAAAkb,MAAqBjb,OAAOC,wBAC5B,IAAAF,WAAA,GAC3Bkb,GAAcA,GAAc,GAAK,EAAIjb,OAAOC,kBAAoBgb,EAEzD,SAAYlG,EAASkG,EAAYlb,EAAjC,CAA4CjH,Q,6BCzDrD,QAA4C,OAkD5B,EAAAuP,OAAhB,SAA+C2T,EACrBM,GACxB,OAAO,SAAkBN,EAAWM,EAA7B,CAAsCxjB,Q,6BCpD/C,QAAyB,OAUT,EAAAwP,SAAhB,SAAiDiU,GAC/C,OAAO,EAAAC,SAASD,EAAT,CAAmBzjB,Q,6BCZ5B,QAAoC,OA4CpB,EAAAyP,KAAhB,SAA6CyT,EACrBM,GACtB,OAAO,OAAYN,EAAWM,EAAvB,CAAgCxjB,Q,6BC9CzC,QAAyC,OAmCzB,EAAAK,UAAhB,SAAkD6iB,EACrBM,GAC3B,OAAO,YAAYN,EAAWM,EAAvB,CAAgCxjB,Q,6BCrCzC,QAAqC,OAwErB,EAAA0P,MAAhB,SAAiDwT,EACrBzM,EACA9X,GAC1B,OAAO,QAAYukB,EAAWzM,EAAuB9X,EAA9C,CAA4DqB,Q,6BCzErE,QAA0D,MACjD,EAAA2jB,kBAAiB,oBA4EV,EAAAhU,QAAhB,SAAsD0T,EACrBO,EACAnB,EACAoB,GAC/B,OAAO,UAAYR,EAAaO,EAAwBnB,EAAkBoB,EAAnE,CAAoF7jB,Q,2BCnF7F,QAA8C,OAY9B,EAAA4P,eAAhB,WACE,OAAO,mBAAc5P,Q,6BCZvB,QAAuC,OAWvB,EAAA6P,QAAhB,WACE,OAAO,YAAc7P,Q,6BCbvB,QAAoC,OAyCpB,EAAA8P,KAAhB,SAAgDoT,EACrBzM,EACA9X,GACzB,OAAO,OAAYukB,EAAWzM,EAAuB9X,EAA9C,CAA4DqB,Q,0BCrCrD,EAAA+P,SAAhB,SAAoDuE,GAClD,OAAOA,EAAKtU,Q,6BCTd,QAAsC,OAoCtB,EAAAiQ,IAAhB,SAA+CgM,EAAyCuH,GACtF,OAAO,MAAevH,EAASuH,EAAxB,CAAiCxjB,Q,6BCpC1C,QAAqC,OA4BrB,EAAAkQ,MAAhB,SAAiDzU,GAC/C,OAAO,QAAYA,EAAZ,CAAmBuE,Q,6BC3B5B,QAA2C,OA8C3B,EAAAmQ,YAAhB,WACE,OAAO,gBAAcnQ,Q,6BCjDvB,QAAsC,OAiCtB,EAAAkI,IAAhB,SAA4C4b,GAC1C,OAAO,MAAeA,EAAf,CAAyB9jB,Q,6BCjClC,QAAqC,OAErC,IAAqC,OAA5B,gBAAAkN,MAiEO,EAAAA,MAAhB,W,IAAiD,wDAC/C,OAAO,QAAW,aAAIgP,EAAf,CAA4Blc,Q,6BCpErC,QAAwC,OAiDxB,EAAAoQ,SAAhB,SAAiD+R,GAC/C,YAD+C,IAAAA,MAAqBjb,OAAOC,mBACpE,WAAYgb,EAAZ,CAAwBniB,Q,6BCnDjC,QAAgD,OAiEhC,EAAAqQ,SAAhB,SAAuD4L,EACrBxF,EACA0L,GAChC,YADgC,IAAAA,MAAqBjb,OAAOC,mBACrD,WAAoB8U,EAAcxF,EAAgB0L,EAAlD,CAA8DniB,Q,4BCpEvE,QAA0C,OAkD1B,EAAAwQ,WAAhB,SAAyDyS,EACrBxM,EACA0L,GAClC,YADkC,IAAAA,MAAqBjb,OAAOC,mBACvD,aAAY8b,EAAiBxM,EAAuB0L,EAApD,CAAgEniB,Q,6BCpDzE,QAAyC,OAiCzB,EAAAyQ,UAAhB,SACgCsT,EACAC,EACA7B,GAC9B,YAD8B,IAAAA,MAAqBjb,OAAOC,mBACnD,YAAY4c,EAAaC,EAAM7B,EAA/B,CAA2CniB,Q,6BCtCpD,QAAsC,OAiCtB,EAAA0Q,IAAhB,SAA4CoT,GAC1C,OAAO,MAAeA,EAAf,CAAyB9jB,Q,6BChClC,QAAyC,OAuGzB,EAAA2Q,UAAhB,SAAqDsT,EACrB7P,GAC9B,OAAO,YAAiB6P,EAAyB7P,EAA1C,CAAoDpU,Q,6BC1G7D,QAAyC,OAgDzB,EAAA4Q,UAAhB,SAAkD3J,EAAuBwC,GACvE,YADuE,IAAAA,MAAA,GAChE,YAAYxC,EAAWwC,EAAvB,CAA8BzJ,Q,6BClDvC,QAAiD,OA0EjC,EAAAoN,kBAAhB,W,IAA6D,wDAG3D,OAAO,oBAAW,aAAI8W,EAAf,CAA4BlkB,Q,6BC7ErC,QAAwC,OAqCxB,EAAA6Q,SAAhB,WACE,OAAO,aAAc7Q,Q,6BCtCvB,QAAyC,KA0CzB,EAAA8Q,UAAhB,SAAkDoS,EAAiDM,GACjG,OAAO,YAAYN,EAAWM,EAAvB,CAAgCxjB,Q,6BC3CzC,QAAqC,MA4BrB,EAAA+Q,MAAhB,W,IAAiD,wDAC/C,OAAO,QAAW,aAAIoT,EAAf,CAA2BnkB,Q,6BC3BpC,QAAuC,OAqBvB,EAAAgR,QAAhB,SAAmDoD,GACjD,OAAO,UAAYA,EAAZ,CAAsBpU,Q,6BCvB/B,QAA+C,OAQ/B,EAAAiR,gBAAhB,SAAwDxV,GACtD,OAAO,kBAAYA,EAAZ,CAAmBuE,Q,6BCT5B,QAA2C,OAM3B,EAAAkR,YAAhB,WAEE,OAAO,gBAAclR,Q,6BCPvB,QAA6C,MAkB7B,EAAAmR,cAAhB,SAAyDpK,EACrBC,EACAod,EACAnd,GAElC,OAAO,gBAAkBF,EAAYC,EAAYod,EAA4Bnd,EAAtE,CAAiFjH,Q,6BCzB1F,QAAoC,MAGpC,IAAmC,OAA1B,eAAAsN,KAiBO,EAAAA,KAAhB,W,IAA6C,wDAC3C,OAAO,OAAW,aAAI4O,EAAf,CAA4Blc,Q,6BCrBrC,QAA4C,OAoD5B,EAAAmM,OAAhB,SAAkD4X,EAAsDC,GAMtG,OAAI7Z,UAAU3Q,QAAU,EACf,SAAkBuqB,EAAaC,EAA/B,CAAqChkB,MAGvC,SAAkB+jB,EAAlB,CAA+B/jB,Q,6BC7DxC,QAAsC,OActB,EAAAoR,OAAhB,SAA+C5C,GAC7C,YAD6C,IAAAA,OAAiB,GACvD,SAAYA,EAAZ,CAAmBxO,Q,6BChB5B,QAA0C,OAgB1B,EAAAqR,WAAhB,SAAmDgT,GACjD,OAAO,aAAYA,EAAZ,CAAsBrkB,Q,6BCjB/B,QAAqC,MAkBrB,EAAAsR,MAAhB,SAA8C9C,GAC5C,YAD4C,IAAAA,OAAiB,GACtD,QAAYA,EAAZ,CAAmBxO,Q,6BCnB5B,QAAyC,OAezB,EAAAuR,UAAhB,SAAkD8S,GAChD,OAAO,YAAYA,EAAZ,CAAsBrkB,Q,6BChB/B,QAAsC,OAoCtB,EAAAwR,OAAhB,SAA+C6S,GAC7C,OAAO,SAAYA,EAAZ,CAAsBrkB,Q,6BCpC/B,QAAsB,OACtB,IAA0C,OAsC1B,EAAAyR,WAAhB,SAAmDmI,EAAgB3S,GACjE,YADiE,IAAAA,MAAA,SAC1D,aAAY2S,EAAQ3S,EAApB,CAA+BjH,Q,6BCxCxC,QAAwC,OA6CxB,EAAA0R,KAAhB,SAAgDqS,EAAqDC,GACnG,OAAI7Z,UAAU3Q,QAAU,EACf,OAAgBuqB,EAAaC,EAA7B,CAAmChkB,MAErC,OAAgB+jB,EAAhB,CAA6B/jB,Q,4BClDtC,QAA6C,OAsD7B,EAAA2R,cAAhB,SAAsD2S,EACrBC,GAC/B,OAAO,gBAAYD,EAAWC,EAAvB,CAAiCvkB,Q,6BCxD1C,QAAqC,OAkBrB,EAAA4R,MAAhB,WACE,OAAO,UAAc5R,Q,6BClBvB,QAA2C,OAM3B,EAAA6R,YAAhB,SAAoD9K,EAAqBC,EAAqBC,GAE5F,OAAO,cAAYF,EAAYC,EAAYC,EAApC,CAA+CjH,Q,6BCTxD,QAAsC,MAkBtB,EAAA8R,OAAhB,SAA+CoR,GAC7C,OAAO,SAAYA,EAAZ,CAAuBljB,Q,4BCnBhC,QAAoC,OAapB,EAAA+R,KAAhB,SAA6CvD,GAC3C,OAAO,OAAYA,EAAZ,CAAmBxO,Q,6BCd5B,QAAwC,OAkCxB,EAAAgS,SAAhB,SAAiDxD,GAC/C,OAAO,WAAYA,EAAZ,CAAmBxO,Q,6BCnC5B,QAAyC,OAczB,EAAAiS,UAAhB,SAAkDoS,GAChD,OAAO,YAAYA,EAAZ,CAAsBrkB,Q,6BCf/B,QAAyC,OAczB,EAAAkS,UAAhB,SAAkDgR,GAChD,OAAO,YAAYA,EAAZ,CAAuBljB,Q,6BCdhC,QAAyC,OA0BzB,EAAAmS,UAAhB,W,IAAkD,wDAChD,OAAO,YAAW,aAAI4B,EAAf,CAAsB/T,Q,6BC1B/B,QAA2C,OAa3B,EAAAoS,YAAhB,SAAoDnL,EAAuBwC,GACzE,YADyE,IAAAA,MAAA,GAClE,cAAYxC,EAAWwC,EAAvB,CAA8BzJ,Q,6BChBvC,QAAyC,OA4CzB,EAAAqS,QAAhB,WACE,OAAO,cAAcrS,Q,4BC5CvB,QAAkD,OAsDlC,EAAAsS,UAAhB,SAAwD2J,EACrBxF,GACjC,OAAO,YAAqBwF,EAASxF,EAA9B,CAA8CzW,Q,6BCzDvD,QAA2C,OAiD3B,EAAAuS,YAAhB,SAA0D0Q,EACrBxM,GAInC,OAAO,cAAYwM,EAAiBxM,EAA7B,CAA6CzW,Q,6BCtDtD,QAAoC,MAmCpB,EAAAwS,KAAhB,SAA6ChE,GAC3C,OAAO,OAAYA,EAAZ,CAAmBxO,Q,6BCnC5B,QAAgD,OAsChC,EAAAyS,SAAhB,SAAiDjE,GAC/C,OAAO,WAAoBA,EAApB,CAA2BxO,Q,6BCxCpC,QAAyC,OAmCzB,EAAA0S,UAAhB,SAAkD2R,GAChD,OAAO,YAAYA,EAAZ,CAAsBrkB,Q,6BCpC/B,QAAyC,OAsCzB,EAAA2S,UAAhB,SAAkDuQ,GAChD,OAAO,YAAYA,EAAZ,CAAuBljB,Q,6BCvChC,QAA+E,OA0C/D,EAAA4S,SAAhB,SAC4B6P,EACAzc,GAC1B,YAD0B,IAAAA,MAAA,yBACnB,WAAYyc,EAAkBzc,EAA9B,CAAsChG,Q,6BC5C/C,QAAsB,OACtB,IAAsD,OACtD,IAA4C,OAyC5B,EAAA6S,aAAhB,SACgCnV,EACAuJ,EACAjB,GAC9B,YAF8B,IAAAiB,MAAA,cACA,IAAAjB,MAAA,yBACvB,eAAYtI,EAAUuJ,EAAWjB,EAAjC,CAAyChG,Q,6BC/ClD,QAAsB,OACtB,IAA0D,OAClD,EAAA0I,aAAY,eAQJ,EAAAoK,aAAhB,SAAqD7L,GACnD,YADmD,IAAAA,MAAA,SAC5C,eAAYA,EAAZ,CAAuBjH,Q,6BCbhC,QAAsB,OAGtB,IAAuC,OAmEvB,EAAA+S,QAAhB,SAC2ByR,EACAvd,GACzB,YADyB,IAAAA,MAAA,SAClB,UAAYud,EAAKvd,EAAjB,CAA4BjH,Q,6BCxErC,QAAsB,OAEtB,IAA2C,OAsD3B,EAAAgT,YAAhB,SAAuDwR,EACrBC,EACAxd,GAChC,YADgC,IAAAA,MAAA,SACzB,cAAYud,EAAKC,EAAgBxd,EAAjC,CAA4CjH,Q,6BC1DrD,QAAsB,OACtB,IAAyC,OAQzB,EAAAiT,UAAhB,SAAkDhM,GAChD,YADgD,IAAAA,MAAA,SACzC,YAAYA,EAAZ,CAAuBjH,Q,6BCVhC,QAAuC,OAyBvB,EAAAkT,QAAhB,WACE,OAAO,YAAclT,Q,6BC1BvB,QAAsC,OAsCtB,EAAAmT,OAAhB,SAA+CuR,GAC7C,OAAO,SAAYA,EAAZ,CAA8B1kB,Q,6BCvCvC,QAA2C,OAkD3B,EAAAoT,YAAhB,SAAoDuR,EACrBC,GAC7B,YAD6B,IAAAA,MAAA,GACtB,cAAYD,EAAYC,EAAxB,CAA0C5kB,Q,6BCrDnD,QAAsB,OAEtB,IAA0B,OAC1B,IAA4B,OAC5B,IAA0C,OAwE1B,EAAAgH,WAAhB,SAC8B6d,GAE5B,IAAI5d,EAAwB,EAAAmC,MACxB0b,EAAiC,KACjCC,EAAwB7d,OAAOC,kBAkBnC,OAhBI,EAAA8M,YAAY9J,UAAU,MACxBlD,EAAYkD,UAAU,IAGpB,EAAA8J,YAAY9J,UAAU,IACxBlD,EAAYkD,UAAU,GACb,EAAA0P,UAAU1P,UAAU,MAC7B4a,EAAgB5a,UAAU,IAGxB,EAAA8J,YAAY9J,UAAU,IACxBlD,EAAYkD,UAAU,GACb,EAAA0P,UAAU1P,UAAU,MAC7B2a,EAAyB3a,UAAU,IAG9B,aAAY0a,EAAgBC,EAAwBC,EAAe9d,EAAnE,CAA8EjH,Q,6BClGvF,QAA4C,OA2C5B,EAAAqT,aAAhB,SAAwD0P,EACrBC,GACjC,OAAO,eAAYD,EAAUC,EAAtB,CAAuChjB,Q,6BC7ChD,QAA0C,OAwC1B,EAAAsT,WAAhB,SAAmD0P,GACjD,OAAO,aAAYA,EAAZ,CAA6BhjB,Q,6BC1CtC,QAA8C,OAyD9B,EAAAuT,eAAhB,W,IAA0D,wDACxD,OAAO,iBAAW,aAAIc,EAAf,CAAqBrU,Q,6BC1D9B,QAAmC,MA0BnB,EAAAwT,SAAhB,W,IAAoD,wDAClD,OAAO,MAAW,aAAI0I,EAAf,CAA4Blc,Q,6BC3BrC,QAAsC,OAQtB,EAAAyT,OAAhB,SAAkDwI,GAChD,OAAO,SAAYA,EAAZ,CAAqBjc,Q,4BCV9B,QAAsB,MAAb,EAAA4N,MAAA,EAAAA,MACT,QAA0B,OAAjB,EAAAC,UAAA,EAAAA,UACT,QAAuB,OAAd,EAAAC,OAAA,EAAAA,OACT,QAA4B,OAAnB,EAAAC,YAAA,EAAAA,YACT,QAA2B,OAAlB,EAAAC,WAAA,EAAAA,WACT,QAA6B,OAApB,EAAAC,aAAA,EAAAA,aACT,QAA2B,OAAlB,EAAAC,WAAA,EAAAA,WACT,QAA2B,OAAlB,EAAA8W,WAAA,EAAAA,WACT,QAA2B,MAAlB,EAAA5W,WAAA,EAAAA,WACT,QAA8B,OAArB,EAAA7B,cAAA,EAAAA,cACT,QAAuB,OAAd,EAAAV,OAAA,EAAAA,OACT,QAA0B,OAAjB,EAAAwC,UAAA,EAAAA,UACT,QAA0B,OAAjB,EAAAC,UAAA,EAAAA,UACT,QAA4B,OAAnB,EAAAC,YAAA,EAAAA,YACT,QAAsB,OAAb,EAAAC,MAAA,EAAAA,MACT,QAAyB,OAAhB,EAAAC,SAAA,EAAAA,SACT,QAA6B,OAApB,EAAAC,aAAA,EAAAA,aACT,QAA+B,OAAtB,EAAAC,eAAA,EAAAA,eACT,QAAsB,OAAb,EAAAlF,MAAA,EAAAA,MACT,QAA0B,OAAjB,EAAAmF,UAAA,EAAAA,UACT,QAA8B,OAArB,EAAAC,cAAA,EAAAA,cACT,QAAyB,MAAhB,EAAAC,SAAA,EAAAA,SACT,QAAqC,OAA5B,EAAAC,qBAAA,EAAAA,qBACT,QAAwC,OAA/B,EAAAC,wBAAA,EAAAA,wBACT,QAA0B,OAAjB,EAAAE,UAAA,EAAAA,UACT,QAAsB,OAAb,EAAAC,MAAA,EAAAA,MACT,QAAwB,OAAf,EAAAC,QAAA,EAAAA,QACT,QAA2B,OAAlB,EAAAC,WAAA,EAAAA,WACT,QAAuB,OAAd,EAAAC,OAAA,EAAAA,OACT,QAAuB,OAAd,EAAAC,OAAA,EAAAA,OACT,QAAyB,OAAhB,EAAAmU,SAAA,EAAAA,SACT,QAAqB,OAAZ,EAAAjU,KAAA,EAAAA,KACT,QAA0B,OAAjB,EAAApP,UAAA,EAAAA,UACT,QAAsB,OAAb,EAAAqP,MAAA,EAAAA,MACT,QAAwB,MAAf,EAAAC,QAAA,EAAAA,QACT,QAA+B,OAAtB,EAAAC,eAAA,EAAAA,eACT,QAAwB,OAAf,EAAAC,QAAA,EAAAA,QACT,QAAqB,OAAZ,EAAAC,KAAA,EAAAA,KACT,QAAoB,OAAX,EAAAG,IAAA,EAAAA,IACT,QAAsB,OAAb,EAAAC,MAAA,EAAAA,MACT,QAA4B,OAAnB,EAAAC,YAAA,EAAAA,YACT,QAAoB,OAAX,EAAAjI,IAAA,EAAAA,IACT,QAAsB,OAAb,EAAAgF,MAAA,EAAAA,MACT,QAAyB,OAAhB,EAAAkD,SAAA,EAAAA,SACT,QAAyB,OAAhB,EAAAC,SAAA,EAAAA,SACT,QAAoC,OAA3B,YAAAA,SACT,QAA2B,OAAlB,EAAAG,WAAA,EAAAA,WACT,QAA0B,OAAjB,EAAAC,UAAA,EAAAA,UACT,QAAoB,OAAX,EAAAC,IAAA,EAAAA,IACT,QAA0B,OAAjB,EAAAC,UAAA,EAAAA,UACT,QAA0B,OAAjB,EAAAC,UAAA,EAAAA,UACT,SAAkC,OAAzB,EAAAxD,kBAAA,GAAAA,kBACT,SAAyB,OAAhB,EAAAyD,SAAA,GAAAA,SACT,SAA0B,KAAjB,EAAAC,UAAA,GAAAA,UACT,SAAsB,MAAb,EAAAC,MAAA,GAAAA,MACT,SAAwB,OAAf,EAAAC,QAAA,GAAAA,QACT,SAAgC,OAAvB,EAAAC,gBAAA,GAAAA,gBACT,SAA4B,OAAnB,EAAAC,YAAA,GAAAA,YACT,SAA8B,MAArB,EAAAC,cAAA,GAAAA,cACT,SAAqB,MAAZ,EAAA7D,KAAA,GAAAA,KACT,SAAuB,OAAd,EAAAnB,OAAA,GAAAA,OACT,SAAuB,OAAd,EAAAiF,OAAA,GAAAA,OACT,SAA2B,OAAlB,EAAAC,WAAA,GAAAA,WACT,SAAsB,MAAb,EAAAC,MAAA,GAAAA,MACT,SAA0B,OAAjB,EAAAC,UAAA,GAAAA,UACT,SAAyB,OAAhB,EAAAoE,SAAA,GAAAA,SACT,SAAuB,OAAd,EAAAnE,OAAA,GAAAA,OACT,SAA2B,OAAlB,EAAAC,WAAA,GAAAA,WACT,SAAqB,OAAZ,EAAAC,KAAA,GAAAA,KACT,SAA8B,OAArB,EAAAC,cAAA,GAAAA,cACT,SAAsB,OAAb,EAAAC,MAAA,GAAAA,MACT,SAA4B,OAAnB,EAAAC,YAAA,GAAAA,YACT,SAAuB,MAAd,EAAAC,OAAA,GAAAA,OACT,SAAqB,OAAZ,EAAAC,KAAA,GAAAA,KACT,SAAyB,OAAhB,EAAAC,SAAA,GAAAA,SACT,SAA0B,OAAjB,EAAAC,UAAA,GAAAA,UACT,SAA0B,OAAjB,EAAAC,UAAA,GAAAA,UACT,SAA0B,OAAjB,EAAAC,UAAA,GAAAA,UAQT,SAA0B,OAAjB,EAAA8S,UAAA,GAAAA,UACT,SAA0B,OAAjB,EAAA3S,UAAA,GAAAA,UACT,SAA4B,OAAnB,EAAAC,YAAA,GAAAA,YACT,SAAqB,MAAZ,EAAAC,KAAA,GAAAA,KACT,SAAyB,OAAhB,EAAAC,SAAA,GAAAA,SACT,SAA0B,OAAjB,EAAAC,UAAA,GAAAA,UACT,SAA0B,OAAjB,EAAAC,UAAA,GAAAA,UACT,SAAoB,OAAX,EAAAuS,IAAA,GAAAA,IACT,SAAyB,OAAhB,EAAAtS,SAAA,GAAAA,SACT,SAA6B,OAApB,EAAAC,aAAA,GAAAA,aACT,SAA6B,OAApB,EAAAC,aAAA,GAAAA,aACT,SAAwB,OAAf,EAAAC,QAAA,GAAAA,QACT,SAA4B,OAAnB,EAAAC,YAAA,GAAAA,YACT,SAA0B,OAAjB,EAAAC,UAAA,GAAAA,UACT,SAAwB,OAAf,EAAAC,QAAA,GAAAA,QACT,SAAuB,OAAd,EAAAC,OAAA,GAAAA,OACT,SAA4B,OAAnB,EAAAC,YAAA,GAAAA,YACT,SAA2B,OAAlB,EAAApM,WAAA,GAAAA,WACT,SAA6B,OAApB,EAAAqM,aAAA,GAAAA,aACT,SAA2B,OAAlB,EAAAC,WAAA,GAAAA,WACT,SAA+B,OAAtB,EAAAC,eAAA,GAAAA,eACT,SAAoB,MAAX,EAAA5F,IAAA,GAAAA,IACT,SAAuB,OAAd,EAAA8F,OAAA,GAAAA,Q,mOCtGT,IAAyB,OACzB,IAA4B,MAC5B,IAAgC,OAChC,IAAkC,OA2ClB,EAAA7F,MAAhB,SAAyB6U,GACvB,OAAO,SAA+Btd,GACpC,OAAOA,EAAOH,KAAK,IAAImgB,EAAc1C,MAIzC,iBACE,WAAoBA,GAAA,KAAAA,mBAMtB,OAHE,YAAApnB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIsgB,EAAsB/iB,EAAYrC,KAAKyiB,oBAEvE,EAPA,GAcA,cAME,WAAY5b,EACQ4b,GAClB,YAAM5b,GADY,KAAA4b,mBAJZ,KAAA1e,UAAoB,EA+C9B,OAlDoC,OAWxB,YAAAV,MAAV,SAAgB5H,GAGd,GAFAuE,KAAKvE,MAAQA,EACbuE,KAAK+D,UAAW,GACX/D,KAAKqlB,UAAW,CACnB,IAAM3nB,EAAW,EAAA8N,SAASxL,KAAKyiB,iBAAd,CAAgChnB,GACjD,GAAIiC,IAAa,EAAA+N,YACfzL,KAAK6G,YAAYtE,MAAM,EAAAkJ,YAAY5O,OAC9B,CACL,IAAMka,EAAoB,EAAAT,kBAAkBtW,KAAMtC,GAC9CqZ,EAAkBhU,OACpB/C,KAAKslB,gBAELtlB,KAAKuF,IAAIvF,KAAKqlB,UAAYtO,MAMlC,YAAAuO,cAAA,WACE,WAAQ7pB,EAAA,EAAAA,MAAOsI,EAAA,EAAAA,SAAUshB,EAAA,EAAAA,UACrBA,IACFrlB,KAAKuL,OAAO8Z,GACZrlB,KAAKqlB,UAAY,KACjBA,EAAU5hB,eAERM,IACF/D,KAAKvE,MAAQ,KACbuE,KAAK+D,UAAW,EAChB/D,KAAK6G,YAAYvL,KAAKG,KAI1B,YAAA6H,WAAA,SAAWH,EAAeuD,EAAetD,EAAoBuD,GAC3D3G,KAAKslB,iBAGP,YAAA3hB,eAAA,WACE3D,KAAKslB,iBAET,EAlDA,CAAoC,EAAAxe,kB,6BCvEpC,QAAsB,OAEtB,IAAsB,MACtB,IAAsB,OA6CN,EAAA+G,UAAhB,SAA6BnQ,EAAkBuJ,GAC7C,YAD6C,IAAAA,MAAA,SACtC,EAAA2G,OAAM,WAAM,SAAAH,MAAM/P,EAAN,Q,oOC9CrB,IAAgC,OAEhC,IAAkC,OAmClB,EAAAoQ,OAAhB,SAA0B4U,GACxB,OAAO,SAAgCvd,GACrC,OAAOA,EAAOH,KAAK,IAAIugB,EAAkB7C,MAI7C,iBAEE,WAAoBA,GAAA,KAAAA,kBAMtB,OAHE,YAAArnB,KAAA,SAAKgH,EAA6B8C,GAChC,OAAOA,EAAOL,UAAU,IAAI0gB,EAAiBnjB,EAAYrC,KAAK0iB,mBAElE,EARA,GAeA,cAGE,WAAY7b,EAA8B6b,GACxC,YAAM7b,GAHA,KAAAiH,OAAc,GAIpB9N,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAM0iB,IAcrC,OAnBkC,OAQtB,YAAArf,MAAV,SAAgB5H,GACduE,KAAK8N,OAAOtS,KAAKC,IAGnB,YAAA6H,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT,IAAMkH,EAAS9N,KAAK8N,OACpB9N,KAAK8N,OAAS,GACd9N,KAAK6G,YAAYvL,KAAKwS,IAE1B,EAnBA,CAAkC,EAAAhH,kB,oOC5DlC,IAA2B,MA8CX,EAAAiH,YAAhB,SAA+BhH,EAAoB4b,GACjD,YADiD,IAAAA,MAAA,MAC1C,SAAqCxd,GAC1C,OAAOA,EAAOH,KAAK,IAAIygB,EAAuB1e,EAAY4b,MAI9D,iBAGE,WAAoB5b,EAA4B4b,GAA5B,KAAA5b,aAA4B,KAAA4b,mBAI5C3iB,KAAK0lB,gBAHF/C,GAAoB5b,IAAe4b,EAGfgD,EAFAC,EAS7B,OAHE,YAAAvqB,KAAA,SAAKgH,EAA6B8C,GAChC,OAAOA,EAAOL,UAAU,IAAI9E,KAAK0lB,gBAAgBrjB,EAAYrC,KAAK+G,WAAY/G,KAAK2iB,oBAEvF,EAdA,GAqBA,cAGE,WAAY9b,EAAsCE,GAChD,YAAMF,GAD0C,KAAAE,aAF1C,KAAA+G,OAAc,GAwBxB,OAzBuC,OAO3B,YAAAzK,MAAV,SAAgB5H,GACd,IAAMqS,EAAS9N,KAAK8N,OAEpBA,EAAOtS,KAAKC,GAERqS,EAAOtU,QAAUwG,KAAK+G,aACxB/G,KAAK6G,YAAYvL,KAAKwS,GACtB9N,KAAK8N,OAAS,KAIR,YAAApK,UAAV,WACE,IAAMoK,EAAS9N,KAAK8N,OAChBA,EAAOtU,OAAS,GAClBwG,KAAK6G,YAAYvL,KAAKwS,GAExB,YAAMpK,UAAS,YAEnB,EAzBA,CAAuC,EAAAE,YAgCvC,cAIE,WAAYiD,EAAsCE,EAA4B4b,GAC5E,YAAM9b,GAD0C,KAAAE,aAA4B,KAAA4b,mBAHtE,KAAAkD,QAAsB,GACtB,KAAArX,MAAgB,EAoC1B,OAtC2C,OAQ/B,YAAAnL,MAAV,SAAgB5H,GACd,WAAQsL,EAAA,EAAAA,WAAY4b,EAAA,EAAAA,iBAAkBkD,EAAA,EAAAA,QAASrX,EAAA,EAAAA,MAE/CxO,KAAKwO,QACDA,EAAQmU,GAAqB,GAC/BkD,EAAQrqB,KAAK,IAGf,IAAK,IAAI/B,EAAIosB,EAAQrsB,OAAQC,KAAO,CAClC,IAAMqU,EAAS+X,EAAQpsB,GACvBqU,EAAOtS,KAAKC,GACRqS,EAAOtU,SAAWuN,IACpB8e,EAAQ7kB,OAAOvH,EAAG,GAClBuG,KAAK6G,YAAYvL,KAAKwS,MAKlB,YAAApK,UAAV,WAGE,IAFA,IAAQmiB,EAAR,KAAQA,QAAShf,EAAjB,KAAiBA,YAEVgf,EAAQrsB,OAAS,GAAG,CACzB,IAAIsU,EAAS+X,EAAQ5Q,QACjBnH,EAAOtU,OAAS,GAClBqN,EAAYvL,KAAKwS,GAGrB,YAAMpK,UAAS,YAGnB,EAtCA,CAA2C,EAAAE,a,oOCvG3C,IAAsB,OAEtB,IAA2B,MAE3B,IAA4B,OAoDZ,EAAAoK,WAAhB,SAA8B4U,GAC5B,IAAIppB,EAAiB2Q,UAAU3Q,OAE3ByN,EAAwB,EAAAmC,MACxB,EAAA6K,YAAY9J,UAAUA,UAAU3Q,OAAS,MAC3CyN,EAAYkD,UAAUA,UAAU3Q,OAAS,GACzCA,KAGF,IAAIqpB,EAAiC,KACjCrpB,GAAU,IACZqpB,EAAyB1Y,UAAU,IAGrC,IAAI2Y,EAAwB5b,OAAOC,kBAKnC,OAJI3N,GAAU,IACZspB,EAAgB3Y,UAAU,IAGrB,SAAoChF,GACzC,OAAOA,EAAOH,KAAK,IAAI8gB,EAAsBlD,EAAgBC,EAAwBC,EAAe7b,MAIxG,iBACE,WAAoB2b,EACAC,EACAC,EACA7b,GAHA,KAAA2b,iBACA,KAAAC,yBACA,KAAAC,gBACA,KAAA7b,YAQtB,OALE,YAAA5L,KAAA,SAAKgH,EAA6B8C,GAChC,OAAOA,EAAOL,UAAU,IAAIihB,EAC1B1jB,EAAYrC,KAAK4iB,eAAgB5iB,KAAK6iB,uBAAwB7iB,KAAK8iB,cAAe9iB,KAAKiH,aAG7F,EAZA,GAcA,aACE,KAAA6G,OAAc,IAgBhB,cAIE,WAAYjH,EACQ+b,EACAC,EACAC,EACA7b,GAClB,YAAMJ,GAJY,KAAA+b,iBACA,KAAAC,yBACA,KAAAC,gBACA,KAAA7b,YAPZ,KAAA+e,SAA8B,GASpC,IAAMrb,EAAU3K,KAAKimB,cAErB,GADAjmB,KAAKkmB,aAAyC,MAA1BrD,GAAkCA,EAAyB,EAC3E7iB,KAAKkmB,aAAc,CACrB,IAAMC,EAAoB,CAAE9jB,WAAYrC,KAAM2K,UAASiY,kBACvD5iB,KAAKuF,IAAIoF,EAAQyb,YAAcnf,EAAUsC,SAAS8c,EAA4BzD,EAAgBuD,QACzF,CACL,IAAMG,EAAa,CAAEjkB,WAAYrC,KAAM2K,WACjC4b,EAAkC,CAAE3D,iBAAgBC,yBAAwBxgB,WAAYrC,KAAMiH,aACpGjH,KAAKuF,IAAIoF,EAAQyb,YAAcnf,EAAUsC,SAASid,EAAqB5D,EAAgB0D,IACvFtmB,KAAKuF,IAAI0B,EAAUsC,SAASkd,EAAwB5D,EAAwB0D,KAqElF,OAxFsC,OAuB1B,YAAAljB,MAAV,SAAgB5H,GAId,IAHA,IAEIirB,EAFEV,EAAWhmB,KAAKgmB,SAChBzsB,EAAMysB,EAASxsB,OAEZC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAMkR,EAAUqb,EAASvsB,GACnBqU,EAASnD,EAAQmD,OACvBA,EAAOtS,KAAKC,GACRqS,EAAOtU,QAAUwG,KAAK8iB,gBACxB4D,EAAsB/b,GAItB+b,GACF1mB,KAAK2mB,aAAaD,IAIZ,YAAAnjB,OAAV,SAAiB7H,GACfsE,KAAKgmB,SAASxsB,OAAS,EACvB,YAAM+J,OAAM,UAAC7H,IAGL,YAAAgI,UAAV,WAEE,IADA,IAAQsiB,EAAR,KAAQA,SAAUnf,EAAlB,KAAkBA,YACXmf,EAASxsB,OAAS,GAAG,CAC1B,IAAMmR,EAAUqb,EAAS/Q,QACzBpO,EAAYvL,KAAKqP,EAAQmD,QAE3B,YAAMpK,UAAS,YAGoB,YAAAyH,aAAA,WACnCnL,KAAKgmB,SAAW,MAGR,YAAAW,aAAV,SAAuBhc,GACrB3K,KAAK4mB,aAAajc,GAClB,IAAMyb,EAAczb,EAAQyb,YAI5B,GAHAA,EAAY3iB,cACZzD,KAAKuL,OAAO6a,IAEPpmB,KAAK+C,QAAU/C,KAAKkmB,aAAc,CACrCvb,EAAU3K,KAAKimB,cACf,IAAMrD,EAAiB5iB,KAAK4iB,eACtBuD,EAAoB,CAAE9jB,WAAYrC,KAAM2K,UAASiY,kBACvD5iB,KAAKuF,IAAIoF,EAAQyb,YAAcpmB,KAAKiH,UAAUsC,SAAS8c,EAA4BzD,EAAgBuD,MAIvG,YAAAF,YAAA,WACE,IAAMtb,EAAsB,IAAIkc,EAEhC,OADA7mB,KAAKgmB,SAASxqB,KAAKmP,GACZA,GAGT,YAAAic,aAAA,SAAajc,GACX3K,KAAK6G,YAAYvL,KAAKqP,EAAQmD,QAC9B,IAAMkY,EAAWhmB,KAAKgmB,UAEFA,EAAWA,EAAS/b,QAAQU,IAAY,IACzC,GACjBqb,EAAShlB,OAAOglB,EAAS/b,QAAQU,GAAU,IAGjD,EAxFA,CAAsC,EAAA/G,YA0FtC,SAASyiB,EAA8C3c,GACrD,IAAMrH,EAAwCqH,EAAMrH,WAE9CykB,EAAcpd,EAAMiB,QACtBmc,GACFzkB,EAAWukB,aAAaE,GAGrBzkB,EAAWU,SACd2G,EAAMiB,QAAUtI,EAAW4jB,cAC3Bvc,EAAMiB,QAAQyb,YAAcpmB,KAAKuJ,SAASG,EAAOA,EAAMkZ,iBAS3D,SAAS6D,EAA0D/c,GACzD,IAAAmZ,EAAA,EAAAA,uBAAwBD,EAAA,EAAAA,eAAgBvgB,EAAA,EAAAA,WAAY4E,EAAA,EAAAA,UACtD0D,EAAUtI,EAAW4jB,cAEtB5jB,EAAWU,SACdV,EAAWkD,IAAIoF,EAAQyb,YAAcnf,EAAUsC,SAAyBid,EAAqB5D,EAAgB,CAAEvgB,aAAYsI,aAFpF3K,KAGhCuJ,SAASG,EAAOmZ,IAI3B,SAAS2D,EAAuBzR,GACtB,IAAA1S,EAAA,EAAAA,WAAYsI,EAAA,EAAAA,QACpBtI,EAAWukB,aAAajc,K,oOCxO1B,IAA6B,OAC7B,IAAkC,OAClC,IAAgC,OA0ChB,EAAAsD,aAAhB,SACE8U,EACAC,GAEA,OAAO,SAAsC7d,GAC3C,OAAOA,EAAOH,KAAK,IAAI+hB,EAA2BhE,EAAUC,MAIhE,iBAEE,WAAoBD,EACAC,GADA,KAAAD,WACA,KAAAC,kBAMtB,OAHE,YAAA3nB,KAAA,SAAKgH,EAA6B8C,GAChC,OAAOA,EAAOL,UAAU,IAAIkiB,EAAuB3kB,EAAYrC,KAAK+iB,SAAU/iB,KAAKgjB,mBAEvF,EATA,GAqBA,cAGE,WAAYnc,EACQkc,EACAC,GAClB,YAAMnc,GAFY,KAAAkc,WACA,KAAAC,kBAJZ,KAAAgD,SAAoC,GAM1ChmB,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAM+iB,IAyFrC,OAhG2C,OAU/B,YAAA1f,MAAV,SAAgB5H,GAGd,IAFA,IAAMuqB,EAAWhmB,KAAKgmB,SAChBzsB,EAAMysB,EAASxsB,OACZC,EAAI,EAAGA,EAAIF,EAAKE,IACvBusB,EAASvsB,GAAGqU,OAAOtS,KAAKC,IAIlB,YAAA8H,OAAV,SAAiB7H,GAEf,IADA,IAAMsqB,EAAWhmB,KAAKgmB,SACfA,EAASxsB,OAAS,GAAG,CAC1B,IAAMmR,EAAUqb,EAAS/Q,QACzBtK,EAAQ7H,aAAaW,cACrBkH,EAAQmD,OAAS,KACjBnD,EAAQ7H,aAAe,KAEzB9C,KAAKgmB,SAAW,KAChB,YAAMziB,OAAM,UAAC7H,IAGL,YAAAgI,UAAV,WAEE,IADA,IAAMsiB,EAAWhmB,KAAKgmB,SACfA,EAASxsB,OAAS,GAAG,CAC1B,IAAMmR,EAAUqb,EAAS/Q,QACzBjV,KAAK6G,YAAYvL,KAAKqP,EAAQmD,QAC9BnD,EAAQ7H,aAAaW,cACrBkH,EAAQmD,OAAS,KACjBnD,EAAQ7H,aAAe,KAEzB9C,KAAKgmB,SAAW,KAChB,YAAMtiB,UAAS,YAGjB,YAAAJ,WAAA,SAAWH,EAAiBuD,EACjBtD,EAAoBuD,EACpBC,GACTzD,EAAanD,KAAKinB,YAAY9jB,GAAcnD,KAAKknB,WAAWxgB,IAG9D,YAAA/C,eAAA,SAAeiD,GACb5G,KAAKinB,YAAmBrgB,EAAU+D,UAG5B,YAAAuc,WAAR,SAAmBzrB,GACjB,IACE,IACMinB,EADkB1iB,KAAKgjB,gBACW3nB,KAAK2E,KAAMvE,GAC/CinB,GACF1iB,KAAKmnB,aAAazE,GAEpB,MAAOhnB,GACPsE,KAAKuD,OAAO7H,KAIR,YAAAurB,YAAR,SAAoBtc,GAClB,IAAMqb,EAAWhmB,KAAKgmB,SAEtB,GAAIA,GAAYrb,EAAS,CACf,IAAAmD,EAAA,EAAAA,OAAQhL,EAAA,EAAAA,aAChB9C,KAAK6G,YAAYvL,KAAKwS,GACtBkY,EAAShlB,OAAOglB,EAAS/b,QAAQU,GAAU,GAC3C3K,KAAKuL,OAAOzI,GACZA,EAAaW,gBAIT,YAAA0jB,aAAR,SAAqBzE,GACnB,IAAMsD,EAAWhmB,KAAKgmB,SAGhBljB,EAAe,IAAI,EAAAL,aACnBkI,EAAU,CAAEmD,OAFO,GAEChL,gBAC1BkjB,EAASxqB,KAAKmP,GAEd,IAAMoM,EAAoB,EAAAT,kBAAkBtW,KAAM0iB,EAAsB/X,IAEnEoM,GAAqBA,EAAkBhU,OAC1C/C,KAAKinB,YAAYtc,IAEVoM,EAAmBpM,QAAUA,EAEpC3K,KAAKuF,IAAIwR,GACTjU,EAAayC,IAAIwR,KAGvB,EAhGA,CAA2C,EAAAjQ,kB,oOC1E3C,IAA6B,OAC7B,IAAyB,OACzB,IAA4B,MAC5B,IAAgC,OAEhC,IAAkC,OAoClB,EAAAoH,WAAhB,SAA8B8U,GAC5B,OAAO,SAAU7d,GACf,OAAOA,EAAOH,KAAK,IAAIoiB,EAAmBpE,MAI9C,iBAEE,WAAoBA,GAAA,KAAAA,kBAMtB,OAHE,YAAA3nB,KAAA,SAAKgH,EAA6B8C,GAChC,OAAOA,EAAOL,UAAU,IAAIuiB,EAAqBhlB,EAAYrC,KAAKgjB,mBAEtE,EARA,GAeA,cAKE,WAAYnc,EAAsCmc,GAChD,YAAMnc,GAD0C,KAAAmc,kBAH1C,KAAAsE,aAAuB,EAK7BtnB,KAAKknB,aA+DT,OAtEsC,OAU1B,YAAA7jB,MAAV,SAAgB5H,GACduE,KAAK8N,OAAOtS,KAAKC,IAGT,YAAAiI,UAAV,WACE,IAAMoK,EAAS9N,KAAK8N,OAChBA,GACF9N,KAAK6G,YAAYvL,KAAKwS,GAExB,YAAMpK,UAAS,YAGoB,YAAAyH,aAAA,WACnCnL,KAAK8N,OAAS,KACd9N,KAAKsnB,aAAc,GAGrB,YAAAhkB,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAKknB,cAGP,YAAAvjB,eAAA,WACM3D,KAAKsnB,YACPtnB,KAAK2C,WAEL3C,KAAKknB,cAIT,YAAAA,WAAA,WAEQ,IAAAK,EAAA,KAAAA,oBAEFA,IACFvnB,KAAKuL,OAAOgc,GACZA,EAAoB9jB,eAGtB,IAAMqK,EAAS9N,KAAK8N,OAChB9N,KAAK8N,QACP9N,KAAK6G,YAAYvL,KAAKwS,GAGxB9N,KAAK8N,OAAS,GAEd,IAAM4U,EAAkB,EAAAlX,SAASxL,KAAKgjB,gBAAd,GAEpBN,IAAoB,EAAAjX,YACtBzL,KAAKuC,MAAM,EAAAkJ,YAAY5O,IAEvB0qB,EAAsB,IAAI,EAAA9kB,aAC1BzC,KAAKunB,oBAAsBA,EAC3BvnB,KAAKuF,IAAIgiB,GACTvnB,KAAKsnB,aAAc,EACnBC,EAAoBhiB,IAAI,EAAA+Q,kBAAkBtW,KAAM0iB,IAChD1iB,KAAKsnB,aAAc,IAGzB,EAtEA,CAAsC,EAAAxgB,kB,oOC7DtC,IAAgC,OAChC,IAAkC,OA4DlB,EAAAke,WAAhB,SAAiC5Q,GAC/B,OAAO,SAAoCjP,GACzC,IAAMF,EAAW,IAAIuiB,EAAcpT,GAC7BqT,EAAStiB,EAAOH,KAAKC,GAC3B,OAAQA,EAASwiB,OAASA,IAI9B,iBAGE,WAAoBrT,GAAA,KAAAA,WAMtB,OAHE,YAAA/Y,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI4iB,EAAgBrlB,EAAYrC,KAAKoU,SAAUpU,KAAKynB,UAEhF,EATA,GAgBA,cACE,WAAY5gB,EACQuN,EACAqT,GAClB,YAAM5gB,GAFY,KAAAuN,WACA,KAAAqT,SAsBtB,OAzBoC,OAYlC,YAAAllB,MAAA,SAAM7G,GACJ,IAAKsE,KAAK2H,UAAW,CACnB,IAAI0O,OAAM,EACV,IACEA,EAASrW,KAAKoU,SAAS1Y,EAAKsE,KAAKynB,QACjC,MAAOE,GAEP,YADA,YAAMplB,MAAK,UAAColB,GAGd3nB,KAAKuK,yBACLvK,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMqW,MAGvC,EAzBA,CAAoC,EAAAvP,kB,4BCzFpC,QAAsC,OAItB,EAAAsH,WAAhB,SAAiC6N,GAC/B,OAAO,SAAC9W,GAA0B,OAAAA,EAAOH,KAAK,IAAI,EAAAmX,sBAAhB,O,oOCJpC,IAAgC,OAChC,IAAwB,OAGxB,IAAgC,OAEhC,IAAkC,OAG5ByL,EAAO,GA8DG,EAAArb,cAAhB,W,IAAoC,wDAGlC,IAAI0P,EAAwC,KAW5C,MAVmD,mBAAxCC,EAAYA,EAAY1iB,OAAS,KAC1CyiB,EAAwCC,EAAYhI,OAK3B,IAAvBgI,EAAY1iB,QAAgB,EAAAI,QAAQsiB,EAAY,MAClDA,EAAoBA,EAAY,GAAI9f,SAG/B,SAAC+I,GAA0B,OAAAA,EAAOH,KAAK3J,KAAK,IAAI,EAAA2Y,gBAAgB,CAAC7O,GAAM,OAAK+W,IAAe,IAAIC,EAApE,MAGpC,iBACE,WAAoBF,GAAA,KAAAA,UAMtB,OAHE,YAAA5gB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI+iB,EAAwBxlB,EAAYrC,KAAKic,WAEzE,EAPA,GAAa,EAAAE,sBAAqB,EAclC,kBAME,WAAYtV,EAAoCoV,GAC9C,YAAMpV,GADwC,KAAAoV,UALxC,KAAA6L,OAAiB,EACjB,KAAArqB,OAAgB,GAChB,KAAAye,YAAqB,GA8D/B,OAjEmD,OAUvC,YAAA7Y,MAAV,SAAgB6B,GACdlF,KAAKvC,OAAOjC,KAAKosB,GACjB5nB,KAAKkc,YAAY1gB,KAAK0J,IAGd,YAAAxB,UAAV,WACE,IAAMwY,EAAclc,KAAKkc,YACnB3iB,EAAM2iB,EAAY1iB,OACxB,GAAY,IAARD,EACFyG,KAAK6G,YAAYlE,eACZ,CACL3C,KAAK8nB,OAASvuB,EACdyG,KAAK+nB,UAAYxuB,EACjB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAMyL,EAAagX,EAAYziB,GAC/BuG,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMkF,EAAYA,EAAYzL,OAK/D,YAAAkK,eAAA,SAAeqkB,GACc,IAAtBhoB,KAAK8nB,QAAU,IAClB9nB,KAAK6G,YAAYlE,YAIrB,YAAAW,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT,IAAMnJ,EAASuC,KAAKvC,OACdwqB,EAASxqB,EAAO2F,GAChB2kB,EAAa/nB,KAAK+nB,UAEpBE,IAAWL,IAAS5nB,KAAK+nB,UAAY/nB,KAAK+nB,UAD1C,EAEJtqB,EAAO2F,GAAcsD,EAEH,IAAdqhB,IACE/nB,KAAKic,QACPjc,KAAKkoB,YAAYzqB,GAEjBuC,KAAK6G,YAAYvL,KAAKmC,EAAOrB,WAK3B,YAAA8rB,YAAR,SAAoBzqB,GAClB,IAAI4Y,EACJ,IACEA,EAASrW,KAAKic,QAAQvH,MAAM1U,KAAMvC,GAClC,MAAO/B,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAK6G,YAAYvL,KAAK+a,IAE1B,EAjEA,CAAmD,EAAAvP,iBAAtC,EAAA+gB,wBAAuB,G,6BCpGpC,QAAuC,OAEvC,IAAuC,OAA9B,iBAAAhc,OA8DO,EAAAA,OAAhB,W,IAA6B,wDAC3B,OAAO,SAAC1G,GAA0B,OAAAA,EAAOH,KAAK3J,KAAK,EAAAwQ,OAAY,cAAO1G,GAAM,OAA1C,Q,6BCnEpC,QAAyB,OAmDT,EAAAkJ,UAAhB,WACE,OAAO,EAAA+B,SAAS,K,6BCrDlB,QAAyB,OAoET,EAAA9B,UAAhB,SAAmC2N,EACAxF,GACjC,OAAO,EAAApG,SAAS4L,EAASxF,EAAgB,K,6BCrE3C,QAA0B,OAgEV,EAAAlI,YAAhB,SACE0U,EACAxM,GAEA,OAAO,EAAAnI,WAAU,WAAM,OAAA2U,IAAiBxM,K,oOClE1C,IAA2B,MAmDX,EAAAjI,MAAhB,SAAyB0U,GACvB,OAAO,SAAC/d,GAA0B,OAAAA,EAAOH,KAAK,IAAImjB,EAAcjF,EAA9B/d,MAGpC,iBACE,WAAoB+d,EACA/d,GADA,KAAA+d,YACA,KAAA/d,SAMtB,OAHE,YAAA9J,KAAA,SAAKgH,EAAgC8C,GACnC,OAAOA,EAAOL,UAAU,IAAIsjB,EAAgB/lB,EAAYrC,KAAKkjB,UAAWljB,KAAKmF,UAEjF,EARA,GAeA,cAIE,WAAY0B,EACQqc,EACA/d,GAClB,YAAM0B,GAFY,KAAAqc,YACA,KAAA/d,SALZ,KAAAqJ,MAAgB,EAChB,KAAA9P,MAAgB,EAmC1B,OArCiC,OAUrB,YAAA2E,MAAV,SAAgB5H,GACVuE,KAAKkjB,UACPljB,KAAKqoB,cAAc5sB,GAEnBuE,KAAKwO,SAID,YAAA6Z,cAAR,SAAsB5sB,GACpB,IAAI4a,EAEJ,IACEA,EAASrW,KAAKkjB,UAAUznB,EAAOuE,KAAKtB,QAASsB,KAAKmF,QAClD,MAAOzJ,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAIrB2a,GACFrW,KAAKwO,SAIC,YAAA9K,UAAV,WACE1D,KAAK6G,YAAYvL,KAAK0E,KAAKwO,OAC3BxO,KAAK6G,YAAYlE,YAErB,EArCA,CAAiC,EAAAiB,a,oOCpEjC,IAAgC,OAEhC,IAAkC,OA6ClB,EAAA6K,SAAhB,SAA4BgU,GAC1B,OAAO,SAACtd,GAA0B,OAAAA,EAAOH,KAAK,IAAIsjB,EAAhB,MAGpC,iBACE,WAAoB7F,GAAA,KAAAA,mBAMtB,OAHE,YAAApnB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIyjB,EAAmBlmB,EAAYrC,KAAKyiB,oBAEpE,EAPA,GAcA,cAKE,WAAY5b,EACQ4b,GAClB,YAAM5b,GADY,KAAA4b,mBAJZ,KAAA1e,UAAoB,EACpB,KAAAykB,qBAAqC,KA+D/C,OAlEuC,OAU3B,YAAAnlB,MAAV,SAAgB5H,GACd,IACE,IAAM4a,EAASrW,KAAKyiB,iBAAiBpnB,KAAK2E,KAAMvE,GAE5C4a,GACFrW,KAAKyoB,SAAShtB,EAAO4a,GAEvB,MAAO3a,GACPsE,KAAK6G,YAAYtE,MAAM7G,KAIjB,YAAAgI,UAAV,WACE1D,KAAK0oB,YACL1oB,KAAK6G,YAAYlE,YAGX,YAAA8lB,SAAR,SAAiBhtB,EAAUiC,GACzB,IAAIoF,EAAe9C,KAAKwoB,qBACxBxoB,KAAKvE,MAAQA,EACbuE,KAAK+D,UAAW,EACZjB,IACFA,EAAaW,cACbzD,KAAKuL,OAAOzI,KAGdA,EAAe,EAAAwT,kBAAkBtW,KAAMtC,IACrBqF,QAChB/C,KAAKuF,IAAIvF,KAAKwoB,qBAAuB1lB,IAIzC,YAAAQ,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAK0oB,aAGP,YAAA/kB,eAAA,WACE3D,KAAK0oB,aAGP,YAAAA,UAAA,WACE,GAAI1oB,KAAK+D,SAAU,CACjB,IAAMtI,EAAQuE,KAAKvE,MACbqH,EAAe9C,KAAKwoB,qBACtB1lB,IACF9C,KAAKwoB,qBAAuB,KAC5B1lB,EAAaW,cACbzD,KAAKuL,OAAOzI,IAEd9C,KAAKvE,MAAQ,KACbuE,KAAK+D,UAAW,EAChB,YAAMV,MAAK,UAAC5H,KAGlB,EAlEA,CAAuC,EAAAqL,kB,oOCpEvC,IAA2B,MAG3B,IAAsB,OAiDN,EAAA4H,aAAhB,SAAgC8M,EAAiBvU,GAC/C,YAD+C,IAAAA,MAAA,SACxC,SAAC9B,GAA0B,OAAAA,EAAOH,KAAK,IAAI2jB,EAAqBnN,EAArC,MAGpC,iBACE,WAAoBA,EAAyBvU,GAAzB,KAAAuU,UAAyB,KAAAvU,YAM/C,OAHE,YAAA5L,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI8jB,EAAuBvmB,EAAYrC,KAAKwb,QAASxb,KAAKiH,aAEtF,EAPA,GAcA,cAKE,WAAYJ,EACQ2U,EACAvU,GAClB,YAAMJ,GAFY,KAAA2U,UACA,KAAAvU,YANZ,KAAA4hB,sBAAsC,KACtC,KAAAC,UAAe,KACf,KAAA/kB,UAAoB,EAuC9B,OA1CwC,OAW5B,YAAAV,MAAV,SAAgB5H,GACduE,KAAK+oB,gBACL/oB,KAAK8oB,UAAYrtB,EACjBuE,KAAK+D,UAAW,EAChB/D,KAAKuF,IAAIvF,KAAK6oB,sBAAwB7oB,KAAKiH,UAAUsC,SAASuL,EAAc9U,KAAKwb,QAASxb,QAGlF,YAAA0D,UAAV,WACE1D,KAAKgpB,gBACLhpB,KAAK6G,YAAYlE,YAGnB,YAAAqmB,cAAA,WACEhpB,KAAK+oB,gBAED/oB,KAAK+D,WACP/D,KAAK6G,YAAYvL,KAAK0E,KAAK8oB,WAC3B9oB,KAAK8oB,UAAY,KACjB9oB,KAAK+D,UAAW,IAIZ,YAAAglB,cAAR,WACE,IAAMF,EAAwB7oB,KAAK6oB,sBAEL,OAA1BA,IACF7oB,KAAKuL,OAAOsd,GACZA,EAAsBplB,cACtBzD,KAAK6oB,sBAAwB,OAGnC,EA1CA,CAAwC,EAAAjlB,YA4CxC,SAASkR,EAAazS,GACpBA,EAAW2mB,kB,oOCnHb,IAA2B,MAsCX,EAAAra,eAAhB,SAAqChQ,GACnC,YADmC,IAAAA,MAAA,MAC5B,SAACwG,GAA0B,OAAAA,EAAOH,KAAK,IAAIikB,EAAhB,MAGpC,iBAEE,WAAoBtqB,GAAA,KAAAA,eAMtB,OAHE,YAAAtD,KAAA,SAAKgH,EAA+B8C,GAClC,OAAOA,EAAOL,UAAU,IAAIokB,EAAyB7mB,EAAYrC,KAAKrB,gBAE1E,EARA,GAeA,cAGE,WAAYkI,EAAwClI,GAClD,YAAMkI,GAD4C,KAAAlI,eAF5C,KAAAkR,SAAmB,EAiB7B,OAlB6C,OAOjC,YAAAxM,MAAV,SAAgB5H,GACduE,KAAK6P,SAAU,EACf7P,KAAK6G,YAAYvL,KAAKG,IAGd,YAAAiI,UAAV,WACM1D,KAAK6P,SACP7P,KAAK6G,YAAYvL,KAAK0E,KAAKrB,cAE7BqB,KAAK6G,YAAYlE,YAErB,EAlBA,CAA6C,EAAAiB,a,oOC3D7C,IAAsB,OACtB,IAAuB,MAGvB,IAA2B,MAE3B,IAA6B,OA6Cb,EAAA6F,MAAhB,SAAyBA,EACAxC,QAAA,IAAAA,MAAA,SACvB,IACMkiB,EADgB,EAAA1N,OAAOhS,IACMA,EAAQxC,EAAUM,MAASvJ,KAAKyc,IAAYhR,GAC/E,OAAO,SAACtE,GAA0B,OAAAA,EAAOH,KAAK,IAAIokB,EAAcD,EAA9B,MAGpC,iBACE,WAAoB1f,EACAxC,GADA,KAAAwC,QACA,KAAAxC,YAMtB,OAHE,YAAA5L,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIukB,EAAgBhnB,EAAYrC,KAAKyJ,MAAOzJ,KAAKiH,aAE7E,EARA,GAqBA,cAwBE,WAAYJ,EACQ4C,EACAxC,GAClB,YAAMJ,GAFY,KAAA4C,QACA,KAAAxC,YAzBZ,KAAAc,MAAgC,GAChC,KAAA+f,QAAkB,EAClB,KAAAwB,SAAmB,EA6D7B,OAhEiC,OAKhB,EAAAxV,SAAf,SAAwDpK,GAMtD,IALA,IAAMvE,EAASuE,EAAMvE,OACf4C,EAAQ5C,EAAO4C,MACfd,EAAYyC,EAAMzC,UAClBJ,EAAc6C,EAAM7C,YAEnBkB,EAAMvO,OAAS,GAAMuO,EAAM,GAAGnK,KAAOqJ,EAAUM,OAAU,GAC9DQ,EAAMkN,QAAQsU,aAAavlB,QAAQ6C,GAGrC,GAAIkB,EAAMvO,OAAS,EAAG,CACpB,IAAM,EAAQwE,KAAKkK,IAAI,EAAGH,EAAM,GAAGnK,KAAOqJ,EAAUM,OACpDvH,KAAKuJ,SAASG,EAAO,QAErB1J,KAAKyD,cACL0B,EAAO2iB,QAAS,GAUZ,YAAA0B,UAAR,SAAkBviB,GAChBjH,KAAK8nB,QAAS,EACd9nB,KAAKuF,IAAI0B,EAAUsC,SAAwB8f,EAAgBvV,SAAU9T,KAAKyJ,MAAO,CAC/EtE,OAAQnF,KAAM6G,YAAa7G,KAAK6G,YAAaI,UAAWA,MAIpD,YAAAwiB,qBAAR,SAA6BF,GAC3B,IAAqB,IAAjBvpB,KAAKspB,QAAT,CAIA,IAAMriB,EAAYjH,KAAKiH,UACjBoZ,EAAU,IAAIqJ,EAAaziB,EAAUM,MAAQvH,KAAKyJ,MAAO8f,GAC/DvpB,KAAK+H,MAAMvM,KAAK6kB,IAEI,IAAhBrgB,KAAK8nB,QACP9nB,KAAKwpB,UAAUviB,KAIT,YAAA5D,MAAV,SAAgB5H,GACduE,KAAKypB,qBAAqB,EAAAhlB,aAAaD,WAAW/I,KAG1C,YAAA8H,OAAV,SAAiB7H,GACfsE,KAAKspB,SAAU,EACftpB,KAAK+H,MAAQ,GACb/H,KAAK6G,YAAYtE,MAAM7G,IAGf,YAAAgI,UAAV,WACE1D,KAAKypB,qBAAqB,EAAAhlB,aAAaG,mBAE3C,EAhEA,CAAiC,EAAAhB,YAkEjC,EACE,SAA4BhG,EACA2rB,GADA,KAAA3rB,OACA,KAAA2rB,iB,oOClJ9B,IAA2B,MAC3B,IAA2B,OAE3B,IAAgC,OAEhC,IAAkC,OAgDlB,EAAA3a,UAAhB,SAA6BuU,EACAC,GAC3B,OAAIA,EACK,SAACje,GACN,WAAIwkB,EAA4BxkB,EAAQie,GACrCpe,KAAK,IAAI4kB,EAAkBzG,KAE3B,SAAChe,GAA0B,OAAAA,EAAOH,KAAK,IAAI4kB,EAAhB,MAGpC,iBACE,WAAoBzG,GAAA,KAAAA,wBAMtB,OAHE,YAAA9nB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI+kB,EAAoBxnB,EAAYrC,KAAKmjB,yBAErE,EAPA,GAcA,cAKE,WAAYtc,EACQsc,GAClB,YAAMtc,GADY,KAAAsc,wBALZ,KAAAvM,WAAqB,EACrB,KAAAkT,2BAAkD,GAClD,KAAArsB,OAAmB,GA0E7B,OA7EwC,OAUtC,YAAA6F,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAK6G,YAAYvL,KAAK6H,GACtBnD,KAAK+pB,mBAAmBnjB,GACxB5G,KAAKgqB,eAGP,YAAAxmB,YAAA,SAAYjB,EAAYqE,GACtB5G,KAAKuD,OAAOhB,IAGd,YAAAoB,eAAA,SAAeiD,GACb,IAAMnL,EAAQuE,KAAK+pB,mBAAmBnjB,GAClCnL,GACFuE,KAAK6G,YAAYvL,KAAKG,GAExBuE,KAAKgqB,eAGG,YAAA3mB,MAAV,SAAgB5H,GACd,IACE,IAAMwuB,EAAgBjqB,KAAKmjB,sBAAsB1nB,GAC7CwuB,GACFjqB,KAAKkqB,SAASD,EAAexuB,GAE/B,MAAOC,GACPsE,KAAK6G,YAAYtE,MAAM7G,KAIjB,YAAAgI,UAAV,WACE1D,KAAK4W,WAAY,EACjB5W,KAAKgqB,eAGC,YAAAD,mBAAR,SAA2BjnB,GACzBA,EAAaW,cAEb,IAAM0mB,EAAkBnqB,KAAK8pB,2BAA2B7f,QAAQnH,GAC5DrH,EAAW,KAQf,OANyB,IAArB0uB,IACF1uB,EAAQuE,KAAKvC,OAAO0sB,GACpBnqB,KAAK8pB,2BAA2B9oB,OAAOmpB,EAAiB,GACxDnqB,KAAKvC,OAAOuD,OAAOmpB,EAAiB,IAG/B1uB,GAGD,YAAAyuB,SAAR,SAAiBD,EAAgCxuB,GAC/C,IAAM2uB,EAAuB,EAAA9T,kBAAkBtW,KAAMiqB,EAAexuB,GAEhE2uB,IAAyBA,EAAqBrnB,SAChD/C,KAAKuF,IAAI6kB,GACTpqB,KAAK8pB,2BAA2BtuB,KAAK4uB,IAGvCpqB,KAAKvC,OAAOjC,KAAKC,IAGX,YAAAuuB,YAAR,WACMhqB,KAAK4W,WAAwD,IAA3C5W,KAAK8pB,2BAA2BtwB,QACpDwG,KAAK6G,YAAYlE,YAGvB,EA7EA,CAAwC,EAAAmE,iBAoFxC,cACE,WAAwD3B,EAA+Bie,GACrF,aADsD,KAAAje,SAA+B,KAAAie,oBAOzF,OAR6C,OAKN,YAAAhhB,WAAA,SAAWC,GAC9CrC,KAAKojB,kBAAkBte,UAAU,IAAIulB,EAA4BhoB,EAAYrC,KAAKmF,UAEtF,EARA,CAA6C,EAAAd,YAe7C,cAGE,WAAoBnB,EAA+BiC,GACjD,aADkB,KAAAjC,SAA+B,KAAAiC,SAF3C,KAAAmlB,kBAA4B,EA0BtC,OA3B6C,OAOjC,YAAAjnB,MAAV,SAAgB2kB,GACdhoB,KAAKuqB,qBAGG,YAAAhnB,OAAV,SAAiB7H,GACfsE,KAAKyD,cACLzD,KAAKkD,OAAOX,MAAM7G,IAGV,YAAAgI,UAAV,WACE1D,KAAKuqB,qBAGC,YAAAA,kBAAR,WACOvqB,KAAKsqB,mBACRtqB,KAAKsqB,kBAAmB,EACxBtqB,KAAKyD,cACLzD,KAAKmF,OAAOL,UAAU9E,KAAKkD,UAGjC,EA3BA,CAA6C,EAAAU,a,oOC/K7C,IAA2B,MA4CX,EAAAiL,cAAhB,WACE,OAAO,SAAuC1J,GAC5C,OAAOA,EAAOH,KAAK,IAAIwlB,KAI3B,+BAIA,OAHE,YAAAnvB,KAAA,SAAKgH,EAA6B8C,GAChC,OAAOA,EAAOL,UAAU,IAAI2lB,EAAwBpoB,KAExD,EAJA,GAWA,cACE,WAAYwE,GACV,YAAMA,GAMV,OARmE,OAKvD,YAAAxD,MAAV,SAAgB5H,GACdA,EAAMuI,QAAQhE,KAAK6G,cAEvB,EARA,CAAmE,EAAAjD,a,mOC3DnE,IAAgC,OAEhC,IAAkC,OAClC,IAA0B,OAgDV,EAAAkL,SAAhB,SAA+BuU,EACAC,GAC7B,OAAO,SAACne,GAA0B,OAAAA,EAAOH,KAAK,IAAI0lB,EAAiBrH,EAAjC,MAGpC,iBACE,WAAoBA,EAAsCC,GAAtC,KAAAD,cAAsC,KAAAC,UAM5D,OAHE,YAAAjoB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI6lB,EAAmBtoB,EAAYrC,KAAKqjB,YAAarjB,KAAKsjB,WAEtF,EAPA,GAcA,cAGE,WAAYzc,EAAoCwc,EAA8BC,GAC5E,YAAMzc,GADwC,KAAAwc,cAFxC,KAAA5lB,OAAkB,IAAI,EAAAmtB,IAKxBtH,GACFtjB,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMsjB,IA0CvC,OAjD8C,OAW5C,YAAAhgB,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAKvC,OAAOotB,SAGd,YAAArnB,YAAA,SAAYjB,EAAYqE,GACtB5G,KAAKuD,OAAOhB,IAGJ,YAAAc,MAAV,SAAgB5H,GACVuE,KAAKqjB,YACPrjB,KAAK8qB,gBAAgBrvB,GAErBuE,KAAK+qB,cAActvB,EAAOA,IAItB,YAAAqvB,gBAAR,SAAwBrvB,GACtB,IAAIhB,EACIoM,EAAA,KAAAA,YACR,IACEpM,EAAMuF,KAAKqjB,YAAY5nB,GACvB,MAAOC,GAEP,YADAmL,EAAYtE,MAAM7G,GAGpBsE,KAAK+qB,cAActwB,EAAKgB,IAGlB,YAAAsvB,cAAR,SAAsBtwB,EAAUgB,GACtB,IAAAgC,EAAA,KAAAA,OACHA,EAAOutB,IAAOvwB,KACjBgD,EAAO8H,IAAO9K,GACduF,KAAK6G,YAAYvL,KAAKG,KAI5B,EAjDA,CAA8C,EAAAqL,iBAAjC,EAAA6jB,mBAAkB,G,oOCzE/B,IAA2B,MAC3B,IAAyB,OACzB,IAA4B,MAiDZ,EAAA5b,qBAAhB,SAA2CwU,EAAmCF,GAC5E,OAAO,SAACle,GAA0B,OAAAA,EAAOH,KAAK,IAAIimB,EAAmC1H,EAAnD,MAGpC,iBACE,WAAoBA,EACAF,GADA,KAAAE,UACA,KAAAF,cAMtB,OAHE,YAAAhoB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIomB,EAA+B7oB,EAAYrC,KAAKujB,QAASvjB,KAAKqjB,eAE9F,EARA,GAeA,cAIE,WAAYxc,EACA0c,EACQF,GAClB,YAAMxc,GADY,KAAAwc,cAJZ,KAAA8H,QAAkB,EAMD,mBAAZ5H,IACTvjB,KAAKujB,QAAUA,GAoCrB,OA7CmD,OAazC,YAAAA,QAAR,SAAgB/c,EAAQ4kB,GACtB,OAAO5kB,IAAM4kB,GAGL,YAAA/nB,MAAV,SAAgB5H,GAEd,IACIhB,EAAWgB,EAEf,GAHoBuE,KAAKqjB,cAIvB5oB,EAAM,EAAA+Q,SAASxL,KAAKqjB,YAAd,CAA2B5nB,MACrB,EAAAgQ,YACV,OAAOzL,KAAK6G,YAAYtE,MAAM,EAAAkJ,YAAY5O,GAI9C,IAAIwZ,GAAc,EAElB,GAAIrW,KAAKmrB,QAEP,IADA9U,EAAS,EAAA7K,SAASxL,KAAKujB,QAAd,CAAuBvjB,KAAKvF,IAAKA,MAC3B,EAAAgR,YACb,OAAOzL,KAAK6G,YAAYtE,MAAM,EAAAkJ,YAAY5O,QAG5CmD,KAAKmrB,QAAS,GAGQ,IAApBE,QAAQhV,KACVrW,KAAKvF,IAAMA,EACXuF,KAAK6G,YAAYvL,KAAKG,KAG5B,EA7CA,CAAmD,EAAAmI,a,6BCvEnD,QAAqC,OAiErB,EAAAoL,wBAAhB,SAA2CvU,EAAa8oB,GACtD,OAAO,EAAAxU,sBAAqB,SAACvI,EAAM4kB,GAAS,OAAA7H,EAAUA,EAAQ/c,EAAE/L,GAAM2wB,EAAE3wB,IAAQ+L,EAAE/L,KAAS2wB,EAA/C,Q,oOCjE9C,IAA2B,MAC3B,IAAwC,OA+CxB,EAAAlc,UAAhB,SAA6BxQ,EAAeC,GAC1C,OAAO,SAACwG,GAA0B,OAAAA,EAAOH,KAAK,IAAIsmB,EAAkB5sB,EAAlC,MAGpC,iBAEE,WAAoBA,EAAuBC,GACzC,GADkB,KAAAD,QAAuB,KAAAC,eACrCD,EAAQ,EACV,MAAM,IAAI,EAAA6J,wBAOhB,OAHE,YAAAlN,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIymB,EAAoBlpB,EAAYrC,KAAKtB,MAAOsB,KAAKrB,gBAEjF,EAXA,GAkBA,cAEE,WAAYkI,EAAoCnI,EAAuBC,GACrE,YAAMkI,GADwC,KAAAnI,QAAuB,KAAAC,eAsBzE,OAxBqC,OAMzB,YAAA0E,MAAV,SAAgBmD,GACO,GAAjBxG,KAAKtB,UACPsB,KAAK6G,YAAYvL,KAAKkL,GACtBxG,KAAK6G,YAAYlE,aAIX,YAAAe,UAAV,WACE,IAAMmD,EAAc7G,KAAK6G,YACrB7G,KAAKtB,OAAS,SACiB,IAAtBsB,KAAKrB,aACdkI,EAAYvL,KAAK0E,KAAKrB,cAEtBkI,EAAYtE,MAAM,IAAI,EAAAgG,0BAG1B1B,EAAYlE,YAEhB,EAxBA,CAAqC,EAAAiB,a,oOCpErC,IAA2B,MAiBX,EAAAuL,MAAhB,SAAyB+T,EACAM,GACvB,OAAO,SAACre,GAA0B,OAAAA,EAAOH,KAAK,IAAIwmB,EAActI,EAAWM,EAAzCre,MAGpC,iBACE,WAAoB+d,EACAM,EACAre,GAFA,KAAA+d,YACAljB,KAAAwjB,UACA,KAAAre,SAMtB,OAHE,YAAA9J,KAAA,SAAK4I,EAA+BkB,GAClC,OAAOA,EAAOL,UAAU,IAAI2mB,EAAgBxnB,EAAUjE,KAAKkjB,UAAWljB,KAAKwjB,QAASxjB,KAAKmF,UAE7F,EATA,GAgBA,cAGE,WAAY0B,EACQqc,EACAM,EACAre,GAClB,YAAM0B,GAHY,KAAAqc,YACAljB,KAAAwjB,UACA,KAAAre,SALZ,KAAAzG,MAAgB,EAOtBsB,KAAKwjB,QAAUA,GAAWxjB,KAyB9B,OAjCiC,OAWvB,YAAA2D,eAAR,SAAuB+nB,GACrB1rB,KAAK6G,YAAYvL,KAAKowB,GACtB1rB,KAAK6G,YAAYlE,YAGT,YAAAU,MAAV,SAAgB5H,GACd,IAAI4a,GAAS,EACb,IACEA,EAASrW,KAAKkjB,UAAU7nB,KAAK2E,KAAKwjB,QAAS/nB,EAAOuE,KAAKtB,QAASsB,KAAKmF,QACrE,MAAOzJ,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAIpB2a,GACHrW,KAAK2D,gBAAe,IAId,YAAAD,UAAV,WACE1D,KAAK2D,gBAAe,IAExB,EAjCA,CAAiC,EAAAC,a,oOCrCjC,IAAgC,OAChC,IAAkC,OAsClB,EAAAwL,QAAhB,WACE,OAAO,SAACjK,GAA0B,OAAAA,EAAOH,KAAK,IAAZ,KAGpC,+BAIA,OAHE,YAAA3J,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI6mB,EAAsBtpB,KAEtD,EAJA,GAWA,cAIE,WAAYwE,GACV,YAAMA,GAJA,KAAA1E,cAAwB,EACxB,KAAAypB,iBAA2B,EA2BrC,OA7BuC,OAQ3B,YAAAvoB,MAAV,SAAgB5H,GACTuE,KAAK4rB,kBACR5rB,KAAK4rB,iBAAkB,EACvB5rB,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMvE,MAI3B,YAAAiI,UAAV,WACE1D,KAAKmC,cAAe,EACfnC,KAAK4rB,iBACR5rB,KAAK6G,YAAYlE,YAIrB,YAAAgB,eAAA,SAAeiD,GACb5G,KAAKuL,OAAO3E,GACZ5G,KAAK4rB,iBAAkB,EACnB5rB,KAAKmC,cACPnC,KAAK6G,YAAYlE,YAGvB,EA7BA,CAAuC,EAAAmE,kB,oOCtDvC,IAAgC,OAEhC,IAAkC,OAqDlB,EAAAuI,WAAhB,SACE4M,EACAxF,GAEE,OAAO,SAACtR,GAA0B,OAAAA,EAAOH,KAAK,IAAI6mB,EAAuB5P,EAAvC,MAGtC,iBACE,WAAoBA,EACAxF,GADA,KAAAwF,UACA,KAAAxF,iBAMtB,OAHE,YAAApb,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIgnB,EAAyBzpB,EAAYrC,KAAKic,QAASjc,KAAKyW,kBAExF,EARA,GAeA,cAKE,WAAY5P,EACQoV,EACAxF,GAClB,YAAM5P,GAFY,KAAAoV,UACA,KAAAxF,iBANZ,KAAAmV,iBAA2B,EAC3B,KAAAzpB,cAAwB,EACxB,KAAAzD,MAAgB,EAmE1B,OAtEgD,OAWpC,YAAA2E,MAAV,SAAgB5H,GACTuE,KAAK4rB,iBACR5rB,KAAK+rB,QAAQtwB,IAIT,YAAAswB,QAAR,SAAgBtwB,GACd,IAAMiD,EAAQsB,KAAKtB,QACbmI,EAAc7G,KAAK6G,YACzB,IACE,IAAMwP,EAASrW,KAAKic,QAAQxgB,EAAOiD,GACnCsB,KAAK4rB,iBAAkB,EACvB5rB,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMqW,EAAQ5a,EAAOiD,IAChD,MAAOhD,GACPmL,EAAYtE,MAAM7G,KAIZ,YAAAgI,UAAV,WACE1D,KAAKmC,cAAe,EACfnC,KAAK4rB,iBACR5rB,KAAK6G,YAAYlE,YAIrB,YAAAW,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT,IAAQ6P,EAAR,KAAQA,eAAgB5P,EAAxB,KAAwBA,YACpB4P,EACFzW,KAAKgsB,gBAAgB7oB,EAAYuD,EAAYtD,EAAYuD,GAEzDE,EAAYvL,KAAKoL,IAIb,YAAAslB,gBAAR,SAAwB7oB,EAAeuD,EACftD,EAAoBuD,GAC1C,IAAQ8P,EAAR,KAAQA,eAAgB5P,EAAxB,KAAwBA,YACxB,IACE,IAAMwP,EAASI,EAAetT,EAAYuD,EAAYtD,EAAYuD,GAClEE,EAAYvL,KAAK+a,GACjB,MAAO3a,GACPmL,EAAYtE,MAAM7G,KAItB,YAAA8H,YAAA,SAAY9H,GACVsE,KAAK6G,YAAYtE,MAAM7G,IAGzB,YAAAiI,eAAA,SAAeiD,GACb5G,KAAKuL,OAAO3E,GAEZ5G,KAAK4rB,iBAAkB,EACnB5rB,KAAKmC,cACPnC,KAAK6G,YAAYlE,YAGvB,EAtEA,CAAgD,EAAAmE,kB,oOC7EhD,IAAyB,OACzB,IAA4B,MAE5B,IAAgC,OAEhC,IAAkC,OAqDlB,EAAAwI,OAAhB,SAA6B2M,EACAkG,EACAlb,GAG3B,YAJ2B,IAAAkb,MAAqBjb,OAAOC,wBAC5B,IAAAF,WAAA,GAC3Bkb,GAAcA,GAAc,GAAK,EAAIjb,OAAOC,kBAAoBgb,EAEzD,SAAChd,GAA0B,OAAAA,EAAOH,KAAK,IAAIinB,EAAehQ,EAASkG,EAAxC,MAGpC,iBACE,WAAoBlG,EACAkG,EACAlb,GAFA,KAAAgV,UACA,KAAAkG,aACA,KAAAlb,YAMtB,OAHE,YAAA5L,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIonB,EAAiB7pB,EAAYrC,KAAKic,QAASjc,KAAKmiB,WAAYniB,KAAKiH,aAEjG,EATA,GAAa,EAAAglB,eAAc,EAuB3B,kBAME,WAAYplB,EACQoV,EACAkG,EACAlb,GAClB,YAAMJ,GAHY,KAAAoV,UACA,KAAAkG,aACA,KAAAlb,YARZ,KAAAvI,MAAgB,EAChB,KAAAopB,OAAiB,EACjB,KAAA3lB,cAAwB,EAQ1BggB,EAAajb,OAAOC,oBACtBnH,KAAK8N,OAAS,IA+DpB,OA3E4C,OAgB3B,EAAAgG,SAAf,SAA8BiB,GACrB,IAAA1S,EAAA,EAAAA,WAAYgU,EAAA,EAAAA,OAAQ5a,EAAA,EAAAA,MAAOiD,EAAA,EAAAA,MAClC2D,EAAW8pB,sBAAsB9V,EAAQ5a,EAAOiD,IAGxC,YAAA2E,MAAV,SAAgB5H,GACd,IAAMoL,EAAc7G,KAAK6G,YAEzB,GAAIA,EAAY9D,OACd/C,KAAK0D,gBADP,CAKA,IAAMhF,EAAQsB,KAAKtB,QACnB,GAAIsB,KAAK8nB,OAAS9nB,KAAKmiB,WAAY,CACjCtb,EAAYvL,KAAKG,GACjB,IAAI4a,EAAS,EAAA7K,SAASxL,KAAKic,QAAd,CAAuBxgB,EAAOiD,GAC3C,GAAI2X,IAAW,EAAA5K,YACb5E,EAAYtE,MAAM,EAAAkJ,YAAY5O,QACzB,GAAKmD,KAAKiH,UAEV,CACL,IAAMyC,EAA2B,CAAErH,WAAYrC,KAAMqW,SAAQ5a,QAAOiD,SACpEsB,KAAKuF,IAAIvF,KAAKiH,UAAUsC,SAAS2iB,EAAiBpY,SAAU,EAAGpK,SAH/D1J,KAAKmsB,sBAAsB9V,EAAQ5a,EAAOiD,QAM5CsB,KAAK8N,OAAOtS,KAAKC,KAIb,YAAA0wB,sBAAR,SAA8B9V,EAAa5a,EAAUiD,GACnDsB,KAAK8nB,SACL9nB,KAAKuF,IAAI,EAAA+Q,kBAAwBtW,KAAMqW,EAAQ5a,EAAOiD,KAG9C,YAAAgF,UAAV,WACE1D,KAAKmC,cAAe,EAChBnC,KAAKmC,cAAgC,IAAhBnC,KAAK8nB,QAC5B9nB,KAAK6G,YAAYlE,YAIrB,YAAAW,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAKqD,MAAMqD,IAGb,YAAA/C,eAAA,SAAeiD,GACb,IAAMkH,EAAS9N,KAAK8N,OACpB9N,KAAKuL,OAAO3E,GACZ5G,KAAK8nB,SACDha,GAAUA,EAAOtU,OAAS,GAC5BwG,KAAKqD,MAAMyK,EAAOmH,SAEhBjV,KAAKmC,cAAgC,IAAhBnC,KAAK8nB,QAC5B9nB,KAAK6G,YAAYlE,YAGvB,EA3EA,CAA4C,EAAAmE,iBAA/B,EAAAolB,iBAAgB,G,oOC5F7B,IAA2B,MAmDX,EAAA3c,OAAhB,SAA0B2T,EACAM,GACxB,OAAO,SAAgCre,GACrC,OAAOA,EAAOH,KAAK,IAAIonB,EAAelJ,EAAWM,MAIrD,iBACE,WAAoBN,EACAM,GADA,KAAAN,YACAljB,KAAAwjB,UAMtB,OAHE,YAAAnoB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIunB,EAAiBhqB,EAAYrC,KAAKkjB,UAAWljB,KAAKwjB,WAElF,EARA,GAeA,cAIE,WAAY3c,EACQqc,EACAM,GAClB,YAAM3c,GAFY,KAAAqc,YACAljB,KAAAwjB,UAJpB,KAAAhV,MAAgB,EAsBlB,OAxBkC,OAYtB,YAAAnL,MAAV,SAAgB5H,GACd,IAAI4a,EACJ,IACEA,EAASrW,KAAKkjB,UAAU7nB,KAAK2E,KAAKwjB,QAAS/nB,EAAOuE,KAAKwO,SACvD,MAAO9S,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGrB2a,GACFrW,KAAK6G,YAAYvL,KAAKG,IAG5B,EAxBA,CAAkC,EAAAmI,a,oOCzElC,IAA2B,MAC3B,IAA4C,OAY5B,EAAA8f,SAAhB,SAA4BD,GAC1B,OAAO,SAACte,GAA0B,OAAAA,EAAOH,KAAK,IAAIsnB,EAAhB,MAGpC,iBACE,WAAoB7I,GAAA,KAAAA,WAMtB,OAHE,YAAApoB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIynB,EAAkBlqB,EAAYrC,KAAKyjB,YAEnE,EAPA,GAcA,cACE,WAAY5c,EAA4B4c,GACtC,YAAM5c,GACN7G,KAAKuF,IAAI,IAAI,EAAA9C,aAAaghB,IAE9B,OALmC,OAKnC,EALA,CAAmC,EAAA7f,a,oOC9BnC,IAA2B,MA4CX,EAAA6L,KAAhB,SAAwByT,EACAM,GACtB,GAAyB,mBAAdN,EACT,MAAM,IAAInpB,UAAU,+BAEtB,OAAO,SAACoL,GAA0B,OAAAA,EAAOH,KAAK,IAAIwnB,EAAkBtJ,EAAW/d,GAAQ,EAArD,MAGpC,iBACE,WAAoB+d,EACA/d,EACAsnB,EACAjJ,GAHA,KAAAN,YACA,KAAA/d,SACA,KAAAsnB,aACAzsB,KAAAwjB,UAMtB,OAHE,YAAAnoB,KAAA,SAAK4I,EAAyBkB,GAC5B,OAAOA,EAAOL,UAAU,IAAI4nB,EAAoBzoB,EAAUjE,KAAKkjB,UAAWljB,KAAKmF,OAAQnF,KAAKysB,WAAYzsB,KAAKwjB,WAEjH,EAVA,GAAa,EAAAgJ,kBAAiB,EAiB9B,kBAGE,WAAY3lB,EACQqc,EACA/d,EACAsnB,EACAjJ,GAClB,YAAM3c,GAJY,KAAAqc,YACA,KAAA/d,SACA,KAAAsnB,aACAzsB,KAAAwjB,UANZ,KAAA9kB,MAAgB,EAiC1B,OAlC4C,OAWlC,YAAAiF,eAAR,SAAuBlI,GACrB,IAAMoL,EAAc7G,KAAK6G,YAEzBA,EAAYvL,KAAKG,GACjBoL,EAAYlE,YAGJ,YAAAU,MAAV,SAAgB5H,GACd,IAAQynB,EAAR,KAAQA,UAAWM,EAAnB,KAAmBA,QACb9kB,EAAQsB,KAAKtB,QACnB,IACiBwkB,EAAU7nB,KAAKmoB,GAAWxjB,KAAMvE,EAAOiD,EAAOsB,KAAKmF,SAEhEnF,KAAK2D,eAAe3D,KAAKysB,WAAa/tB,EAAQjD,GAEhD,MAAOC,GACPsE,KAAK6G,YAAYtE,MAAM7G,KAIjB,YAAAgI,UAAV,WACE1D,KAAK2D,eAAe3D,KAAKysB,YAAc,OAAI7tB,IAE/C,EAlCA,CAA4C,EAAAgF,YAA/B,EAAA8oB,oBAAmB,G,6BCtEhC,QAAkC,OAoClB,EAAArsB,UAAhB,SAA6B6iB,EACAM,GAC3B,OAAO,SAACre,GAA0B,OAAAA,EAAOH,KAAK,IAAI,EAAAwnB,kBAAkBtJ,EAAW/d,GAAQ,EAArD,O,oOCrCpC,IAA2B,MAC3B,IAA2B,MAkEX,EAAAuK,MAAhB,SAA4BwT,EACAzM,EACA9X,GAC1B,OAAO,SAACwG,GAA0B,OAAAA,EAAOH,KAAK,IAAI2nB,EAAczJ,EAAWzM,EAAgB9X,EAAzDwG,MAGpC,iBACE,WAAoB+d,EACAzM,EACA9X,EACAwG,GAHA,KAAA+d,YACA,KAAAzM,iBACA,KAAA9X,eACA,KAAAwG,SAMtB,OAHE,YAAA9J,KAAA,SAAK4I,EAAyBkB,GAC5B,OAAOA,EAAOL,UAAU,IAAI8nB,EAAgB3oB,EAAUjE,KAAKkjB,UAAWljB,KAAKyW,eAAgBzW,KAAKrB,aAAcqB,KAAKmF,UAEvH,EAVA,GAiBA,cAKE,WAAY0B,EACQqc,EACAzM,EACA9X,EACAwG,GAClB,YAAM0B,GAJY,KAAAqc,YACA,KAAAzM,iBACA,KAAA9X,eACA,KAAAwG,SARZ,KAAAzG,MAAgB,EAChB,KAAAyD,cAAwB,EACxB,KAAA0qB,UAAoB,EAsE9B,OAzEoC,OAaxB,YAAAxpB,MAAV,SAAgB5H,GACd,IAAMiD,EAAQsB,KAAKtB,QACfsB,KAAKkjB,UACPljB,KAAKqoB,cAAc5sB,EAAOiD,GAE1BsB,KAAK8sB,MAAMrxB,EAAOiD,IAId,YAAA2pB,cAAR,SAAsB5sB,EAAUiD,GAC9B,IAAI2X,EACJ,IACEA,EAASrW,KAAKkjB,UAAUznB,EAAOiD,EAAOsB,KAAKmF,QAC3C,MAAOzJ,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGrB2a,GACFrW,KAAK8sB,MAAMrxB,EAAOiD,IAId,YAAAouB,MAAR,SAAcrxB,EAAYiD,GACpBsB,KAAKyW,eACPzW,KAAK+sB,mBAAmBtxB,EAAOiD,GAGjCsB,KAAKgtB,WAAWvxB,IAGV,YAAAsxB,mBAAR,SAA2BtxB,EAAUiD,GACnC,IAAI2X,EACJ,IACEA,EAAerW,KAAMyW,eAAehb,EAAOiD,GAC3C,MAAOhD,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAKgtB,WAAW3W,IAGV,YAAA2W,WAAR,SAAmBvxB,GACjB,IAAMoL,EAAc7G,KAAK6G,YACpB7G,KAAK6sB,WACR7sB,KAAK6sB,UAAW,EAChBhmB,EAAYvL,KAAKG,GACjBoL,EAAYlE,WACZ3C,KAAKmC,cAAe,IAId,YAAAuB,UAAV,WACE,IAAMmD,EAAc7G,KAAK6G,YACpB7G,KAAKmC,mBAA6C,IAAtBnC,KAAKrB,aAG1BqB,KAAKmC,cACf0E,EAAYtE,MAAM,IAAI,EAAA+F,aAHtBzB,EAAYvL,KAAK0E,KAAKrB,cACtBkI,EAAYlE,aAKlB,EAzEA,CAAoC,EAAAiB,a,mOC5FpC,IAA2B,MAC3B,IAA6B,OAC7B,IAA2B,OAE3B,IAAwB,OACxB,IAAoB,OACpB,IAAwB,MA6ER,EAAA+L,QAAhB,SAAiC0T,EACAO,EACAnB,EACAoB,GAC/B,OAAO,SAAC1e,GACN,OAAAA,EAAOH,KAAK,IAAIioB,EAAgB5J,EAAaO,EAAiBnB,EAAkBoB,MAUpF,iBACE,WAAoBR,EACAO,EACAnB,EACAoB,GAHA,KAAAR,cACA,KAAAO,kBACA,KAAAnB,mBACA,KAAAoB,kBAQtB,OALE,YAAAxoB,KAAA,SAAKgH,EAAiD8C,GACpD,OAAOA,EAAOL,UAAU,IAAIooB,EAC1B7qB,EAAYrC,KAAKqjB,YAAarjB,KAAK4jB,gBAAiB5jB,KAAKyiB,iBAAkBziB,KAAK6jB,mBAGtF,EAZA,GAmBA,cAKE,WAAYhd,EACQwc,EACAO,EACAnB,EACAoB,GAClB,YAAMhd,GAJY,KAAAwc,cACA,KAAAO,kBACA,KAAAnB,mBACA,KAAAoB,kBARZ,KAAAsJ,OAA+B,KAChC,KAAAC,wBAAkC,EAClC,KAAA5e,MAAgB,EAoGzB,OAvGyC,OAa7B,YAAAnL,MAAV,SAAgB5H,GACd,IAAIhB,EACJ,IACEA,EAAMuF,KAAKqjB,YAAY5nB,GACvB,MAAOC,GAEP,YADAsE,KAAKuC,MAAM7G,GAIbsE,KAAKqtB,OAAO5xB,EAAOhB,IAGb,YAAA4yB,OAAR,SAAe5xB,EAAUhB,GACvB,IAAI0yB,EAASntB,KAAKmtB,OAEbA,IACHA,EAASntB,KAAKmtB,OAAwB,iBAAR1yB,EAAmB,IAAI,EAAA6yB,QAAY,IAAI,EAAAC,KAGvE,IAEIC,EAFAC,EAAQN,EAAOnP,IAAIvjB,GAGvB,GAAIuF,KAAK4jB,gBACP,IACE4J,EAAUxtB,KAAK4jB,gBAAgBnoB,GAC/B,MAAOC,GACPsE,KAAKuC,MAAM7G,QAGb8xB,EAAe/xB,EAGjB,IAAKgyB,EAAO,CACVA,EAAQztB,KAAK6jB,gBAAkB7jB,KAAK6jB,kBAAoB,IAAI,EAAAjhB,QAC5DuqB,EAAOO,IAAIjzB,EAAKgzB,GAChB,IAAME,EAAoB,IAAIhK,EAAkBlpB,EAAKgzB,EAAOztB,MAE5D,GADAA,KAAK6G,YAAYvL,KAAKqyB,GAClB3tB,KAAKyiB,iBAAkB,CACzB,IAAI/kB,OAAQ,EACZ,IACEA,EAAWsC,KAAKyiB,iBAAiB,IAAIkB,EAAwBlpB,EAAiBgzB,IAC9E,MAAO/xB,GAEP,YADAsE,KAAKuC,MAAM7G,GAGbsE,KAAKuF,IAAI7H,EAASoH,UAAU,IAAI8oB,EAAwBnzB,EAAKgzB,EAAOztB,SAInEytB,EAAM1qB,QACT0qB,EAAMnyB,KAAKkyB,IAIL,YAAAjqB,OAAV,SAAiB7H,GACf,IAAMyxB,EAASntB,KAAKmtB,OAChBA,IACFA,EAAOvnB,SAAQ,SAAC6nB,EAAOhzB,GACrBgzB,EAAMlrB,MAAM7G,MAGdyxB,EAAOtC,SAET7qB,KAAK6G,YAAYtE,MAAM7G,IAGf,YAAAgI,UAAV,WACE,IAAMypB,EAASntB,KAAKmtB,OAChBA,IACFA,EAAOvnB,SAAQ,SAAC6nB,EAAOhzB,GACrBgzB,EAAM9qB,cAGRwqB,EAAOtC,SAET7qB,KAAK6G,YAAYlE,YAGnB,YAAAkrB,YAAA,SAAYpzB,GACVuF,KAAKmtB,OAAL,OAAmB1yB,IAGrB,YAAAgJ,YAAA,WACOzD,KAAK+C,SACR/C,KAAKotB,wBAAyB,EACX,IAAfptB,KAAKwO,OACP,YAAM/K,YAAW,aAIzB,EAvGA,CAAyC,EAAAG,YA8GzC,cACE,WAAoBnJ,EACAgzB,EACAvqB,GAClB,YAAMuqB,GAHY,KAAAhzB,MACA,KAAAgzB,QACA,KAAAvqB,SAetB,OAlB4C,OAOhC,YAAAG,MAAV,SAAgB5H,GACduE,KAAK2C,YAG8B,YAAAwI,aAAA,WACnC,IAAQjI,EAAR,KAAQA,OAAQzI,EAAhB,KAAgBA,IAChBuF,KAAKvF,IAAMuF,KAAKkD,OAAS,KACrBA,GACFA,EAAO2qB,YAAYpzB,IAGzB,EAlBA,CAA4C,EAAAmJ,YA4B5C,cACE,WAAmBnJ,EACCqzB,EACAC,GAClB,aAHiB,KAAAtzB,MACC,KAAAqzB,eACA,KAAAC,uBAatB,OAhB6C,OAON,YAAA3rB,WAAA,SAAWC,GAC9C,IAAMS,EAAe,IAAI,EAAAL,aAClBsrB,EAAP,KAAOA,qBAAsBD,EAA7B,KAA6BA,aAK7B,OAJIC,IAAyBA,EAAqBhrB,QAChDD,EAAayC,IAAI,IAAIyoB,EAA0BD,IAEjDjrB,EAAayC,IAAIuoB,EAAahpB,UAAUzC,IACjCS,GAEX,EAhBA,CAA6C,EAAAuB,YAAhC,EAAAsf,kBAAiB,EAuB9B,kBACE,WAAoBzgB,GAClB,aADkB,KAAAA,SAElBA,EAAOsL,QAaX,OAhBwC,OAMtC,YAAA/K,YAAA,WACE,IAAMP,EAASlD,KAAKkD,OACfA,EAAOH,QAAW/C,KAAK+C,SAC1B,YAAMU,YAAW,WACjBP,EAAOsL,OAAS,EACK,IAAjBtL,EAAOsL,OAAetL,EAAOkqB,wBAC/BlqB,EAAOO,gBAIf,EAhBA,CAAwC,EAAAhB,e,oOCpRxC,IAA2B,MAC3B,IAAqB,OAaL,EAAAmN,eAAhB,WACE,OAAO,SAAwCzK,GAC7C,OAAOA,EAAOH,KAAK,IAAIipB,KAI3B,+BAIA,OAHE,YAAA5yB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIopB,EAAyB7rB,KAEzD,EAJA,GAWA,2BAA0C,wBAI1C,OAJ0C,OAC9B,YAAAgB,MAAV,SAAgB2kB,GACd,EAAAnN,QAEJ,EAJA,CAA0C,EAAAjX,a,oOChC1C,IAA2B,MAIX,EAAAiM,QAAhB,WACE,OAAO,SAAC1K,GAA0B,OAAAA,EAAOH,KAAK,IAAZ,KAGpC,+BAIA,OAHE,YAAA3J,KAAA,SAAM4I,EAA+BkB,GACnC,OAAOA,EAAOL,UAAU,IAAIqpB,EAAkBlqB,KAElD,EAJA,GAWA,cACE,WAAY4C,GACV,YAAMA,GAiBV,OAnBgC,OAKtB,YAAAlD,eAAR,SAAuBkM,GACrB,IAAMhJ,EAAc7G,KAAK6G,YAEzBA,EAAYvL,KAAKuU,GACjBhJ,EAAYlE,YAGJ,YAAAU,MAAV,SAAgB5H,GACduE,KAAK2D,gBAAe,IAGZ,YAAAD,UAAV,WACE1D,KAAK2D,gBAAe,IAExB,EAnBA,CAAgC,EAAAC,a,oOClBhC,IAA2B,MAC3B,IAA2B,MAoCX,EAAAkM,KAAhB,SAA2BoT,EACAzM,EACA9X,GACzB,OAAO,SAACwG,GAA0B,OAAAA,EAAOH,KAAK,IAAIopB,EAAalL,EAAWzM,EAAgB9X,EAAxDwG,MAGpC,iBACE,WAAoB+d,EACAzM,EACA9X,EACAwG,GAHA,KAAA+d,YACA,KAAAzM,iBACA,KAAA9X,eACA,KAAAwG,SAMtB,OAHE,YAAA9J,KAAA,SAAK4I,EAAyBkB,GAC5B,OAAOA,EAAOL,UAAU,IAAIupB,EAAepqB,EAAUjE,KAAKkjB,UAAWljB,KAAKyW,eAAgBzW,KAAKrB,aAAcqB,KAAKmF,UAEtH,EAVA,GAiBA,cAKE,WAAY0B,EACQqc,EACAzM,EACA9X,EACAwG,GAClB,YAAM0B,GAJY,KAAAqc,YACA,KAAAzM,iBACA,KAAA9X,eACA,KAAAwG,SAPZ,KAAApB,UAAoB,EACpB,KAAArF,MAAgB,OAQM,IAAjBC,IACTqB,KAAK8oB,UAAYnqB,EACjBqB,KAAK+D,UAAW,GAyDtB,OAtEmC,OAiBvB,YAAAV,MAAV,SAAgB5H,GACd,IAAMiD,EAAQsB,KAAKtB,QACnB,GAAIsB,KAAKkjB,UACPljB,KAAKqoB,cAAc5sB,EAAOiD,OACrB,CACL,GAAIsB,KAAKyW,eAEP,YADAzW,KAAK+sB,mBAAmBtxB,EAAOiD,GAGjCsB,KAAK8oB,UAAYrtB,EACjBuE,KAAK+D,UAAW,IAIZ,YAAAskB,cAAR,SAAsB5sB,EAAUiD,GAC9B,IAAI2X,EACJ,IACEA,EAASrW,KAAKkjB,UAAUznB,EAAOiD,EAAOsB,KAAKmF,QAC3C,MAAOzJ,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzB,GAAI2a,EAAQ,CACV,GAAIrW,KAAKyW,eAEP,YADAzW,KAAK+sB,mBAAmBtxB,EAAOiD,GAGjCsB,KAAK8oB,UAAYrtB,EACjBuE,KAAK+D,UAAW,IAIZ,YAAAgpB,mBAAR,SAA2BtxB,EAAUiD,GACnC,IAAI2X,EACJ,IACEA,EAAerW,KAAMyW,eAAehb,EAAOiD,GAC3C,MAAOhD,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAK8oB,UAAYzS,EACjBrW,KAAK+D,UAAW,GAGR,YAAAL,UAAV,WACE,IAAMmD,EAAc7G,KAAK6G,YACrB7G,KAAK+D,UACP8C,EAAYvL,KAAK0E,KAAK8oB,WACtBjiB,EAAYlE,YAEZkE,EAAYtE,MAAM,IAAI,EAAA+F,aAG5B,EAtEA,CAAmC,EAAA1E,a,oOC7DnC,IAA2B,MAqCX,EAAAqM,IAAhB,SAA0BgM,EAAyCuH,GACjE,OAAO,SAAsBre,GAC3B,GAAuB,mBAAZ8W,EACT,MAAM,IAAIliB,UAAU,8DAEtB,OAAOoL,EAAOH,KAAK,IAAIspB,EAAYrS,EAASuH,MAIhD,iBACE,WAAoBvH,EAAiDuH,GAAjD,KAAAvH,UAAiDjc,KAAAwjB,UAMvE,OAHE,YAAAnoB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIypB,EAAclsB,EAAYrC,KAAKic,QAASjc,KAAKwjB,WAE7E,EAPA,GAAa,EAAA8K,YAAW,EAcxB,kBAIE,WAAYznB,EACQoV,EACRuH,GACV,YAAM3c,GAFY,KAAAoV,UAJpB,KAAAzN,MAAgB,EAOdxO,KAAKwjB,QAAUA,GAAWxjB,KAe9B,OAvBkC,OAatB,YAAAqD,MAAV,SAAgB5H,GACd,IAAI4a,EACJ,IACEA,EAASrW,KAAKic,QAAQ5gB,KAAK2E,KAAKwjB,QAAS/nB,EAAOuE,KAAKwO,SACrD,MAAO9S,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAK6G,YAAYvL,KAAK+a,IAE1B,EAvBA,CAAkC,EAAAzS,a,oOC5DlC,IAA2B,MA8BX,EAAAsM,MAAhB,SAA4BzU,GAC1B,OAAO,SAAC0J,GAA0B,OAAAA,EAAOH,KAAK,IAAIwpB,EAAhB,MAGpC,iBAIE,WAAY/yB,GACVuE,KAAKvE,MAAQA,EAMjB,OAHE,YAAAJ,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI2pB,EAAgBpsB,EAAYrC,KAAKvE,SAEjE,EAXA,GAkBA,cAIE,WAAYoL,EAA4BpL,GACtC,YAAMoL,GACN7G,KAAKvE,MAAQA,EAMjB,OAZoC,OASxB,YAAA4H,MAAV,SAAgBmD,GACdxG,KAAK6G,YAAYvL,KAAK0E,KAAKvE,QAE/B,EAZA,CAAoC,EAAAmI,a,oOCnDpC,IAA2B,MAC3B,IAA6B,OA+Cb,EAAAuM,YAAhB,WACE,OAAO,SAAqChL,GAC1C,OAAOA,EAAOH,KAAK,IAAI0pB,KAI3B,+BAIA,OAHE,YAAArzB,KAAA,SAAKgH,EAAyC8C,GAC5C,OAAOA,EAAOL,UAAU,IAAI6pB,EAAsBtsB,KAEtD,EAJA,GAWA,cACE,WAAYwE,GACV,YAAMA,GAkBV,OApBuC,OAK3B,YAAAxD,MAAV,SAAgB5H,GACduE,KAAK6G,YAAYvL,KAAK,EAAAmJ,aAAaD,WAAW/I,KAGtC,YAAA8H,OAAV,SAAiB7H,GACf,IAAMmL,EAAc7G,KAAK6G,YACzBA,EAAYvL,KAAK,EAAAmJ,aAAaE,YAAYjJ,IAC1CmL,EAAYlE,YAGJ,YAAAe,UAAV,WACE,IAAMmD,EAAc7G,KAAK6G,YACzBA,EAAYvL,KAAK,EAAAmJ,aAAaG,kBAC9BiC,EAAYlE,YAEhB,EApBA,CAAuC,EAAAiB,a,6BCnEvC,QAAuB,OAkCP,EAAAsE,IAAhB,SAAuB4b,GACrB,IAAM5b,EAA8C,mBAAb4b,EACnC,SAACtd,EAAG4kB,GAAM,OAAAtH,EAAStd,EAAG4kB,GAAK,EAAI5kB,EAArB,GACV,SAACA,EAAG4kB,GAAM,OAAA5kB,EAAI4kB,EAAI5kB,EAAR,GAEd,OAAO,EAAA2F,OAAOjE,K,6BCpChB,QAAqC,OAErC,IAAqC,OAA5B,gBAAAgF,MAgEO,EAAAA,MAAhB,W,IAA4B,wDAC1B,OAAO,SAAC/H,GAA0B,OAAAA,EAAOH,KAAK3J,KAAK,EAAA6R,MAAW,cAAC/H,GAAM,OAAnC,Q,6BCpEpC,QAAyB,OACzB,IAAyB,OA+CT,EAAAiL,SAAhB,SAA4B+R,GAC1B,YAD0B,IAAAA,MAAqBjb,OAAOC,mBAC/C,EAAAkJ,SAAS,EAAAue,SAA8D,KAAMzM,K,oOC/CtF,IAAkC,OAClC,IAAgC,OAmEhB,EAAA9R,SAAhB,SAAkC4L,EACAxF,EACA0L,GAChC,YADgC,IAAAA,MAAqBjb,OAAOC,mBACrD,SAAkChC,GAKvC,MAJ8B,iBAAnBsR,IACT0L,EAAqB1L,EACrBA,EAAiB,MAEZtR,EAAOH,KAAK,IAAI6pB,EAAiB5S,EAAcxF,EAAgB0L,MAI1E,iBACE,WAAoBlG,EACAxF,EACA0L,QAAR,UAA6Bjb,OAAOC,mBAF5B,KAAA8U,UACA,KAAAxF,iBACA,KAAA0L,aAQtB,OALE,YAAA9mB,KAAA,SAAK4I,EAAyBkB,GAC5B,OAAOA,EAAOL,UAAU,IAAIgqB,EAC1B7qB,EAAUjE,KAAKic,QAASjc,KAAKyW,eAAgBzW,KAAKmiB,cAGxD,EAXA,GAAa,EAAA0M,iBAAgB,EAkB7B,kBAME,WAAYhoB,EACQoV,EACAxF,EACA0L,QAAR,UAA6Bjb,OAAOC,mBAC9C,YAAMN,GAHY,KAAAoV,UACA,KAAAxF,iBACA,KAAA0L,aARZ,KAAAhgB,cAAwB,EACxB,KAAA2L,OAAc,GACd,KAAAga,OAAiB,EACf,KAAAppB,MAAgB,EAwE5B,OA5EiD,OAarC,YAAA2E,MAAV,SAAgB5H,GACVuE,KAAK8nB,OAAS9nB,KAAKmiB,WACrBniB,KAAKyoB,SAAShtB,GAEduE,KAAK8N,OAAOtS,KAAKC,IAIX,YAAAgtB,SAAV,SAAmBhtB,GACjB,IAAI4a,EACE3X,EAAQsB,KAAKtB,QACnB,IACE2X,EAASrW,KAAKic,QAAQxgB,EAAOiD,GAC7B,MAAOhD,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAK8nB,SACL9nB,KAAK+uB,UAAU1Y,EAAQ5a,EAAOiD,IAGxB,YAAAqwB,UAAR,SAAkBvW,EAAyB/c,EAAUiD,GACnDsB,KAAKuF,IAAI,EAAA+Q,kBAAwBtW,KAAMwY,EAAK/c,EAAOiD,KAG3C,YAAAgF,UAAV,WACE1D,KAAKmC,cAAe,EACA,IAAhBnC,KAAK8nB,QAAuC,IAAvB9nB,KAAK8N,OAAOtU,QACnCwG,KAAK6G,YAAYlE,YAIrB,YAAAW,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACL5G,KAAKyW,eACPzW,KAAKgvB,sBAAsB7rB,EAAYuD,EAAYtD,EAAYuD,GAE/D3G,KAAK6G,YAAYvL,KAAKoL,IAIlB,YAAAsoB,sBAAR,SAA8B7rB,EAAeuD,EAAetD,EAAoBuD,GAC9E,IAAI0P,EACJ,IACEA,EAASrW,KAAKyW,eAAetT,EAAYuD,EAAYtD,EAAYuD,GACjE,MAAOjL,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAK6G,YAAYvL,KAAK+a,IAGxB,YAAA1S,eAAA,SAAeiD,GACb,IAAMkH,EAAS9N,KAAK8N,OACpB9N,KAAKuL,OAAO3E,GACZ5G,KAAK8nB,SACDha,EAAOtU,OAAS,EAClBwG,KAAKqD,MAAMyK,EAAOmH,SACO,IAAhBjV,KAAK8nB,QAAgB9nB,KAAKmC,cACnCnC,KAAK6G,YAAYlE,YAGvB,EA5EA,CAAiD,EAAAmE,iBAApC,EAAAgoB,mBAAkB,G,oOCjG/B,IAAgC,OAEhC,IAAkC,OAmDlB,EAAAte,WAAhB,SAAoCyS,EACAxM,EACA0L,GAKlC,YALkC,IAAAA,MAAqBjb,OAAOC,mBAChC,iBAAnBsP,IACT0L,EAAqB1L,EACrBA,EAAiB,MAEZ,SAACtR,GAA0B,OAAAA,EAAOH,KAAK,IAAIiqB,EAAmBhM,EAAsBxM,EAAzD,MAKpC,iBACE,WAAoB+B,EACA/B,EACA0L,QAAR,UAA6Bjb,OAAOC,mBAF5B,KAAAqR,MACA,KAAA/B,iBACA,KAAA0L,aAMtB,OAHE,YAAA9mB,KAAA,SAAK4I,EAAyBkB,GAC5B,OAAOA,EAAOL,UAAU,IAAIoqB,EAAqBjrB,EAAUjE,KAAKwY,IAAKxY,KAAKyW,eAAgBzW,KAAKmiB,cAEnG,EATA,GAAa,EAAA8M,mBAAkB,EAgB/B,kBAME,WAAYpoB,EACQ2R,EACA/B,EACA0L,QAAR,UAA6Bjb,OAAOC,mBAC9C,YAAMN,GAHY,KAAA2R,MACA,KAAA/B,iBACA,KAAA0L,aARZ,KAAAhgB,cAAwB,EACxB,KAAA2L,OAAc,GACd,KAAAga,OAAiB,EACf,KAAAppB,MAAgB,EA6E5B,OAjFmD,OAavC,YAAA2E,MAAV,SAAgB5H,GACd,GAAIuE,KAAK8nB,OAAS9nB,KAAKmiB,WAAY,CACjC,IAAM1L,EAAiBzW,KAAKyW,eACtB/X,EAAQsB,KAAKtB,QACb8Z,EAAMxY,KAAKwY,IACX3R,EAAc7G,KAAK6G,YAEzB7G,KAAK8nB,SACL9nB,KAAK+uB,UAAUvW,EAAK3R,EAAa4P,EAAgBhb,EAAOiD,QAExDsB,KAAK8N,OAAOtS,KAAKC,IAIb,YAAAszB,UAAR,SAAkBvW,EACA3R,EACA4P,EACAhb,EACAiD,GAChBsB,KAAKuF,IAAI,EAAA+Q,kBAAwBtW,KAAMwY,EAAK/c,EAAOiD,KAG3C,YAAAgF,UAAV,WACE1D,KAAKmC,cAAe,EACA,IAAhBnC,KAAK8nB,QAAuC,IAAvB9nB,KAAK8N,OAAOtU,QACnCwG,KAAK6G,YAAYlE,YAIrB,YAAAW,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT,IAAQ6P,EAAR,KAAQA,eAAgB5P,EAAxB,KAAwBA,YACpB4P,EACFzW,KAAKgsB,gBAAgB7oB,EAAYuD,EAAYtD,EAAYuD,GAEzDE,EAAYvL,KAAKoL,IAIb,YAAAslB,gBAAR,SAAwB7oB,EAAeuD,EACftD,EAAoBuD,GAC1C,IACI0P,EADII,EAAR,KAAQA,eAAgB5P,EAAxB,KAAwBA,YAExB,IACEwP,EAASI,EAAetT,EAAYuD,EAAYtD,EAAYuD,GAC5D,MAAOjL,GAEP,YADAmL,EAAYtE,MAAM7G,GAIpBmL,EAAYvL,KAAK+a,IAGnB,YAAA7S,YAAA,SAAY9H,GACVsE,KAAK6G,YAAYtE,MAAM7G,IAGzB,YAAAiI,eAAA,SAAeiD,GACb,IAAMkH,EAAS9N,KAAK8N,OACpB9N,KAAKuL,OAAO3E,GACZ5G,KAAK8nB,SACDha,EAAOtU,OAAS,EAClBwG,KAAKqD,MAAMyK,EAAOmH,SACO,IAAhBjV,KAAK8nB,QAAgB9nB,KAAKmC,cACnCnC,KAAK6G,YAAYlE,YAGvB,EAjFA,CAAmD,EAAAmE,iBAAtC,EAAAooB,qBAAoB,G,oOClFjC,IAAyB,OACzB,IAA4B,MAC5B,IAAkC,OAClC,IAAgC,OAmChB,EAAAze,UAAhB,SAAgCsT,EACAC,EACA7B,GAC9B,YAD8B,IAAAA,MAAqBjb,OAAOC,mBACnD,SAAChC,GAA0B,OAAAA,EAAOH,KAAK,IAAImqB,EAAkBpL,EAAaC,EAA/C,MAGpC,iBACE,WAAoBD,EACAC,EACA7B,GAFA,KAAA4B,cACA,KAAAC,OACA,KAAA7B,aAQtB,OALE,YAAA9mB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIsqB,EAC1B/sB,EAAYrC,KAAK+jB,YAAa/jB,KAAKgkB,KAAMhkB,KAAKmiB,cAGpD,EAXA,GAAa,EAAAgN,kBAAiB,EAkB9B,kBAOE,WAAYtoB,EACQkd,EACAsL,EACAlN,GAClB,YAAMtb,GAHY,KAAAkd,cACA,KAAAsL,MACA,KAAAlN,aATZ,KAAApe,UAAoB,EACpB,KAAA5B,cAAwB,EACxB,KAAA2L,OAA4B,GAC5B,KAAAga,OAAiB,EACf,KAAAppB,MAAgB,EA6D5B,OAlE+C,OAcnC,YAAA2E,MAAV,SAAgB5H,GACd,GAAIuE,KAAK8nB,OAAS9nB,KAAKmiB,WAAY,CACjC,IAAMzjB,EAAQsB,KAAKtB,QACb8Z,EAAM,EAAAhN,SAASxL,KAAK+jB,YAAd,CAA2B/jB,KAAKqvB,IAAK5zB,GAC3CoL,EAAc7G,KAAK6G,YACrB2R,IAAQ,EAAA/M,YACV5E,EAAYtE,MAAM,EAAAkJ,YAAY5O,IAE9BmD,KAAK8nB,SACL9nB,KAAK+uB,UAAUvW,EAAK/c,EAAOiD,SAG7BsB,KAAK8N,OAAOtS,KAAKC,IAIb,YAAAszB,UAAR,SAAkBvW,EAAU/c,EAAUiD,GACpCsB,KAAKuF,IAAI,EAAA+Q,kBAAwBtW,KAAMwY,EAAK/c,EAAOiD,KAG3C,YAAAgF,UAAV,WACE1D,KAAKmC,cAAe,EACA,IAAhBnC,KAAK8nB,QAAuC,IAAvB9nB,KAAK8N,OAAOtU,UACb,IAAlBwG,KAAK+D,UACP/D,KAAK6G,YAAYvL,KAAK0E,KAAKqvB,KAE7BrvB,KAAK6G,YAAYlE,aAIrB,YAAAW,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACD,IAAAC,EAAA,KAAAA,YACR7G,KAAKqvB,IAAM3oB,EACX1G,KAAK+D,UAAW,EAChB8C,EAAYvL,KAAKoL,IAGnB,YAAA/C,eAAA,SAAeiD,GACb,IAAMkH,EAAS9N,KAAK8N,OACpB9N,KAAKuL,OAAO3E,GACZ5G,KAAK8nB,SACDha,EAAOtU,OAAS,EAClBwG,KAAKqD,MAAMyK,EAAOmH,SACO,IAAhBjV,KAAK8nB,QAAgB9nB,KAAKmC,gBACb,IAAlBnC,KAAK+D,UACP/D,KAAK6G,YAAYvL,KAAK0E,KAAKqvB,KAE7BrvB,KAAK6G,YAAYlE,aAGvB,EAlEA,CAA+C,EAAAmE,iBAAlC,EAAAsoB,oBAAmB,G,6BClEhC,QAAuB,OAkCP,EAAA1e,IAAhB,SAAuBoT,GACrB,IAAMpT,EAA8C,mBAAboT,EACnC,SAACtd,EAAG4kB,GAAM,OAAAtH,EAAStd,EAAG4kB,GAAK,EAAI5kB,EAArB,GACV,SAACA,EAAG4kB,GAAM,OAAA5kB,EAAI4kB,EAAI5kB,EAAR,GACd,OAAO,EAAA2F,OAAOuE,K,6BClChB,QAAuE,OA4BvD,EAAAC,UAAhB,SAAgCsT,EACA7P,GAC9B,OAAO,SAAmCjP,GACxC,IAAI+P,EASJ,GAPEA,EADqC,mBAA5B+O,EAC0BA,EAElB,WACf,OAAmBA,GAIC,mBAAb7P,EACT,OAAOjP,EAAOH,KAAK,IAAIsqB,EAAkBpa,EAAgBd,IAG3D,IAAM0B,EAAmBvb,OAAOkM,OAAOtB,EAAQ,EAAA0Q,iCAI/C,OAHAC,EAAY3Q,OAASA,EACrB2Q,EAAYZ,eAAiBA,EAEKY,IAItC,iBACE,WAAoBZ,EACAd,GADA,KAAAc,iBACA,KAAAd,WAStB,OAPE,YAAA/Y,KAAA,SAAKgH,EAA2B8C,GACtB,IAAAiP,EAAA,KAAAA,SACFvK,EAAU7J,KAAKkV,iBACfpS,EAAesR,EAASvK,GAAS/E,UAAUzC,GAEjD,OADAS,EAAayC,IAAIJ,EAAOL,UAAU+E,IAC3B/G,GAEX,EAXA,GAAa,EAAAwsB,kBAAiB,G,oOCpD9B,IAA2B,MAC3B,IAA6B,OAmDb,EAAA1e,UAAhB,SAA6B3J,EAAuBwC,GAClD,YADkD,IAAAA,MAAA,GAC3C,SAAmCtE,GACxC,OAAOA,EAAOH,KAAK,IAAIuqB,EAAkBtoB,EAAWwC,MAIxD,iBACE,WAAoBxC,EAA+BwC,QAAR,aAAvB,KAAAxC,YAA+B,KAAAwC,QAMrD,OAHE,YAAApO,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIgD,EAAoBzF,EAAYrC,KAAKiH,UAAWjH,KAAKyJ,SAErF,EAPA,GAAa,EAAA8lB,kBAAiB,EAc9B,kBAOE,WAAY1oB,EACQI,EACAwC,QAAR,aACV,YAAM5C,GAFY,KAAAI,YACA,KAAAwC,QAuBtB,OAhC4C,OACnC,EAAAqK,SAAP,SAAgDiB,GACtC,IAAAwU,EAAA,EAAAA,aAAc1iB,EAAA,EAAAA,YACtB0iB,EAAavlB,QAAQ6C,GACrB7G,KAAKyD,eASC,YAAA+rB,gBAAR,SAAwBjG,GACtBvpB,KAAKuF,IAAIvF,KAAKiH,UAAUsC,SACtBzB,EAAoBgM,SACpB9T,KAAKyJ,MACL,IAAIgmB,EAAiBlG,EAAcvpB,KAAK6G,gBAIlC,YAAAxD,MAAV,SAAgB5H,GACduE,KAAKwvB,gBAAgB,EAAA/qB,aAAaD,WAAW/I,KAGrC,YAAA8H,OAAV,SAAiB7H,GACfsE,KAAKwvB,gBAAgB,EAAA/qB,aAAaE,YAAYjJ,KAGtC,YAAAgI,UAAV,WACE1D,KAAKwvB,gBAAgB,EAAA/qB,aAAaG,mBAEtC,EAhCA,CAA4C,EAAAhB,YAA/B,EAAAkE,oBAAmB,EAkChC,MACE,SAAmByhB,EACA1iB,GADA,KAAA0iB,eACA,KAAA1iB,eAFR,EAAA4oB,iBAAgB,G,oOC7G7B,IAA+B,MAG/B,IAAwB,OACxB,IAAgC,OAEhC,IAAkC,OA2ElB,EAAAriB,kBAAhB,W,IAAwC,wDAOtC,OAJ2B,IAAvB8W,EAAY1qB,QAAgB,EAAAI,QAAQsqB,EAAY,MAClDA,EAAsCA,EAAY,IAG7C,SAAC/e,GAA0B,OAAAA,EAAOH,KAAK,IAAI0qB,EAAhB,MAcpB,EAAAtN,wBAAhB,W,IAA8C,wDAG5C,IAAIjd,EAA+B,KAOnC,OAL2B,IAAvB+e,EAAY1qB,QAAgB,EAAAI,QAAQsqB,EAAY,MAClDA,EAA2CA,EAAY,IAEzD/e,EAAS+e,EAAYjP,QAEd,IAAI,EAAAwD,eAAetT,EAAQ,MAAMH,KAAK,IAAI0qB,EAAgCxL,KAGnF,iBACE,WAAoBA,GAAA,KAAAA,cAMtB,OAHE,YAAA7oB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI6qB,EAA4BttB,EAAYrC,KAAKkkB,eAE7E,EAPA,GASA,cACE,WAAsBrd,EACFqd,GAClB,YAAMrd,GAFc,KAAAA,cACF,KAAAqd,cA4BtB,OA9BgD,OAM9C,YAAA1gB,YAAA,SAAYjB,EAAYqE,GACtB5G,KAAK4vB,yBAGP,YAAAjsB,eAAA,SAAeiD,GACb5G,KAAK4vB,yBAGG,YAAArsB,OAAV,SAAiB7H,GACfsE,KAAK4vB,yBAGG,YAAAlsB,UAAV,WACE1D,KAAK4vB,yBAGC,YAAAA,sBAAR,WACE,IAAMt0B,EAAO0E,KAAKkkB,YAAYjP,QAC1B3Z,EACF0E,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAM1E,IAEjC0E,KAAK6G,YAAYlE,YAGvB,EA9BA,CAAgD,EAAAmE,kB,oOC3HhD,IAA2B,MAsCX,EAAA+J,SAAhB,WACE,OAAO,SAAC1L,GAA0B,OAAAA,EAAOH,KAAK,IAAZ,KAGpC,+BAIA,OAHE,YAAA3J,KAAA,SAAKgH,EAAgC8C,GACnC,OAAOA,EAAOL,UAAU,IAAI+qB,EAAmBxtB,KAEnD,EAJA,GAWA,cAIE,WAAYwE,GACV,YAAMA,GAHA,KAAAipB,SAAmB,EAe7B,OAjBoC,OAQlC,YAAAzsB,MAAA,SAAM5H,GACAuE,KAAK8vB,QACP9vB,KAAK6G,YAAYvL,KAAK,CAAC0E,KAAK+vB,KAAMt0B,IAElCuE,KAAK8vB,SAAU,EAGjB9vB,KAAK+vB,KAAOt0B,GAEhB,EAjBA,CAAoC,EAAAmI,a,2BCvDpC,QAAoB,MACpB,IAAuB,OA6CP,EAAAkN,UAAhB,SAA6BoS,EACAM,GAC3B,OAAO,SAACre,GAA0B,OAChC,EAAAoK,OAAO2T,EAAWM,EAAlB,CAA2Bre,GAC3B,EAAAoK,OAAO,EAAAygB,IAAI9M,EAAWM,GAAtB,CAAuCre,O,4BCjD3C,QAAoB,OAqCpB,SAAS8qB,EAAQ/1B,EAAiBV,GAchC,OAbe,SAACgN,GAEd,IADA,IAAI0pB,EAAc1pB,EACT/M,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,IAAM02B,EAAID,EAAYh2B,EAAMT,IAC5B,QAAiB,IAAN02B,EAGT,OAFAD,EAAcC,EAKlB,OAAOD,GAnBK,EAAAnf,MAAhB,W,IAA4B,wDAC1B,IAAMvX,EAAS2qB,EAAW3qB,OAC1B,GAAe,IAAXA,EACF,MAAM,IAAIgH,MAAM,uCAElB,OAAO,SAAC2E,GAA0B,SAAA8K,IAAIggB,EAAQ9L,EAAY3qB,GAAxB,O,6BClCpC,QAAwB,OACxB,IAA0B,OAuBV,EAAAwX,QAAhB,SAA8BoD,GAC5B,OAAOA,EACL,EAAAzD,WAAU,WAAM,WAAI,EAAJ,UAAkByD,GAClC,EAAAzD,UAAU,IAAI,EAAA/N,W,6BC3BlB,QAAgC,OAChC,IAA0B,OAUV,EAAAqO,gBAAhB,SAAmCxV,GACjC,OAAO,SAAC0J,GAA0B,SAAAwL,UAAU,IAAI,EAAA1N,gBAAmBxH,GAAjC,O,6BCZpC,QAA6B,OAC7B,IAA0B,OAIV,EAAAyV,YAAhB,WACE,OAAO,SAAC/L,GAA0B,SAAAwL,UAAU,IAAI,EAAA9N,aAAd,O,4BCNpC,QAA8B,OAE9B,IAA0B,OAUV,EAAAsO,cAAhB,SAAoCpK,EACAC,EACAod,EACAnd,GAE9Bmd,GAAsD,mBAAxBA,IAChCnd,EAAYmd,GAGd,IAAMhQ,EAA0C,mBAAxBgQ,EAAqCA,OAAsBxlB,EAC7EiL,EAAU,IAAI,EAAA1B,cAAiBpB,EAAYC,EAAYC,GAE7D,OAAO,SAAC9B,GAA0B,SAAAwL,WAAU,WAAM,OAAA9G,IAASuK,EAAzB,O,4BCxBpC,QAAwB,OAExB,IAAmC,OAiBnB,EAAA9G,KAAhB,W,IAAwB,wDACtB,OAAO,SAA8BnI,GAOnC,OAJ2B,IAAvB+W,EAAY1iB,QAAgB,EAAAI,QAAQsiB,EAAY,MAClDA,EAAoCA,EAAY,IAG3C/W,EAAOH,KAAK3J,KAAK,EAAAiS,KAAU,cAAInI,GAAM,OAAK+W,Q,6BC3BrD,QAAqB,OACrB,IAAyB,OACzB,IAA+B,OAE/B,IAAqB,MAoDL,EAAA/P,OAAhB,SAA6B4X,EAAsDC,GAMjF,OAAI7Z,UAAU3Q,QAAU,EACf,SAAwC2L,GAC7C,OAAO,EAAAiB,KAAK,EAAAsL,KAAKqS,EAAaC,GAAO,EAAAvR,SAAS,GAAI,EAAA9D,eAAeqV,GAA1D,CAAiE7e,IAGrE,SAAgCA,GACrC,OAAO,EAAAiB,KAAK,EAAAsL,MAAe,SAAC2d,EAAK5zB,EAAOiD,GACtC,OAAOqlB,EAAesL,EAAK5zB,EAAOiD,EAAQ,MACxC,EAAA+T,SAAS,GAFN,CAEUtN,M,oOCtErB,IAA2B,MAMX,EAAAwQ,SAAhB,WACE,OAAO,SAAkCxQ,GACvC,OAAOA,EAAOH,KAAK,IAAIorB,EAAiBjrB,MAI5C,iBACE,WAAoB2Q,GAAA,KAAAA,cAgBtB,OAdE,YAAAza,KAAA,SAAKgH,EAA2B8C,GAEtB,IAAA2Q,EAAA,KAAAA,YACDA,EAAaX,YAEpB,IAAMkb,EAAa,IAAIC,EAAmBjuB,EAAYyT,GAChDhT,EAAeqC,EAAOL,UAAUurB,GAMtC,OAJKA,EAAWttB,SACPstB,EAAY7a,WAAaM,EAAYP,WAGvCzS,GAEX,EAjBA,GAmBA,cAIE,WAAY+D,EACQiP,GAClB,YAAMjP,GADY,KAAAiP,cAwDtB,OA7DoC,OASG,YAAA3K,aAAA,WAE3B,IAAA2K,EAAA,KAAAA,YACR,GAAKA,EAAL,CAKA9V,KAAK8V,YAAc,KACnB,IAAMH,EAAkBG,EAAaX,UACrC,GAAIQ,GAAY,EACd3V,KAAKwV,WAAa,UAKpB,GADOM,EAAaX,UAAYQ,EAAW,EACvCA,EAAW,EACb3V,KAAKwV,WAAa,SADpB,CA4BQ,IAAAA,EAAA,KAAAA,WACFO,EAA0BD,EAAaL,YAC7CzV,KAAKwV,WAAa,MAEdO,GAAsBP,GAAcO,IAAqBP,GAC3DO,EAAiBtS,oBA7CjBzD,KAAKwV,WAAa,MAgDxB,EA7DA,CAAoC,EAAA5R,a,oOC/BpC,IAA2B,MAE3B,IAAgC,OAgBhB,EAAAwN,OAAhB,SAA0B5C,GACxB,YADwB,IAAAA,OAAiB,GAClC,SAACrJ,GACN,OAAc,IAAVqJ,EACK,IAAI,EAAAmF,gBACFnF,EAAQ,EACVrJ,EAAOH,KAAK,IAAIurB,GAAgB,EAAGprB,IAEnCA,EAAOH,KAAK,IAAIurB,EAAe/hB,EAAQ,EAAGrJ,MAKvD,iBACE,WAAoBqJ,EACArJ,GADA,KAAAqJ,QACA,KAAArJ,SAKtB,OAHE,YAAA9J,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI0rB,EAAiBnuB,EAAYrC,KAAKwO,MAAOxO,KAAKmF,UAE9E,EAPA,GAcA,cACE,WAAY0B,EACQ2H,EACArJ,GAClB,YAAM0B,GAFY,KAAA2H,QACA,KAAArJ,SActB,OAjBkC,OAMhC,YAAAxC,SAAA,WACE,IAAK3C,KAAK2H,UAAW,CACnB,IAAQxC,EAAR,KAAQA,OAAQqJ,EAAhB,KAAgBA,MAChB,GAAc,IAAVA,EACF,OAAO,YAAM7L,SAAQ,WACZ6L,GAAS,IAClBxO,KAAKwO,MAAQA,EAAQ,GAEvBrJ,EAAOL,UAAU9E,KAAKuK,4BAG5B,EAjBA,CAAkC,EAAA3G,a,oOC1ClC,IAAwB,OAExB,IAAyB,OACzB,IAA4B,MAE5B,IAAgC,OAEhC,IAAkC,OAkBlB,EAAAyN,WAAhB,SAA8BgT,GAC5B,OAAO,SAAClf,GAA0B,OAAAA,EAAOH,KAAK,IAAIyrB,EAAhB,MAGpC,iBACE,WAAsBpM,GAAA,KAAAA,WAMxB,OAHE,YAAAhpB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI4rB,EAAqBruB,EAAYrC,KAAKqkB,SAAUlf,KAEhF,EAPA,GAcA,cAOE,WAAY0B,EACQwd,EACAlf,GAClB,YAAM0B,GAFY,KAAAwd,WACA,KAAAlf,SAJZ,KAAAwrB,2BAAqC,EAuE/C,OA5EyC,OAavC,YAAArtB,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAK2wB,2BAA4B,EACjC3wB,KAAKmF,OAAOL,UAAU9E,OAGxB,YAAA2D,eAAA,SAAeiD,GACb,IAAuC,IAAnC5G,KAAK2wB,0BACP,OAAO,YAAMhuB,SAAQ,YAIzB,YAAAA,SAAA,WAGE,GAFA3C,KAAK2wB,2BAA4B,GAE5B3wB,KAAK2H,UAAW,CAInB,GAHK3H,KAAK4wB,SACR5wB,KAAK6wB,sBAEF7wB,KAAK8wB,qBAAuB9wB,KAAK8wB,oBAAoB/tB,OACxD,OAAO,YAAMJ,SAAQ,WAGvB3C,KAAKuK,yBACLvK,KAAK+wB,cAAcz1B,SAIc,YAAA6P,aAAA,WACnC,IAAQ4lB,EAAR,KAAQA,cAAeD,EAAvB,KAAuBA,oBACnBC,IACFA,EAActtB,cACdzD,KAAK+wB,cAAgB,MAEnBD,IACFA,EAAoBrtB,cACpBzD,KAAK8wB,oBAAsB,MAE7B9wB,KAAK4wB,QAAU,MAGoB,YAAArmB,uBAAA,WACnC,WAAQwmB,EAAA,EAAAA,cAAeH,EAAA,EAAAA,QAASE,EAAA,EAAAA,oBAQhC,OAPA9wB,KAAK+wB,cAAgB,KACrB/wB,KAAK4wB,QAAU,KACf5wB,KAAK8wB,oBAAsB,KAC3B,YAAMvmB,uBAAsB,WAC5BvK,KAAK+wB,cAAgBA,EACrB/wB,KAAK4wB,QAAUA,EACf5wB,KAAK8wB,oBAAsBA,EACpB9wB,MAGD,YAAA6wB,mBAAR,WACE7wB,KAAK+wB,cAAgB,IAAI,EAAAnuB,QACzB,IAAMguB,EAAU,EAAAplB,SAASxL,KAAKqkB,SAAd,CAAwBrkB,KAAK+wB,eAC7C,GAAIH,IAAY,EAAAnlB,YACd,OAAO,YAAM9I,SAAQ,WAEvB3C,KAAK4wB,QAAUA,EACf5wB,KAAK8wB,oBAAsB,EAAAxa,kBAAkBtW,KAAM4wB,IAEvD,EA5EA,CAAyC,EAAA9pB,kB,mOC7CzC,IAA2B,MAsBX,EAAAwK,MAAhB,SAAyB9C,GACvB,YADuB,IAAAA,OAAiB,GACjC,SAACrJ,GAA0B,OAAAA,EAAOH,KAAK,IAAIgsB,EAAcxiB,EAA9BrJ,MAGpC,iBACE,WAAoBqJ,EACArJ,GADA,KAAAqJ,QACA,KAAArJ,SAMtB,OAHE,YAAA9J,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAImsB,EAAgB5uB,EAAYrC,KAAKwO,MAAOxO,KAAKmF,UAE7E,EARA,GAeA,cACE,WAAY0B,EACQ2H,EACArJ,GAClB,YAAM0B,GAFY,KAAA2H,QACA,KAAArJ,SActB,OAjBiC,OAM/B,YAAA5C,MAAA,SAAM7G,GACJ,IAAKsE,KAAK2H,UAAW,CACnB,IAAQxC,EAAR,KAAQA,OAAQqJ,EAAhB,KAAgBA,MAChB,GAAc,IAAVA,EACF,OAAO,YAAMjM,MAAK,UAAC7G,GACV8S,GAAS,IAClBxO,KAAKwO,MAAQA,EAAQ,GAEvBrJ,EAAOL,UAAU9E,KAAKuK,4BAG5B,EAjBA,CAAiC,EAAA3G,a,oOCvCjC,IAAwB,OAExB,IAAyB,OACzB,IAA4B,MAE5B,IAAgC,OAEhC,IAAkC,OAkBlB,EAAA2N,UAAhB,SAA6B8S,GAC3B,OAAO,SAAClf,GAA0B,OAAAA,EAAOH,KAAK,IAAIksB,EAAkB7M,EAAlClf,MAGpC,iBACE,WAAsBkf,EACHlf,GADG,KAAAkf,WACH,KAAAlf,SAMrB,OAHE,YAAA9J,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIqsB,EAAoB9uB,EAAYrC,KAAKqkB,SAAUrkB,KAAKmF,UAEpF,EARA,GAeA,cAME,WAAY0B,EACQwd,EACAlf,GAClB,YAAM0B,GAFY,KAAAwd,WACA,KAAAlf,SA8DtB,OAtEwC,OAYtC,YAAA5C,MAAA,SAAM7G,GACJ,IAAKsE,KAAK2H,UAAW,CAEnB,IAAI0D,EAASrL,KAAKqL,OACdulB,EAAe5wB,KAAK4wB,QACpBE,EAAsB9wB,KAAK8wB,oBAE/B,GAAKF,EAQH5wB,KAAKqL,OAAS,KACdrL,KAAK8wB,oBAAsB,SATf,CAGZ,GAFAzlB,EAAS,IAAI,EAAAzI,SACbguB,EAAU,EAAAplB,SAASxL,KAAKqkB,SAAd,CAAwBhZ,MAClB,EAAAI,YACd,OAAO,YAAMlJ,MAAK,UAAC,EAAAkJ,YAAY5O,GAEjCi0B,EAAsB,EAAAxa,kBAAkBtW,KAAM4wB,GAMhD5wB,KAAKuK,yBAELvK,KAAKqL,OAASA,EACdrL,KAAK4wB,QAAUA,EACf5wB,KAAK8wB,oBAAsBA,EAE3BzlB,EAAO/P,KAAKI,KAIqB,YAAAyP,aAAA,WACnC,IAAQE,EAAR,KAAQA,OAAQylB,EAAhB,KAAgBA,oBACZzlB,IACFA,EAAO5H,cACPzD,KAAKqL,OAAS,MAEZylB,IACFA,EAAoBrtB,cACpBzD,KAAK8wB,oBAAsB,MAE7B9wB,KAAK4wB,QAAU,MAGjB,YAAAttB,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT,WAAQyE,EAAA,EAAAA,OAAQulB,EAAA,EAAAA,QAASE,EAAA,EAAAA,oBACzB9wB,KAAKqL,OAAS,KACdrL,KAAK4wB,QAAU,KACf5wB,KAAK8wB,oBAAsB,KAE3B9wB,KAAKuK,yBAELvK,KAAKqL,OAASA,EACdrL,KAAK4wB,QAAUA,EACf5wB,KAAK8wB,oBAAsBA,EAE3B9wB,KAAKmF,OAAOL,UAAU9E,OAE1B,EAtEA,CAAwC,EAAA8G,kB,oOC3CxC,IAAgC,OAEhC,IAAkC,OAsClB,EAAA0K,OAAhB,SAA0B6S,GACxB,OAAO,SAAClf,GAA0B,OAAAA,EAAOH,KAAK,IAAIosB,EAAhB,MAGpC,iBACE,WAAoB/M,GAAA,KAAAA,WAStB,OANE,YAAAhpB,KAAA,SAAKgH,EAA2B8C,GAC9B,IAAMksB,EAAmB,IAAIC,EAAiBjvB,GACxCS,EAAeqC,EAAOL,UAAUusB,GAEtC,OADAvuB,EAAayC,IAAI,EAAA+Q,kBAAkB+a,EAAkBrxB,KAAKqkB,WACnDvhB,GAEX,EAVA,GAiBA,2BAAqC,wBAE3B,KAAAiB,UAAoB,EAuB9B,OAzBqC,OAIzB,YAAAV,MAAV,SAAgB5H,GACduE,KAAKvE,MAAQA,EACbuE,KAAK+D,UAAW,GAGlB,YAAAT,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAK0oB,aAGP,YAAA/kB,eAAA,WACE3D,KAAK0oB,aAGP,YAAAA,UAAA,WACM1oB,KAAK+D,WACP/D,KAAK+D,UAAW,EAChB/D,KAAK6G,YAAYvL,KAAK0E,KAAKvE,SAGjC,EAzBA,CAAqC,EAAAqL,kB,oOC/DrC,IAA2B,MAG3B,IAAsB,OAyCN,EAAA2K,WAAhB,SAA8BmI,EAAgB3S,GAC5C,YAD4C,IAAAA,MAAA,SACrC,SAAC9B,GAA0B,OAAAA,EAAOH,KAAK,IAAIusB,EAAmB3X,EAAnC,MAGpC,iBACE,WAAoBA,EACA3S,GADA,KAAA2S,SACA,KAAA3S,YAMtB,OAHE,YAAA5L,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI0sB,EAAqBnvB,EAAYrC,KAAK4Z,OAAQ5Z,KAAKiH,aAEnF,EARA,GAeA,cAIE,WAAYJ,EACQ+S,EACA3S,GAClB,YAAMJ,GAFY,KAAA+S,SACA,KAAA3S,YAJpB,KAAAlD,UAAoB,EAMlB/D,KAAKuF,IAAI0B,EAAUsC,SAASkoB,EAAsB7X,EAAQ,CAAEvX,WAAYrC,KAAM4Z,YAclF,OAtBsC,OAW1B,YAAAvW,MAAV,SAAgB5H,GACduE,KAAK8oB,UAAYrtB,EACjBuE,KAAK+D,UAAW,GAGlB,YAAAT,WAAA,WACMtD,KAAK+D,WACP/D,KAAK+D,UAAW,EAChB/D,KAAK6G,YAAYvL,KAAK0E,KAAK8oB,aAGjC,EAtBA,CAAsC,EAAAllB,YAwBtC,SAAS6tB,EAA2C/nB,GAC5C,IAAArH,EAAA,EAAAA,WAAYuX,EAAA,EAAAA,OAClBvX,EAAWiB,aACXtD,KAAKuJ,SAASG,EAAOkQ,K,oOC1FvB,IAA2B,MA8CX,EAAAlI,KAAhB,SAA2BqS,EAAqDC,GAC9E,IAAI0N,GAAU,EAUd,OAJIvnB,UAAU3Q,QAAU,IACtBk4B,GAAU,GAGL,SAA8BvsB,GACnC,OAAOA,EAAOH,KAAK,IAAI2sB,EAAa5N,EAAaC,EAAM0N,MAI3D,iBACE,WAAoB3N,EAA6DC,EAAsB0N,QAAR,cAA3E,KAAA3N,cAA6D,KAAAC,OAAsB,KAAA0N,UAKzG,OAHE,YAAAr2B,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI8sB,EAAevvB,EAAYrC,KAAK+jB,YAAa/jB,KAAKgkB,KAAMhkB,KAAK0xB,WAE7F,EANA,GAaA,cAYE,WAAY7qB,EAAoCkd,EAA6D8N,EACzFH,GAClB,YAAM7qB,GAFwC,KAAAkd,cAA6D,KAAA8N,QACzF,KAAAH,UAZZ,KAAAhzB,MAAgB,EAoC1B,OArCmC,OAGjC,sBAAI,mBAAI,C,IAAR,WACE,OAAOsB,KAAK6xB,O,IAGd,SAASp2B,GACPuE,KAAK0xB,SAAU,EACf1xB,KAAK6xB,MAAQp2B,G,gCAQL,YAAA4H,MAAV,SAAgB5H,GACd,GAAKuE,KAAK0xB,QAIR,OAAO1xB,KAAKyoB,SAAShtB,GAHrBuE,KAAKgkB,KAAOvoB,EACZuE,KAAK6G,YAAYvL,KAAKG,IAMlB,YAAAgtB,SAAR,SAAiBhtB,GACf,IACI4a,EADE3X,EAAQsB,KAAKtB,QAEnB,IACE2X,EAASrW,KAAK+jB,YAAe/jB,KAAKgkB,KAAMvoB,EAAOiD,GAC/C,MAAOhD,GACPsE,KAAK6G,YAAYtE,MAAM7G,GAEzBsE,KAAKgkB,KAAO3N,EACZrW,KAAK6G,YAAYvL,KAAK+a,IAE1B,EArCA,CAAmC,EAAAzS,a,oOC1EnC,IAA2B,MAC3B,IAAyB,OACzB,IAA4B,MAwDZ,EAAA+N,cAAhB,SAAiC2S,EACAC,GAC/B,OAAO,SAACpf,GAA0B,OAAAA,EAAOH,KAAK,IAAI8sB,EAAsBxN,EAAtC,MAGpC,iBACE,WAAoBA,EACAC,GADA,KAAAD,YACA,KAAAC,WAMtB,OAHE,YAAAlpB,KAAA,SAAKgH,EAAiC8C,GACpC,OAAOA,EAAOL,UAAU,IAAIitB,EAAwB1vB,EAAYrC,KAAKskB,UAAWtkB,KAAKukB,YAEzF,EARA,GAAa,EAAAuN,sBAAqB,EAelC,kBAKE,WAAYjrB,EACQyd,EACAC,GAClB,YAAM1d,GAFY,KAAAyd,YACA,KAAAC,WANZ,KAAAyN,GAAU,GACV,KAAAC,GAAU,GACV,KAAAC,cAAe,EAMrBlyB,KAAKuF,IAAI+e,EAAUxf,UAAU,IAAIqtB,EAAiCtrB,EAAa7G,QAsDnF,OA/DmD,OAYvC,YAAAqD,MAAV,SAAgB5H,GACVuE,KAAKkyB,cAAmC,IAAnBlyB,KAAKiyB,GAAGz4B,OAC/BwG,KAAKoyB,MAAK,IAEVpyB,KAAKgyB,GAAGx2B,KAAKC,GACbuE,KAAKqyB,gBAIF,YAAA3uB,UAAP,WACM1D,KAAKkyB,aACPlyB,KAAKoyB,KAAwB,IAAnBpyB,KAAKgyB,GAAGx4B,QAAmC,IAAnBwG,KAAKiyB,GAAGz4B,QAE1CwG,KAAKkyB,cAAe,GAIxB,YAAAG,YAAA,WAEE,IADA,WAAQL,EAAA,EAAAA,GAAIC,EAAA,EAAAA,GAAI1N,EAAA,EAAAA,SACTyN,EAAGx4B,OAAS,GAAKy4B,EAAGz4B,OAAS,GAAG,CACrC,IAAI84B,EAAIN,EAAG/c,QACPsd,EAAIN,EAAGhd,QACPud,GAAW,EACXjO,GACFiO,EAAW,EAAAhnB,SAAS+Y,EAAT,CAAmB+N,EAAGC,MAChB,EAAA9mB,aACfzL,KAAK6G,YAAYtE,MAAM,EAAAkJ,YAAY5O,GAGrC21B,EAAWF,IAAMC,EAEdC,GACHxyB,KAAKoyB,MAAK,KAKhB,YAAAA,KAAA,SAAK32B,GACK,IAAAoL,EAAA,KAAAA,YACRA,EAAYvL,KAAKG,GACjBoL,EAAYlE,YAGd,YAAA8vB,MAAA,SAAMh3B,GACAuE,KAAKkyB,cAAmC,IAAnBlyB,KAAKgyB,GAAGx4B,OAC/BwG,KAAKoyB,MAAK,IAEVpyB,KAAKiyB,GAAGz2B,KAAKC,GACbuE,KAAKqyB,gBAGX,EA/DA,CAAmD,EAAAzuB,YAAtC,EAAAmuB,wBAAuB,EAiEpC,kBACE,WAAYlrB,EAAkC3D,GAC5C,YAAM2D,GADsC,KAAA3D,SAehD,OAhBqD,OAKzC,YAAAG,MAAV,SAAgB5H,GACduE,KAAKkD,OAAOuvB,MAAMh3B,IAGV,YAAA8H,OAAV,SAAiB7H,GACfsE,KAAKkD,OAAOX,MAAM7G,IAGV,YAAAgI,UAAV,WACE1D,KAAKkD,OAAOQ,aAEhB,EAhBA,CAAqD,EAAAE,a,6BCjJrD,QAA0B,OAC1B,IAAyB,OACzB,IAAwB,OAIxB,SAAS8uB,IACP,OAAO,IAAI,EAAA9vB,QAeG,EAAAgP,MAAhB,WACE,OAAO,SAACzM,GAA0B,SAAAwQ,UAAA,CAAW,EAAAhF,UAAU+hB,EAAV,CAAX,O,6BCvBpC,QAA8B,OAUd,EAAA7gB,YAAhB,SAA+B9K,EAAqBC,EAAqBC,GACvE,OAAO,SAAC9B,GAA0B,OAAAA,EAAOH,KAG3C,SAAgC+B,EAAqBC,EAAqBC,GACxE,IAAI4C,EAEA/G,EADA6S,EAAW,EAEXrT,GAAW,EACXqwB,GAAa,EAEjB,OAAO,SAAmDxtB,GACxDwQ,IACK9L,IAAWvH,IACdA,GAAW,EACXuH,EAAU,IAAI,EAAA1B,cAAiBpB,EAAYC,EAAYC,GACvDnE,EAAeqC,EAAOL,UAAU,CAC9BxJ,KAAI,SAACG,GAASoO,EAAQvO,KAAKG,IAC3B8G,MAAK,SAAC7G,GACJ4G,GAAW,EACXuH,EAAQtH,MAAM7G,IAEhBiH,SAAQ,WACNgwB,GAAa,EACb9oB,EAAQlH,eAKd,IAAMiE,EAAWiD,EAAQ/E,UAAU9E,MAEnC,OAAO,WACL2V,IACA/O,EAASnD,cACLX,GAA6B,IAAb6S,GAAkBgd,GACpC7vB,EAAaW,gBAlC2BmvB,CAAoB7rB,EAAYC,EAA5C,O,mOCVpC,IAA2B,MAE3B,IAA2B,MAqBX,EAAA8K,OAAhB,SAA0BoR,GACxB,OAAO,SAAC/d,GAA0B,OAAAA,EAAOH,KAAK,IAAI6tB,EAAe3P,EAA/B/d,MAGpC,iBACE,WAAoB+d,EACA/d,GADA,KAAA+d,YACA,KAAA/d,SAMtB,OAHE,YAAA9J,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIguB,EAAiBzwB,EAAYrC,KAAKkjB,UAAWljB,KAAKmF,UAElF,EARA,GAeA,cAKE,WAAY0B,EACQqc,EACA/d,GAClB,YAAM0B,GAFY,KAAAqc,YACA,KAAA/d,SANZ,KAAA4tB,WAAqB,EAErB,KAAAr0B,MAAgB,EA+C1B,OAlDkC,OAWxB,YAAAs0B,iBAAR,SAAyBv3B,GACnBuE,KAAK+yB,UACP/yB,KAAK6G,YAAYtE,MAAM,4CAEvBvC,KAAK+yB,WAAY,EACjB/yB,KAAKizB,YAAcx3B,IAIb,YAAA4H,MAAV,SAAgB5H,GACd,IAAMiD,EAAQsB,KAAKtB,QAEfsB,KAAKkjB,UACPljB,KAAK+rB,QAAQtwB,EAAOiD,GAEpBsB,KAAKgzB,iBAAiBv3B,IAIlB,YAAAswB,QAAR,SAAgBtwB,EAAUiD,GACxB,IACMsB,KAAKkjB,UAAUznB,EAAOiD,EAAOsB,KAAKmF,SACpCnF,KAAKgzB,iBAAiBv3B,GAExB,MAAOC,GACPsE,KAAK6G,YAAYtE,MAAM7G,KAIjB,YAAAgI,UAAV,WACE,IAAMmD,EAAc7G,KAAK6G,YAErB7G,KAAKtB,MAAQ,GACfmI,EAAYvL,KAAK0E,KAAK+yB,UAAY/yB,KAAKizB,iBAAcr0B,GACrDiI,EAAYlE,YAEZkE,EAAYtE,MAAM,IAAI,EAAA+F,aAG5B,EAlDA,CAAkC,EAAA1E,a,oOC3ClC,IAA2B,MAgBX,EAAAmO,KAAhB,SAAwBvD,GACtB,OAAO,SAACrJ,GAA0B,OAAAA,EAAOH,KAAK,IAAIkuB,EAAhB,MAGpC,iBACE,WAAoBpc,GAAA,KAAAA,QAMtB,OAHE,YAAAzb,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIquB,EAAe9wB,EAAYrC,KAAK8W,SAEhE,EAPA,GAcA,cAGE,WAAYjQ,EAAoCiQ,GAC9C,YAAMjQ,GADwC,KAAAiQ,QAFhD,KAAAtI,MAAgB,EAWlB,OAZgC,OAOpB,YAAAnL,MAAV,SAAgBmD,KACRxG,KAAKwO,MAAQxO,KAAK8W,OACtB9W,KAAK6G,YAAYvL,KAAKkL,IAG5B,EAZA,CAAgC,EAAA5C,a,oOClChC,IAA2B,MAC3B,IAAwC,OAqCxB,EAAAoO,SAAhB,SAA4BxD,GAC1B,OAAO,SAACrJ,GAA0B,OAAAA,EAAOH,KAAK,IAAIouB,EAAhB,MAGpC,iBACE,WAAoBC,GAClB,GADkB,KAAAA,aACdrzB,KAAKqzB,WAAa,EACpB,MAAM,IAAI,EAAA9qB,wBAahB,OATE,YAAAlN,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAwB,IAApBnF,KAAKqzB,WAGAluB,EAAOL,UAAU,IAAI,EAAAlB,WAAWvB,IAEhC8C,EAAOL,UAAU,IAAIwuB,EAAmBjxB,EAAYrC,KAAKqzB,cAGtE,EAhBA,GAuBA,cAIE,WAAYxsB,EAAoCwsB,GAC9C,YAAMxsB,GADwC,KAAAwsB,aAFxC,KAAAjY,OAAiB,EAIvBpb,KAAKuzB,MAAQ,IAAI55B,MAAS05B,GAkB9B,OAxBoC,OASxB,YAAAhwB,MAAV,SAAgB5H,GACd,IAAM+3B,EAAYxzB,KAAKqzB,WACjB7kB,EAAQxO,KAAKob,SAEnB,GAAI5M,EAAQglB,EACVxzB,KAAKuzB,MAAM/kB,GAAS/S,MACf,CACL,IAAMg4B,EAAejlB,EAAQglB,EACvBE,EAAO1zB,KAAKuzB,MACZI,EAAWD,EAAKD,GAEtBC,EAAKD,GAAgBh4B,EACrBuE,KAAK6G,YAAYvL,KAAKq4B,KAG5B,EAxBA,CAAoC,EAAA/vB,a,oOC9DpC,IAAgC,OAEhC,IAAkC,OAelB,EAAAqO,UAAhB,SAA6BoS,GAC3B,OAAO,SAAClf,GAA0B,OAAAA,EAAOH,KAAK,IAAI4uB,EAAhB,MAGpC,iBACE,WAAoBvP,GAAA,KAAAA,WAMtB,OAHE,YAAAhpB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI+uB,EAAoBxxB,EAAYrC,KAAKqkB,YAErE,EAPA,GAcA,cAKE,WAAYxd,EACAwd,GACV,YAAMxd,GALA,KAAA9C,UAAoB,EACpB,KAAA+vB,gBAA0B,EAKhC9zB,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMqkB,IA6BrC,OArCwC,OAW5B,YAAAhhB,MAAV,SAAgB5H,GACVuE,KAAK+D,UACP,YAAMV,MAAK,UAAC5H,IAIN,YAAAiI,UAAV,WACM1D,KAAK8zB,eACP,YAAMpwB,UAAS,WAEf1D,KAAKyD,eAIT,YAAAH,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAK+D,UAAW,GAGlB,YAAAJ,eAAA,WACE3D,KAAK8zB,gBAAiB,EAClB9zB,KAAK2H,WACP,YAAMjE,UAAS,YAGrB,EArCA,CAAwC,EAAAoD,kB,oOCrCxC,IAA2B,MAgBX,EAAAoL,UAAhB,SAA6BgR,GAC3B,OAAO,SAAC/d,GAA0B,OAAAA,EAAOH,KAAK,IAAI+uB,EAAhB,MAGpC,iBACE,WAAoB7Q,GAAA,KAAAA,YAMtB,OAHE,YAAA7nB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIkvB,EAAoB3xB,EAAYrC,KAAKkjB,aAErE,EAPA,GAcA,cAIE,WAAYrc,EACQqc,GAClB,YAAMrc,GADY,KAAAqc,YAJZ,KAAA+Q,UAAoB,EACpB,KAAAv1B,MAAgB,EA0B1B,OA5BqC,OASzB,YAAA2E,MAAV,SAAgB5H,GACd,IAAMoL,EAAc7G,KAAK6G,YACrB7G,KAAKi0B,UACPj0B,KAAKk0B,iBAAiBz4B,GAGnBuE,KAAKi0B,UACRptB,EAAYvL,KAAKG,IAIb,YAAAy4B,iBAAR,SAAyBz4B,GACvB,IACE,IAAM4a,EAASrW,KAAKkjB,UAAUznB,EAAOuE,KAAKtB,SAC1CsB,KAAKi0B,SAAW5I,QAAQhV,GACxB,MAAO3a,GACPsE,KAAK6G,YAAYtE,MAAM7G,KAG7B,EA5BA,CAAqC,EAAAkI,a,6BClCrC,QAAgC,OAChC,IAAiC,OACjC,IAAgC,OAChC,IAAuC,OACvC,IAA4B,OA2BZ,EAAAuO,UAAhB,W,IAA6B,wDAC3B,OAAO,SAAChN,GACN,IAAI8B,EAAwB8M,EAAMA,EAAMva,OAAS,GAC7C,EAAAya,YAAYhN,GACd8M,EAAMG,MAENjN,EAAY,KAGd,IAAM1N,EAAMwa,EAAMva,OAClB,OAAY,IAARD,EACK,EAAAsS,OAAa,IAAI,EAAA+H,iBAAuBG,EAAM,GAAI9M,GAAY9B,GAC5D5L,EAAM,EACR,EAAAsS,OAAa,IAAI,EAAAmI,gBAAwBD,EAAO9M,GAAY9B,GAE5D,EAAA0G,OAAa,IAAI,EAAA8H,gBAAmB1M,GAAY9B,M,6BC3C7D,QAAsC,OActB,EAAAiN,YAAhB,SAA+BnL,EAAuBwC,GACpD,YADoD,IAAAA,MAAA,GAC7C,SAAqCtE,GAC1C,OAAOA,EAAOH,KAAK,IAAImvB,EAAuBltB,EAAWwC,MAI7D,iBACE,WAAoBxC,EACAwC,GADA,KAAAxC,YACA,KAAAwC,QAOtB,OALE,YAAApO,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAO,IAAI,EAAAoW,sBACTpW,EAAQnF,KAAKyJ,MAAOzJ,KAAKiH,WACzBnC,UAAUzC,IAEhB,EATA,I,6BCvBA,QAA0B,OAC1B,IAAyB,OAET,EAAA4iB,UAAhB,WACE,OAAO,EAAA3S,UAAU,EAAAsc,Y,oOCFnB,IAAgC,OAEhC,IAAkC,OAuDlB,EAAAtc,UAAhB,SACE2J,EACAxF,GAEA,OAAO,SAAmCtR,GACxC,OAAOA,EAAOH,KAAK,IAAIovB,EAAkBnY,EAASxF,MAItD,iBACE,WAAoBwF,EACAxF,GADA,KAAAwF,UACA,KAAAxF,iBAMtB,OAHE,YAAApb,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIuvB,EAAoBhyB,EAAYrC,KAAKic,QAASjc,KAAKyW,kBAEnF,EARA,GAeA,cAIE,WAAY5P,EACQoV,EACAxF,GAClB,YAAM5P,GAFY,KAAAoV,UACA,KAAAxF,iBALZ,KAAA/X,MAAgB,EAoE1B,OArE2C,OAU/B,YAAA2E,MAAV,SAAgB5H,GACd,IAAI4a,EACE3X,EAAQsB,KAAKtB,QACnB,IACE2X,EAASrW,KAAKic,QAAQxgB,EAAOiD,GAC7B,MAAO6D,GAEP,YADAvC,KAAK6G,YAAYtE,MAAMA,GAGzBvC,KAAK+uB,UAAU1Y,EAAQ5a,EAAOiD,IAGxB,YAAAqwB,UAAR,SAAkB1Y,EAA4B5a,EAAUiD,GACtD,IAAMqY,EAAoB/W,KAAK+W,kBAC3BA,GACFA,EAAkBtT,cAEpBzD,KAAKuF,IAAIvF,KAAK+W,kBAAoB,EAAAT,kBAAkBtW,KAAMqW,EAAQ5a,EAAOiD,KAGjE,YAAAgF,UAAV,WACS,IAAAqT,EAAA,KAAAA,kBACFA,IAAqBA,EAAkBhU,QAC1C,YAAMW,UAAS,YAIkB,YAAAyH,aAAA,WACnCnL,KAAK+W,kBAAoB,MAG3B,YAAApT,eAAA,SAAeiD,GACb5G,KAAKuL,OAAO3E,GACZ5G,KAAK+W,kBAAoB,KACrB/W,KAAK2H,WACP,YAAMjE,UAAS,YAInB,YAAAJ,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACL5G,KAAKyW,eACPzW,KAAKs0B,eAAenxB,EAAYuD,EAAYtD,EAAYuD,GAExD3G,KAAK6G,YAAYvL,KAAKoL,IAIlB,YAAA4tB,eAAR,SAAuBnxB,EAAeuD,EAAetD,EAAoBuD,GACvE,IAAI0P,EACJ,IACEA,EAASrW,KAAKyW,eAAetT,EAAYuD,EAAYtD,EAAYuD,GACjE,MAAOjL,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAK6G,YAAYvL,KAAK+a,IAE1B,EArEA,CAA2C,EAAAvP,kB,oOCjF3C,IAAgC,OAEhC,IAAkC,OAkDlB,EAAAyL,YAAhB,SAAqC0Q,EACAxM,GAInC,OAAO,SAACtR,GAA0B,OAAAA,EAAOH,KAAK,IAAIuvB,EAAoBtR,EAApC,MAGpC,iBACE,WAAoB/d,EACAuR,GADA,KAAAvR,aACA,KAAAuR,iBAMtB,OAHE,YAAApb,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI0vB,EAAsBnyB,EAAYrC,KAAKkF,WAAYlF,KAAKyW,kBAExF,EARA,GAeA,cAIE,WAAY5P,EACQ4tB,EACAhe,GAClB,YAAM5P,GAFY,KAAA4tB,QACA,KAAAhe,iBALZ,KAAA/X,MAAgB,EA4D1B,OA7D6C,OAUjC,YAAA2E,MAAV,SAAgB5H,GACd,IAAMsb,EAAoB/W,KAAK+W,kBAC3BA,GACFA,EAAkBtT,cAEpBzD,KAAKuF,IAAIvF,KAAK+W,kBAAoB,EAAAT,kBAAkBtW,KAAMA,KAAKy0B,MAAOh5B,EAAOuE,KAAKtB,WAG1E,YAAAgF,UAAV,WACS,IAAAqT,EAAA,KAAAA,kBACFA,IAAqBA,EAAkBhU,QAC1C,YAAMW,UAAS,YAIkB,YAAAyH,aAAA,WACnCnL,KAAK+W,kBAAoB,MAG3B,YAAApT,eAAA,SAAeiD,GACb5G,KAAKuL,OAAO3E,GACZ5G,KAAK+W,kBAAoB,KACrB/W,KAAK2H,WACP,YAAMjE,UAAS,YAInB,YAAAJ,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT,IAAQ6P,EAAR,KAAQA,eAAgB5P,EAAxB,KAAwBA,YACpB4P,EACFzW,KAAK00B,kBAAkBvxB,EAAYuD,EAAYtD,EAAYuD,GAE3DE,EAAYvL,KAAKoL,IAIb,YAAAguB,kBAAR,SAA0BvxB,EAAeuD,EACftD,EAAoBuD,GAC5C,IACI0P,EADII,EAAR,KAAQA,eAAgB5P,EAAxB,KAAwBA,YAExB,IACEwP,EAASI,EAAetT,EAAYuD,EAAYtD,EAAYuD,GAC5D,MAAOjL,GAEP,YADAmL,EAAYtE,MAAM7G,GAIpBmL,EAAYvL,KAAK+a,IAErB,EA7DA,CAA6C,EAAAvP,kB,mOC9E7C,IAA2B,MAC3B,IAAwC,OACxC,IAAgC,OAsChB,EAAA0L,KAAhB,SAAwBhE,GACtB,OAAO,SAACrJ,GACN,OAAc,IAAVqJ,EACK,IAAI,EAAAmF,gBAEJxO,EAAOH,KAAK,IAAI2vB,EAAanmB,MAK1C,iBACE,WAAoBsI,GAClB,GADkB,KAAAA,QACd9W,KAAK8W,MAAQ,EACf,MAAM,IAAI,EAAAvO,wBAOhB,OAHE,YAAAlN,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI8vB,EAAevyB,EAAYrC,KAAK8W,SAEhE,EAVA,GAiBA,cAGE,WAAYjQ,EAAoCiQ,GAC9C,YAAMjQ,GADwC,KAAAiQ,QAFxC,KAAAtI,MAAgB,EAiB1B,OAlBgC,OAOpB,YAAAnL,MAAV,SAAgB5H,GACd,IAAMqb,EAAQ9W,KAAK8W,MACbtI,IAAUxO,KAAKwO,MACjBA,GAASsI,IACX9W,KAAK6G,YAAYvL,KAAKG,GAClB+S,IAAUsI,IACZ9W,KAAK6G,YAAYlE,WACjB3C,KAAKyD,iBAIb,EAlBA,CAAgC,EAAAG,a,oOCnEhC,IAA2B,MAC3B,IAAwC,OACxC,IAAgC,OAyChB,EAAA6O,SAAhB,SAA4BjE,GAC1B,OAAO,SAAkCrJ,GACvC,OAAc,IAAVqJ,EACK,IAAI,EAAAmF,gBAEJxO,EAAOH,KAAK,IAAI6vB,EAAiBrmB,MAK9C,iBACE,WAAoBsI,GAClB,GADkB,KAAAA,QACd9W,KAAK8W,MAAQ,EACf,MAAM,IAAI,EAAAvO,wBAOhB,OAHE,YAAAlN,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIgwB,EAAmBzyB,EAAYrC,KAAK8W,SAEpE,EAVA,GAiBA,cAIE,WAAYjQ,EAAoCiQ,GAC9C,YAAMjQ,GADwC,KAAAiQ,QAHxC,KAAA4c,KAAiB,IAAI/5B,MACrB,KAAA6U,MAAgB,EAmC1B,OArCoC,OAQxB,YAAAnL,MAAV,SAAgB5H,GACd,IAAMi4B,EAAO1zB,KAAK0zB,KACZ5c,EAAQ9W,KAAK8W,MACbtI,EAAQxO,KAAKwO,QAEfklB,EAAKl6B,OAASsd,EAChB4c,EAAKl4B,KAAKC,GAGVi4B,EADcllB,EAAQsI,GACRrb,GAIR,YAAAiI,UAAV,WACE,IAAMmD,EAAc7G,KAAK6G,YACrB2H,EAAQxO,KAAKwO,MAEjB,GAAIA,EAAQ,EAIV,IAHA,IAAMsI,EAAQ9W,KAAKwO,OAASxO,KAAK8W,MAAQ9W,KAAK8W,MAAQ9W,KAAKwO,MACrDklB,EAAQ1zB,KAAK0zB,KAEVj6B,EAAI,EAAGA,EAAIqd,EAAOrd,IAAK,CAC9B,IAAM0gB,EAAO3L,IAAWsI,EACxBjQ,EAAYvL,KAAKo4B,EAAKvZ,IAI1BtT,EAAYlE,YAEhB,EArCA,CAAoC,EAAAiB,a,oOClEpC,IAAgC,OAEhC,IAAkC,OAqClB,EAAA8O,UAAhB,SAA6B2R,GAC3B,OAAO,SAAClf,GAA0B,OAAAA,EAAOH,KAAK,IAAI+vB,EAAhB,MAGpC,iBACE,WAAoB1Q,GAAA,KAAAA,WAMtB,OAHE,YAAAhpB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIkwB,EAAoB3yB,EAAYrC,KAAKqkB,YAErE,EAPA,GAcA,cAEE,WAAYxd,EACQwd,GAClB,YAAMxd,GADY,KAAAwd,WAElBrkB,KAAKuF,IAAI,EAAA+Q,kBAAkBtW,KAAMqkB,IAYrC,OAjBwC,OAQtC,YAAA/gB,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAK2C,YAGP,YAAAgB,eAAA,aAGF,EAjBA,CAAwC,EAAAmD,kB,oOC5DxC,IAA2B,MAwCX,EAAA6L,UAAhB,SAA6BuQ,GAC3B,OAAO,SAAC/d,GAA0B,OAAAA,EAAOH,KAAK,IAAIiwB,EAAhB,MAGpC,iBACE,WAAoB/R,GAAA,KAAAA,YAMtB,OAHE,YAAA7nB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIowB,EAAoB7yB,EAAYrC,KAAKkjB,aAErE,EAPA,GAcA,cAGE,WAAYrc,EACQqc,GAClB,YAAMrc,GADY,KAAAqc,YAHZ,KAAAxkB,MAAgB,EA2B1B,OA5BqC,OAQzB,YAAA2E,MAAV,SAAgB5H,GACd,IACI4a,EADExP,EAAc7G,KAAK6G,YAEzB,IACEwP,EAASrW,KAAKkjB,UAAUznB,EAAOuE,KAAKtB,SACpC,MAAOhD,GAEP,YADAmL,EAAYtE,MAAM7G,GAGpBsE,KAAKm1B,eAAe15B,EAAO4a,IAGrB,YAAA8e,eAAR,SAAuB15B,EAAU25B,GAC/B,IAAMvuB,EAAc7G,KAAK6G,YACrBwkB,QAAQ+J,GACVvuB,EAAYvL,KAAKG,GAEjBoL,EAAYlE,YAGlB,EA5BA,CAAqC,EAAAiB,a,oOC3DrC,IAA2B,MAoDX,EAAAshB,IAAhB,SAAuB/gB,EACA5B,EACAI,GACrB,OAAO,SAA6BwC,GAClC,OAAOA,EAAOH,KAAK,IAAIqwB,EAAWlxB,EAAgB5B,EAAOI,MAI7D,iBACE,WAAoBwB,EACA5B,EACAI,GAFA,KAAAwB,iBACA,KAAA5B,QACA,KAAAI,WAKtB,OAHE,YAAAtH,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIwwB,EAAajzB,EAAYrC,KAAKmE,eAAgBnE,KAAKuC,MAAOvC,KAAK2C,YAE/F,EARA,GAeA,cAIE,WAAYkE,EACA1C,EACA5B,EACAI,GACV,YAAMkE,GAEN,IAAM0uB,EAAiB,IAAI,EAAA3xB,WAAcO,EAAgB5B,EAAOI,GAChE4yB,EAAe/vB,oBAAqB,EACpCxF,KAAKuF,IAAIgwB,GACTv1B,KAAKu1B,eAAiBA,EAgC1B,OA7C8B,OAgBlB,YAAAlyB,MAAV,SAAgB5H,GACN,IAAA85B,EAAA,KAAAA,eACRA,EAAej6B,KAAKG,GAChB85B,EAAe7vB,gBACjB1F,KAAK6G,YAAYtE,MAAMgzB,EAAe5vB,gBAEtC3F,KAAK6G,YAAYvL,KAAKG,IAIhB,YAAA8H,OAAV,SAAiB7H,GACP,IAAA65B,EAAA,KAAAA,eACRA,EAAehzB,MAAM7G,GACjB65B,EAAe7vB,gBACjB1F,KAAK6G,YAAYtE,MAAMgzB,EAAe5vB,gBAEtC3F,KAAK6G,YAAYtE,MAAM7G,IAIjB,YAAAgI,UAAV,WACU,IAAA6xB,EAAA,KAAAA,eACRA,EAAe5yB,WACX4yB,EAAe7vB,gBACjB1F,KAAK6G,YAAYtE,MAAMgzB,EAAe5vB,gBAEtC3F,KAAK6G,YAAYlE,YAGvB,EA7CA,CAA8B,EAAAiB,a,oOCvE9B,IAAgC,OAEhC,IAAkC,OASrB,EAAA4xB,sBAAwC,CACnDC,SAAS,EACTC,UAAU,GA2CI,EAAA9iB,SAAhB,SAA4B6P,EACAzc,GAC1B,YAD0B,IAAAA,MAAA,yBACnB,SAACb,GAA0B,OAAAA,EAAOH,KAAK,IAAI2wB,EAAiBlT,EAAkBzc,EAAOyvB,QAASzvB,EAAnE,aAGpC,iBACE,WAAoByc,EACAgT,EACAC,GAFA,KAAAjT,mBACA,KAAAgT,UACA,KAAAC,WAQtB,OALE,YAAAr6B,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UACZ,IAAI8wB,EAAmBvzB,EAAYrC,KAAKyiB,iBAAkBziB,KAAKy1B,QAASz1B,KAAK01B,YAGnF,EAXA,GAkBA,cAKE,WAAsB7uB,EACF4b,EACAoT,EACAC,GAClB,YAAMjvB,GAJc,KAAAA,cACF,KAAA4b,mBACA,KAAAoT,WACA,KAAAC,YALZ,KAAAC,mBAAoB,EAwE9B,OA3EuC,OAY3B,YAAA1yB,MAAV,SAAgB5H,GACd,GAAIuE,KAAKqlB,UACHrlB,KAAK81B,YACP91B,KAAK+1B,mBAAoB,EACzB/1B,KAAKg2B,eAAiBv6B,OAEnB,CACL,IAAMiC,EAAWsC,KAAKi2B,oBAAoBx6B,GACtCiC,GACFsC,KAAKuF,IAAIvF,KAAKqlB,UAAY,EAAA/O,kBAAkBtW,KAAMtC,IAEhDsC,KAAK61B,WACP71B,KAAK6G,YAAYvL,KAAKG,GAClBuE,KAAK81B,YACP91B,KAAK+1B,mBAAoB,EACzB/1B,KAAKg2B,eAAiBv6B,MAMtB,YAAAw6B,oBAAR,SAA4Bx6B,GAC1B,IACE,OAAOuE,KAAKyiB,iBAAiBhnB,GAC7B,MAAOC,GAEP,OADAsE,KAAK6G,YAAYtE,MAAM7G,GAChB,OAI0B,YAAAyP,aAAA,WACnC,WAAQka,EAAA,EAAAA,UAAW,EAAA2Q,eAAgB,EAAAD,kBAAmB,EAAAD,UAEtD91B,KAAKg2B,eAAiB,KACtBh2B,KAAK+1B,mBAAoB,EAErB1Q,IACFrlB,KAAKuL,OAAO8Z,GACZrlB,KAAKqlB,UAAY,KACjBA,EAAU5hB,gBAIN,YAAAyyB,cAAR,WACE,WAAQrvB,EAAA,EAAAA,YAAawe,EAAA,EAAAA,UAAWyQ,EAAA,EAAAA,UAAWE,EAAA,EAAAA,eAAgBD,EAAA,EAAAA,kBACvD1Q,GAAayQ,GAAaC,IAC5BlvB,EAAYvL,KAAK06B,GACjBh2B,KAAKg2B,eAAiB,KACtBh2B,KAAK+1B,mBAAoB,IAI7B,YAAAzyB,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAKk2B,gBACLl2B,KAAKmL,gBAGP,YAAAxH,eAAA,WACE3D,KAAKk2B,gBACLl2B,KAAKmL,gBAET,EA3EA,CAAuC,EAAArE,kB,oOCnFvC,IAA2B,MAG3B,IAAsB,OAEtB,IAAsD,OA0CtC,EAAA+L,aAAhB,SAAgCnV,EACAuJ,EACAjB,GAC9B,YAF8B,IAAAiB,MAAA,cACA,IAAAjB,MAAA,yBACvB,SAACb,GAA0B,OAAAA,EAAOH,KAAK,IAAImxB,EAAqBz4B,EAAUuJ,EAAWjB,EAAOyvB,QAASzvB,EAA1E,aAGpC,iBACE,WAAoBtI,EACAuJ,EACAwuB,EACAC,GAHA,KAAAh4B,WACA,KAAAuJ,YACA,KAAAwuB,UACA,KAAAC,WAQtB,OALE,YAAAr6B,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UACZ,IAAIsxB,EAAuB/zB,EAAYrC,KAAKtC,SAAUsC,KAAKiH,UAAWjH,KAAKy1B,QAASz1B,KAAK01B,YAG/F,EAZA,GAmBA,cAKE,WAAY7uB,EACQnJ,EACAuJ,EACAwuB,EACAC,GAClB,YAAM7uB,GAJY,KAAAnJ,WACA,KAAAuJ,YACA,KAAAwuB,UACA,KAAAC,WAPZ,KAAAK,mBAA6B,EAC7B,KAAAC,eAAoB,KAqC9B,OAxCwC,OAa5B,YAAA3yB,MAAV,SAAgB5H,GACVuE,KAAKqlB,UACHrlB,KAAK01B,WACP11B,KAAKg2B,eAAiBv6B,EACtBuE,KAAK+1B,mBAAoB,IAG3B/1B,KAAKuF,IAAIvF,KAAKqlB,UAAYrlB,KAAKiH,UAAUsC,SAASuL,EAAc9U,KAAKtC,SAAU,CAAE2E,WAAYrC,QACzFA,KAAKy1B,SACPz1B,KAAK6G,YAAYvL,KAAKG,KAK5B,YAAA6pB,cAAA,WACE,IAAMD,EAAYrlB,KAAKqlB,UACnBA,IACErlB,KAAK01B,UAAY11B,KAAK+1B,oBACxB/1B,KAAK6G,YAAYvL,KAAK0E,KAAKg2B,gBAC3Bh2B,KAAKg2B,eAAiB,KACtBh2B,KAAK+1B,mBAAoB,GAE3B1Q,EAAU5hB,cACVzD,KAAKuL,OAAO8Z,GACZrlB,KAAKqlB,UAAY,OAGvB,EAxCA,CAAwC,EAAAzhB,YA8CxC,SAASkR,EAAgBC,GACf,EAAA1S,WACGijB,kB,oOCvHb,IAA2B,MAE3B,IAAsB,OAGN,EAAAxS,aAAhB,SAAgC7L,GAC9B,YAD8B,IAAAA,MAAA,SACvB,SAAC9B,GAA0B,OAAAA,EAAOH,KAAK,IAAIqxB,EAAhB,MAGpC,MACE,SAAmB56B,EAAiBwR,GAAjB,KAAAxR,QAAiB,KAAAwR,YADzB,EAAAvE,aAAY,EAMzB,iBACE,WAAoBzB,GAAA,KAAAA,YAOtB,OAHE,YAAA5L,KAAA,SAAK4I,EAAuCkB,GAC1C,OAAOA,EAAOL,UAAU,IAAIwxB,EAAuBryB,EAAUjE,KAAKiH,aAEtE,EARA,GAeA,cAGE,WAAYJ,EAAkDI,GAC5D,YAAMJ,GADsD,KAAAI,YAFtD,KAAAsvB,SAAmB,EAKzBv2B,KAAKu2B,SAAWtvB,EAAUM,MAU9B,OAhBwC,OAS5B,YAAAlE,MAAV,SAAgB5H,GACd,IAAI8L,EAAMvH,KAAKiH,UAAUM,MACrBivB,EAAOjvB,EAAMvH,KAAKu2B,SACtBv2B,KAAKu2B,SAAWhvB,EAEhBvH,KAAK6G,YAAYvL,KAAK,IAAIoN,EAAajN,EAAO+6B,KAElD,EAhBA,CAAwC,EAAA5yB,a,oOC/BxC,IAAsB,OACtB,IAAuB,MAEvB,IAA2B,MAI3B,IAA6B,OAoEb,EAAAmP,QAAhB,SAA2ByR,EACAvd,QAAA,IAAAA,MAAA,SACzB,IAAMwvB,EAAkB,EAAAhb,OAAO+I,GACzBkS,EAAUD,GAAoBjS,EAAMvd,EAAUM,MAASvJ,KAAKyc,IAAY+J,GAC9E,OAAO,SAACrf,GAA0B,OAAAA,EAAOH,KAAK,IAAI2xB,EAAgBD,EAASD,EAAiBxvB,EAAW,IAAI,EAAzE,iBAGpC,iBACE,WAAoByvB,EACAD,EACAxvB,EACA2vB,GAHA,KAAAF,UACA,KAAAD,kBACA,KAAAxvB,YACA,KAAA2vB,gBAQtB,OALE,YAAAv7B,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAI+xB,EAC1Bx0B,EAAYrC,KAAKy2B,gBAAiBz2B,KAAK02B,QAAS12B,KAAKiH,UAAWjH,KAAK42B,iBAG3E,EAZA,GAmBA,cAIE,WAAY/vB,EACQ4vB,EACAC,EACAzvB,EACA2vB,GAClB,YAAM/vB,GAJY,KAAA4vB,kBACA,KAAAC,UACA,KAAAzvB,YACA,KAAA2vB,gBANZ,KAAAE,OAAuC,KAQ7C92B,KAAK+2B,kBAmCT,OA7CmC,OAalB,EAAAC,gBAAf,SAAkC30B,GAChCA,EAAWE,MAAMF,EAAWu0B,gBAGtB,YAAAG,gBAAR,WACU,IAAAD,EAAA,KAAAA,OACJA,EAMF92B,KAAK82B,OAAyCA,EAAOvtB,SAASvJ,KAAMA,KAAK02B,SAEzE12B,KAAKuF,IAAIvF,KAAK82B,OAAyC92B,KAAKiH,UAAUsC,SACpEstB,EAAkBG,gBAAiBh3B,KAAK02B,QAAS12B,QAK7C,YAAAqD,MAAV,SAAgB5H,GACTuE,KAAKy2B,iBACRz2B,KAAK+2B,kBAEP,YAAM1zB,MAAK,UAAC5H,IAGuB,YAAA0P,aAAA,WACnCnL,KAAK82B,OAAS,KACd92B,KAAKiH,UAAY,KACjBjH,KAAK42B,cAAgB,MAEzB,EA7CA,CAAmC,EAAAhzB,a,oOClGnC,IAAsB,OAGtB,IAAuB,MACvB,IAAgC,OAChC,IAAkC,OAuDlB,EAAAoP,YAAhB,SAAkCwR,EACAC,EACAxd,GAChC,YADgC,IAAAA,MAAA,SACzB,SAAC9B,GACN,IAAIsxB,EAAkB,EAAAhb,OAAO+I,GACzBkS,EAAUD,GAAoBjS,EAAMvd,EAAUM,MAASvJ,KAAKyc,IAAY+J,GAC5E,OAAOrf,EAAOH,KAAK,IAAIiyB,EAAoBP,EAASD,EAAiBhS,EAAgBxd,MAIzF,iBACE,WAAoByvB,EACAD,EACAhS,EACAxd,GAHA,KAAAyvB,UACA,KAAAD,kBACA,KAAAhS,iBACA,KAAAxd,YAQtB,OALE,YAAA5L,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIoyB,EAC1B70B,EAAYrC,KAAKy2B,gBAAiBz2B,KAAK02B,QAAS12B,KAAKykB,eAAgBzkB,KAAKiH,aAGhF,EAZA,GAmBA,cAIE,WAAYJ,EACQ4vB,EACAC,EACAjS,EACAxd,GAClB,YAAMJ,GAJY,KAAA4vB,kBACA,KAAAC,UACA,KAAAjS,iBACA,KAAAxd,YANZ,KAAA6vB,OAA8C,KAQpD92B,KAAK+2B,kBAqCT,OA/C0C,OAazB,EAAAC,gBAAf,SAAqC30B,GAC3B,IAAAoiB,EAAA,EAAAA,eACDpiB,EAAYkI,yBACnBlI,EAAWkD,IAAI,EAAA+Q,kBAAkBjU,EAAYoiB,KAGvC,YAAAsS,gBAAR,WACU,IAAAD,EAAA,KAAAA,OACJA,EAMF92B,KAAK82B,OAAgDA,EAAOvtB,SAASvJ,KAAMA,KAAK02B,SAEhF12B,KAAKuF,IAAIvF,KAAK82B,OAAgD92B,KAAKiH,UAAUsC,SAC3E2tB,EAAsBF,gBAAiBh3B,KAAK02B,QAAS12B,QAKjD,YAAAqD,MAAV,SAAgB5H,GACTuE,KAAKy2B,iBACRz2B,KAAK+2B,kBAEP,YAAM1zB,MAAK,UAAC5H,IAGuB,YAAA0P,aAAA,WACnCnL,KAAK82B,OAAS,KACd92B,KAAKiH,UAAY,KACjBjH,KAAKykB,eAAiB,MAE1B,EA/CA,CAA0C,EAAA3d,kB,6BC3F1C,QAAsB,OAEtB,IAAoB,OAQJ,EAAAmM,UAAhB,SAA6BhM,GAC3B,YAD2B,IAAAA,MAAA,SACpB,EAAAgJ,KAAI,SAACxU,GAAa,WAAIkN,EAAUlN,EAAOwL,EAArB,WAI3B,MACE,SAAmBxL,EAAiBwX,GAAjB,KAAAxX,QAAiB,KAAAwX,aADzB,EAAAtK,UAAS,G,6BCjBtB,QAAuB,OAGvB,SAASwuB,EAAkB79B,EAAU89B,EAAS14B,GAC5C,OAAc,IAAVA,EACK,CAAC04B,IAEV99B,EAAIkC,KAAK47B,GACF99B,GAGO,EAAA4Z,QAAhB,WACE,OAAO,EAAA/G,OAAOgrB,EAAgB,M,oOCVhC,IAAwB,OAExB,IAAgC,OAEhC,IAAkC,OAuClB,EAAAhkB,OAAhB,SAA0BuR,GACxB,OAAO,SAAgCvf,GACrC,OAAOA,EAAOH,KAAK,IAAIqyB,EAAe3S,MAI1C,iBAEE,WAAoBA,GAAA,KAAAA,mBAWtB,OARE,YAAArpB,KAAA,SAAKgH,EAAuC8C,GAC1C,IAAMmyB,EAAmB,IAAIC,EAAiBl1B,GACxCm1B,EAAqBryB,EAAOL,UAAUwyB,GAI5C,OAHKE,EAAmBz0B,QACtBu0B,EAAiB/xB,IAAI,EAAA+Q,kBAAkBghB,EAAkBt3B,KAAK0kB,mBAEzD8S,GAEX,EAbA,GAoBA,cAIE,WAAY3wB,GACV,YAAMA,GAHA,KAAAsM,OAAqB,IAAI,EAAAvQ,QAI/BiE,EAAYvL,KAAK0E,KAAKmT,QA4C1B,OAlDkC,OAShC,YAAA7P,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAKy3B,cAGP,YAAAj0B,YAAA,SAAYjB,EAAYqE,GACtB5G,KAAKuD,OAAOhB,IAGd,YAAAoB,eAAA,SAAeiD,GACb5G,KAAK0D,aAGG,YAAAL,MAAV,SAAgB5H,GACduE,KAAKmT,OAAO7X,KAAKG,IAGT,YAAA8H,OAAV,SAAiB7H,GACfsE,KAAKmT,OAAO5Q,MAAM7G,GAClBsE,KAAK6G,YAAYtE,MAAM7G,IAGf,YAAAgI,UAAV,WACE1D,KAAKmT,OAAOxQ,WACZ3C,KAAK6G,YAAYlE,YAGkB,YAAAwI,aAAA,WACnCnL,KAAKmT,OAAS,MAGR,YAAAskB,WAAR,WACE,IAAMC,EAAa13B,KAAKmT,OACpBukB,GACFA,EAAW/0B,WAEb,IAAMkE,EAAc7G,KAAK6G,YACnB8wB,EAAY33B,KAAKmT,OAAS,IAAI,EAAAvQ,QACpCiE,EAAYvL,KAAKq8B,IAErB,EAlDA,CAAkC,EAAA7wB,kB,oOCtElC,IAA2B,MAE3B,IAAwB,OAmDR,EAAAsM,YAAhB,SAA+BuR,EACAC,GAC7B,YAD6B,IAAAA,MAAA,GACtB,SAAqCzf,GAC1C,OAAOA,EAAOH,KAAK,IAAI4yB,EAAuBjT,EAAYC,MAI9D,iBAEE,WAAoBD,EACAC,GADA,KAAAD,aACA,KAAAC,mBAMtB,OAHE,YAAAvpB,KAAA,SAAKgH,EAAuC8C,GAC1C,OAAOA,EAAOL,UAAU,IAAI+yB,EAAsBx1B,EAAYrC,KAAK2kB,WAAY3kB,KAAK4kB,oBAExF,EATA,GAgBA,cAIE,WAAsB/d,EACF8d,EACAC,GAClB,YAAM/d,GAHc,KAAAA,cACF,KAAA8d,aACA,KAAAC,mBALZ,KAAAkT,QAAwB,CAAE,IAAI,EAAAl1B,SAC9B,KAAA4L,MAAgB,EAMtB3H,EAAYvL,KAAK0E,KAAK83B,QAAQ,IAgDlC,OAxDuC,OAW3B,YAAAz0B,MAAV,SAAgB5H,GAOd,IANA,IAAMmpB,EAAoB5kB,KAAK4kB,iBAAmB,EAAK5kB,KAAK4kB,iBAAmB5kB,KAAK2kB,WAC9E9d,EAAc7G,KAAK6G,YACnB8d,EAAa3kB,KAAK2kB,WAClBmT,EAAU93B,KAAK83B,QACfv+B,EAAMu+B,EAAQt+B,OAEXC,EAAI,EAAGA,EAAIF,IAAQyG,KAAK+C,OAAQtJ,IACvCq+B,EAAQr+B,GAAG6B,KAAKG,GAElB,IAAMs8B,EAAI/3B,KAAKwO,MAAQmW,EAAa,EAIpC,GAHIoT,GAAK,GAAKA,EAAInT,GAAqB,IAAM5kB,KAAK+C,QAChD+0B,EAAQ7iB,QAAQtS,aAEZ3C,KAAKwO,MAAQoW,GAAqB,IAAM5kB,KAAK+C,OAAQ,CACzD,IAAM,EAAS,IAAI,EAAAH,QACnBk1B,EAAQt8B,KAAK,GACbqL,EAAYvL,KAAK,KAIX,YAAAiI,OAAV,SAAiB7H,GACf,IAAMo8B,EAAU93B,KAAK83B,QACrB,GAAIA,EACF,KAAOA,EAAQt+B,OAAS,IAAMwG,KAAK+C,QACjC+0B,EAAQ7iB,QAAQ1S,MAAM7G,GAG1BsE,KAAK6G,YAAYtE,MAAM7G,IAGf,YAAAgI,UAAV,WACE,IAAMo0B,EAAU93B,KAAK83B,QACrB,GAAIA,EACF,KAAOA,EAAQt+B,OAAS,IAAMwG,KAAK+C,QACjC+0B,EAAQ7iB,QAAQtS,WAGpB3C,KAAK6G,YAAYlE,YAGkB,YAAAwI,aAAA,WACnCnL,KAAKwO,MAAQ,EACbxO,KAAK83B,QAAU,MAEnB,EAxDA,CAAuC,EAAAl0B,a,oOC3EvC,IAAwB,OAExB,IAAsB,OACtB,IAA2B,MAG3B,IAA0B,OAC1B,IAA4B,OAyEZ,EAAAoD,WAAhB,SAA8B6d,GAC5B,IAAI5d,EAAwB,EAAAmC,MACxB0b,EAAiC,KACjCC,EAAwB7d,OAAOC,kBAkBnC,OAhBI,EAAA8M,YAAY9J,UAAU,MACxBlD,EAAYkD,UAAU,IAGpB,EAAA8J,YAAY9J,UAAU,IACxBlD,EAAYkD,UAAU,GACb,EAAA0P,UAAU1P,UAAU,MAC7B4a,EAAgB5a,UAAU,IAGxB,EAAA8J,YAAY9J,UAAU,IACxBlD,EAAYkD,UAAU,GACb,EAAA0P,UAAU1P,UAAU,MAC7B2a,EAAyB3a,UAAU,IAG9B,SAAoChF,GACzC,OAAOA,EAAOH,KAAK,IAAIgzB,EAAsBnT,EAAgBC,EAAwBC,EAAe9d,MAIxG,iBAEE,WAAoB4d,EACAC,EACAC,EACA9d,GAHA,KAAA4d,iBACA,KAAAC,yBACA,KAAAC,gBACA,KAAA9d,YAQtB,OALE,YAAA5L,KAAA,SAAKgH,EAAuC8C,GAC1C,OAAOA,EAAOL,UAAU,IAAImzB,EAC1B51B,EAAYrC,KAAK6kB,eAAgB7kB,KAAK8kB,uBAAwB9kB,KAAK+kB,cAAe/kB,KAAKiH,aAG7F,EAbA,GAuCA,2BAAgC,wBACtB,KAAAixB,sBAAgC,EAU1C,OAXgC,OAG9B,YAAA58B,KAAA,SAAKG,GACHuE,KAAKk4B,wBACL,YAAM58B,KAAI,UAACG,IAGb,sBAAI,mCAAoB,C,IAAxB,WACE,OAAOuE,KAAKk4B,uB,gCAEhB,EAXA,CAAgC,EAAAt1B,SAkBhC,cAGE,WAAsBiE,EACFge,EACAC,EACAC,EACA9d,GAClB,YAAMJ,GALc,KAAAA,cACF,KAAAge,iBACA,KAAAC,yBACA,KAAAC,gBACA,KAAA9d,YANZ,KAAA6wB,QAA+B,GASrC,IAAM3kB,EAASnT,KAAKy3B,aACpB,GAA+B,OAA3B3S,GAAmCA,GAA0B,EAAG,CAClE,IAAMwB,EAA4B,CAAEjkB,WAAYrC,KAAMmT,SAAQxI,QAAc,MACtE4b,EAAkC,CAAE1B,iBAAgBC,yBAAwBziB,WAAYrC,KAAMiH,aACpGjH,KAAKuF,IAAI0B,EAAUsC,SAAS4uB,EAAqBtT,EAAgByB,IACjEtmB,KAAKuF,IAAI0B,EAAUsC,SAAS6uB,EAAwBtT,EAAwByB,QACvE,CACL,IAAMJ,EAA0C,CAAE9jB,WAAYrC,KAAMmT,SAAQ0R,kBAC5E7kB,KAAKuF,IAAI0B,EAAUsC,SAAS8uB,EAA4BxT,EAAgBsB,KAkD9E,OApEsC,OAsB1B,YAAA9iB,MAAV,SAAgB5H,GAGd,IAFA,IAAMq8B,EAAU93B,KAAK83B,QACfv+B,EAAMu+B,EAAQt+B,OACXC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAM,EAASq+B,EAAQr+B,GAClB,EAAOsJ,SACV,EAAOzH,KAAKG,GACR,EAAO68B,sBAAwBt4B,KAAK+kB,eACtC/kB,KAAKu4B,YAAY,MAMf,YAAAh1B,OAAV,SAAiB7H,GAEf,IADA,IAAMo8B,EAAU93B,KAAK83B,QACdA,EAAQt+B,OAAS,GACtBs+B,EAAQ7iB,QAAQ1S,MAAM7G,GAExBsE,KAAK6G,YAAYtE,MAAM7G,IAGf,YAAAgI,UAAV,WAEE,IADA,IAAMo0B,EAAU93B,KAAK83B,QACdA,EAAQt+B,OAAS,GAAG,CACzB,IAAM,EAASs+B,EAAQ7iB,QAClB,EAAOlS,QACV,EAAOJ,WAGX3C,KAAK6G,YAAYlE,YAGZ,YAAA80B,WAAP,WACE,IAAMtkB,EAAS,IAAIqlB,EAInB,OAHAx4B,KAAK83B,QAAQt8B,KAAK2X,GACEnT,KAAK6G,YACbvL,KAAK6X,GACVA,GAGF,YAAAolB,YAAP,SAAmBplB,GACjBA,EAAOxQ,WACP,IAAMm1B,EAAU93B,KAAK83B,QACrBA,EAAQ92B,OAAO82B,EAAQ7tB,QAAQkJ,GAAS,IAE5C,EApEA,CAAsC,EAAAvP,YAsEtC,SAASy0B,EAAkE3uB,GACjE,IAAArH,EAAA,EAAAA,WAAYwiB,EAAA,EAAAA,eAAgB1R,EAAA,EAAAA,OAChCA,GACF9Q,EAAWk2B,YAAYplB,GAEzBzJ,EAAMyJ,OAAS9Q,EAAWo1B,aAC1Bz3B,KAAKuJ,SAASG,EAAOmb,GAGvB,SAASuT,EAA0D1uB,GACzD,IAAAmb,EAAA,EAAAA,eAAgBxiB,EAAA,EAAAA,WAAY4E,EAAA,EAAAA,UAAW6d,EAAA,EAAAA,uBACzC3R,EAAS9Q,EAAWo1B,aACpBX,EAAS92B,KACX2K,EAAiC,CAAEmsB,SAAQh0B,aAAmB,MAC5D21B,EAA+B,CAAEp2B,aAAY8Q,SAAQxI,WAC3DA,EAAQ7H,aAAemE,EAAUsC,SAAS4uB,EAAqBtT,EAAgB4T,GAC/E3B,EAAOvxB,IAAIoF,EAAQ7H,cACnBg0B,EAAOvtB,SAASG,EAAOob,GAGzB,SAASqT,EAAuBzuB,GACtB,IAAArH,EAAA,EAAAA,WAAY8Q,EAAA,EAAAA,OAAQxI,EAAA,EAAAA,QACxBA,GAAWA,EAAQmsB,QAAUnsB,EAAQ7H,cACvC6H,EAAQmsB,OAAOvrB,OAAOZ,EAAQ7H,cAEhCT,EAAWk2B,YAAYplB,K,oOCjQzB,IAAwB,OACxB,IAA6B,OAC7B,IAAyB,OACzB,IAA4B,MAC5B,IAAgC,OAEhC,IAAkC,OA4ClB,EAAAE,aAAhB,SAAmC0P,EACAC,GACjC,OAAO,SAAC7d,GAA0B,OAAAA,EAAOH,KAAK,IAAI0zB,EAA2B3V,EAA3C,MAGpC,iBAEE,WAAoBA,EACAC,GADA,KAAAD,WACA,KAAAC,kBAQtB,OALE,YAAA3nB,KAAA,SAAKgH,EAAuC8C,GAC1C,OAAOA,EAAOL,UAAU,IAAI6zB,EAC1Bt2B,EAAYrC,KAAK+iB,SAAU/iB,KAAKgjB,mBAGtC,EAXA,GAuBA,cAIE,WAAYnc,EACQkc,EACAC,GAClB,YAAMnc,GAFY,KAAAkc,WACA,KAAAC,kBALZ,KAAAgD,SAA+B,GAOrChmB,KAAKuF,IAAIvF,KAAK44B,iBAAmB,EAAAtiB,kBAAkBtW,KAAM+iB,EAAUA,IAoHvE,OA5H2C,OAW/B,YAAA1f,MAAV,SAAgB5H,GACN,IAAAuqB,EAAA,KAAAA,SACR,GAAIA,EAEF,IADA,IAAMzsB,EAAMysB,EAASxsB,OACZC,EAAI,EAAGA,EAAIF,EAAKE,IACvBusB,EAASvsB,GAAG0Z,OAAO7X,KAAKG,IAKpB,YAAA8H,OAAV,SAAiB7H,GAEP,IAAAsqB,EAAA,KAAAA,SAGR,GAFAhmB,KAAKgmB,SAAW,KAEZA,EAIF,IAHA,IAAMzsB,EAAMysB,EAASxsB,OACjBkF,GAAS,IAEJA,EAAQnF,GAAK,CACpB,IAAMoR,EAAUqb,EAAStnB,GACzBiM,EAAQwI,OAAO5Q,MAAM7G,GACrBiP,EAAQ7H,aAAaW,cAIzB,YAAMF,OAAM,UAAC7H,IAGL,YAAAgI,UAAV,WACU,IAAAsiB,EAAA,KAAAA,SAER,GADAhmB,KAAKgmB,SAAW,KACZA,EAGF,IAFA,IAAMzsB,EAAMysB,EAASxsB,OACjBkF,GAAS,IACJA,EAAQnF,GAAK,CACpB,IAAMoR,EAAUqb,EAAStnB,GACzBiM,EAAQwI,OAAOxQ,WACfgI,EAAQ7H,aAAaW,cAGzB,YAAMC,UAAS,YAGoB,YAAAyH,aAAA,WAC3B,IAAA6a,EAAA,KAAAA,SAER,GADAhmB,KAAKgmB,SAAW,KACZA,EAGF,IAFA,IAAMzsB,EAAMysB,EAASxsB,OACjBkF,GAAS,IACJA,EAAQnF,GAAK,CACpB,IAAMoR,EAAUqb,EAAStnB,GACzBiM,EAAQwI,OAAO1P,cACfkH,EAAQ7H,aAAaW,gBAK3B,YAAAH,WAAA,SAAWH,EAAiBuD,EACjBtD,EAAoBuD,EACpBC,GAET,GAAIzD,IAAenD,KAAK+iB,SAAU,CAExB,IAAAC,EAAA,KAAAA,gBACFN,EAAkB,EAAAlX,SAASwX,EAAT,CAA0Btc,GAElD,GAAIgc,IAAoB,EAAAjX,YACtB,OAAOzL,KAAKuC,MAAM,EAAAkJ,YAAY5O,GAE9B,IAAM,EAAS,IAAI,EAAA+F,QACbE,EAAe,IAAI,EAAAL,aACnBkI,EAAU,CAAEwI,OAAA,EAAQrQ,gBAC1B9C,KAAKgmB,SAASxqB,KAAKmP,GACnB,IAAMoM,EAAoB,EAAAT,kBAAkBtW,KAAM0iB,EAAiB/X,GAE/DoM,EAAkBhU,OACpB/C,KAAKu4B,YAAYv4B,KAAKgmB,SAASxsB,OAAS,IAEjCud,EAAmBpM,QAAUA,EACpC7H,EAAayC,IAAIwR,IAGnB/W,KAAK6G,YAAYvL,KAAK,QAIxB0E,KAAKu4B,YAAYv4B,KAAKgmB,SAAS/b,QAAQ9G,KAI3C,YAAAK,YAAA,SAAY9H,GACVsE,KAAKuC,MAAM7G,IAGb,YAAAiI,eAAA,SAAe8wB,GACTA,IAAUz0B,KAAK44B,kBACjB54B,KAAKu4B,YAAYv4B,KAAKgmB,SAAS/b,QAAewqB,EAAO9pB,WAIjD,YAAA4tB,YAAR,SAAoB75B,GAClB,IAAe,IAAXA,EAAJ,CAIQ,IAAAsnB,EAAA,KAAAA,SACFrb,EAAUqb,EAAStnB,GACjByU,EAAA,EAAAA,OAAQrQ,EAAA,EAAAA,aAChBkjB,EAAShlB,OAAOtC,EAAO,GACvByU,EAAOxQ,WACPG,EAAaW,gBAEjB,EA5HA,CAA2C,EAAAqD,kB,oOC9E3C,IAAwB,OAExB,IAAyB,OACzB,IAA4B,MAC5B,IAAgC,OAEhC,IAAkC,OAyClB,EAAAwM,WAAhB,SAA8B0P,GAC5B,OAAO,SAAoC7d,GACzC,OAAOA,EAAOH,KAAK,IAAIqyB,EAAkBrU,MAI7C,iBACE,WAAoBA,GAAA,KAAAA,kBAMtB,OAHE,YAAA3nB,KAAA,SAAKgH,EAAuC8C,GAC1C,OAAOA,EAAOL,UAAU,IAAIyyB,EAAiBl1B,EAAYrC,KAAKgjB,mBAElE,EAPA,GAcA,cAIE,WAAsBnc,EACFmc,GAClB,YAAMnc,GAFc,KAAAA,cACF,KAAAmc,kBAElBhjB,KAAKy3B,aA8DT,OArEkC,OAUhC,YAAAn0B,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAKy3B,WAAW7wB,IAGlB,YAAApD,YAAA,SAAYjB,EAAYqE,GACtB5G,KAAKuD,OAAOhB,IAGd,YAAAoB,eAAA,SAAeiD,GACb5G,KAAKy3B,WAAW7wB,IAGR,YAAAvD,MAAV,SAAgB5H,GACduE,KAAKmT,OAAO7X,KAAKG,IAGT,YAAA8H,OAAV,SAAiB7H,GACfsE,KAAKmT,OAAO5Q,MAAM7G,GAClBsE,KAAK6G,YAAYtE,MAAM7G,GACvBsE,KAAK64B,kCAGG,YAAAn1B,UAAV,WACE1D,KAAKmT,OAAOxQ,WACZ3C,KAAK6G,YAAYlE,WACjB3C,KAAK64B,kCAGC,YAAAA,+BAAR,WACM74B,KAAK84B,qBACP94B,KAAK84B,oBAAoBr1B,eAIrB,YAAAg0B,WAAR,SAAmB7wB,QAAA,IAAAA,MAAA,MACbA,IACF5G,KAAKuL,OAAO3E,GACZA,EAASnD,eAGX,IAAMi0B,EAAa13B,KAAKmT,OACpBukB,GACFA,EAAW/0B,WAGb,IAAMwQ,EAASnT,KAAKmT,OAAS,IAAI,EAAAvQ,QACjC5C,KAAK6G,YAAYvL,KAAK6X,GAEtB,IAAMuP,EAAkB,EAAAlX,SAASxL,KAAKgjB,gBAAd,GACxB,GAAIN,IAAoB,EAAAjX,YAAa,CACnC,IAAM/P,EAAM,EAAA+P,YAAY5O,EACxBmD,KAAK6G,YAAYtE,MAAM7G,GACvBsE,KAAKmT,OAAO5Q,MAAM7G,QAElBsE,KAAKuF,IAAIvF,KAAK84B,oBAAsB,EAAAxiB,kBAAkBtW,KAAM0iB,KAGlE,EArEA,CAAkC,EAAA5b,kB,oOCnElC,IAAgC,OAEhC,IAAkC,OA0DlB,EAAAyM,eAAhB,W,IAAqC,wDACnC,OAAO,SAACpO,GACN,IAAI8W,EACiC,mBAA1B5H,EAAKA,EAAK7a,OAAS,KAC5ByiB,EAAU5H,EAAKH,OAEjB,IAAMgI,EAAiC7H,EACvC,OAAOlP,EAAOH,KAAK,IAAI+zB,EAAuB7c,EAAaD,MAI/D,iBACE,WAAoBC,EACAD,GADA,KAAAC,cACA,KAAAD,UAMtB,OAHE,YAAA5gB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIk0B,EAAyB32B,EAAYrC,KAAKkc,YAAalc,KAAKic,WAE5F,EARA,GAeA,cAIE,WAAYpV,EACQqV,EACAD,GAClB,YAAMpV,GAFY,KAAAqV,cACA,KAAAD,UAJZ,KAAA8L,UAAsB,GAM5B,IAAMxuB,EAAM2iB,EAAY1iB,OACxBwG,KAAKvC,OAAS,IAAI9D,MAAMJ,GAExB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKE,IACvBuG,KAAK+nB,UAAUvsB,KAAK/B,GAGtB,IAASA,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAIyL,EAAagX,EAAYziB,GAC7BuG,KAAKuF,IAAI,EAAA+Q,kBAAwBtW,KAAMkF,EAAiBA,EAAYzL,KA0C1E,OA3D6C,OAqB3C,YAAA6J,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAKvC,OAAO2F,GAAcsD,EAC1B,IAAMqhB,EAAY/nB,KAAK+nB,UACvB,GAAIA,EAAUvuB,OAAS,EAAG,CACxB,IAAMy/B,EAAQlR,EAAU9d,QAAQ7G,IACjB,IAAX61B,GACFlR,EAAU/mB,OAAOi4B,EAAO,KAK9B,YAAAt1B,eAAA,aAIU,YAAAN,MAAV,SAAgB5H,GACd,GAA8B,IAA1BuE,KAAK+nB,UAAUvuB,OAAc,CAC/B,IAAM6a,EAAO,CAAC5Y,GAAK,OAAKuE,KAAKvC,QACzBuC,KAAKic,QACPjc,KAAKkoB,YAAY7T,GAEjBrU,KAAK6G,YAAYvL,KAAK+Y,KAKpB,YAAA6T,YAAR,SAAoB7T,GAClB,IAAIgC,EACJ,IACEA,EAASrW,KAAKic,QAAQvH,MAAM1U,KAAMqU,GAClC,MAAO3Y,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAK6G,YAAYvL,KAAK+a,IAE1B,EA3DA,CAA6C,EAAAvP,kB,mOCxF7C,IAAgC,OAChC,IAAwB,OAGxB,IAA2B,MAC3B,IAAgC,OAEhC,IAAkC,OAClC,IAA4C,IAuF5C,a,IAAgC,wDAC9B,IAAMmV,EAAuCC,EAAYA,EAAY1iB,OAAS,GAI9E,MAHuB,mBAAZyiB,GACTC,EAAYhI,MAEP,IAAI,EAAAF,gBAAgBkI,GAAalX,KAAK,IAAIk0B,EAAYjd,IAlE/C,EAAAtO,IAAhB,W,IAA0B,wDACxB,OAAO,SAA6BxI,GAClC,OAAOA,EAAOH,KAAK3J,KAAKmnB,EAAS,cAAIrd,GAAM,OAAK+W,OA2DpC,EAAAsG,UAAS,EAQzB,iBAIE,WAAYvG,GACVjc,KAAKic,QAAUA,EAMnB,OAHE,YAAA5gB,KAAA,SAAKgH,EAA2B8C,GAC9B,OAAOA,EAAOL,UAAU,IAAIq0B,EAAc92B,EAAYrC,KAAKic,WAE/D,EAXA,GAAa,EAAAid,YAAW,EAkBxB,kBAME,WAAYryB,EACAoV,EACAxe,QAAA,IAAAA,MAAclD,OAAOkM,OAAO,OACtC,YAAMI,GANA,KAAAuyB,UAAsC,GACtC,KAAAtR,OAAS,EAMf9nB,KAAKic,QAA8B,mBAAZA,EAA0BA,EAAU,KAC3Djc,KAAKvC,OAASA,EA+FlB,OA1GyC,OAc7B,YAAA4F,MAAV,SAAgB5H,GACd,IAAM29B,EAAYp5B,KAAKo5B,UACnB,EAAAx/B,QAAQ6B,GACV29B,EAAU59B,KAAK,IAAI69B,EAAoB59B,IACI,mBAA3BA,EAAM,YACtB29B,EAAU59B,KAAK,IAAI89B,EAAe79B,EAAM,gBAExC29B,EAAU59B,KAAK,IAAI+9B,EAAkBv5B,KAAK6G,YAAa7G,KAAMvE,KAIvD,YAAAiI,UAAV,WACE,IAAM01B,EAAYp5B,KAAKo5B,UACjB7/B,EAAM6/B,EAAU5/B,OAEtB,GAAY,IAARD,EAAJ,CAKAyG,KAAK8nB,OAASvuB,EACd,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAIsB,EAA6Cq+B,EAAU3/B,GACvDsB,EAASy+B,kBACXx5B,KAAKuF,IAAIxK,EAAS+J,UAAU/J,EAAUtB,IAEtCuG,KAAK8nB,eAVP9nB,KAAK6G,YAAYlE,YAerB,YAAA82B,eAAA,WACEz5B,KAAK8nB,SACe,IAAhB9nB,KAAK8nB,QACP9nB,KAAK6G,YAAYlE,YAIrB,YAAA+2B,eAAA,WAME,IALA,IAAMN,EAAYp5B,KAAKo5B,UACjB7/B,EAAM6/B,EAAU5/B,OAChBqN,EAAc7G,KAAK6G,YAGhBpN,EAAI,EAAGA,EAAIF,EAAKE,IAEvB,GAAiC,mBAD7BsB,EAAWq+B,EAAU3/B,IACLsK,WAA4BhJ,EAASgJ,WACvD,OAIJ,IAAI41B,GAAiB,EACftlB,EAAc,GACpB,IAAS5a,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAIsB,EACAsb,GADAtb,EAAWq+B,EAAU3/B,IACH6B,OAQtB,GAJIP,EAASoH,iBACXw3B,GAAiB,GAGftjB,EAAO9a,KAET,YADAsL,EAAYlE,WAId0R,EAAK7Y,KAAK6a,EAAO5a,OAGfuE,KAAKic,QACPjc,KAAKkoB,YAAY7T,GAEjBxN,EAAYvL,KAAK+Y,GAGfslB,GACF9yB,EAAYlE,YAIN,YAAAulB,YAAV,SAAsB7T,GACpB,IAAIgC,EACJ,IACEA,EAASrW,KAAKic,QAAQvH,MAAM1U,KAAMqU,GAClC,MAAO3Y,GAEP,YADAsE,KAAK6G,YAAYtE,MAAM7G,GAGzBsE,KAAK6G,YAAYvL,KAAK+a,IAE1B,EA1GA,CAAyC,EAAAzS,YAA5B,EAAAu1B,cAAa,EAiH1B,iBAGE,WAAoBp+B,GAAA,KAAAA,WAClBiF,KAAK45B,WAAa7+B,EAASO,OAiB/B,OAdE,YAAAyI,SAAA,WACE,OAAO,GAGT,YAAAzI,KAAA,WACE,IAAM+a,EAASrW,KAAK45B,WAEpB,OADA55B,KAAK45B,WAAa55B,KAAKjF,SAASO,OACzB+a,GAGT,YAAAlU,aAAA,WACE,IAAMy3B,EAAa55B,KAAK45B,WACxB,OAAOA,GAAcA,EAAWr+B,MAEpC,EArBA,GAuBA,aAIE,WAAoBwY,GAAA,KAAAA,QAHZ,KAAArV,MAAQ,EACR,KAAAlF,OAAS,EAGfwG,KAAKxG,OAASua,EAAMva,OAoBxB,OAjBE,YAAC,YAAD,WACE,OAAOwG,MAGT,YAAA1E,KAAA,SAAKG,GACH,IAAMhC,EAAIuG,KAAKtB,QACTqV,EAAQ/T,KAAK+T,MACnB,OAAOta,EAAIuG,KAAKxG,OAAS,CAAEiC,MAAOsY,EAAMta,GAAI8B,MAAM,GAAU,CAAEE,MAAO,KAAMF,MAAM,IAGnF,YAAAwI,SAAA,WACE,OAAO/D,KAAK+T,MAAMva,OAASwG,KAAKtB,OAGlC,YAAAyD,aAAA,WACE,OAAOnC,KAAK+T,MAAMva,SAAWwG,KAAKtB,OAEtC,EAzBA,GAgCA,cAKE,WAAYmI,EACQ3D,EACAgC,GAClB,YAAM2B,GAFY,KAAA3D,SACA,KAAAgC,aANpB,KAAAs0B,mBAAoB,EACpB,KAAA1rB,OAAc,GACd,KAAA6kB,YAAa,EAkDf,OArDsC,OAWpC,YAAC,YAAD,WACE,OAAO3yB,MAKT,YAAA1E,KAAA,WACE,IAAMwS,EAAS9N,KAAK8N,OACpB,OAAsB,IAAlBA,EAAOtU,QAAgBwG,KAAK2yB,WACvB,CAAEl3B,MAAO,KAAMF,MAAM,GAErB,CAAEE,MAAOqS,EAAOmH,QAAS1Z,MAAM,IAI1C,YAAAwI,SAAA,WACE,OAAO/D,KAAK8N,OAAOtU,OAAS,GAG9B,YAAA2I,aAAA,WACE,OAA8B,IAAvBnC,KAAK8N,OAAOtU,QAAgBwG,KAAK2yB,YAG1C,YAAAhvB,eAAA,WACM3D,KAAK8N,OAAOtU,OAAS,GACvBwG,KAAK2yB,YAAa,EAClB3yB,KAAKkD,OAAOu2B,kBAEZz5B,KAAK6G,YAAYlE,YAIrB,YAAAW,WAAA,SAAWH,EAAeuD,EACftD,EAAoBuD,EACpBC,GACT5G,KAAK8N,OAAOtS,KAAKkL,GACjB1G,KAAKkD,OAAOw2B,kBAGd,YAAA50B,UAAA,SAAUrJ,EAAYiD,GACpB,OAAO,EAAA4X,kBAA4BtW,KAAMA,KAAKkF,WAAYlF,KAAMtB,IAEpE,EArDA,CAAsC,EAAAoI,kB,6BClStC,QAA4B,MAIZ,EAAA2M,OAAhB,SAA6BwI,GAC3B,OAAO,SAAC9W,GAA0B,OAAAA,EAAOH,KAAK,IAAI,EAAAk0B,YAAhB,O,oOCYpC,cACE,WAAYjyB,EAAsBuC,GAChC,aAeJ,OAjB+B,OActB,YAAAD,SAAP,SAAgBG,EAAWD,GACzB,YADyB,IAAAA,MAAA,GAClBzJ,MAEX,EAjBA,CAhBA,EAA6B,OAgBEyC,cAAlB,EAAAo3B,OAAM,G,oOCjBnB,IAA4B,OAC5B,IAA+B,OAQ/B,cAEE,WAAsB5yB,EACAuC,GACpB,YAAMvC,EAAWuC,GAFG,KAAAvC,YACA,KAAAuC,OAmCxB,OAtC6C,OAOjC,YAAAswB,eAAV,SAAyB7yB,EAAoC8yB,EAAUtwB,GAErE,YAFqE,IAAAA,MAAA,GAEvD,OAAVA,GAAkBA,EAAQ,EACrB,YAAMqwB,eAAc,UAAC7yB,EAAW8yB,EAAItwB,IAG7CxC,EAAU+yB,QAAQx+B,KAAKwE,MAIhBiH,EAAUgzB,YAAchzB,EAAUgzB,UAAY,EAAAC,eAAeC,sBAClElzB,EAAUmzB,MAAMvvB,KAAK5D,EAAW,UAG1B,YAAAozB,eAAV,SAAyBpzB,EAAoC8yB,EAAUtwB,GAIrE,QAJqE,IAAAA,MAAA,GAItD,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkBzJ,KAAKyJ,MAAQ,EACnE,OAAO,YAAM4wB,eAAc,UAACpzB,EAAW8yB,EAAItwB,GAKZ,IAA7BxC,EAAU+yB,QAAQxgC,SACpB,EAAA0gC,eAAeI,qBAAqBP,GACpC9yB,EAAUgzB,eAAYr7B,IAK5B,EAtCA,CAA6C,EAAA27B,aAAhC,EAAAC,qBAAoB,G,oOCNjC,2BAA6C,wBA2B7C,OA3B6C,OACpC,YAAAJ,MAAP,SAAatD,GAEX92B,KAAK8nB,QAAS,EACd9nB,KAAKi6B,eAAYr7B,EAEV,IACH2D,EADGy3B,EAAA,KAAAA,QAEHt7B,GAAiB,EACjB8P,EAAgBwrB,EAAQxgC,OAC5Bs9B,EAASA,GAAUkD,EAAQ/kB,QAE3B,GACE,GAAI1S,EAAQu0B,EAAO2D,QAAQ3D,EAAOptB,MAAOotB,EAAOrtB,OAC9C,cAEO/K,EAAQ8P,IAAUsoB,EAASkD,EAAQ/kB,UAI9C,GAFAjV,KAAK8nB,QAAS,EAEVvlB,EAAO,CACT,OAAS7D,EAAQ8P,IAAUsoB,EAASkD,EAAQ/kB,UAC1C6hB,EAAOrzB,cAET,MAAMlB,IAGZ,EA3BA,CAFA,EAA+B,OAEcm4B,gBAAhC,EAAAC,wBAAuB,G,oOCHpC,IAA0B,OAS1B,cAEE,WAAsB1zB,EACAuC,GACpB,YAAMvC,EAAWuC,GAFG,KAAAvC,YACA,KAAAuC,OAmCxB,OAtCmC,OAOvB,YAAAswB,eAAV,SAAyB7yB,EAA0B8yB,EAAUtwB,GAE3D,YAF2D,IAAAA,MAAA,GAE7C,OAAVA,GAAkBA,EAAQ,EACrB,YAAMqwB,eAAc,UAAC7yB,EAAW8yB,EAAItwB,IAG7CxC,EAAU+yB,QAAQx+B,KAAKwE,MAIhBiH,EAAUgzB,YAAchzB,EAAUgzB,UAAY,EAAAW,UAAUC,aAC7D5zB,EAAUmzB,MAAMvvB,KAAK5D,EAAW,UAG1B,YAAAozB,eAAV,SAAyBpzB,EAA0B8yB,EAAUtwB,GAI3D,QAJ2D,IAAAA,MAAA,GAI5C,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkBzJ,KAAKyJ,MAAQ,EACnE,OAAO,YAAM4wB,eAAc,UAACpzB,EAAW8yB,EAAItwB,GAKZ,IAA7BxC,EAAU+yB,QAAQxgC,SACpB,EAAAohC,UAAUE,eAAef,GACzB9yB,EAAUgzB,eAAYr7B,IAK5B,EAtCA,CARA,EAA4B,OAQO27B,aAAtB,EAAAQ,WAAU,G,oOCNvB,2BAAmC,wBA2BnC,OA3BmC,OAC1B,YAAAX,MAAP,SAAatD,GAEX92B,KAAK8nB,QAAS,EACd9nB,KAAKi6B,eAAYr7B,EAEV,IACH2D,EADGy3B,EAAA,KAAAA,QAEHt7B,GAAiB,EACjB8P,EAAgBwrB,EAAQxgC,OAC5Bs9B,EAASA,GAAUkD,EAAQ/kB,QAE3B,GACE,GAAI1S,EAAQu0B,EAAO2D,QAAQ3D,EAAOptB,MAAOotB,EAAOrtB,OAC9C,cAEO/K,EAAQ8P,IAAUsoB,EAASkD,EAAQ/kB,UAI9C,GAFAjV,KAAK8nB,QAAS,EAEVvlB,EAAO,CACT,OAAS7D,EAAQ8P,IAAUsoB,EAASkD,EAAQ/kB,UAC1C6hB,EAAOrzB,cAET,MAAMlB,IAGZ,EA3BA,CAFA,EAA+B,OAEIm4B,gBAAtB,EAAAM,cAAa,G,oOCH1B,IAAqB,OAUrB,cAQE,WAAsB/zB,EACVuC,GACV,YAAMvC,EAAWuC,GAFG,KAAAvC,YAHZ,KAAAg0B,SAAmB,EAM3Bj7B,KAAKwJ,KAAOA,EAsIhB,OAjJoC,OAc3B,YAAAD,SAAP,SAAgBG,EAAWD,GAEzB,QAFyB,IAAAA,MAAA,GAErBzJ,KAAK+C,OACP,OAAO/C,KAITA,KAAK0J,MAAQA,EAIb1J,KAAKi7B,SAAU,EAEf,IAAMlB,EAAK/5B,KAAK+5B,GACV9yB,EAAYjH,KAAKiH,UA+BvB,OARU,MAAN8yB,IACF/5B,KAAK+5B,GAAK/5B,KAAKq6B,eAAepzB,EAAW8yB,EAAItwB,IAG/CzJ,KAAKyJ,MAAQA,EAEbzJ,KAAK+5B,GAAK/5B,KAAK+5B,IAAM/5B,KAAK85B,eAAe7yB,EAAWjH,KAAK+5B,GAAItwB,GAEtDzJ,MAGC,YAAA85B,eAAV,SAAyB7yB,EAA2B8yB,EAAUtwB,GAC5D,YAD4D,IAAAA,MAAA,GACrD,EAAA3D,KAAKo1B,YAAYj0B,EAAUmzB,MAAMvvB,KAAK5D,EAAWjH,MAAOyJ,IAGvD,YAAA4wB,eAAV,SAAyBpzB,EAA2B8yB,EAAStwB,GAE3D,QAF2D,IAAAA,MAAA,GAE7C,OAAVA,GAAkBzJ,KAAKyJ,QAAUA,IAA0B,IAAjBzJ,KAAKi7B,QACjD,OAAOlB,EAIF,EAAAj0B,KAAKq1B,cAAcpB,IAOrB,YAAAU,QAAP,SAAe/wB,EAAUD,GAEvB,GAAIzJ,KAAK+C,OACP,OAAO,IAAIvC,MAAM,gCAGnBR,KAAKi7B,SAAU,EACf,IAAM14B,EAAQvC,KAAKo7B,SAAS1xB,EAAOD,GACnC,GAAIlH,EACF,OAAOA,GACmB,IAAjBvC,KAAKi7B,SAAgC,MAAXj7B,KAAK+5B,KAcxC/5B,KAAK+5B,GAAK/5B,KAAKq6B,eAAer6B,KAAKiH,UAAWjH,KAAK+5B,GAAI,QAIjD,YAAAqB,SAAV,SAAmB1xB,EAAUD,GAC3B,IAAI6f,GAAmB,EACnB+R,OAAkBz8B,EACtB,IACEoB,KAAKwJ,KAAKE,GACV,MAAO7M,GACPysB,GAAU,EACV+R,IAAex+B,GAAKA,GAAK,IAAI2D,MAAM3D,GAErC,GAAIysB,EAEF,OADAtpB,KAAKyD,cACE43B,GAI0B,YAAAlwB,aAAA,WAEnC,IAAM4uB,EAAK/5B,KAAK+5B,GACV9yB,EAAYjH,KAAKiH,UACjB+yB,EAAU/yB,EAAU+yB,QACpBt7B,EAAQs7B,EAAQ/vB,QAAQjK,MAE9BA,KAAKwJ,KAAQ,KACbxJ,KAAK0J,MAAQ,KACb1J,KAAKi7B,SAAU,EACfj7B,KAAKiH,UAAY,MAEF,IAAXvI,GACFs7B,EAAQh5B,OAAOtC,EAAO,GAGd,MAANq7B,IACF/5B,KAAK+5B,GAAK/5B,KAAKq6B,eAAepzB,EAAW8yB,EAAI,OAG/C/5B,KAAKyJ,MAAQ,MAEjB,EAjJA,CATA,EAAuB,OASaowB,QAAvB,EAAAU,YAAW,G,oOCPxB,2BAAoC,wBAC3B,KAAAP,QAAmC,GAMnC,KAAAlS,QAAkB,EAOlB,KAAAmS,eAAiBr7B,EA6B1B,OA3CoC,OAgB3B,YAAAw7B,MAAP,SAAatD,GAEJ,IAAAkD,EAAA,KAAAA,QAEP,GAAIh6B,KAAK8nB,OACPkS,EAAQx+B,KAAKs7B,OADf,CAKA,IAAIv0B,EACJvC,KAAK8nB,QAAS,EAEd,GACE,GAAIvlB,EAAQu0B,EAAO2D,QAAQ3D,EAAOptB,MAAOotB,EAAOrtB,OAC9C,YAEKqtB,EAASkD,EAAQ/kB,SAI1B,GAFAjV,KAAK8nB,QAAS,EAEVvlB,EAAO,CACT,KAAOu0B,EAASkD,EAAQ/kB,SACtB6hB,EAAOrzB,cAET,MAAMlB,KAGZ,EA3CA,CAHA,EAA0B,OAGU0G,WAAvB,EAAAyxB,eAAc,G,oOCM3B,cAEE,WAAsBzzB,EACAuC,GACpB,YAAMvC,EAAWuC,GAFG,KAAAvC,YACA,KAAAuC,OA8BxB,OAjCoC,OAO3B,YAAAD,SAAP,SAAgBG,EAAWD,GACzB,YADyB,IAAAA,MAAA,GACrBA,EAAQ,EACH,YAAMF,SAAQ,UAACG,EAAOD,IAE/BzJ,KAAKyJ,MAAQA,EACbzJ,KAAK0J,MAAQA,EACb1J,KAAKiH,UAAUmzB,MAAMp6B,MACdA,OAGF,YAAAy6B,QAAP,SAAe/wB,EAAUD,GACvB,OAAQA,EAAQ,GAAKzJ,KAAK+C,OACxB,YAAM03B,QAAO,UAAC/wB,EAAOD,GACrBzJ,KAAKo7B,SAAS1xB,EAAOD,IAGf,YAAAqwB,eAAV,SAAyB7yB,EAA2B8yB,EAAUtwB,GAI5D,YAJ4D,IAAAA,MAAA,GAI7C,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkBzJ,KAAKyJ,MAAQ,EAC5D,YAAMqwB,eAAc,UAAC7yB,EAAW8yB,EAAItwB,GAGtCxC,EAAUmzB,MAAMp6B,OAE3B,EAjCA,CATA,EAA4B,OASQu6B,aAAvB,EAAAe,YAAW,G,oOCPxB,2BAAoC,wBACpC,OADoC,OACpC,EADA,CAFA,EAA+B,OAEKZ,gBAAvB,EAAAa,eAAc,G,oOCF3B,IAA4B,OAI5B,cAOE,WAAYjyB,EACOkyB,GARrB,gBAOc,IAAAlyB,MAAA,QACA,UAA2BpC,OAAOC,mBAC5C,YAAMmC,GAAiB,WAAM,kBADZ,KAAAkyB,YAJZ,KAAAC,MAAgB,EAChB,KAAA/8B,OAAiB,EA8B1B,OAnC0C,OAiBjC,YAAA07B,MAAP,WAKE,IAHA,IACI73B,EAAYu0B,EADTkD,EAAP,KAAOA,QAASwB,EAAhB,KAAgBA,WAGR1E,EAASkD,EAAQ/kB,WAAajV,KAAKy7B,MAAQ3E,EAAOrtB,QAAU+xB,KAC9Dj5B,EAAQu0B,EAAO2D,QAAQ3D,EAAOptB,MAAOotB,EAAOrtB,UAKlD,GAAIlH,EAAO,CACT,KAAOu0B,EAASkD,EAAQ/kB,SACtB6hB,EAAOrzB,cAET,MAAMlB,IA9BO,EAAAm5B,gBAA0B,GAiC7C,EAnCA,CAFA,EAA+B,OAEWhB,gBAA7B,EAAA7xB,qBAAoB,EA0CjC,kBAIE,WAAsB5B,EACAuC,EACA9K,QAAV,UAA0BuI,EAAUvI,OAAS,GACvD,YAAMuI,EAAWuC,GAHG,KAAAvC,YACA,KAAAuC,OACA,KAAA9K,QAJZ,KAAAopB,QAAkB,EAM1B9nB,KAAKtB,MAAQuI,EAAUvI,MAAQA,EAkDnC,OA1DsC,OAW7B,YAAA6K,SAAP,SAAgBG,EAAWD,GACzB,QADyB,IAAAA,MAAA,IACpBzJ,KAAK+5B,GACR,OAAO,YAAMxwB,SAAQ,UAACG,EAAOD,GAE/BzJ,KAAK8nB,QAAS,EAKd,IAAMgP,EAAS,IAAI6E,EAAc37B,KAAKiH,UAAWjH,KAAKwJ,MAEtD,OADAxJ,KAAKuF,IAAIuxB,GACFA,EAAOvtB,SAASG,EAAOD,IAGtB,YAAAqwB,eAAV,SAAyB7yB,EAAiC8yB,EAAUtwB,QAAA,IAAAA,MAAA,GAClEzJ,KAAKyJ,MAAQxC,EAAUw0B,MAAQhyB,EACxB,IAAAuwB,EAAA,EAAAA,QAGP,OAFAA,EAAQx+B,KAAKwE,MACbg6B,EAAQ4B,KAAKD,EAAcE,cACpB,GAGC,YAAAxB,eAAV,SAAyBpzB,EAAiC8yB,EAAUtwB,QAAA,IAAAA,MAAA,IAI1D,YAAA2xB,SAAV,SAAmB1xB,EAAUD,GAC3B,IAAoB,IAAhBzJ,KAAK8nB,OACP,OAAO,YAAMsT,SAAQ,UAAC1xB,EAAOD,IAInB,EAAAoyB,YAAd,SAA6BvJ,EAAqBC,GAChD,OAAID,EAAE7oB,QAAU8oB,EAAE9oB,MACZ6oB,EAAE5zB,QAAU6zB,EAAE7zB,MACT,EACE4zB,EAAE5zB,MAAQ6zB,EAAE7zB,MACd,GAEC,EAED4zB,EAAE7oB,MAAQ8oB,EAAE9oB,MACd,GAEC,GAGd,EA1DA,CAAsC,EAAA8wB,aAAzB,EAAAoB,cAAa,G,6BC9C1B,QAAqC,OACrC,IAAwC,OAiC3B,EAAAxyB,eAAiB,IAAI,EAAAwxB,wBAAwB,EAAAH,uB,6BClC1D,QAA2B,OAC3B,IAA8B,OAqCjB,EAAAtxB,KAAO,IAAI,EAAA8xB,cAAc,EAAAD,a,6BCtCtC,QAA4B,OAC5B,IAA+B,OA6ClB,EAAA3xB,MAAQ,IAAI,EAAAsxB,eAAe,EAAAH,c,4BC9CxC,QAA4B,OAC5B,IAA+B,OAgElB,EAAAxyB,MAAQ,IAAI,EAAAwzB,eAAe,EAAAD,c,0BCjExC,QAAqB,OAErB,WAAuCx1B,GACrC,IAAM,EAAcA,EAAKhL,OAEzB,GAAsB,mBAAX,EAIT,OAHK,EAAOC,WACV,EAAOA,SAAW,EAAO,sBAEpB,EAAOA,SAGN,QAAA6vB,IACR,GAAI,GAA0C,mBAA5B,IAAI,GAAM,cAC1B,MAAO,aAED,QAAA2C,IAER,GAAI,EAEF,IADA,IAAIzS,EAAOvgB,OAAOuhC,oBAAoB,EAAIlhC,WACjCnB,EAAI,EAAGA,EAAIqhB,EAAKthB,SAAUC,EAAG,CACpC,IAAIgB,EAAMqgB,EAAKrhB,GAEf,GAAY,YAARgB,GAA6B,SAARA,GAAkB,EAAIG,UAAUH,KAAS,EAAIG,UAAJ,QAChE,OAAOH,EAIb,MAAO,aA1BK,EAAAshC,uBAAsB,EA8BzB,EAAAhhC,SAAWghC,EAAuB,EAAAj2B,MAKlC,EAAAk2B,WAAa,EAAAjhC,U,4BCrC1B,QAAqB,OAErB,WAAoC4P,GAClC,IAAIsxB,EACA,EAAStxB,EAAQ7P,OAarB,MAXsB,mBAAX,EACL,EAAOoK,WACT+2B,EAAe,EAAO/2B,YAEpB+2B,EAAe,EAAO,cACtB,EAAO/2B,WAAa+2B,GAGxBA,EAAe,eAGVA,EAfO,EAAAC,oBAAmB,EAkBtB,EAAAh3B,WAAag3B,EAAoB,EAAAp2B,MAKjC,EAAAm2B,aAAe,EAAA/2B,Y,6BCzB5B,IAEM,EAFN,EAAqB,OAEDY,KAAKhL,OAEZ,EAAAuO,aAAkC,mBAAX,GAA+C,mBAAf,EAAM,IACxE,EAAM,IAAK,gBAAkB,iBAKlB,EAAA8yB,eAAiB,EAAA9yB,c,oOCV9B,IAA2B,OAC3B,IAA6B,OAI7B,IAAqC,OACrC,IAA4B,OAQ5B,cAME,WAAmB+yB,EACPn1B,GACV,aAAM,SAAmC5E,GACvC,IAAM6C,EAAgClF,KAChCtB,EAAQwG,EAAWm3B,qBAKzB,OAJAh6B,EAAWkD,IAAI,IAAI,EAAA9C,cAAa,WAC9ByC,EAAWo3B,qBAAqB59B,OAElCwG,EAAWq3B,iBAAiBl6B,GACrBA,KATQ,KAAA+5B,WALZ,KAAAnwB,cAAmC,GAgBxCjM,KAAKiH,UAAYA,EAcrB,OA/BuC,OAoBrC,YAAAs1B,iBAAA,SAAiBl6B,GAEf,IADA,IAAMm6B,EAAiBx8B,KAAKo8B,SAAS5iC,OAC5BC,EAAI,EAAGA,EAAI+iC,EAAgB/iC,IAAK,CACvC,IAAM4mB,EAAUrgB,KAAKo8B,SAAS3iC,GAC9B4I,EAAWkD,IACTvF,KAAKiH,UAAUsC,UAAS,SAAC,G,IAAC8W,EAAA,EAAAA,QAAShe,EAAA,EAAAA,WAAkBge,EAAQkJ,aAAavlB,QAAQ3B,KAChFge,EAAQob,MACR,CAACpb,UAAShe,kBAIpB,EA/BA,CAAuC,EAAAgC,YAA1B,EAAAo4B,eAAc,EAgC3B,EAAAC,YAAYD,EAAgB,CAAC,EAAAE,wB,oOC9C7B,IAAwB,OAExB,IAA6B,OAI7B,IAAqC,OACrC,IAA4B,OAO5B,cAME,WAAmBP,EACPn1B,GACV,aAFiB,KAAAm1B,WALZ,KAAAnwB,cAAmC,GAQxCjM,KAAKiH,UAAYA,EA2BrB,OApCsC,OAYC,YAAA7E,WAAA,SAAWC,GAC9C,IAAMwH,EAA4B7J,KAC5BtB,EAAQmL,EAAQwyB,qBAItB,OAHAh6B,EAAWkD,IAAI,IAAI,EAAA9C,cAAa,WAC9BoH,EAAQyyB,qBAAqB59B,OAExB,YAAM0D,WAAU,UAACC,IAG1B,YAAAu6B,MAAA,WAIE,IAHA,IAAM/yB,EAAU7J,KACVw8B,EAAiB3yB,EAAQuyB,SAAS5iC,OAE/BC,EAAI,EAAGA,EAAI+iC,EAAgB/iC,KAClC,WACE,IAAI4mB,EAAUxW,EAAQuyB,SAAS3iC,GAE/BoQ,EAAQ5C,UAAUsC,UAChB,WAAQ8W,EAAQkJ,aAAavlB,QAAQ6F,KACrCwW,EAAQob,OALZ,IAUN,EApCA,CAAsC,EAAA74B,SAAzB,EAAAi6B,cAAa,EAqC1B,EAAAH,YAAYG,EAAe,CAAC,EAAAF,wB,2BCnDf,EAAAG,gBACX,SAAmBC,EACAC,QAAP,UAAmC91B,OAAOC,mBADnC,KAAA41B,kBACA,KAAAC,sB,6BCDrB,QAAgC,OAEhC,0BACS,KAAA/wB,cAAmC,GAgB5C,OAbE,YAAAowB,mBAAA,WAEE,OADAr8B,KAAKiM,cAAczQ,KAAK,IAAI,EAAAshC,gBAAgB98B,KAAKiH,UAAUM,QACpDvH,KAAKiM,cAAczS,OAAS,GAGrC,YAAA8iC,qBAAA,SAAqB59B,GACnB,IAAMu+B,EAAmBj9B,KAAKiM,cACxBixB,EAAqBD,EAAiBv+B,GAC5Cu+B,EAAiBv+B,GAAS,IAAI,EAAAo+B,gBAC5BI,EAAmBH,gBACnB/8B,KAAKiH,UAAUM,QAGrB,EAjBA,GAAa,EAAAo1B,qBAAoB,G,ycCHjC,IAA2B,OAC3B,IAA6B,OAC7B,IAA+B,OAC/B,IAA8B,OAE9B,IAAgC,OAEhC,IAAoD,OAapD,cAKE,WAAmBQ,GACjB,YAAM,EAAAxB,cAjBsB,KAgBX,KAAAwB,kBAJX,KAAAC,eAAuC,GACvC,KAAAC,gBAAyC,GACzC,KAAAC,WAA8B,GA4NxC,OA/NmC,OASjC,YAAAC,WAAA,SAAWC,GACT,IAAMvzB,EAAkBuzB,EAAQvzB,QAAQ,KACxC,IAAiB,IAAbA,EACF,MAAM,IAAIzJ,MAAM,+DAElB,OAAOyJ,EAAUrB,EAAc8yB,iBAGjC,YAAA+B,qBAAA,SAAwBD,EAAiB//B,EAAc8E,GACrD,IAA8B,IAA1Bi7B,EAAQvzB,QAAQ,KAClB,MAAM,IAAIzJ,MAAM,uDAElB,IAA8B,IAA1Bg9B,EAAQvzB,QAAQ,KAClB,MAAM,IAAIzJ,MAAM,yDAElB,IAAM47B,EAAWxzB,EAAc80B,aAAaF,EAAS//B,EAAQ8E,GACvDo7B,EAAO,IAAI,EAAAlB,eAAkBL,EAAUp8B,MAE7C,OADAA,KAAKq9B,gBAAgB7hC,KAAKmiC,GACnBA,GAGT,YAAAC,oBAAA,SAAuBJ,EAAiB//B,EAAc8E,GACpD,IAA8B,IAA1Bi7B,EAAQvzB,QAAQ,KAClB,MAAM,IAAIzJ,MAAM,wDAElB,IAAM47B,EAAWxzB,EAAc80B,aAAaF,EAAS//B,EAAQ8E,GACvDsH,EAAU,IAAI,EAAAgzB,cAAiBT,EAAUp8B,MAE/C,OADAA,KAAKo9B,eAAe5hC,KAAKqO,GAClBA,GAGD,YAAAg0B,2BAAR,SAAmC34B,EACA44B,GADnC,WAEQ1B,EAA0B,GAQhC,OAPAl3B,EAAWJ,WAAU,SAACrJ,GACpB2gC,EAAS5gC,KAAK,CAAEigC,MAAO,EAAKA,MAAQqC,EAAYvU,aAAc,EAAA9kB,aAAaD,WAAW/I,QACrF,SAACC,GACF0gC,EAAS5gC,KAAK,CAAEigC,MAAO,EAAKA,MAAQqC,EAAYvU,aAAc,EAAA9kB,aAAaE,YAAYjJ,QACtF,WACD0gC,EAAS5gC,KAAK,CAAEigC,MAAO,EAAKA,MAAQqC,EAAYvU,aAAc,EAAA9kB,aAAaG,sBAEtEw3B,GAGT,YAAA2B,iBAAA,SAAiB74B,EACA84B,GADjB,gBACiB,IAAAA,MAAA,MACf,IAIIl7B,EAJEm7B,EAAwB,GACxBC,EAA2B,CAAED,SAAQE,OAAO,GAC5CC,EAAsBx1B,EACzBy1B,4BAA4BL,GAAuBhB,kBAwBtD,OArBAh9B,KAAKuJ,UAAS,WACZzG,EAAeoC,EAAWJ,WAAU,SAAA0B,GAClC,IAAI/K,EAAQ+K,EAERA,aAAa,EAAAnC,aACf5I,EAAQ,EAAKoiC,2BAA2BpiC,EAAO,EAAKggC,QAEtDwC,EAAOziC,KAAK,CAAEigC,MAAO,EAAKA,MAAOlS,aAAc,EAAA9kB,aAAaD,WAAW/I,QACtE,SAACC,GACFuiC,EAAOziC,KAAK,CAAEigC,MAAO,EAAKA,MAAOlS,aAAc,EAAA9kB,aAAaE,YAAYjJ,QACvE,WACDuiC,EAAOziC,KAAK,CAAEigC,MAAO,EAAKA,MAAOlS,aAAc,EAAA9kB,aAAaG,wBAE7D,GAECw5B,IAAwBl3B,OAAOC,mBACjCnH,KAAKuJ,UAAS,WAAM,OAAAzG,EAAA,gBAA4Bs7B,GAGlDp+B,KAAKs9B,WAAW9hC,KAAK0iC,GAEd,CACLI,KAAI,SAACd,EAAiB//B,EAAc49B,GAClC6C,EAAUC,OAAQ,EAClBD,EAAUK,SAAW31B,EAAc80B,aAAaF,EAAS//B,EAAQ49B,GAAY,MAKnF,YAAAmD,oBAAA,SAAoBC,GAClB,IAAMP,EAA2B,CAAED,OAAQQ,EAAwBN,OAAO,GAE1E,OADAn+B,KAAKs9B,WAAW9hC,KAAK0iC,GACd,CACLI,KAAI,SAACd,GACH,IAAMkB,EAA6C,iBAAZlB,EAAwB,CAACA,GAAWA,EAC3EU,EAAUC,OAAQ,EAClBD,EAAUK,SAAWG,EAAazuB,KAAI,SAAAutB,GACpC,OAAA50B,EAAcy1B,4BAA4Bb,SAMlD,YAAApD,MAAA,WAEE,IADA,IAAMgD,EAAiBp9B,KAAKo9B,eACrBA,EAAe5jC,OAAS,GAC7B4jC,EAAenoB,QAAQ2nB,QAGzB,YAAMxC,MAAK,WAEX,IADA,IAAMuE,EAAkB3+B,KAAKs9B,WAAW/tB,QAAO,SAAA/S,GAAQ,OAAAA,EAAA,SAChDmiC,EAAgBnlC,OAAS,GAAG,CACjC,IAAMgD,EAAOmiC,EAAgB1pB,QAC7BjV,KAAKm9B,gBAAgB3gC,EAAKyhC,OAAQzhC,EAAK+hC,YAIpC,EAAAF,4BAAP,SAAmCb,GACjC,GAAuB,iBAAZA,EACT,OAAO,IAAI,EAAAV,gBAAgB51B,OAAOC,mBAOpC,IALA,IAAM5N,EAAMikC,EAAQhkC,OAChBolC,GAAc,EACdC,EAAoB33B,OAAOC,kBAC3Bi3B,EAAsBl3B,OAAOC,kBAExB1N,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAMgiC,EAAQhiC,EAAIuG,KAAK07B,gBACjB3D,EAAIyF,EAAQ/jC,GAClB,OAAQs+B,GACN,IAAK,IACL,IAAK,IACH,MACF,IAAK,IACH6G,EAAanD,EACb,MACF,IAAK,IACHmD,GAAc,EACd,MACF,IAAK,IACH,GAAIC,IAAsB33B,OAAOC,kBAC/B,MAAM,IAAI3G,MAAM,kGAGlBq+B,EAAoBD,GAAc,EAAIA,EAAanD,EACnD,MACF,IAAK,IACH,GAAI2C,IAAwBl3B,OAAOC,kBACjC,MAAM,IAAI3G,MAAM,kGAGlB49B,EAAsBQ,GAAc,EAAIA,EAAanD,EACrD,MACF,QACE,MAAM,IAAIj7B,MAAM,0FACoCu3B,EAAI,OAI9D,OAAIqG,EAAsB,EACjB,IAAI,EAAAtB,gBAAgB+B,GAEpB,IAAI,EAAA/B,gBAAgB+B,EAAmBT,IAI3C,EAAAV,aAAP,SAAoBF,EACA//B,EACA49B,EACAyD,GAClB,QADkB,IAAAA,OAAA,IACY,IAA1BtB,EAAQvzB,QAAQ,KAClB,MAAM,IAAIzJ,MAAM,0EAkBlB,IAfA,IAAMjH,EAAMikC,EAAQhkC,OACdulC,EAA8B,GAC9BC,EAAWxB,EAAQvzB,QAAQ,KAC3Bg1B,GAA4B,IAAdD,EAAkB,EAAKA,GAAYh/B,KAAK07B,gBACtD/6B,EAA6B,WAAlB,EAAOlD,GACtB,SAAC+I,GAAW,OAAAA,GACZ,SAACA,GAEC,OAAIs4B,GAA+BrhC,EAAO+I,aAAc,EAAAi2B,eAC/Ch/B,EAAO+I,GAAG41B,SAEZ3+B,EAAO+I,IAEdo4B,GAAc,EAETnlC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAMgiC,EAAQhiC,EAAIuG,KAAK07B,gBAAkBuD,EACrC1V,OAAY,EACVwO,EAAIyF,EAAQ/jC,GAClB,OAAQs+B,GACN,IAAK,IACL,IAAK,IACH,MACF,IAAK,IACH6G,EAAanD,EACb,MACF,IAAK,IACHmD,GAAc,EACd,MACF,IAAK,IACHrV,EAAe,EAAA9kB,aAAaG,iBAC5B,MACF,IAAK,IACH,MACF,IAAK,IACH2kB,EAAe,EAAA9kB,aAAaE,YAAY02B,GAAc,SACtD,MACF,QACE9R,EAAe,EAAA9kB,aAAaD,WAAW7D,EAASo3B,IAIhDxO,GACFwV,EAAavjC,KAAK,CAAEigC,MAAOmD,GAAc,EAAIA,EAAanD,EAAOlS,iBAGrE,OAAOwV,GAEX,EA/NA,CAAmC,EAAAl2B,sBAAtB,EAAAD,cAAa,G,6BCpB1B,QAAuB,OAEvB,EAGE,SAAY9C,GACNA,EAAKq0B,uBACPn6B,KAAKs6B,qBAAuBx0B,EAAKw0B,qBAAqBzvB,KAAK/E,GAC3D9F,KAAKm6B,sBAAwBr0B,EAAKq0B,sBAAsBtvB,KAAK/E,IACpDA,EAAKo5B,0BACdl/B,KAAKs6B,qBAAuBx0B,EAAKq5B,wBAAwBt0B,KAAK/E,GAC9D9F,KAAKm6B,sBAAwBr0B,EAAKo5B,yBAAyBr0B,KAAK/E,IACvDA,EAAKs5B,6BACdp/B,KAAKs6B,qBAAuBx0B,EAAKu5B,2BAA2Bx0B,KAAK/E,GACjE9F,KAAKm6B,sBAAwBr0B,EAAKs5B,4BAA4Bv0B,KAAK/E,IAC1DA,EAAKw5B,yBACdt/B,KAAKs6B,qBAAuBx0B,EAAKy5B,uBAAuB10B,KAAK/E,GAC7D9F,KAAKm6B,sBAAwBr0B,EAAKw5B,wBAAwBz0B,KAAK/E,IACtDA,EAAK05B,wBACdx/B,KAAKs6B,qBAAuBx0B,EAAK25B,sBAAsB50B,KAAK/E,GAC5D9F,KAAKm6B,sBAAwBr0B,EAAK05B,uBAAuB30B,KAAK/E,KAE9D9F,KAAKs6B,qBAAuBx0B,EAAK45B,aAAa70B,KAAK/E,GACnD9F,KAAKm6B,sBAAwB,SAASwF,GAAM,OAAO75B,EAAKoV,WAAWykB,EAAI,IAAO,OArBvE,EAAAC,gCAA+B,EA0B/B,EAAA1F,eAAiB,IAAI0F,EAAgC,EAAA95B,O,kOClBlE,cACE,aACE,IAAMpK,EAAW,YAAM,yBAChBsE,KAAM1D,KAAOZ,EAAIY,KAAO,0BACxB0D,KAAM6/B,MAAQnkC,EAAImkC,MAClB7/B,KAAMqgB,QAAU3kB,EAAI2kB,QAE/B,OAP6C,OAO7C,EAPA,CAA6C7f,OAAhC,EAAA+H,wBAAuB,G,iOCApC,cACE,aACE,IAAM7M,EAAW,YAAM,2BAChBsE,KAAM1D,KAAOZ,EAAIY,KAAO,aACxB0D,KAAM6/B,MAAQnkC,EAAImkC,MAClB7/B,KAAMqgB,QAAU3kB,EAAI2kB,QAE/B,OAPgC,OAOhC,EAPA,CAAgC7f,OAAnB,EAAA8H,WAAU,G,0BCVvB,8BACU,KAAA7K,OAAiB,GA4B3B,OA1BE,4BAAOhD,GAEL,OADAuF,KAAKvC,OAAOhD,GAAO,MACZ,GAGT,YAAAizB,IAAA,SAAIjzB,EAAagB,GAEf,OADAuE,KAAKvC,OAAOhD,GAAOgB,EACZuE,MAGT,YAAAge,IAAA,SAAIvjB,GACF,OAAOuF,KAAKvC,OAAOhD,IAGrB,YAAAmL,QAAA,SAAQ+5B,EAAoCnc,GAC1C,IAAM/lB,EAASuC,KAAKvC,OACpB,IAAK,IAAIhD,KAAOgD,EACVA,EAAOqgB,eAAerjB,IAAwB,OAAhBgD,EAAOhD,IACvCklC,EAAGtkC,KAAKmoB,EAAS/lB,EAAOhD,GAAMA,IAKpC,YAAAowB,MAAA,WACE7qB,KAAKvC,OAAS,IAElB,EA7BA,GAAa,EAAA6vB,QAAO,G,6BCIpB,QAAuB,OAEvB,aAeE,WAAoBxnB,GAClB,GADkB,KAAAA,OACdA,EAAK+0B,cAA6C,mBAAtB/0B,EAAK+0B,aACnC76B,KAAK66B,aAAe/0B,EAAK+0B,aAAahwB,KAAK/E,GAC3C9F,KAAK86B,eAAiBh1B,EAAKg1B,eAAejwB,KAAK/E,OAC1C,CACL9F,KAAK8/B,WAAa,EAClB9/B,KAAK+/B,cAAgB,GACrB//B,KAAKggC,uBAAwB,EAGzBhgC,KAAKigC,wBAEPjgC,KAAK66B,aAAe76B,KAAKkgC,oCAChBlgC,KAAKmgC,oBAEdngC,KAAK66B,aAAe76B,KAAKogC,gCAChBpgC,KAAKqgC,uBAEdrgC,KAAK66B,aAAe76B,KAAKsgC,mCAChBtgC,KAAKugC,yBAEdvgC,KAAK66B,aAAe76B,KAAKwgC,qCAGzBxgC,KAAK66B,aAAe76B,KAAKygC,+BAG3B,IAAIC,EAAK,SAAS5F,EAAe6F,UAClB7F,EAAgBjhC,SAASkmC,cAAcY,IAGhDD,EAAI7mC,SAAWmG,KAErBA,KAAK86B,eAAiB4F,GAsL5B,OAjOU,YAAAE,SAAR,SAAiB5kC,GACf,OAAOgE,KAAK8F,KAAKvL,OAAOK,UAAUuB,SAASd,KAAKW,IA8ClD,YAAAikC,sBAAA,WACE,MAA4C,qBAArCjgC,KAAK4gC,SAAS5gC,KAAK8F,KAAK+6B,UAGjC,YAAAR,qBAAA,WACE,OAAOhV,QAAQrrB,KAAK8F,KAAKg7B,iBAG3B,YAAAP,uBAAA,WACE,IAAMQ,EAAW/gC,KAAK8F,KAAKi7B,SAC3B,OAAO1V,QAAQ0V,GAAY,uBAAwBA,EAASC,cAAc,YAG5E,YAAAb,kBAAA,WACE,IAAMr6B,EAAO9F,KAAK8F,KAGlB,GAAIA,EAAKm7B,cAAgBn7B,EAAKo7B,cAAe,CAC3C,IAAI,GAA4B,EAC5BC,EAAer7B,EAAKoc,UAMxB,OALApc,EAAKoc,UAAY,WACf,GAA4B,GAE9Bpc,EAAKm7B,YAAY,GAAI,KACrBn7B,EAAKoc,UAAYif,EACV,EAGT,OAAO,GAKT,YAAAC,iBAAA,SAAiB5sB,G,IAAc,wDAC7B,IAAItJ,EAAK,SAASmL,IAChB,IAAQ7B,EAAR,EAAQA,QAASH,EAAjB,EAAiBA,KACM,mBAAZG,EACTA,EAAQE,WAAM9V,EAAWyV,GAExB,IAAIgtB,SAAS,GAAK7sB,EAAlB,IAOL,OAHMtJ,EAAIsJ,QAAUA,EACdtJ,EAAImJ,KAAOA,EAEVnJ,GAGT,YAAAo2B,6BAAA,SAA6BjtB,GAE3B,OADArU,KAAK+/B,cAAc//B,KAAK8/B,YAAc9/B,KAAKohC,iBAAiB1sB,WAAM9V,EAAWyV,GACtErU,KAAK8/B,cAGd,YAAAI,kCAAA,WACE,IAAIh1B,EAAK,SAAS2vB,IACR,IAAAhhC,EAAA,EAAAA,SACJ8mC,EAAS9mC,EAASynC,6BAA6Bn3B,WAEnD,OADAtQ,EAASiM,KAAK+6B,QAAQU,SAAS1nC,EAASunC,iBAAiBvnC,EAAS2nC,aAAcb,IACzEA,GAKT,OAFMz1B,EAAIrR,SAAWmG,KAEdkL,GAGT,YAAAk1B,8BAAA,WAIE,IAAMt6B,EAAO9F,KAAK8F,KAEd27B,EAAgB,gBAAkB37B,EAAK9H,KAAK0jC,SAAW,IACvDC,EAAkB,SAASC,EAAqBC,GAClD,IAAMhoC,EAAiB+nC,EAAsB/nC,SACzCgoC,EAAM18B,SAAWW,GACG,iBAAf+7B,EAAMhhB,MACyB,IAAtCghB,EAAMhhB,KAAK5W,QAAQw3B,IACnB5nC,EAAS2nC,cAAcK,EAAMhhB,KAAKzkB,MAAMqlC,EAAcjoC,UAGpDmoC,EAAiB9nC,SAAWmG,KAElC8F,EAAK0R,iBAAiB,UAAWmqB,GAAiB,GAElD,IAAIz2B,EAAK,SAAS2vB,IAChB,QAAQ4G,EAAA,EAAAA,cAAe5nC,EAAA,EAAAA,SACnB8mC,EAAS9mC,EAASynC,6BAA6Bn3B,WAEnD,OADAtQ,EAASiM,KAAKm7B,YAAYQ,EAAgBd,EAAQ,KAC3CA,GAMT,OAHMz1B,EAAIrR,SAAWmG,KACfkL,EAAIu2B,cAAgBA,EAEnBv2B,GAGT,YAAAs2B,aAAA,SAAab,GAGX,GAAI3gC,KAAKggC,sBAGPhgC,KAAK8F,KAAKoV,WAAWlb,KAAKohC,iBAAiBphC,KAAKwhC,aAAcb,GAAS,OAClE,CACL,IAAImB,EAAO9hC,KAAK+/B,cAAcY,GAC9B,GAAImB,EAAM,CACR9hC,KAAKggC,uBAAwB,EAC7B,IACE8B,IADF,QAGE9hC,KAAK86B,eAAe6F,GACpB3gC,KAAKggC,uBAAwB,MAMrC,YAAAM,iCAAA,sBACMyB,EAAU,IAAI/hC,KAAK8F,KAAKg7B,eAC5BiB,EAAQC,MAAM9f,UAAY,SAAC2f,GACzB,IAAIlB,EAASkB,EAAMhhB,KACnB,EAAK2gB,aAAab,IAGpB,IAAIz1B,EAAK,SAAS2vB,IAChB,QAAQkH,EAAA,EAAAA,QAASloC,EAAA,EAAAA,SACb8mC,EAAS9mC,EAASynC,6BAA6Bn3B,WAEnD,OADA43B,EAAQE,MAAMhB,YAAYN,GACnBA,GAMT,OAHMz1B,EAAI62B,QAAUA,EACd72B,EAAIrR,SAAWmG,KAEdkL,GAGT,YAAAs1B,mCAAA,WACE,IAAIt1B,EAAK,SAAS2vB,IAChB,IAAMhhC,EAAiBghC,EAAchhC,SAC/BiM,EAAOjM,EAASiM,KAChBo8B,EAAMp8B,EAAKi7B,SACXoB,EAAOD,EAAIE,gBAEbzB,EAAS9mC,EAASynC,6BAA6Bn3B,WAG/Ck4B,EAASH,EAAIlB,cAAc,UAQ/B,OAPAqB,EAAOriB,mBAAqB,WAC1BnmB,EAAS2nC,aAAab,GACtB0B,EAAOriB,mBAAqB,KAC5BmiB,EAAKG,YAAYD,GACjBA,EAAS,MAEXF,EAAKI,YAAYF,GACV1B,GAKT,OAFMz1B,EAAIrR,SAAWmG,KAEdkL,GAGT,YAAAu1B,6BAAA,WACE,IAAIv1B,EAAK,SAAS2vB,IAChB,IAAMhhC,EAAiBghC,EAAchhC,SACjC8mC,EAAS9mC,EAASynC,6BAA6Bn3B,WAEnD,OADAtQ,EAASiM,KAAKoV,WAAWrhB,EAASunC,iBAAiBvnC,EAAS2nC,aAAcb,GAAS,GAC5EA,GAKT,OAFMz1B,EAAIrR,SAAWmG,KAEdkL,GAEX,EAtOA,GAAa,EAAAs3B,oBAAmB,EAuOnB,EAAA5H,UAAY,IAAI4H,EAAoB,EAAA18B,O,6BC7OjD,QAAqB,OACrB,IAA4B,OAEf,EAAAynB,IAAM,EAAAznB,KAAKynB,KAAc,EAAAkV,a,2BCHtC,8BACS,KAAAC,KAAO,EACN,KAAAC,QAAiB,GACjB,KAAAC,MAAe,GAuCzB,OArCE,YAAA5kB,IAAA,SAAIvjB,GACF,IAAMhB,EAAIuG,KAAK4iC,MAAM34B,QAAQxP,GAC7B,OAAc,IAAPhB,OAAWmF,EAAYoB,KAAK2iC,QAAQlpC,IAG7C,YAAAi0B,IAAA,SAAIjzB,EAAUgB,GACZ,IAAMhC,EAAIuG,KAAK4iC,MAAM34B,QAAQxP,GAQ7B,OAPW,IAAPhB,GACFuG,KAAK4iC,MAAMpnC,KAAKf,GAChBuF,KAAK2iC,QAAQnnC,KAAKC,GAClBuE,KAAK0iC,QAEL1iC,KAAK2iC,QAAQlpC,GAAKgC,EAEbuE,MAGT,4BAAOvF,GACL,IAAMhB,EAAIuG,KAAK4iC,MAAM34B,QAAQxP,GAC7B,OAAW,IAAPhB,IACJuG,KAAK2iC,QAAQ3hC,OAAOvH,EAAG,GACvBuG,KAAK4iC,MAAM5hC,OAAOvH,EAAG,GACrBuG,KAAK0iC,QACE,IAGT,YAAA7X,MAAA,WACE7qB,KAAK4iC,MAAMppC,OAAS,EACpBwG,KAAK2iC,QAAQnpC,OAAS,EACtBwG,KAAK0iC,KAAO,GAGd,YAAA98B,QAAA,SAAQ+5B,EAAcnc,GACpB,IAAK,IAAI/pB,EAAI,EAAGA,EAAIuG,KAAK0iC,KAAMjpC,IAC7BkmC,EAAGtkC,KAAKmoB,EAASxjB,KAAK2iC,QAAQlpC,GAAIuG,KAAK4iC,MAAMnpC,KAGnD,EA1CA,GAAa,EAAAgpC,YAAW,G,kOCSxB,cACE,aACE,IAAM/mC,EAAW,YAAM,uBAChBsE,KAAM1D,KAAOZ,EAAIY,KAAO,0BACxB0D,KAAM6/B,MAAQnkC,EAAImkC,MAClB7/B,KAAMqgB,QAAU3kB,EAAI2kB,QAE/B,OAP6C,OAO7C,EAPA,CAA6C7f,OAAhC,EAAAwC,wBAAuB,G,6BCTpC,QAAqB,OAarB,aAGE,OAAO,wBACG,KAAA2/B,QAAe,GAmBzB,OAjBE,YAAAp9B,IAAA,SAAI9J,GACGuE,KAAKgrB,IAAIvvB,IACZuE,KAAK2iC,QAAQnnC,KAAKC,IAItB,YAAAuvB,IAAA,SAAIvvB,GACF,OAAwC,IAAjCuE,KAAK2iC,QAAQ14B,QAAQxO,IAG9B,sBAAI,mBAAI,C,IAAR,WACE,OAAOuE,KAAK2iC,QAAQnpC,Q,gCAGtB,YAAAqxB,MAAA,WACE7qB,KAAK2iC,QAAQnpC,OAAS,GAE1B,EApBO,GAHO,EAAAqpC,eAAc,EA0BjB,EAAAjY,IAAgB,EAAA9kB,KAAK8kB,KAAOiY,K,kOChCzC,cACE,aACE,IAAMnnC,EAAW,YAAM,wBAChBsE,KAAM1D,KAAOZ,EAAIY,KAAO,eACxB0D,KAAM6/B,MAAQnkC,EAAImkC,MAClB7/B,KAAMqgB,QAAU3kB,EAAI2kB,QAE/B,OAPkC,OAOlC,EAPA,CAAkC7f,OAArB,EAAAgI,aAAY,G,kOCHzB,cACE,WAAmB6C,GACjB,aADiB,KAAAA,SAEjB,IAAM3P,EAAW8E,MAAMnF,KAAK2E,KAAMqL,EAC7BA,EAAO7R,OAAM,8CAClB6R,EAAO4E,KAAI,SAACvU,EAAKjC,GAAM,OAAGA,EAAI,EAAC,KAAKiC,EAAb,cAA+ByjB,KAAK,QAAY,IAChEnf,KAAM1D,KAAOZ,EAAIY,KAAO,sBACxB0D,KAAM6/B,MAAQnkC,EAAImkC,MAClB7/B,KAAMqgB,QAAU3kB,EAAI2kB,QAE/B,OAVyC,OAUzC,EAVA,CAAyC7f,OAA5B,EAAAiI,oBAAmB,G,2BCJhB,EAAAi0B,YAAhB,SAA4BoG,EAAkBC,GAC5C,IAAK,IAAItpC,EAAI,EAAGF,EAAMwpC,EAAUvpC,OAAQC,EAAIF,EAAKE,IAG/C,IAFA,IAAMupC,EAAWD,EAAUtpC,GACrBwpC,EAAe1oC,OAAOuhC,oBAAoBkH,EAASpoC,WAChDsoC,EAAI,EAAGC,EAAOF,EAAazpC,OAAQ0pC,EAAIC,EAAMD,IAAK,CACzD,IAAM,EAAOD,EAAaC,GAC1BJ,EAAYloC,UAAU,GAAQooC,EAASpoC,UAAU,M,6BCNvD,QAAqB,OAErB,WAA2BX,G,IAAgB,wDAEzC,IADA,IAAMV,EAAMid,EAAQhd,OACXC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC5B,IAAM0L,EAASqR,EAAQ/c,GACvB,IAAK,IAAI2pC,KAAKj+B,EACRA,EAAO2Y,eAAeslB,KACxBnpC,EAAOmpC,GAAKj+B,EAAOi+B,IAIzB,OAAOnpC,EAGT,WAA0B6L,GACxB,OAAOA,EAAKvL,OAAOqmB,QAAUyiB,EAdf,EAAAA,WAAU,EAaV,EAAAC,UAAS,EAIZ,EAAA1iB,OAAS0iB,EAAU,EAAAx9B,O,0BClBnB,EAAA2F,YAAmB,CAAE5O,EAAG,K,2BCDrB,EAAA+xB,SAAhB,SAA4BpoB,GAC1B,OAAOA,I,2BCDI,EAAA5M,QAAUD,MAAMC,SAAY,SAAI4M,GAAqB,OAAAA,GAAA,iBAAYA,EAAEhN,S,2BCAnE,EAAAqf,YAAe,SAAIrS,GAA8B,OAAAA,GAAA,iBAAYA,EAAEhN,S,0BCA5D,EAAAiiB,OAAhB,SAAuBhgB,GACrB,OAAOA,aAAiBkO,OAAS0Q,OAAO5e,K,2BCD1B,EAAAmP,WAAhB,SAA2BpE,GACzB,MAAoB,mBAANA,I,6BCDhB,QAAwB,OAER,EAAAqT,UAAhB,SAA0B0pB,GAKxB,OAAQ,EAAA3pC,QAAQ2pC,IAASA,EAAMC,WAAWD,GAAO,GAAM,I,gQCPzC,EAAA33B,SAAhB,SAAyBpF,GACvB,OAAY,MAALA,GAA0B,WAAb,EAAOA,K,2BCDb,EAAAkS,UAAhB,SAA6Bjd,GAC3B,OAAOA,GAA2C,mBAArBA,EAAOqJ,WAA2D,mBAAvBrJ,EAAcwf,O,2BCAxE,EAAAhH,YAAhB,SAA4BxY,GAC1B,OAAOA,GAA0C,mBAApBA,EAAO8N,W,2BCDtB,EAAAsR,KAAhB,c,0BCDgB,EAAAmV,IAAhB,SAAoByT,EAAgBjgB,GAClC,aACE,OAAgBkgB,EAASD,KAAK/uB,MAAagvB,EAASlgB,QAASrZ,WAI/D,OAFOu5B,EAASD,KAAOA,EAChBC,EAASlgB,QAAUA,EACnBkgB,I,4BCNT,QAAqB,OAqBrB,WAAoCC,GAClC,OAAKA,EAIc,IAAfA,EAAInqC,OACCmqC,EAAI,GAGN,SAAeC,GACpB,OAAOD,EAAIx3B,QAAO,SAAC4jB,EAAW7kB,GAA4B,OAAAA,EAAA,KAAU04B,IAR7D,EAAA/oB,KAPK,EAAAzU,KAAhB,W,IAA2B,wDACzB,OAAOE,EAAcq9B,IAIP,EAAAr9B,cAAa,G,6BCN7B,IAAMu9B,EAA6B,oBAAX1wB,QAA0BA,OAC5C2wB,EAAyB,oBAATlvB,MAAqD,oBAAtBmvB,mBACjDnvB,gBAAgBmvB,mBAAqBnvB,KACnCovB,OAA6B,IAAX,EAAAC,GAA0B,EAAAA,EAC5CC,EAAaL,GAAYG,GAAYF,EAWzB,EAAAh+B,KAXgC,EAKlD,WACE,IAAKo+B,EACH,MAAM,IAAI1jC,MAAM,iEAFpB,I,6BCxBA,QAAqB,OACrB,IAA4B,OAC5B,IAA0B,OAC1B,IAAyB,OAEzB,IAA4C,OAC5C,IAA4C,IAE5C,IAAgC,MAEhC,IAAgD,MAMhC,EAAA8V,kBAAhB,SAAqC6tB,EACA9tB,EACAlT,EACAC,GACnC,IAAIyD,EAA+B,IAAI,EAAAhD,gBAAgBsgC,EAAiBhhC,EAAYC,GAEpF,GAAIyD,EAAY9D,OACd,OAAO,KAGT,GAAIsT,aAAkB,EAAAhS,WACpB,OAAIgS,EAAOtR,WACT8B,EAAYvL,KAAW+a,EAAQ5a,OAC/BoL,EAAYlE,WACL,OAEPkE,EAAYrB,oBAAqB,EAC1B6Q,EAAOvR,UAAU+B,IAErB,GAAI,EAAAgS,YAAYxC,GAAS,CAC9B,IAAK,IAAI5c,EAAI,EAAGF,EAAM8c,EAAO7c,OAAQC,EAAIF,IAAQsN,EAAY9D,OAAQtJ,IACnEoN,EAAYvL,KAAK+a,EAAO5c,IAErBoN,EAAY9D,QACf8D,EAAYlE,eAET,IAAI,EAAA+V,UAAUrC,GAcnB,OAbAA,EAAO4E,MACL,SAACxf,GACMoL,EAAY9D,SACf8D,EAAYvL,KAAUG,GACtBoL,EAAYlE,eAGhB,SAACjH,GAAa,OAAAmL,EAAYtE,MAAZ,MAEf0Y,KAAK,MAAM,SAACvf,GAEX,EAAAoK,KAAKoV,YAAW,WAAQ,MAAMxf,QAEzBmL,EACF,GAAIwP,GAA6C,mBAA5BA,EAAO,YAEjC,IADA,IAAMtb,EAAgBsb,EAAO,gBAC1B,CACD,IAAI+gB,EAAOr8B,EAASO,OACpB,GAAI87B,EAAK77B,KAAM,CACbsL,EAAYlE,WACZ,MAGF,GADAkE,EAAYvL,KAAK87B,EAAK37B,OAClBoL,EAAY9D,OACd,WAGC,GAAIsT,GAA+C,mBAA9BA,EAAO,cAAmC,CACpE,IAAM+tB,EAAM/tB,EAAO,gBACnB,GAA6B,mBAAlB+tB,EAAIt/B,UAGb,OAAOs/B,EAAIt/B,UAAU,IAAI,EAAAjB,gBAAgBsgC,EAAiBhhC,EAAYC,IAFtEyD,EAAYtE,MAAM,IAAIxI,UAAU,uEAI7B,CACL,IACMsqC,EAAM,iBADE,EAAAz4B,SAASyK,GAAU,oBAAsB,IAAIA,EAAM,KACrD,4FAEZxP,EAAYtE,MAAM,IAAIxI,UAAUsqC,KAElC,OAAO,O,4BCnFT,QAA2B,MAC3B,IAAmD,OACnD,IAAwD,OAExC,EAAA/+B,aAAhB,SACEnB,EACA5B,EACAI,GAEA,GAAIwB,EAAgB,CAClB,GAAIA,aAA0B,EAAAP,WAC5B,OAAwBO,EAG1B,GAAIA,EAAe,EAAAkF,cACjB,OAAOlF,EAAe,EAAAkF,gBAI1B,OAAKlF,GAAmB5B,GAAUI,EAI3B,IAAI,EAAAiB,WAAWO,EAAgB5B,EAAOI,GAHpC,IAAI,EAAAiB,WAAW,EAAAW,S,6BCpB1B,IAEI+/B,EAFJ,IAA4B,MAI5B,SAASC,IACP,IACE,OAAOD,EAAe5vB,MAAM1U,KAAMmK,WAClC,MAAOtN,GAEP,OADA,EAAA4O,YAAY5O,EAAIA,EACT,EAAA4O,aAIK,EAAAD,SAAhB,SAA6CN,GAE3C,OADAo5B,EAAiBp5B,EACLq5B,I,yGCCd,SAASC,EAAIC,EAAYhpC,GACvB,OCIK,SAAuB+K,EAAG4kB,EACVsZ,EAAaC,EACbF,EAAYG,GAEjC,IAAMC,GAAaC,QDRE,GAAI,GCQiBH,EAAaC,GACjDG,GAAaD,QDTE,GAAI,GCSiBH,EAAaF,GACjDO,GAAaF,QDVE,GAAI,GCUiBJ,EAAaE,GACjDK,GAAaH,QDXE,GAAI,GCWiBJ,EAAaD,GAEjDS,EAAWN,EAAWH,GAAc,IAAM,IAAM,IAEtD,MAAO,CACL,IAAKI,EAAWr+B,EAAGq+B,EAAWzZ,EAC9B,IAAKuZ,EAAaA,EAAa,EAAGO,EAAU,EAAGH,EAASv+B,EAAGu+B,EAAS3Z,EACpE,IAAK6Z,EAASz+B,EAAGy+B,EAAS7Z,EAC1B,IAAKsZ,EAAaA,EAAa,EAAGQ,EAAU,EAAGF,EAAWx+B,EAAGw+B,EAAW5Z,EACxE,KACAjM,KAAK,KDrBAgmB,CAAc,EAAI,EAAI,GAAI,GAAIV,EAAYhpC,GAG5C,SAAS2pC,EAAQC,EAAKC,GAE3B,SAASC,EAAU1oC,GACjB,MAAO,CAAC2J,EAAG3J,EAAE2oC,OAASH,EAAII,YAAc,GAAKra,EAAGvuB,EAAE6oC,OAASL,EAAIM,aAAe,IAGhF,SAASC,EAAoBC,GAC3B,IAAIC,GAAOC,QAAWF,GAAI,GAI1B,OAHAC,GAAkB9nC,KAAKgoC,GAAK,EAGd,IADdF,GADAA,GAAWG,QAAiBH,IACV,EAAIA,EAAO,EAAI9nC,KAAKgoC,GAAKF,GACvB9nC,KAAKgoC,GAI3B,IAAME,EAAc,IAAIjjC,kBAAgB,CAACkjC,QAAQ,EAAO1qC,MAAO,OACzD2qC,GAAcC,gBAAWH,EAAU,CACvCI,MADuC,WAErC,MAAO,CAAC7qC,MAAO,EAAG0qC,QAAQ,IAE5BI,OAJuC,WAKrC,MAAO,CAAC9qC,MAAO,EAAG0qC,QAAQ,IAE5BK,OAPuC,SAOhC98B,EAAO+8B,GACZ,OAAOlsC,OAAOqmB,OAAO,GAAIlX,EAAO,CAACjO,MAAOgrC,EAAIhrC,WAGhDirC,YAIApB,EAAOxgC,WAAU,SAAS0B,GACxB,IAAM/K,EAtCS,IAsCM+K,EACA6+B,EAAIsB,cAAc,YAElCC,aAAa,IAAKpC,EAAI,EAAG/oC,OAIhC,IAAMorC,EAAcxB,EAAIsB,cAAc,YACtCT,EACKphC,WAAU,SAAA4E,GAAK,OAAIm9B,EAAYD,aAAa,IAAMl9B,EAAMy8B,QAAyB,GAAfz8B,EAAMjO,MAAc,GAAK+oC,EAAI,EA/CnF,IA+CsF96B,EAAMjO,WAG7G,IAAMqrC,EAAaziC,eAAqBghC,EAAK,SAA1B,IAAsC,SAAAxoC,GAAC,OAAIA,EAAEkqC,oBAC1DC,EAAa3iC,eAAqBghC,EAAK,aAE7CyB,EACK72B,IAAIs1B,GACJt1B,IAAI21B,GACJ9gC,UAAUwgC,GAGf,IAAMr+B,EAAYlB,2BAyBlB,OAxBAihC,EACKn0B,aAAa,GAAI5L,GACjBgJ,IAAIs1B,GACJt1B,IAAI21B,GACJ31B,KAAI,SAAAzJ,GACE,MAAO,CAAClK,KAAM,SAAUb,MAAO+K,MAErC1B,UAAUshC,GAGfY,EACKt4B,aAAa,IAAMzH,GACnBgJ,KAAI,WACE,MAAO,CAAC3T,KAAM,SAAUb,MAAO,SAErCqJ,UAAUshC,GAGfU,EACK52B,MAAM,SACNhD,MAAM45B,EAAOr9B,MAAM,KAAMyG,MAAM,WAC/BpL,UAAUshC,GAGRF,EAASj2B,KAAI,SAACvG,GAAD,OAAWA,EAAMy8B,OAAS,KAAOz8B,EAAMjO,W,4HEvFhDwrC,EAAuB,IAAIhkC,kBAAgB,IAC3CikC,GAAgBb,gBAAWY,GAGlCE,EAAS,SAASC,GACtB,MAAO,CACLrN,GAAI,OAAF,QAAkB,IAAIpwB,MAAQ09B,WAA9B,OAA0CrpC,KAAK0jC,UACjD0F,WAAYA,EACZE,OAAYC,OAAaH,KAM7BF,EAAcvvB,GAAG,WAAW,SAACjO,EAAO+8B,GAElC,OADA/8B,EAAMlO,KAAK2rC,EAAOV,EAAIe,MACf99B,KAGTw9B,EAAcvvB,GAAG,SAAS,iBAAM,MAEhCuvB,EAAcvvB,GAAG,eAAe,SAACjO,EAAO+8B,GACtC,IAAMgB,EAAuChB,EAAIgB,QASjD,MARI,cAAcC,KAAKD,EAAQhtC,KAC7BktC,SAAW,WAEXA,SAAWF,EAAQnrC,MAAQ,WAE7BsrC,SAAsBH,EAAQI,UAC9BC,SAAkBL,EAAQM,UAC1BhH,SAASiH,eAAe,SAASC,UAAjC,gBAAsDR,EAAQI,UACvDJ,EAAQS,KAAKj4B,KAAI,SAACk4B,GAEvB,OAAOhB,EAAOgB,EAASf,YAAce,U,wlCCxClC,IAAMC,EAAc,SAASl9B,GAClC,gCAAO,SAAS,EAAE1E,GAAX,gFAEH,OAFG,SAEGA,EAFH,OAGHA,EAAI0E,EAAG1E,GAHJ,0DASI6hC,EAAaD,GAAY,SAAA5hC,GAAC,OAAQ,EAAJA,KAG9B8hC,EAAcF,GAAY,SAAA5hC,GAAC,OAAIA,EAAI,KAInCmM,EAAS,yBAAG,SAAZA,EAAuB41B,EAAIr9B,GAAf,8FACPq9B,GADO,4DACZ/hC,EADY,SAEjB0E,EAAG1E,GAFc,iBAGnB,OAHmB,SAGbA,EAHa,+KAAAgiC,IAAA,kDAAZ71B,EAAY,wBAWZ81B,EAAgB,SAASF,EAAIrgC,GACxC,OAAOyK,EAAU41B,GAAI,SAAA/hC,GAAC,OAAIA,EAAI0B,MAInBwgC,EAAoB,SAASliC,GACxC,gCAAO,SAAS,IAAT,mHACWA,GADX,gDACM2pB,EADN,YAEC3pB,EAAEsX,eAAeqS,GAFlB,gBAGD,OAHC,SAGKA,EAHL,kE,mFCtCF,IAAMwY,EAAmB,EAAI3qC,KAAKgoC,GAG5BC,EAAmB,SAAC2C,GAC/B,GAAI5qC,KAAKyc,IAAImuB,GAAK5qC,KAAK6qC,GAAI,OAAOD,EAClC,KAAOA,EAAI,GAAGA,GAAKD,EACnB,KAAOC,EAAI5qC,KAAKgoC,IAAI4C,GAAKD,EACzB,OAAOC,GAII7C,EAAa,SAAUF,GAGlC,MAAO,CAFO7nC,KAAK8qC,MAAMjD,EAAGza,EAAGya,EAAGr/B,GACrBxI,KAAK+qC,KAAKlD,EAAGr/B,EAAIq/B,EAAGr/B,EAAIq/B,EAAGza,EAAIya,EAAGza,KAKpC4d,EAAa,SAACC,EAAOC,GAChC,MAAO,CACL1iC,EAAG0iC,EAAOlrC,KAAKmrC,IAAIF,GACnB7d,EAAG8d,EAAOlrC,KAAKorC,IAAIH,KAKhB,SAASnE,EAAiBuE,EAASC,EAASC,EAAQC,GACzD,IAAMC,GAAkBD,EAAiB,IAAMxrC,KAAKgoC,GAAK,IACzD,MAAO,CACLx/B,EAAG6iC,EAAWE,EAASvrC,KAAKmrC,IAAIM,GAChCre,EAAGke,EAAWC,EAASvrC,KAAKorC,IAAIK,M,6BCtB7B,SAASC,EAAIljC,EAAGkK,EAAKxI,GAC1B,OAAOlK,KAAK0S,IAAIxI,EAAKlK,KAAKkK,IAAIwI,EAAKlK,IAG9B,SAASmjC,EAAS9D,EAAI+D,GAC3B,OAAO/D,EAAGr/B,EAAIojC,EAAKC,MACThE,EAAGr/B,EAAIojC,EAAKE,OACZjE,EAAGza,EAAIwe,EAAKG,KACZlE,EAAGza,EAAIwe,EAAKI,OAGjB,SAASC,EAAoBpE,EAAI+D,GACtC,GAAID,EAAS9D,EAAI+D,GAAO,CACtB,IAAMM,EACA,CACE1jC,GAAIojC,EAAKE,MAAQF,EAAKC,MAAQ,EAAID,EAAKC,KACvCze,GAAIwe,EAAKI,OAASJ,EAAKG,KAAO,EAAIH,EAAKG,KAI/C,OAF2B/rC,KAAK+qC,KAAK/qC,KAAKqB,IAAI6qC,EAAO1jC,EAAIq/B,EAAGr/B,EAAG,GAAKxI,KAAKqB,IAAI6qC,EAAO9e,EAAIya,EAAGza,EAAG,KACnEptB,KAAK0S,IAAIk5B,EAAKE,MAAQF,EAAKC,KAAMD,EAAKI,OAASJ,EAAKG,KAAO,EAGtF,OAAO,EAeJ,SAASI,EAAeC,EAAUliC,GACvC,IAAIwI,OAEe,IAARxI,GACRwI,EAAY,EAARxI,EAAWkiC,GAEhB15B,EAAM05B,EAGR,IAAIC,EAAS,SAAC7jC,GAAD,OAAOA,GACpB,GAAIkK,EAAMxI,EAAK,OACA,CAACA,EAAKwI,GAAlBA,EADY,KACPxI,EADO,KAEbmiC,EAAS,SAAC7jC,GAAD,OAAO,EAAIA,GAGtB,IAAM+G,EAAQrF,EAAMwI,EAIpB,MAAO,CADW,SAAClK,GAAD,OAAOkjC,EAAKW,EAAO7jC,GAAK+G,EAASmD,EAAKA,EAAKxI,IAD3C,SAAC1B,GAAD,OAAOkjC,EAAIW,GAAQ7jC,EAAIkK,GAAOnD,GAAQ,EAAG,KAMtD,SAAS+8B,IACd,IAAMxvB,EAAO,GACb,GAA6B,oBAAlByvB,aACT,IAAK,IAAI9wC,EAAI,EAAGA,EAAI8wC,aAAa/wC,OAAQC,IACvCqhB,EAAKrhB,GAAK8wC,aAAa9vC,IAAIhB,GAE/B,OAAOqhB,EAIF,SAAS0vB,EAASC,GACvB,OAAO,WAAkB,6BAANC,EAAM,yBAANA,EAAM,iBACvB,EAAAC,IAAOzxC,SAAQ0xC,IAAf,mBAA0BH,EAA1B,cAAwCC,KAMrC,SAASG,EAAcrkC,GAC5B,IAAMskC,EAAQtkC,EAAI,IAAOxI,KAAK+sC,MAAM,IAAQvkC,GAAKA,EAAI,IAAQxI,KAAK+sC,MAAMvkC,EAAI,KAAO,GAAKxI,KAAK+sC,MAAMvkC,EAAI,KACvG,gBAAUskC,GAAV,OAAkBtkC,EAAI,IAAO,MAAQ,K,0tCC7DvC,IAAMwkC,EAAoB,IAIpBC,EAAiB,WACrB,OAFqB,GAECnD,eAA0BoD,MAI5CC,EAAkB,SAACtF,EAAInD,GAC3B,IAAMkG,EAAI,GAD0B,IAEhBsC,KAAgBrF,GAFA,GAE7BuF,EAF6B,KAExBlC,EAFwB,KAMpC,OAHAN,EAAEwC,IAAQA,EACVxC,EAAEyC,IAAQ,EAAKnC,EAAO8B,EACtBpC,EAAE0C,GAAQ5I,EAbasI,IAchBpC,GAOT2C,eAAqBf,QAAS,kBAC9B,IACMgB,EADiBnnC,sBApBA,IAoBiCoF,MAAM,KAAM8F,QAAO,iBAA+B,WAAzBg8B,kBAClD75B,MAAK,SAAC5B,GAAD,OAAUo7B,KAAsBp7B,EAAOm7B,QAGrEQ,EAAc,IAAI7oC,UAExB4oC,EACKj4B,eAAe0zB,KAAa,SAACgC,EAAOf,GAEnBA,EAAKtiC,SAAQ,SAACuiC,GACRc,GAASd,EAASf,WAAWgE,KAAOjD,EAASf,WAAWgE,IAAOnC,EAAQgC,KACzEQ,EAAYnwC,KAAK6sC,SAItCrjC,WAAU,SAAA4mC,GAAC,OAAI,QAIpB,IAAMC,EAAc5K,SAASiH,eAAe,UACtC4D,EAAc7K,SAASiH,eAAe,SACtC6D,EAAcD,EAAME,uBAAuB,QAAQ,GAEnDC,EAAahL,SAASiH,eAAe,eAGrCgE,EACK,SAQX/E,SACS,SAACiB,GACC,IAAM+D,EAAU,GAKhB,OAJA/D,EAAKtiC,SAAQ,SAACuiC,GACZ,IAAM+D,EAASC,EAAmBhE,EAASf,YAC3C6E,EAAQzwC,KAAK,CAAC2sC,EAAU+D,OAEnBD,KAEbnnC,WAAU,SAAAojC,GAAI,OAAIA,EAAKtiC,SAAQ,SAACuqB,GAAD,OAAOic,EAAUjc,EAAE,GAAIA,EAAE,UAG7D8W,eACe,SAASiB,GAIP,IAHA,IAAMmE,EAASnE,EAAKj4B,KAAI,SAAAzJ,GAAC,OAAIA,EAAEuzB,MACzBuS,EAAST,EAAOC,uBAAuB,OAEpCryC,EAAI6yC,EAAO9yC,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC3C,IAAM8yC,EAAOD,EAAO7yC,GACdsgC,EAAKwS,EAAGC,aAAa,OACH,GAApBH,EAAIpiC,QAAQ8vB,IACdwS,EAAGhhC,aAKxB,IAAM4gC,EAAqB,SAAC/E,GAC1B,MAAO,CACLvB,GAAMqF,KAAgB9D,EAAWgE,KAAM,EAAIhE,EAAWiE,KAAOL,GAC7DtI,KAtFqBsI,IAsFf5D,EAAWkE,KAgBfc,EAAY,SAACjE,EAAU+D,GAC3B,IAAMrvC,EAZgB,SAACsrC,GACvB,IAAIX,EAAMzG,SAASiH,eAAeG,EAASpO,IAO3C,OANKyN,KACHA,EAAMzG,SAAS0L,gBAAgB,6BAA8B,WACzD7F,aAAa,KAAMuB,EAASpO,IAChCyN,EAAIZ,aAAa,QAAS,OAC1BiF,EAAOtJ,YAAYiF,IAEdA,EAIGkF,CAAgBvE,GAC1BtrC,EAAE+pC,aAAa,KAAMsF,EAAOrG,GAAGr/B,EAAIwkC,GACnCnuC,EAAE+pC,aAAa,KAAMsF,EAAOrG,GAAGza,EAAI4f,GACnCnuC,EAAE+pC,aAAa,IAAKsF,EAAOxJ,MAC3B7lC,EAAE+pC,aAAa,OAAQsF,EAAOS,gBAAkBT,EAAOU,OAASZ,IAMlE3nC,uBACe0nC,EAAY,SAD3B,IAEQ,SAAAlvC,GAAC,OAAIA,EAAEkqC,oBACVxzB,eAAe0zB,KAAa,SAACyE,EAAGxD,GACf,MAAO,CACL5rC,KAAS,SACTmrC,QAAS,CACPnrC,KAAUqrC,eACVE,SAAUD,eACVG,SAAUD,eACVI,KAAUA,EACV2E,IAAK,iBAAF,OAAwBlB,EAAOa,aAAa,WAA5C,aAA2DZ,EAAMkB,UAAUC,QAAQ,sBAAuB,IAA1G,eAIxBjoC,UAAUkoC,KAGf,IAAMC,EAAmB5oC,uBAAqBsnC,EAAQ,aAChDuB,EAAmB7oC,uBAAqBsnC,EAAQ,WAGlDpG,EAAY,SAAS1oC,GACvB,IAAMswC,EAASxB,EAAOyB,wBAItB,MAAO,CAAC5mC,EAFqD,IAAjD3J,EAAE2J,EAAI2mC,EAAOtD,MAAQ8B,EAAOlG,YAAc,IAAauF,EAErD5f,EAD+C,IAAjDvuB,EAAEuuB,EAAI+hB,EAAOpD,KAAO4B,EAAOhG,aAAe,IAAaqF,IAIjEqC,EAAe,KAGbC,EAAuB,WAA0B,IAAzBnyB,EAAyB,uDAAjBkyB,EACpC,OAAOrvC,KAAK0S,IAnJWs6B,MAmJU,IAAIrhC,MAAQ09B,UAAalsB,GAAS,KAGrE8xB,EAAiBnoC,WAAU,SAACjI,GAC1BwwC,GAAgB,IAAI1jC,MAAQ09B,UAC5B,IAAMxB,EAASN,EAAU1oC,GAFO,IAGVquC,KAAgBrF,GAHN,GAGzBoD,EAHyB,KAGlBC,EAHkB,KAK1Bj8B,EAAWiuB,aAAY,WAC3B,GAAImS,EAAc,CAChB,IAAM7F,EAAS,CACbzN,GAAO,MACPkP,MAAOA,EACPC,KAAOA,GAEHgD,EAAS,CACbxJ,KAAO4K,IACPzH,GAAOA,EACP+G,MAlHG,YAoHLR,EAAU5E,EAAK0E,OACV,CACL,IAAMrvC,EAAIkkC,SAASiH,eAAe,OAC9BnrC,GAAGA,EAAE0wC,WAAWjL,YAAYzlC,GAChCs+B,cAAcluB,MAEf,OAGLigC,EACKj9B,KAAI,SAACpT,GAGC,MAAO,CAACgpC,GAFKN,EAAU1oC,GAEX6lC,KADC4K,QAGnBr9B,KAAI,SAACi8B,GAEC,MAAO,CAAC5vC,KAAM,UAAWkrC,IADN2D,EAAgBe,EAAOrG,GAAIqG,EAAOxJ,UAG3D59B,UAAUoiC,KAEfgG,EAAepoC,WAAU,kBAAMuoC,EAAe,QAI9C7B,EAAS1mC,WAAU,SAACmkC,GAClB,IAAMuE,EAAWzM,SAASiH,eAAe,QAGzCyF,SAASD,EAAM,CACbE,GAAI1C,EAAoBhtC,KAAKmrC,IAAIF,GAAS+B,EAC1C2C,GAAI3C,EAAoBhtC,KAAKorC,IAAIH,GAAS+B,EAC1C4C,GAAI5C,EACJ6C,GAAI7C,GACH,CAACttC,SAPaowC,GAOOC,OAAQ,SAAUhmC,OAAO,OAInD0jC,EAAY3mC,WAAU,SAACqjC,GACrB,IAAMtrC,EAAIkkC,SAASiH,eAAeG,EAASpO,IAC3C,GAAIl9B,EAAG,CACLA,EAAE+pC,aAAa,OA9JR,SA+JP,IAAMoH,EAAoBhwC,KAAK0S,IAAI,IAA+B,IAA1By3B,EAASb,MAAM5pC,UACvDwd,YAAW,kBAAMre,EAAE+pC,aAAa,OAAQoF,KAAagC,OAMzDvC,EAAYx7B,KAAI,SAACzJ,GAAD,OAAOA,EAAE8gC,SAAOxiC,UAAUmpC,KAI1C,IAAMC,EAAW7pC,uBAAqBsnC,EAAQ,aACzC94B,aAAa,IACbtD,QAAO,SAAA1S,GAAC,OAAIA,EAAEsxC,YA0CnB,SAASC,EAAa5nC,GACpB,IAAMuxB,EAAI,IACV,OAAO/5B,KAAK+sC,MAAMvkC,EAAIuxB,GAAKA,EA1C7BmW,EACKj+B,KAAI,SAAApT,GAAC,OAAI0qC,OAhNS,SAAC1qC,EAAG6lC,GAAJ,OACnByI,EAAgB5F,EAAU1oC,GA+MewxC,IAAlBC,CAAezxC,OACrC0S,QAAO,SAAAg/B,GAAC,OAAIA,EAAEC,aACd1pC,UAAUmpC,KAEfC,EACKppC,WAAU,SAASjI,GACP,IAAMgpC,EAASN,EAAU1oC,GACnBqvC,EAAS,CACbxJ,KAAO,EACPmD,GAAOA,EACP+G,MAvLR,UAkLgB,IAOY1B,KAAgBrF,GAP5B,GAOHoD,EAPG,KAOIC,EAPJ,KAaVkD,EALe,CACbrS,GAAO,UACPkP,MAAOA,EACPC,KAAOA,GAEMgD,MAGhCgC,EACKx/B,aAAa,KACb5J,WAAU,WACE,IAAM2pC,EAAU1N,SAASiH,eAAe,WACpCyG,GAASA,EAAQljC,YAKtClH,uBAAqB08B,SAASiH,eAAe,kBAAmB,SAAhE,IACQ,SAAAnrC,GAAC,OAAIA,EAAEkqC,oBACVx3B,QAAO,kBAAM4D,OAAOu7B,QAAQ,0DAC5Bx+B,MAAM,cACNpL,UAAUkoC,KA4Bf3oC,uBACe08B,SAASiH,eAAe,oBAAqB,SAD5D,IAEQ,SAAAnrC,GAAC,OAAIA,EAAEkqC,oBACVxzB,eAAe0zB,KAAa,SAACyE,EAAGxD,GAAJ,OAAaA,KACzCj4B,KAAI,SAAAi4B,GAAI,OAtBb,SAAyBA,GACvB,IAAMyG,EAAQ,CACZryC,KAAUqrC,eACVE,SAAUD,eACVG,SAAUD,eACVI,KAAUA,EAAKj4B,KAAI,SAASu3B,GAC1B,MAAO,CACL4D,IAAKgD,EAAa5G,EAAIJ,WAAWgE,KACjCC,IAAK+C,EAAa5G,EAAIJ,WAAWiE,KACjCC,GAAK8C,EAAa5G,EAAIJ,WAAWkE,SAKjCsD,EAAaxvB,KAAKC,UAAUsvB,GAClC,OAAOE,SAASC,8BAA8BF,GAO/BG,CAAgB7G,MAJjC,IAKQ,SAAA1hC,GACMA,EAAEhN,OAAS,KACb2Z,OAAO67B,MAAM,+GAGpBlqC,WAAU,SAASmqC,GACP,IAAMC,EAAUnO,SAASoO,SAASC,KAAKrC,QAAQ,UAAW,IAAM,OAASkC,EACzE97B,OAAOk8B,QAAQC,aAAa,GAAI,GAAIJ,MAKrD7qC,gBACQ08B,SAASoO,UACZl/B,KAAI,SAAAzJ,GAAC,OAAIA,EAAE+oC,UACXhgC,QAAO,SAAA/I,GAAC,OAA0B,IAAtBA,EAAEyD,QAAQ,UACtBgG,KAAI,SAAAzJ,GAAC,OAAIA,EAAEumC,QAAQ,SAAU,OAC7B98B,KAAI,SAAAzJ,GAAC,OAAIqoC,SAASW,kCAAkChpC,MACpD+I,QAAO,SAAA/I,GAAC,OAAIA,KACZyJ,KAAI,SAAAzJ,GAAC,OAAI4Y,KAAKkB,MAAM9Z,MACpByJ,KAAI,SAAAzJ,GACE,MAAO,CACLlK,KAAS,cACTmrC,QAASjhC,MAGjB1B,WAAU,SAAS0B,GAAI0gC,SAAmB1gC,O,wECjVlCmhC,G,kBAAQ,IAAI1kC,kBAAgB,YAIzC0kC,EAAM7iC,WAAU,SAASxI,GACRykC,SAAS4F,cAAc,uBACnC8I,UAAYnzC,KAOjB+H,uBACe08B,SAASiH,eAAe,gBAAiB,SADxD,IAEQ,SAAAnrC,GAAC,OAAIA,EAAEkqC,oBACV92B,KAAI,kBAAOy/B,OAAO,WAAY/H,EAAMhnC,eACpC4O,QAAO,SAAA/I,GAAC,OAAU,OAANA,KACZ1B,UAAU6iC,I,iGC3BR,MCAMgI,EAA0B,IAAIC,QAC9BC,EAA+B,IAAIC,QACnCC,EAAmB,IAAID,QACvBE,EAAgC,IAAIF,QACpCG,EAAoB,IAAIH,QACxBI,EAAgB,IAAIJ,QACpBK,EAAkB,IAAIL,QACtBM,EAAiB,IAAIN,QAErBO,EAA0C,IAAIP,QAC9CQ,EAAyB,IAAIR,QCVpCt7B,EAAU,CACZ+7B,UAAS,IACE/7B,GCUTg8B,EAAyB,uPAClBC,EAAwB,CAACtrC,EAAQoX,KAC1C,MAAMm0B,EAAmB,GACzB,IAAIC,EAAgCxrC,EAAO4nC,QAAQ,SAAU,IACzD12B,EAASs6B,EAA8BC,MAAMJ,GACjD,KAAkB,OAAXn6B,GAAiB,CACpB,MAAMw6B,EAAgBx6B,EAAO,GAAGja,MAAM,GAAI,GACpC00C,EAAiCz6B,EAAO,GACzC02B,QAAQ,cAAe,IACvBA,QAAQ8D,EAAe,IAAIE,IAAIF,EAAet0B,GAAKpgB,YACxDu0C,EAAiBl1C,KAAKs1C,GACtBH,EAAgCA,EAA8Bv0C,MAAMia,EAAO,GAAG7c,QAAQuzC,QAAQ,SAAU,IACxG12B,EAASs6B,EAA8BC,MAAMJ,GAEjD,MAAO,CAACE,EAAiBvxB,KAAK,KAAMwxB,ICvBlCK,EAA8BC,IAChC,QAA6BryC,IAAzBqyC,IAAuCt3C,MAAMC,QAAQq3C,GACrD,MAAM,IAAIl3C,UAAU,wFAGtBm3C,EAAuBC,IACzB,IFJ2B,CAACC,IAC5B,IAEI,IADc,IAAIC,MAAMD,EAAe58B,GAG3C,MACI,OAAO,EAEX,OAAO,GEJF88B,CAAgBH,GACjB,MAAM,IAAIp3C,UAAU,8DAExB,GAAgC,OAA5Bo3C,EAAcv2C,WAAyD,iBAA5Bu2C,EAAcv2C,UACzD,MAAM,IAAIb,UAAU,+DCbfw3C,EAAiB,CAACthC,EAAKxV,KAChC,MAAMgB,EAAQwU,EAAI+N,IAAIvjB,GACtB,QAAcmE,IAAVnD,EACA,MAAM,IAAI+E,MAAM,kDAEpB,OAAO/E,GCLE+1C,EAAqB,CAAC9jB,EAAKxK,KACpC,MAAMuuB,EAAmB93C,MAAM4C,KAAKmxB,GAAKne,OAAO2T,GAChD,GAAIuuB,EAAiBj4C,OAAS,EAC1B,MAAMgH,MAAM,oCAEhB,GAAgC,IAA5BixC,EAAiBj4C,OACjB,MAAMgH,MAAM,yBAEhB,MAAOkxC,GAAmBD,EAE1B,OADA/jB,EAAIikB,OAAOD,GACJA,GCREE,EAA0C,CAACC,EAAe1sC,EAAQ2sC,EAAQlO,KACnF,MAAMmO,EAA0BR,EAAeM,EAAe1sC,GACxD6sC,EAAqBR,EAAmBO,GAA0BE,GAA2BA,EAAuB,KAAOH,GAAUG,EAAuB,KAAOrO,IAIzK,OAHqC,IAAjCmO,EAAwBrP,MACxBmP,EAAcF,OAAOxsC,GAElB6sC,GCNEE,EAAgCC,GAClCZ,EAAepB,EAAiBgC,GCD9BC,EAA4BD,IACrC,GAAIxC,EAAwB3kB,IAAImnB,GAC5B,MAAM,IAAI3xC,MAAM,oCAEpBmvC,EAAwBpqC,IAAI4sC,GAC5BD,EAA6BC,GAAWvsC,SAASysC,GAAkBA,GAAc,MCPxEC,EAAsBH,GACxB,SAAUA,ECCRI,EAA6BJ,IACtC,IAAKxC,EAAwB3kB,IAAImnB,GAC7B,MAAM,IAAI3xC,MAAM,gCAEpBmvC,EAAwBgC,OAAOQ,GAC/BD,EAA6BC,GAAWvsC,SAASysC,GAAkBA,GAAc,MCJxEG,EAAyC,CAACL,EAAWM,MACzDH,EAAmBH,IAAcM,EAAatjC,OAAOujC,GAAqC,IAArBA,EAAYhQ,QAClF6P,EAA0BJ,ICL5BQ,EAAkB,CACpBC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBC,QAAS,KACTC,aAAc,GACdC,aAAc,IACdC,sBAAuB,ICPdC,EAAmB,CAACC,EAAiBC,IACvCD,EAAgBzoC,UAAY0oC,ECD1BC,EAAuDC,IAChE,IACIA,EAAkBC,cAAc,IAAI5yC,aAAa,GAAI,GAAI,GAE7D,MACI,OAAO,EAEX,OAAO,GCPE6yC,EAAuB,IAAM,IAAIC,aAAa,GAAI,kBCClDC,EAAuCC,IACnB,IAAEC,EAA/BD,EAAYC,gBAAmBA,EAY5BD,EAAYC,eAXH9R,IACJ,IACI,OAAO8R,EAAex4C,KAAKu4C,EAAa7R,GAE5C,MAAOrmC,GACH,GAAiB,KAAbA,EAAImmB,KACJ,MAAM4xB,IAEV,MAAM/3C,MCThB,EAAkB,CACpBo4C,iBAAkB,GCHTC,GAA8B,qBAC9BC,GAA8BD,ECA9BE,EAAqB9B,GAAcxC,EAAwB3kB,IAAImnB,GCGtE,EAAkB,CACpBrkC,OAAQ,KACR8kC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WAEvBoB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,GCXLC,EAA2BnC,GAC7BZ,EAAe1B,EAA8BsC,GCD3CoC,EAA4BC,GAC9BjD,EAAevB,EAA+BwE,GCQ5CC,EAA4C,CAACtC,EAAWuC,KACjE,MAAM,aAAEjC,GAAiB6B,EAAwBnC,GACjDM,EAAa7sC,SAAS8sC,GAAgBA,EAAY9sC,SAAQ,EAAET,MACnDuvC,EAAMC,SAASxC,IAChBsC,EAA0CtvC,EAAQ,IAAIuvC,EAAOvC,SAGrE,MAAMyC,EClB6B,CAACzC,GAC7B,iBAAkBA,EDiBL0C,CAAwB1C,GACtC,CAEEA,EAAUkC,cAEZ/B,EAAmBH,GACfx4C,MAAM4C,KAAK41C,EAAU2C,WAAWr3C,UExBZ,CAAC00C,GACxB,cAAeA,GAAa,SAAUA,EFwBnC4C,CAAmB5C,GACf,CAACA,EAAU6C,EAAG7C,EAAU8C,OAAQ9C,EAAU3D,UAAW2D,EAAU+C,MG1B7C,CAAC/C,GAC1B,WAAYA,EH0BLgD,CAAqBhD,GACjB,CAACA,EAAUiD,QI5BP,CAACjD,KACd,cAAeA,IAAc,SAAUA,EJ4B9BkD,CAAWlD,GACP,CAACA,EAAU+C,MK9BL,CAAC/C,GACtB,WAAYA,GAAa,cAAeA,EL8BzBmD,CAAiBnD,GACb,CAACA,EAAU8C,OAAQ9C,EAAU3D,WMhCzB,CAAC2D,GACxB,QAASA,ENgCUoD,CAAmBpD,GACf,CAACA,EAAUqD,KACX,GAC9B,IAAK,MAAMhB,KAAcI,EAAa,CAClC,MAAMa,EAAwBlB,EAAyBC,QACzB51C,IAA1B62C,GACAA,EAAsBhD,aAAa7sC,SAAQ,EAAET,KAAYsvC,EAA0CtvC,EAAQuvC,KAG/GT,EAAkB9B,IAClBI,EAA0BJ,IO1CrBuD,EAAwB/qC,IACjC8pC,EAA0C9pC,EAAQ9D,YAAa,KCFtD8uC,EAAeC,GACjB,YAAaA,ECAXC,EAA+BC,GACjCH,EAAYG,EAAiB,ICF3BC,EAAqB,CAACroB,EAAKF,EAAStK,EAAW8yB,KACxD,IAAK,MAAMC,KAAQvoB,EACf,GAAIxK,EAAU+yB,GAAO,CACjB,GAAID,EACA,OAAO,EAEX,MAAMx1C,MAAM,kDAIpB,OADAktB,EAAInoB,IAAIioB,IACD,GCTE0oB,EAAuC,CAACzD,EAActtC,GAAS2sC,EAAQO,GAAgB2D,KAChGD,EAAmBtD,EAAc,CAACttC,EAAQ2sC,EAAQO,IAAiB8D,GAA0BA,EAAsB,KAAOhxC,GAAUgxC,EAAsB,KAAOrE,GAAQkE,ICDhKI,EAAwC,CAACvE,GAAgB1sC,EAAQ2sC,EAAQO,GAAgB2D,KAClG,MAAMjE,EAA0BF,EAAc7zB,IAAI7Y,QAClBvG,IAA5BmzC,EACAF,EAAcnkB,IAAIvoB,EAAQ,IAAIylB,IAAI,CAAC,CAACknB,EAAQO,MAG5C0D,EAAmBhE,EAAyB,CAACD,EAAQO,IAAiBJ,GAA2BA,EAAuB,KAAOH,GAAQkE,ICPlIK,EAA0BC,GAC5B,WAAYA,ECAVC,EAA0C,CAACC,EAAuBC,EAA4B3E,EAAQlO,KAC/G,GAAIyS,EAAuBI,GAA6B,CACpD,MAAMC,EAAiCD,EAA2BE,OAAO/S,GAEzE,OADA4S,EAAsBjhC,QAAQmhC,EAAgC5E,EAAQ,GAC/D,CAAC4E,EAAgC5E,EAAQ,GAGpD,OADA0E,EAAsBjhC,QAAQkhC,EAA4B3E,EAAQlO,GAC3D,CAAC6S,EAA4B3E,EAAQlO,ICRnCgT,EAA8B,CAACC,EAAwB1xC,EAAQ2sC,KACxE,IAAK,MAAMqE,KAAyBU,EAChC,GAAIV,EAAsB,KAAOhxC,GAAUgxC,EAAsB,KAAOrE,EAEpE,OADA+E,EAAuBlF,OAAOwE,GACvBA,EAGf,OAAO,MCNEW,EAAiC,CAAC3E,EAAWE,KAEtD,IADuBH,EAA6BC,GAChCR,OAAOU,GACvB,MAAM,IAAI7xC,MAAM,yCCFXu2C,EAA2C,CAAClF,EAAe1sC,EAAQ2sC,KAC5E,MAAMC,EAA0BR,EAAeM,EAAe1sC,GACxD6sC,EAAqBR,EAAmBO,GAA0BE,GAA2BA,EAAuB,KAAOH,IAIjI,OAHqC,IAAjCC,EAAwBrP,MACxBmP,EAAcF,OAAOxsC,GAElB6sC,GCPEgF,EAA+C,CAACR,EAAuBC,EAA4B3E,EAAQlO,KAChHyS,EAAuBI,GACvBD,EAAsBS,WAAWR,EAA2BE,OAAO/S,GAAQkO,EAAQ,GAGnF0E,EAAsBS,WAAWR,EAA4B3E,EAAQlO,ICJhEsT,GAAsB/E,GACxBZ,EAAexB,EAAkBoC,GCD/BgF,GAAuB3C,GACzBjD,EAAetB,EAAmBuE,GCFhC4C,GAAkBjF,GACpB/B,EAAeplB,IAAImnB,GCDjBkF,GAAsBlF,IACvBxC,EAAwB3kB,IAAImnB,GCF3BmF,GAAwCC,GAC1C,IAAItxC,SAASC,IAChB,MAAMsxC,EAAWD,EAAmBE,sBAAsB,IAAK,EAAG,GAC5DC,EAAQH,EAAmBI,aAE3BC,EAAOL,EAAmBM,aAAa,EAAG,EAAG,OAC7CC,EAAcF,EAAK/D,eAAe,GACxCiE,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjB,MAAM3yC,EAASoyC,EAAmBQ,qBAClC5yC,EAAO2I,OAAS8pC,EAChBzyC,EAAO+uC,MAAO,EACd/uC,EAAOoQ,QAAQiiC,GAAUjiC,QAAQgiC,EAAmB1wC,aACpD1B,EAAOoQ,QAAQmiC,GACfvyC,EAAO8xC,WAAWS,GAElBF,EAASQ,eAAkBnW,IACvB,MAAMoW,EAAUpW,EAAMqW,YAAYrE,eAAe,GAC7Cl6C,MAAMiB,UAAUu9C,KAAK98C,KAAK48C,GAAUzmC,GAAsB,IAAXA,IAC/CtL,GAAQ,GAGRA,GAAQ,GAEZf,EAAOizC,OACPZ,EAASQ,eAAiB,KAC1B7yC,EAAO8xC,WAAWO,GAClBA,EAASP,WAAWM,EAAmB1wC,cAE3C1B,EAAOgW,WC7BFk9B,GAAyB,CAACC,EAAQC,KAC3C,MAAMC,EAAS,IAAIjrB,IACnB,IAAK,MAAMkrB,KAASH,EAChB,IAAK,MAAMnG,KAAasG,EAAO,CAC3B,MAAMjqC,EAAQgqC,EAAOx6B,IAAIm0B,GACzBqG,EAAO9qB,IAAIykB,OAAqBvzC,IAAV4P,EAAsB,EAAIA,EAAQ,GAGhEgqC,EAAO5yC,SAAQ,CAAC4I,EAAO2jC,IAAcoG,EAAQpG,EAAW3jC,MCR/CkqC,GAAqBC,GACvB,YAAaA,ECAXC,GAAiCxF,IAC1C,MAAMV,EAAc,IAAInlB,IAkBK,IAAE0pB,EAjBH1hC,EAA5B69B,EAAgB79B,SAAYA,EAgBzB69B,EAAgB79B,QAAQ1K,KAAKuoC,GAdrB,CAACvsC,EAAairC,EAAS,EAAGlO,EAAQ,KACrC,MAAMiV,EAAcH,GAAkB7xC,GAAe0O,EAAQ1O,EAAairC,EAAQlO,GAASruB,EAAQ1O,EAAairC,GAE1GgH,EAA2BpG,EAAY10B,IAAInX,GASjD,YARiCjI,IAA7Bk6C,EACApG,EAAYhlB,IAAI7mB,EAAa,CAAC,CAAE+8B,QAAOkO,YAGnCgH,EAAyB3pC,OAAOqG,GAAeA,EAAWouB,QAAUA,GAASpuB,EAAWs8B,SAAWA,KACnGgH,EAAyBt9C,KAAK,CAAEooC,QAAOkO,WAGxC+G,IAGfzF,EAAgB6D,YAAeA,EA6C5B7D,EAAgB6D,WA5CR,CAAC8B,EAAqBjH,EAAQlO,KAEjC,GADAqT,EAAWviC,MAAM0+B,QACWx0C,IAAxBm6C,EACArG,EAAY7nB,aAEX,GAAmC,iBAAxBkuB,EACZ,IAAK,MAAOlyC,EAAaiyC,KAA6BpG,EAAa,CAC/D,MAAMsG,EAAsBF,EAAyBvpC,QAAQiG,GAAeA,EAAWs8B,SAAWiH,IAC/D,IAA/BC,EAAoBx/C,OACpBk5C,EAAYf,OAAO9qC,GAGnB6rC,EAAYhlB,IAAI7mB,EAAamyC,QAIpC,GAAItG,EAAY1nB,IAAI+tB,GACrB,QAAen6C,IAAXkzC,EACAY,EAAYf,OAAOoH,OAElB,CACD,MAAMD,EAA2BpG,EAAY10B,IAAI+6B,GACjD,QAAiCn6C,IAA7Bk6C,EAAwC,CACxC,MAAME,EAAsBF,EAAyBvpC,QAAQiG,GAAeA,EAAWs8B,SAAWA,IAAWt8B,EAAWouB,QAAUA,QAAmBhlC,IAAVglC,KACxG,IAA/BoV,EAAoBx/C,OACpBk5C,EAAYf,OAAOoH,GAGnBrG,EAAYhlB,IAAIqrB,EAAqBC,IAKrD,IAAK,MAAOnyC,EAAaiyC,KAA6BpG,EAClDoG,EAAyBlzC,SAAS4P,IAC1BkjC,GAAkB7xC,GAClBusC,EAAgB79B,QAAQ1O,EAAa2O,EAAWs8B,OAAQt8B,EAAWouB,OAGnEwP,EAAgB79B,QAAQ1O,EAAa2O,EAAWs8B,cCkBlEmH,GAA0B,CAAC9zC,EAAQ+zC,EAAWryC,EAAairC,EAAQlO,KACrE,MAAOuV,EAAUC,GAnBoB,EAACj0C,EAAQ0B,EAAairC,EAAQlO,KACnE,MAAM,aAAE6O,EAAY,cAAEZ,GAAkByC,EAAwBztC,GAC1DsvC,EAAwBS,EAA4BnE,EAAa7O,GAAQz+B,EAAQ2sC,GACvF,OAA8B,OAA1BqE,EAEO,CADwBvE,EAAwCC,EAAe1sC,EAAQ2sC,EAAQlO,GACvE,IAAI,GAEhC,CAACuS,EAAsB,IAAI,IAYLkD,CAAiCl0C,EAAQ0B,EAAairC,EAAQlO,GAO3F,GANiB,OAAbuV,IACArC,EAA+B3xC,EAAQg0C,IACnCC,GAAaF,GAAc9B,GAAejyC,IAC1C6xC,EAA6CE,GAAmB/xC,GAAS+xC,GAAmBrwC,GAAcirC,EAAQlO,IAGtHqQ,EAAkBptC,GAAc,CAChC,MAAM,aAAE4rC,GAAiB6B,EAAwBztC,GACjD2rC,EAAuC3rC,EAAa4rC,KAGtD6G,GAA2B,CAACn0C,EAAQ+zC,EAAWryC,EAAairC,KAC9D,MAAOqH,EAAUC,GAvBqB,EAACj0C,EAAQ0B,EAAairC,KAC5D,MAAM,aAAEW,EAAY,cAAEZ,GAAkB0C,EAAyB1tC,GAC3DsvC,EAAwBS,EAA4BnE,EAActtC,EAAQ2sC,GAChF,OAA8B,OAA1BqE,EAEO,CADwBY,EAAyClF,EAAe1sC,EAAQ2sC,GAChE,IAAI,GAEhC,CAACqE,EAAsB,IAAI,IAgBLoD,CAAkCp0C,EAAQ0B,EAAairC,GACnE,OAAbqH,IACArC,EAA+B3xC,EAAQg0C,IACnCC,GAAaF,GAAc9B,GAAejyC,IAC1C+xC,GAAmB/xC,GAAQ8xC,WAAWE,GAAoBtwC,GAAcirC,KChG7E,MAAM0H,GACT,YAAY1E,GACR90C,KAAKy5C,KAAO,IAAIlsB,IAAIunB,GAExB,WACI,OAAO90C,KAAKy5C,KAAK/W,KAErB,UACI,OAAO1iC,KAAKy5C,KAAKC,UAErB,QAAQj2B,EAAUD,EAAU,MACxB,OAAOxjB,KAAKy5C,KAAK7zC,SAAQ,CAACnK,EAAOhB,IAAQgpB,EAASpoB,KAAKmoB,EAAS/nB,EAAOhB,EAAKuF,QAEhF,IAAI1D,GACA,OAAO0D,KAAKy5C,KAAKz7B,IAAI1hB,GAEzB,IAAIA,GACA,OAAO0D,KAAKy5C,KAAKzuB,IAAI1uB,GAEzB,OACI,OAAO0D,KAAKy5C,KAAK3+B,OAErB,SACI,OAAO9a,KAAKy5C,KAAKh8C,UCrBzB,MAAM,GAAkB,CACpBm1C,aAAc,EAEdC,iBAAkB,WAClBC,sBAAuB,WACvB6G,eAAgB,EAChBC,gBAAiB,EACjBC,cAAe,GACfC,iBAAkB,ICVf,SAASC,GAAgBnG,EAEhC1wC,EAAQzI,EAAKu/C,EAAeC,GACxB,GAA2C,mBAAhCrG,EAAYmG,gBAEY,IAA3B72C,EAAOzI,GAAKy/C,aACZh3C,EAAOzI,GAAO,IAAImG,aAAa,MAEnCgzC,EAAYmG,gBAAgB72C,EAAOzI,GAAMu/C,EAAeC,OAGvD,CACD,MAAMnC,EAAclE,EAAYC,eAAemG,GAE/C,GAA+B,IAA3B92C,EAAOzI,GAAKy/C,WACZh3C,EAAOzI,GAAOq9C,EAAY17C,MAAM69C,EAAcA,EAAe,SAE5D,CACD,MAAME,EAAc,IAAIv5C,aAAak3C,EAAYhqC,OAAQmsC,EAAer5C,aAAaw5C,kBAAmB,KACxGl3C,EAAOzI,GAAKizB,IAAIysB,KCnBrB,MAAM3G,GAAgB,CAACI,EAAa1wC,EAAQzI,EAAKu/C,EAAeC,KAC1B,mBAA9BrG,EAAYJ,cAEY,IAA3BtwC,EAAOzI,GAAKy/C,YACZtG,EAAYJ,cAActwC,EAAOzI,GAAMu/C,EAAeC,GAM3B,IAA3B/2C,EAAOzI,GAAKy/C,YACZtG,EAAYC,eAAemG,GAAetsB,IAAIxqB,EAAOzI,GAAMw/C,ICX1DI,GAAqB,CAAC7zC,EAAG4kB,KAClC,MAAMkvB,EAAS,GACf,IAAK,IAAI7gD,EAAI,EAAGA,EAAI+M,EAAG/M,GAAK,EAAG,CAC3B,MAAMsa,EAAQ,GACRva,EAAsB,iBAAN4xB,EAAiBA,EAAIA,EAAE3xB,GAC7C,IAAK,IAAIypC,EAAI,EAAGA,EAAI1pC,EAAQ0pC,GAAK,EAC7BnvB,EAAMvY,KAAK,IAAIoF,aAAa,MAEhC05C,EAAO9+C,KAAKuY,GAEhB,OAAOumC,GCJLC,GAAgBnxC,MAAOoxC,EAAOC,EAAgBC,EAA2BvjC,EAASwjC,EAAoBC,EAAsBC,KAG9H,MAAMrhD,EAA4B,OAAnBihD,EAAkE,IAAxCz8C,KAAK4B,KAAK46C,EAAM7vC,QAAQnR,OAAS,KAAaihD,EAAejhD,OAChGshD,EAAwB3jC,EAAQy7B,aAAez7B,EAAQwiC,eACvDoB,EAAyBJ,EAAmBxuC,QAAO,CAAC6uC,EAAKv/C,IAAUu/C,EAAMv/C,GAAO,GAChFw/C,EAA6C,IAA3BF,EAClB,KACAL,EAA0B7C,aAAakD,EAAwBvhD,EAAQkhD,EAA0BQ,YACvG,QAA6Bt8C,IAAzBg8C,EACA,MAAM,IAAIp6C,MAAM,sCAEpB,MAAM26C,EAAuB7G,EAAwBkG,GAC/CY,OChB8B,EAACV,EAA2BF,KAChE,MAAMa,EAAqB9J,EAAejB,EAAwBoK,GAC5DY,EAAyBpE,GAAmBsD,GAClD,OAAOjJ,EAAe8J,EAAoBC,IDaNC,CAAyBb,EAA2BF,GAClF7D,EAAS0D,GAAmBljC,EAAQwiC,eAAgBxiC,EAAQy7B,cAC5D4I,EAAUnB,GAAmBljC,EAAQyiC,gBAAiBe,GACtD7F,EAAan7C,MAAM4C,KAAKi+C,EAAM1F,WAAWh6B,QAAQ3O,QAAO,CAACsvC,EAAQn/C,KAAS,IAAMm/C,EAAQ,CAACn/C,GAAO,IAAIsE,aAAa,QAAS,IAChI,IAAK,IAAInH,EAAI,EAAGA,EAAID,EAAQC,GAAK,IAAK,CAClC,GAAI0d,EAAQwiC,eAAiB,GAAwB,OAAnBc,EAC9B,IAAK,IAAIvX,EAAI,EAAGA,EAAI/rB,EAAQwiC,eAAgBzW,GAAK,EAC7C,IAAK,IAAIE,EAAI,EAAGA,EAAIjsB,EAAQy7B,aAAcxP,GAAK,EAC3C2W,GAAgBU,EAAgB9D,EAAOzT,GAAIE,EAAGA,EAAG3pC,QAIXmF,IAA9Cg8C,EAAqB3J,sBAAyD,OAAnBwJ,GAC3DG,EAAqB3J,qBAAqBrrC,SAAQ,EAAGtJ,QAAQoC,KACzDq7C,GAAgBU,EAAgB3F,EAAYx4C,EAAMw+C,EAAwBp8C,EAAOjF,MAGzF,IAAK,IAAIypC,EAAI,EAAGA,EAAI/rB,EAAQwiC,eAAgBzW,GAAK,EAC7C,IAAK,IAAIE,EAAI,EAAGA,EAAIuX,EAAmBzX,GAAIE,GAAK,EAEX,IAA7BoY,EAAQtY,GAAGE,GAAG8W,aACdsB,EAAQtY,GAAGE,GAAK,IAAIxiC,aAAa,MAI7C,IACI,MAAM86C,EAAyB/E,EAAO1mC,KAAI,CAAC2zB,EAAOllC,IACQ,IAAlDy8C,EAAqB1I,aAAa/zC,GAAOgkC,KAClC,GAEJkB,IAEL+X,EAAmBd,EAAiCphD,EAAIihD,EAA0BQ,WAAYR,EAA0BQ,YAAY,IAAME,EAAsBva,QAAQ6a,EAAwBF,EAAS1G,KAC/M,GAAwB,OAApBmG,EACA,IAAK,IAAI/X,EAAI,EAAG0Y,EAAkC,EAAG1Y,EAAI/rB,EAAQyiC,gBAAiB1W,GAAK,EAAG,CACtF,IAAK,IAAIE,EAAI,EAAGA,EAAIuX,EAAmBzX,GAAIE,GAAK,EAC5CoQ,GAAcyH,EAAiBO,EAAQtY,GAAIE,EAAGwY,EAAkCxY,EAAG3pC,GAEvFmiD,GAAmCjB,EAAmBzX,GAG9D,IAAKyY,EACD,MAGR,MAAOp5C,GACHi4C,EAAMqB,cAAc,IAAIC,WAAW,iBAAkB,CACjDC,MAAOx5C,EAAMw5C,MACbC,SAAUz5C,EAAMy5C,SAChBC,OAAQ15C,EAAM05C,OACd57B,QAAS9d,EAAM8d,WAEnB,OAGR,OAAO46B,GEzEL,GAAkB,CACpBjG,EAAG,EACHpC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBmC,OAAQ,EACRzG,UAAW,IACX0G,KAAM,EACN93C,KAAM,WCTJ,GAAkB,CACpBw1C,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB6G,eAAgB,GCJd,GAAkB,CACpB/G,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB8G,gBAAiB,GCAf,GAAkB,CACpBhH,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBsC,OAAQ,GCRN,GAAkB,CACpBtnC,OAAQ,KACR8kC,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvBoJ,sBAAsB,GCLpB,GAAkB,CACpBtJ,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBx3B,UAAW,EACX6gC,aAAc,GCJZC,GAA4B,CAAC3I,EAAsB4I,EAAkBvK,KACvE,MAAMwK,EAAkBD,EAAiBvK,GACzC,QAAwBlzC,IAApB09C,EACA,MAAM7I,IAEV,OAAO6I,GCNL,GAAkB,CACpBC,OAAQ,KACR3J,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvB0J,KAAM,GACNC,MAAO,GACPC,QAAS,IACTC,WAAY,ICPV,GAAkB,CACpB/J,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBoC,KAAM,GCLG0H,GAA0B,IAAM,IAAIlJ,aAAa,GAAI,qBCArDmJ,GAA2B,IAAM,IAAInJ,aAAa,GAAI,sBCC7D,GAAkB,CACpBd,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,YCDdgK,GAAe,CAACC,EAAUC,EAAgBC,EAAaC,EAAmBC,EAAWC,EAASC,EAASC,EAAaC,EAAc3Z,EAAOkO,KAClJ,MAAM0L,EAAc5Z,EAAMpqC,OAC1B,IAAIC,EAAI6jD,EACR,IAAK,IAAIpa,EAAI,EAAGA,EAAIsa,EAAata,GAAK,EAAG,CACrC,IAAI9X,EAAI6xB,EAAY,GAAKrZ,EAAMV,GAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAI+Z,EAAW/Z,GAAK,EAAG,CACnC,MAAM58B,EAAK/M,EAAI2pC,EAAMma,EAAe,EACpCnyB,GAAK6xB,EAAY7Z,GAAKga,EAAQ52C,GAC9B4kB,GAAK2xB,EAAS3Z,GAAKia,EAAQ72C,GAE/B,IAAK,IAAI48B,EAAI+Z,EAAW/Z,EAAI8Z,EAAmB9Z,GAAK,EAChDhY,GAAK6xB,EAAY7Z,GAAKga,EAAS3jD,EAAI2pC,EAAMma,EAAe,GAE5D,IAAK,IAAIna,EAAI+Z,EAAW/Z,EAAI4Z,EAAgB5Z,GAAK,EAC7ChY,GAAK2xB,EAAS3Z,GAAKia,EAAS5jD,EAAI2pC,EAAMma,EAAe,GAEzDH,EAAQ3jD,GAAKmqC,EAAMV,GACnBma,EAAQ5jD,GAAK2xB,EACb3xB,EAAKA,EAAI,EAAM8jD,EAAe,EAC9BzL,EAAO5O,GAAK9X,EAEhB,OAAO3xB,GCxBL,GAAkB,CACpBm5C,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,YCHd2K,GAAsBpK,IAE/B,MAAMqK,EAAc,IAAIC,YAAY,CAAC,WAAY,GAAI,WAAY,UAAW,GAAI,OAAQ,MAAO,OAAQ,QAAS,WAAY,EAAG,IAC/H,IAEI,MAAM3iC,EAAUq4B,EAAcuK,gBAAgBF,EAAY5vC,QAAQ,SAGlE,YAAgBlP,IAAZoc,IAGJA,EAAQ6iC,OAAM,UAGP,GAEX,OAGA,OAAO,GCnBEC,GAA8B,CAAC1K,EAAiBj8B,EAAS4mC,KAClE,MAAMtiD,EAAQ0b,EAAQ4mC,QACRn/C,IAAVnD,GAAuBA,IAAU23C,EAAgB2K,KACjD3K,EAAgB2K,GAAUtiD,ICFrBuiD,GAA+B,CAAC5K,EAAiBj8B,KAC1D2mC,GAA4B1K,EAAiBj8B,EAAS,gBACtD2mC,GAA4B1K,EAAiBj8B,EAAS,oBACtD2mC,GAA4B1K,EAAiBj8B,EAAS,0BCJ7C8mC,GAAuDC,GACJ,mBAA9CA,EAAmBC,uBCDxBC,GAAuC,CAAChL,EAAiBj8B,EAASq9B,KAC3E,MAAM/4C,EAAQ0b,EAAQq9B,QACR51C,IAAVnD,GAAuBA,IAAU23C,EAAgBoB,GAAY/4C,QAC7D23C,EAAgBoB,GAAY/4C,MAAQA,ICH/B4iD,GAA6DC,IAC/B,IAAEnjC,EAAzCmjC,EAA+BnjC,OAAUA,EAQtCmjC,EAA+BnjC,MAPvB,CAACojC,EAAO,EAAGnJ,EAAS,EAAG13C,KAC1B,GAAyB,iBAAbA,GAAyBA,EAAW,GAAM03C,EAAS,GAAKmJ,EAAO,EACvE,MAAM,IAAIC,WAAW,qCAGzBrjC,EAAM9f,KAAKijD,EAAgCC,EAAMnJ,EAAQ13C,MCPxD+gD,GAA4DH,IAC/B,IAAElG,EAAxCkG,EAA+BlG,MAASA,EAOrCkG,EAA+BlG,KANvB,CAACmG,EAAO,KACX,GAAIA,EAAO,EACP,MAAM,IAAIC,WAAW,oCAEzBpG,EAAK/8C,KAAKijD,EAAgCC,MCNzCG,GAAoB,CAACC,EAAazD,IACvB,OAAhByD,EACO,IAEJ3gD,KAAKkK,IAAI,IAAKlK,KAAK0S,IAAI,MAAO1S,KAAKqB,IAAI,EAAGrB,KAAK+sC,MAAM/sC,KAAK4gD,KAAKD,EAAczD,OCD3E2D,GAA+B,CAACxL,EAAel8B,KACxD,MAAM2nC,EAAyBzL,EAAc0L,qBAO7C,OANAf,GAA6Bc,EAAwB3nC,GACrDinC,GAAqCU,EAAwB3nC,EAAS,KACtEinC,GAAqCU,EAAwB3nC,EAAS,UACtEinC,GAAqCU,EAAwB3nC,EAAS,aACtEinC,GAAqCU,EAAwB3nC,EAAS,QACtE2mC,GAA4BgB,EAAwB3nC,EAAS,QACtD2nC,GCTEE,GAAkC,CAAC3L,EAAel8B,KAC3D,MAAM8nC,EAA4B5L,EAAc6L,sBAAsB/nC,EAAQyiC,iBAO9E,OAHAoE,GAA6BiB,EAA2B9nC,GCNrB,CAACgoC,IACpC,MAAMvM,EAAeuM,EAAoBvF,gBAEzCr/C,OAAOC,eAAe2kD,EAAqB,eAAgB,CACvDnhC,IAAK,IAAM40B,EACXllB,IAAMjyB,IACF,GAAIA,IAAUm3C,EACV,MAAMgK,QAKlBriD,OAAOC,eAAe2kD,EAAqB,mBAAoB,CAC3DnhC,IAAK,IAAM,WACX0P,IAAMjyB,IACF,GAAc,aAAVA,EACA,MAAMmhD,QAKlBriD,OAAOC,eAAe2kD,EAAqB,wBAAyB,CAChEnhC,IAAK,IAAM,WACX0P,IAAMjyB,IACF,GAAc,aAAVA,EACA,MAAMmhD,SDjBlBwC,CAAwBH,GACjBA,GEVEI,GAAuB,CAACC,EAAUC,KAC3CD,EAAS/pC,QAAUgqC,EAAYhqC,QAAQ1K,KAAK00C,GAC5CD,EAASrI,WAAasI,EAAYtI,WAAWpsC,KAAK00C,GAC3CD,GCDEE,GAAwB,CAACnM,EAAel8B,KACjD,MAAMsoC,EAAkBpM,EAAcqM,YAAYvoC,EAAQglC,cAG1D,OAFA6B,GAA6ByB,EAAiBtoC,GAC9CinC,GAAqCqB,EAAiBtoC,EAAS,aACxDsoC,GCJEE,GAAuB,CAACtM,EAAel8B,KAChD,MAAMyoC,EAAiBvM,EAAcsE,aAGrC,OAFAqG,GAA6B4B,EAAgBzoC,GAC7CinC,GAAqCwB,EAAgBzoC,EAAS,QACvDyoC,GCHX,SAASC,GAAOvtB,EAAGC,GACf,MAAMutB,EAAcvtB,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC3C,MAAO,EAAED,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAAMutB,GAAcxtB,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAAMutB,GAKrF,SAASC,GAAmBC,EAAaC,GACrC,IAAI5pC,EAAS,CAAC,EAAG,GACjB,IAAK,IAAI5c,EAAIumD,EAAYxmD,OAAS,EAAGC,GAAK,EAAGA,GAAK,EALjC84B,EAMa0tB,EAA1B5pC,EALG,EADOic,EAMQjc,GALZ,GAAKkc,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAMtDlc,EAAO,IAAM2pC,EAAYvmD,GAPjC,IAAkB64B,EAAGC,EASjB,OAAOlc,EAEJ,MClBM6pC,GAAkC,CAAC7M,EAAetsC,EAAY+zC,EAAuBC,IACvF1H,EAAcoE,sBAAsB1wC,EAAY+zC,EAAuBC,GCDrEoF,GAA0B,IAAM,IAAIzM,aAAa,GAAI,qBCE5D,GAAkB,CACpBI,iBAAkB,GCAhB,GAAkB,CACpBlB,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBmC,OAAQ,EACRzG,UAAW,IACX4R,kBAAcxhD,EACdxB,KAAM,QCTJ,GAAkB,CACpBw1C,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvBuN,eAAgB,IAChBC,eAAgB,IAChBC,cAAe,EACfC,cAAe,UACfC,YAAa,IACbC,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,aAAc,aACdC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,YAAa,EACbC,cAAe,GClBb,GAAkB,CACpBhF,sBAAsB,GCDpB,GAAkB,CACpBtJ,aAAc,EAKdC,iBAAkB,WAClBC,sBAAuB,WACvB0C,IAAK,GCRI2L,GAAqB,IAAM,IAAIzN,aAAa,GAAI,gBCAvD,GAAkB,CACpBd,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBsO,MAAO,KACPC,WAAY,QCLHC,GAAaF,IACtB,GAAc,OAAVA,EACA,OAAO,EAEX,MAAM5nD,EAAS4nD,EAAM5nD,OACrB,OAAIA,EAAS,GAAM,EAC0B,IAAlC4nD,EAAMpjD,KAAK0B,MAAMlG,EAAS,IAE9B4nD,EAAM5nD,EAAS,EAAI,GAAK4nD,EAAM5nD,EAAS,KAAO,GCR5C+nD,GAAqB,CAACC,EAAQC,EAAUC,EAAcC,KAC/D,IAAI/mD,EAAYL,OAAOqnD,eAAeJ,GACtC,MAAQ5mD,EAAUkjB,eAAe2jC,IAC7B7mD,EAAYL,OAAOqnD,eAAehnD,GAEtC,MAAM,IAAEojB,EAAG,IAAE0P,GAAQnzB,OAAOsnD,yBAAyBjnD,EAAW6mD,GAChElnD,OAAOC,eAAegnD,EAAQC,EAAU,CAAEzjC,IAAK0jC,EAAa1jC,GAAM0P,IAAKi0B,EAAaj0B,MCN3Eo0B,GAA8B,CAACtN,EAAY/4C,EAAO8B,KAC3D,IACIi3C,EAAWuN,eAAetmD,EAAO8B,GAErC,MAAO7B,GACH,GAAiB,IAAbA,EAAImmB,KACJ,MAAMnmB,EAEVomD,GAA4BtN,EAAY/4C,EAAO8B,EAAY,QCRtDykD,GAAoE3O,IAC7E,MAAM4O,EAA8B5O,EAAc6O,mBAClD,IACID,EAA4B9mC,OAAO,GAEvC,MAAOzf,GACH,OAAOA,aAAe8iD,WAE1B,OAAO,GCRE2D,GAAiE9O,IAC1E,MAAME,EAAoBF,EAAcwE,aAAa,EAAG,EAAG,OACrDoK,EAA8B5O,EAAc0E,qBAClDkK,EAA4Bn0C,OAASylC,EACrC0O,EAA4B9mC,QAC5B8mC,EAA4B7J,OAC5B,IAEI,OADA6J,EAA4B7J,QACrB,EAEX,MACI,OAAO,ICXFgK,GAAmE/O,IAC5E,MAAM4O,EAA8B5O,EAAc6O,mBAClD,IACID,EAA4B7J,MAAM,GAEtC,MAAO18C,GACH,OAAOA,aAAe8iD,WAE1B,OAAO,GCPE6D,GAAyD,CAAC/D,EAAgCjL,KACnG,MAAMuM,EAAiBvM,EAAcsE,aACrC2G,EAA+B/oC,QAAQqqC,GACvC,MAAM0C,GAAuBrL,EAM1BqH,EAA+BrH,WALvB,KAEHA,EAAW57C,KAAKijD,EAAgCsB,GAChDtB,EAA+B7mC,oBAAoB,QAAS6qC,KAJzC,IAAErL,EAO7BqH,EAA+B9mC,iBAAiB,QAAS8qC,GACzDjD,GAAqBf,EAAgCsB,GACrDtB,EAA+BlG,KAAO,CAAEA,IACpC,IAAIzwC,GAAY,EAChB,MAAO,CAAC42C,EAAO,KACX,GAAI52C,EACA,IACIywC,EAAK/8C,KAAKijD,EAAgCC,GAE9C,MACIqB,EAAe1K,KAAK6M,eAAe,EAAGxD,QAI1CnG,EAAK/8C,KAAKijD,EAAgCC,GAC1C52C,GAAY,IAbc,CAgBnC22C,EAA+BlG,OC7BzBmK,GAAoB,CAACtoD,EAAQo4C,IAC9BxQ,IACJ,MAAM1nC,EAAa,CAAEsB,MAAOxB,GAK5B,OAJAM,OAAOioD,iBAAiB3gB,EAAO,CAC3B4gB,cAAetoD,EACfF,OAAQE,IAEiB,mBAAlBk4C,EACAA,EAAch3C,KAAKpB,EAAQ4nC,GAE/BwQ,EAAcqQ,YAAYrnD,KAAKpB,EAAQ4nC,ICkMhD8gB,GC5MmD,CAAC5M,GAC/C,CAACtD,EAActtC,GAAS2sC,EAAQlO,EAAOyO,GAAgB2D,KAC1DD,EAAmBtD,EAAa7O,GAAQ,CAACz+B,EAAQ2sC,EAAQO,IAAiB8D,GAA0BA,EAAsB,KAAOhxC,GAAUgxC,EAAsB,KAAOrE,GAAQkE,ID0M5I4M,CAA0C7M,GAChF8M,GE7MoD,CAAC9M,GAChD,CAAClE,EAAejO,GAAQz+B,EAAQ2sC,EAAQO,GAAgB2D,KAC3D,MAAMjE,EAA0BF,EAAc7zB,IAAI7Y,QAClBvG,IAA5BmzC,EACAF,EAAcnkB,IAAIvoB,EAAQ,IAAIylB,IAAI,CAAC,CAACknB,EAAQlO,EAAOyO,MAGnD0D,EAAmBhE,EAAyB,CAACD,EAAQlO,EAAOyO,IAAiBJ,GAA2BA,EAAuB,KAAOH,GAAUG,EAAuB,KAAOrO,GAAOoS,IFsMpJ8M,CAA2C/M,GAClFgN,GG9MsD,CAACvR,GAClD,CAACiB,EAActtC,EAAQ2sC,EAAQlO,IAC3B4N,EAAmBiB,EAAa7O,IAASuS,GAA0BA,EAAsB,KAAOhxC,GAAUgxC,EAAsB,KAAOrE,IH4MvGkR,CAA6CxR,GACtFyR,GAAyB,IAAInT,QAC7BoT,GIhNoC,CAACD,GAC/B9Q,IAAgB,IAAIngB,EAAI,OAAwD,QAAhDA,EAAKixB,EAAuBjlC,IAAIm0B,UAA+B,IAAPngB,EAAgBA,EAAK,GJ+M5FmxB,CAA2BF,IAClDG,IKjNgCC,GLiNQ,IAAI91B,IKjNE+1B,GLiNK,IAAIxT,QKhNlD,CAACyT,EAAQ/mD,KACZ,MAAMgnD,EAAmBF,GAAYtlC,IAAIulC,GACzC,QAAyB3kD,IAArB4kD,EACA,OAAOA,EAEX,MAAMC,EAAcJ,GAAarlC,IAAIulC,GACrC,QAAoB3kD,IAAhB6kD,EACA,OAAOA,EAEX,IACI,MAAMC,EAAwBlnD,IAC9B,OAAIknD,aAAiCz9C,SACjCo9C,GAAa31B,IAAI61B,EAAQG,GAClBA,EACF7F,OAAM,KAAM,IACZ5iC,MAAM0oC,IACPN,GAAa1R,OAAO4R,GACpBD,GAAY51B,IAAI61B,EAAQI,GACjBA,OAGfL,GAAY51B,IAAI61B,EAAQG,GACjBA,GAEX,MAEI,OADAJ,GAAY51B,IAAI61B,GAAQ,IACjB,KA3BkB,IAACF,GAAcC,GLkNpD,MAAM,GMlN+C,oBAAXnwC,OAAyB,KAAOA,ONmNpEywC,GO/MyC,EAACR,EAAiB3P,IACtD,CAACJ,EAAel8B,KACnB,MAAM+mC,EAAqB7K,EAAcwQ,iBAIzC,GAFA7F,GAA6BE,EAAoB/mC,KAE3CA,EAAQ67B,YAAc77B,EAAQ87B,aAChC,MAAMQ,IAUV,OARAqK,GAA4BI,EAAoB/mC,EAAS,WACzD2mC,GAA4BI,EAAoB/mC,EAAS,eACzD2mC,GAA4BI,EAAoB/mC,EAAS,eACzD2mC,GAA4BI,EAAoB/mC,EAAS,yBAEpDisC,EAAgBnF,IAAqD,IAAMA,GAAoDC,MClBhF,CAACA,IACzDA,EAAmBC,uBAA0BpqC,IACzC,MAAM+vC,EAAqB,IAAIC,WAAWhwC,EAAMva,QAChD0kD,EAAmB8F,sBAAsBF,GACzC,MAAMtqD,EAASwE,KAAKkK,IAAI47C,EAAmBtqD,OAAQ0kD,EAAmBnL,SACtE,IAAK,IAAIt5C,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC7Bsa,EAAMta,GAAqC,UAA/BqqD,EAAmBrqD,GAAK,KAExC,OAAOsa,IDWHkwC,CAA6C/F,GAE1CA,GP8LkBgG,CAAgCd,GAAiB3P,GAC5E0Q,GSpNoC,CAAC7P,GAC/BnC,IACJ,MAAMgJ,EAAuB7G,EAAwBnC,GACrD,GAAsC,OAAlCgJ,EAAqBiJ,SACrB,MAAM,IAAI5jD,MAAM,mEAEpB,OAAO26C,EAAqBiJ,UT8MPC,CAA2B/P,GAClDgQ,GUrNuC,EAAChQ,EAAyB6P,EAAsB/M,IAClFhuC,MAAO+oC,EAAWuI,EAA2BtH,EAAiBsB,KACjE,MAAMyG,EAAuB7G,EAAwBnC,GAC/CoS,EAAY,IAAI7P,EAAOvC,SACvBlsC,QAAQu+C,IAAIrJ,EAAqB1I,aAClCxiC,KAAI,CAACyiC,EAAa9O,IAAUjqC,MAAM4C,KAAKm2C,GACvCnjC,QAAO,EAAEpK,MAAao/C,EAAU5P,SAASxvC,KACzC8K,KAAI7G,OAAQjE,EAAQ2sC,MACrB,MAAM2S,EAAoBN,EAAqBh/C,GACzCu/C,QAAgCD,EAAkBE,OAAOx/C,EAAQu1C,EAA2B6J,GAC5F19C,EAAcsrC,EAAUxnC,QAAQ9D,YACjCuwC,EAAejyC,IAAYgtC,IAActrC,GAAgBuwC,EAAejF,IACzEuS,EAAwBnvC,QAAQ69B,EAAiBtB,EAAQlO,QAG5Dz3B,QAAO,CAACy4C,EAAsBC,IAAsB,IAAID,KAAyBC,IAAoB,MVsMlFC,CAA8BxQ,EAAyB6P,GAAsB/M,IACvG2N,GWrN2C,EAACnB,EAA0B1M,EAAoBoN,IACrF,KACH,MAAMU,EAA8B,IAAIlV,QAqBxC,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAMuQ,EAA6BD,EAA4BhnC,IAAI08B,GACnE,YAAmC97C,IAA/BqmD,EACOh/C,QAAQC,QAAQ++C,GAxBR77C,OAAOoxC,EAAOE,EAA2BhG,KAChE,IAAIwJ,EAAqBhH,EAAmBsD,GAG5C,IAD2CrH,EAAiB+K,EAAoBxD,GACvC,CACrC,MAAMvjC,EAAU,CACZy7B,aAAcsL,EAAmBtL,aACjCC,iBAAkBqL,EAAmBrL,iBACrCC,sBAAuBoL,EAAmBpL,sBAC1CC,QAASmL,EAAmBnL,QAC5BC,YAAakL,EAAmBlL,YAChCC,YAAaiL,EAAmBjL,YAChCC,sBAAuBgL,EAAmBhL,uBAE9CgL,EAAqB0F,EAAyBlJ,EAA2BvjC,GAI7E,OAFA6tC,EAA4Bt3B,IAAIgtB,EAA2BwD,SACrDoG,EAAwB9J,EAAOE,EAA2BwD,EAAoBxJ,GAC7EwJ,GAQIgH,CAAmB1K,EAAOE,EAA2BhG,MXwLzCyQ,CAAkCvB,GAA0B1M,GAAoBoN,IAC7Gc,IYtNiCC,GZsNSnV,EYrNpCvlC,IACJ,MAAM0oC,EAAgBgS,GAAarnC,IAAIrT,GACvC,QAAsB/L,IAAlBy0C,EACA,MAAMuJ,KAEV,OAAO,IANuB,IAACyI,GZuNvC,MAAMC,GaxNoD,CAACnyC,GACxC,OAAXA,EACO,KAEPA,EAAO2K,eAAe,uBACf3K,EAAOoyC,oBAEXpyC,EAAO2K,eAAe,6BAA+B3K,EAAOqyC,0BAA4B,KbiNtDC,CAA2C,IAClFC,GczN2C,CAACJ,GACtCK,GAC4C,OAAzCL,GAAiDK,aAAoBL,EduNhDM,CAAkCN,IAChEO,GAA2B,IAAI/V,QAC/BgW,Ge3NsC,CAACvD,GAClC,MACH,YAAYwD,GACR/lD,KAAK+lD,mBAAqBA,EAC1B/lD,KAAKgmD,WAAa,IAAIlW,QAE1B,iBAAiB1yC,EAAM+7C,EAAUhiC,GAC7B,GAAiB,OAAbgiC,EAAmB,CACnB,IAAI8M,EAAuBjmD,KAAKgmD,WAAWhoC,IAAIm7B,QAClBv6C,IAAzBqnD,IACAA,EAAuB1D,EAAkBviD,KAAMm5C,GACvB,mBAAbA,GACPn5C,KAAKgmD,WAAWt4B,IAAIyrB,EAAU8M,IAGtCjmD,KAAK+lD,mBAAmBvuC,iBAAiBpa,EAAM6oD,EAAsB9uC,IAG7E,cAAc0qB,GACV,OAAO7hC,KAAK+lD,mBAAmBlK,cAAcha,GAEjD,oBAAoBzkC,EAAM+7C,EAAUhiC,GAChC,MAAM8uC,EAAoC,OAAb9M,OAAoBv6C,EAAYoB,KAAKgmD,WAAWhoC,IAAIm7B,GACjFn5C,KAAK+lD,mBAAmBtuC,oBAAoBra,OAA+BwB,IAAzBqnD,EAAqC,KAAOA,EAAsB9uC,KfoMjG+uC,CAA6B3D,IACtD4D,GgB5N6C,CAAChzC,GACjC,OAAXA,EACO,KAEPA,EAAO2K,eAAe,gBACf3K,EAAOizC,aAEXjzC,EAAO2K,eAAe,sBAAwB3K,EAAOkzC,mBAAqB,KhBqN/CC,CAAoC,IACpEC,GiB7NoC,CAACJ,GAC/BR,GACqC,OAAlCQ,GAA0CR,aAAoBQ,EjB2NhDK,CAA2BL,IAClD,GkB9NiC,CAAChzC,GAC5BwyC,GACc,OAAXxyC,GAA+C,mBAArBA,EAAOszC,WAA4Bd,aAAoBxyC,EAAOszC,UlB4N7EC,CAAwB,IAC5CC,GmB/NkC,CAACxzC,GAC7BwyC,GACc,OAAXxyC,GAAgD,mBAAtBA,EAAOyzC,YAA6BjB,aAAoBxyC,EAAOyzC,WnB6N7EC,CAAyB,IAC9CC,GtD3EoC,EAACC,EAAyBC,EAA0B5D,EAAiB6D,EAA6BxT,EAAsBoJ,EAA0BsD,EAAyB+G,EAAuBC,EAAcrB,EAAwBV,EAAkBmB,EAAsB7N,EAAmBiO,EAAoBjB,IACtV,cAAwBI,EAC3B,YAAYn7C,EAASyuC,EAAUhG,EAAiBqR,GAC5C2C,MAAMhU,GACNpzC,KAAK8K,SAAWH,EAChB3K,KAAKqnD,iBAAmBjU,EACxB,MAAMC,EAAgB+R,EAAiBz6C,GAEnC47C,EAAqBlT,KACrB,IACI+P,EAAgB9L,IAAsC,IAC3CA,GAAqCjE,MAEpDuF,GAA8BxF,GAElCrD,EAAiBriB,IAAI1tB,KAAMozC,GAC3BjD,EAAgBziB,IAAI1tB,KAAM,IAAI4qB,KACR,WAAlBjgB,EAAQjB,OAAsB0vC,GAC9BhH,EAAyBpyC,MAE7B+mD,EAAwB/mD,KAAMykD,EAAmBrR,GAErD,mBACI,OAAOpzC,KAAKqnD,iBAAiBzU,aAEjC,iBAAiBn3C,GACbuE,KAAKqnD,iBAAiBzU,aAAen3C,EAEzC,uBACI,OAAOuE,KAAKqnD,iBAAiBxU,iBAEjC,qBAAqBp3C,GACjBuE,KAAKqnD,iBAAiBxU,iBAAmBp3C,EAE7C,4BACI,OAAOuE,KAAKqnD,iBAAiBvU,sBAEjC,0BAA0Br3C,GACtBuE,KAAKqnD,iBAAiBvU,sBAAwBr3C,EAElD,cACI,OAAOuE,KAAK8K,SAEhB,qBACI,OAAO9K,KAAKqnD,iBAAiB1N,eAEjC,sBACI,OAAO35C,KAAKqnD,iBAAiBzN,gBAGjC,QAAQ/yC,EAAairC,EAAS,EAAGlO,EAAQ,GAErC,GAAIkO,EAAS,GAAKA,GAAU9xC,KAAKqnD,iBAAiBzN,gBAC9C,MAAMnG,IAEV,MAAMJ,EAAgB+R,EAAiBplD,KAAK8K,UACtCouC,EAAYwM,EAA4BrS,GAC9C,GAAIqF,EAAkB7xC,IAAgB8/C,EAAmB9/C,GACrD,MAAMg2C,IAEV,GAAIlH,EAAY9uC,GAAc,CAC1B,MAAM4vC,EAA6BS,GAAmBrwC,GACtD,IACI,MAAM2O,EAAa+gC,EAAwCv2C,KAAKqnD,iBAAkB5Q,EAA4B3E,EAAQlO,GAChH0jB,EAAYjQ,GAAmBr3C,OACjCk5C,GAAaoO,IACbtnD,KAAKqnD,iBAAiBpQ,cAAczhC,GAEb,WAAvBxV,KAAK2K,QAAQjB,QAAuB49C,GAAajQ,GAAmBxwC,IACpEurC,EAAyBvrC,GAGjC,MAAOnL,GAEH,GAAiB,KAAbA,EAAImmB,KACJ,MAAMg7B,IAEV,MAAMnhD,EAIV,GAFmCsrD,EAAyBhnD,KAAM6G,EAAairC,EAAQlO,EAAOsV,GAE9D,CAC5B,MAAMZ,EAAS6O,EAAa,CAACnnD,MAAO6G,GACpCwxC,GAAuBC,EAAQ2O,EAA4B/N,IAE/D,OAAOryC,EAEX,MAAM0gD,EAAmBpQ,GAAoBtwC,GAM7C,GAA8B,iBAA1B0gD,EAAiBjrD,MAAyD,OAA9BirD,EAAiBC,SAC7D,MAAMrH,IAEV,IACIngD,KAAKqnD,iBAAiB9xC,QAAQgyC,EAAkBzV,IAC5CoH,GAAa7B,GAAmBr3C,QAChCA,KAAKqnD,iBAAiBpQ,WAAWsQ,EAAkBzV,GAG3D,MAAOp2C,GAEH,GAAiB,KAAbA,EAAImmB,KACJ,MAAMg7B,IAEV,MAAMnhD,EAIV,GA1OoC,EAACyJ,EAAQ0B,EAAairC,EAAQoH,KAC1E,MAAM,aAAEzG,EAAY,cAAEZ,GAAkB0C,EAAyB1tC,IAC3D,QAAE20C,GAAYlH,EAAwBnvC,GACtCsiD,EAAiBvV,EAA6B/sC,GAC9CktC,EAAiB+G,IACnB,MAAMhG,EAAkB8D,GAAmB/xC,GACrCoiD,EAAmBpQ,GAAoBtwC,GAC7C,GAAIuyC,EAAU,CACV,MAAMsO,EAAoB3Q,EAAyClF,EAAe1sC,EAAQ2sC,GAC1FoE,EAAqCzD,EAActtC,EAAQuiD,GAAmB,GACzExO,GAAc9B,GAAejyC,IAC9BiuC,EAAgB79B,QAAQgyC,EAAkBzV,OAG7C,CACD,MAAM4V,E0ExCqC,EAACjV,EAActtC,EAAQ2sC,IACnEN,EAAmBiB,GAAe0D,GAA0BA,EAAsB,KAAOhxC,GAAUgxC,EAAsB,KAAOrE,I1EuCrG6V,CAAwClV,EAActtC,EAAQ2sC,GACxFsE,EAAsCvE,EAAe6V,GAAmB,GACnExO,GAAc9B,GAAejyC,IAC9BiuC,EAAgB6D,WAAWsQ,EAAkBzV,KAIzD,QAAIiE,EAAmByF,EAAS,CAAC30C,EAAairC,IAAUgE,GAAqBA,EAAiB,KAAOjvC,GAAeivC,EAAiB,KAAOhE,IAAQ,KAChJ2V,EAAeliD,IAAI8sC,GACf4B,EAAkB9uC,GAClB+wC,EAAqCzD,EAActtC,EAAQ,CAAC2sC,EAAQO,IAAgB,GAGpF+D,EAAsCvE,EAAe,CAAC1sC,EAAQ2sC,EAAQO,IAAgB,IAEnF,IA0MiCuV,CAAwC5nD,KAAM6G,EAAairC,EAAQoH,GAEtE,CAC7B,MAAMZ,EAAS6O,EAAa,CAACnnD,MAAO6G,GACpCwxC,GAAuBC,EAAQ2O,EAA4B/N,KAGnE,WAAWH,EAAqBjH,EAAQlO,GACpC,IAAIikB,EACJ,MAAMxU,EAAgB+R,EAAiBplD,KAAK8K,UACtCouC,EAAYwM,EAA4BrS,GAC9C,QAA4Bz0C,IAAxBm6C,EACA8O,EA1KY,EAAC1iD,EAAQ+zC,KACjC,MAAM4O,EAA+BxT,EAAwBnvC,GACvD0iD,EAAe,GACrB,IAAK,MAAM/R,KAAoBgS,EAA6BtM,QACpD3F,EAA4BC,GAC5BmD,GAAwB9zC,EAAQ+zC,KAAcpD,GAG9CwD,GAAyBn0C,EAAQ+zC,KAAcpD,GAEnD+R,EAAarsD,KAAKs6C,EAAiB,IAGvC,OADAgS,EAA6BtM,QAAQ3wB,QAC9Bg9B,GA6JoBE,CAAoB/nD,KAAMk5C,QAExC,GAAmC,iBAAxBH,EAAkC,CAC9C,GAAIA,EAAsB,GAAKA,GAAuB/4C,KAAK45C,gBACvD,MAAMnG,IAEVoU,EAjKiB,EAAC1iD,EAAQ+zC,EAAWpH,KACjD,MAAMgW,EAA+BxT,EAAwBnvC,GACvD0iD,EAAe,GACrB,IAAK,MAAM/R,KAAoBgS,EAA6BtM,QACpD1F,EAAiB,KAAOhE,IACpB+D,EAA4BC,GAC5BmD,GAAwB9zC,EAAQ+zC,KAAcpD,GAG9CwD,GAAyBn0C,EAAQ+zC,KAAcpD,GAEnD+R,EAAarsD,KAAKs6C,EAAiB,IACnCgS,EAA6BtM,QAAQ7J,OAAOmE,IAGpD,OAAO+R,GAkJoBG,CAAyBhoD,KAAMk5C,EAAWH,OAExD,CACD,QAAen6C,IAAXkzC,IAAyBA,EAAS,GAAKA,GAAU9xC,KAAK45C,iBACtD,MAAMnG,IAEV,GAAIkC,EAAYoD,SAAkCn6C,IAAVglC,IAAwBA,EAAQ,GAAKA,GAASmV,EAAoBY,gBACtG,MAAMlG,IAGV,GADAoU,EAzJsB,EAAC1iD,EAAQ+zC,EAAWryC,EAAairC,EAAQlO,KAC3E,MAAMkkB,EAA+BxT,EAAwBnvC,GAC7D,OAAOxL,MAAM4C,KAAKurD,EAA6BtM,SAC1CjsC,QAAQumC,KAAqBA,EAAiB,KAAOjvC,QAC1CjI,IAAXkzC,GAAwBgE,EAAiB,KAAOhE,QACtClzC,IAAVglC,GAAuBkS,EAAiB,KAAOlS,KAC/C3zB,KAAK6lC,IACFD,EAA4BC,GAC5BmD,GAAwB9zC,EAAQ+zC,KAAcpD,GAG9CwD,GAAyBn0C,EAAQ+zC,KAAcpD,GAEnDgS,EAA6BtM,QAAQ7J,OAAOmE,GACrCA,EAAiB,OA2IDmS,CAA8BjoD,KAAMk5C,EAAWH,EAAqBjH,EAAQlO,GAC/D,IAAxBikB,EAAaruD,OACb,MAAMqjD,IAId,IAAK,MAAMh2C,KAAeghD,EAAc,CACpC,MAAMvP,EAAS6O,EAAa,CAACnnD,MAAO6G,GACpCwxC,GAAuBC,EAAQ4O,MsDrElBgB,EqBhOiBC,GrBgOwCtY,EqB/N3E,CAACsC,EAAWsS,EAAmBrR,KAClC,MAAMX,EAAe,GACrB,IAAK,IAAIh5C,EAAI,EAAGA,EAAI25C,EAAgBuG,eAAgBlgD,GAAK,EACrDg5C,EAAaj3C,KAAK,IAAIovB,KAE1Bu9B,GAA0Bz6B,IAAIykB,EAAW,CACrCM,eACA+I,QAAS,IAAI5wB,IACbinB,cAAe,IAAI/B,QACnBsU,SAAUK,MCPwB,EAAC9B,EAAqCE,EAAsCtM,EAAyCwM,EAAwC/L,EAA8C1C,EAAyB4O,EAAsBhR,EAA8BgF,EAAoBnB,EAAoB9B,EAAmBmD,EAAgBC,KAC7Y,MAAM+Q,EAAqB,IAAItY,QAC/B,MAAO,CAAC3qC,EAAQ0B,EAAairC,EAAQlO,EAAOsV,KACxC,MAAM,aAAEzG,EAAY,cAAEZ,GAAkByC,EAAwBztC,IAC1D,QAAE20C,GAAYlH,EAAwBnvC,GACtCsiD,EAAiBvV,EAA6B/sC,GAC9CktC,EAAiB+G,IACnB,MAAM3C,EAA6BS,EAAmBrwC,GAChD2vC,EAAwBU,EAAmB/xC,GACjD,GAAIi0C,EAAU,CACV,MAAMsO,EAAoB9V,EAAwCC,EAAe1sC,EAAQ2sC,EAAQlO,GACjG+e,EAAoClQ,EAActtC,EAAQuiD,GAAmB,GACxExO,GAAc9B,EAAejyC,IAC9BoxC,EAAwCC,EAAuBC,EAA4B3E,EAAQlO,GAEnGyT,EAAmBxwC,IACnBurC,EAAyBvrC,OAG5B,CACD,MAAM6gD,EAAoB3E,EAAuCtQ,EAActtC,EAAQ2sC,EAAQlO,GAC/Fif,EAAqChR,EAAejO,EAAO8jB,GAAmB,GACzExO,GAAc9B,EAAejyC,IAC9B6xC,EAA6CR,EAAuBC,EAA4B3E,EAAQlO,GAE5G,MAAMykB,EAAWnF,EAAqBr8C,GACtC,GAAiB,IAAbwhD,EACIpU,EAAkBptC,IAClB2rC,EAAuC3rC,EAAa4rC,OAGvD,CACD,MAAM6V,EAAoBF,EAAmBpqC,IAAInX,QACvBjI,IAAtB0pD,GACA5oB,aAAa4oB,GAEjBF,EAAmB16B,IAAI7mB,EAAaqU,YAAW,KACvC+4B,EAAkBptC,IAClB2rC,EAAuC3rC,EAAa4rC,KAE9C,IAAX4V,OAIf,QAAItS,EAAmByF,EAAS,CAAC30C,EAAairC,EAAQlO,IAASkS,GAAqBA,EAAiB,KAAOjvC,GAAeivC,EAAiB,KAAOhE,GAAUgE,EAAiB,KAAOlS,IAAO,KACxL6jB,EAAeliD,IAAI8sC,GACf4B,EAAkB9uC,GAClBw9C,EAAoClQ,EAActtC,EAAQ,CAAC2sC,EAAQlO,EAAOyO,IAAgB,GAG1FwQ,EAAqChR,EAAejO,EAAO,CAACz+B,EAAQ2sC,EAAQO,IAAgB,IAEzF,KtByKkGkW,CAA+B5F,GAAqCE,GAAsCtM,EAAyCwM,GAAwC/L,EAA8C1C,EAAyB4O,GAAsBhR,EAA8BgF,GAAoBnB,EAAoB9B,EAAmBmD,GAAgBC,IAAqB+L,GuB/Nzd,EAACoF,EAAexR,EAA8C1C,EAAyB4C,EAAoBC,EAAqBlD,IACtKiF,GACG,CAAC/G,EAAW3jC,KACf,MAAMi6C,EAAeD,EAAcxqC,IAAIm0B,GACvC,QAAqBvzC,IAAjB6pD,EAA4B,CAC5B,IAAKvP,GAAajF,EAAkB9B,GAAY,CAC5C,MAAMqE,EAAwBU,EAAmB/E,IAC3C,QAAEqJ,GAAYlH,EAAwBnC,GAC5C,IAAK,MAAML,KAAU0J,EACjB,GAAI3F,EAA4B/D,GAAS,CACrC,MAAM2E,EAA6BS,EAAmBpF,EAAO,IAC7DkF,EAA6CR,EAAuBC,EAA4B3E,EAAO,GAAIA,EAAO,QAEjH,CACD,MAAM4W,EAA8BvR,EAAoBrF,EAAO,IAC/D0E,EAAsBS,WAAWyR,EAA6B5W,EAAO,KAIjF0W,EAAc96B,IAAIykB,EAAW3jC,QAG7Bg6C,EAAc96B,IAAIykB,EAAWsW,EAAej6C,IvByMgem6C,CAAmCvY,EAAgB4G,EAA8C1C,EAAyB4C,GAAoBC,GAAqBlD,GAAoBR,EAAsBoJ,GAA0BsD,GwB/NxtB,EAAC5J,EAAyCiS,EAAelU,EAAyB4C,EAAoBC,EAAqBiO,EAAkBnR,EAAmByR,IAChM,CAACvT,EAAW3jC,KACf,MAAMi6C,EAAeD,EAAcxqC,IAAIm0B,GACvC,QAAqBvzC,IAAjB6pD,EACA,MAAM,IAAIjoD,MAAM,qCAEpB,MAAM6yC,EAAgB+R,EAAiBjT,EAAUxnC,SAC3CuuC,EAAYwM,EAA4BrS,GAC9C,GAAIoV,IAAiBj6C,GAEjB,GADAg6C,EAAc7W,OAAOQ,IAChB+G,GAAajF,EAAkB9B,GAAY,CAC5C,MAAMqE,EAAwBU,EAAmB/E,IAC3C,QAAEqJ,GAAYlH,EAAwBnC,GAC5C,IAAK,MAAML,KAAU0J,EACjB,GAAI3F,EAA4B/D,GAAS,CACrC,MAAM2E,EAA6BS,EAAmBpF,EAAO,IAC7DyE,EAAwCC,EAAuBC,EAA4B3E,EAAO,GAAIA,EAAO,QAE5G,CACD,MAAM4W,EAA8BvR,EAAoBrF,EAAO,IAC/D0E,EAAsBjhC,QAAQmzC,EAA6B5W,EAAO,WAM9E0W,EAAc96B,IAAIykB,EAAWsW,EAAej6C,IxBqMouBo6C,CAA4BrS,EAAyCnG,EAAgBkE,EAAyB4C,GAAoBC,GAAqBiO,GAAkBnR,EAAmByR,IyB9Nt7B,EAACG,EAA0BvR,EAAyB/C,IAC3E,SAAS4V,EAAa0B,EAAOC,GAChC,MAAM3W,EAAYwD,EAAYmT,GAAYA,EAAWvX,EAAesU,EAA0BiD,GAC9F,GCLmB,CAAC3W,GACjB,cAAeA,EDId4W,CAAY5W,GACZ,MAAO,GAEX,GAAI0W,EAAM,KAAO1W,EACb,MAAO,CAAC0W,GAEZ,GAAIA,EAAMlU,SAASxC,GACf,MAAO,GAEX,MAAM,QAAEqJ,GAAYlH,EAAwBnC,GAC5C,OAAOx4C,MAAM4C,KAAKi/C,GACbvrC,KAAK6lC,GAAqBqR,EAAa,IAAI0B,EAAO1W,GAAY2D,EAAiB,MAC/E3pC,QAAO,CAAC68C,EAAcC,IAAiBD,EAAan9C,OAAOo9C,IAAe,KzB+M+5BC,CAAmBrD,GAA0BvR,EAAyB/C,GAAiBuU,GAAwBV,GAAkBmB,GAAsB,GAAmBI,GAAoBjB,IqBhOvoC,IAACyC,GrBiO9C,MAAMgB,G5FxNuC,EAACC,EAAuBrE,EAA4BtR,EAAsBmQ,EAA0BwB,EAAkBM,IACxJ,cAA2B0D,EAC9B,YAAYz+C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK1W,KAAoBx7B,GACzC+mC,EAAqB0F,EAAyBvQ,EAAegW,GAEnEjC,MAAMz8C,GAAS,EAAOuzC,EADSwH,EAA4BrS,GAAiB0R,IAA+B,MAE3G/kD,KAAKspD,oBAAsBpL,EAE/B,cACI,OAAOl+C,KAAKspD,oBAAoBvW,QAEpC,YAAYt3C,GACRuE,KAAKspD,oBAAoBvW,QAAUt3C,EAEvC,wBACI,OAAOuE,KAAKspD,oBAAoBC,kBAEpC,kBACI,OAAOvpD,KAAKspD,oBAAoBtW,YAEpC,gBAAgBv3C,GAEZ,MAAMu3C,EAAchzC,KAAKspD,oBAAoBtW,YAE7C,GADAhzC,KAAKspD,oBAAoBtW,YAAcv3C,IACjCA,EAAQuE,KAAKspD,oBAAoBrW,aAEnC,MADAjzC,KAAKspD,oBAAoBtW,YAAcA,EACjCS,IAGd,kBACI,OAAOzzC,KAAKspD,oBAAoBrW,YAEpC,gBAAgBx3C,GAEZ,MAAMw3C,EAAcjzC,KAAKspD,oBAAoBrW,YAE7C,GADAjzC,KAAKspD,oBAAoBrW,YAAcx3C,IACjCuE,KAAKspD,oBAAoBtW,YAAcv3C,GAEzC,MADAuE,KAAKspD,oBAAoBrW,YAAcA,EACjCQ,IAGd,4BACI,OAAOzzC,KAAKspD,oBAAoBpW,sBAEpC,0BAA0Bz3C,GACtBuE,KAAKspD,oBAAoBpW,sBAAwBz3C,EAErD,qBAAqBsY,GACjB/T,KAAKspD,oBAAoBE,qBAAqBz1C,GAElD,sBAAsBA,GAClB/T,KAAKspD,oBAAoBtF,sBAAsBjwC,GAEnD,sBAAsBA,GAClB/T,KAAKspD,oBAAoBG,sBAAsB11C,GAEnD,uBAAuBA,GACnB/T,KAAKspD,oBAAoBnL,uBAAuBpqC,K4F6J5B21C,CAA8B5C,GAAsB/B,GAA4BtR,EAAsBmQ,GAA0BwB,GAAkBM,IAE5KiE,GAAmB,IAAI/Z,QACvBga,G2BpO4C,CAACz2C,GAChC,OAAXA,EACO,KAEPA,EAAO2K,eAAe,eACf3K,EAAO02C,YAEX,K3B6N0BC,CAAmC,IAClEC,I4BrO4CC,G5BqOoB,IAAIrM,YAAY,G4BpO1EliD,IACJuuD,GAAY,GAAKvuD,EACVuuD,GAAY,KAHsB,IAACA,G5BsOlD,MAAMC,G6BtOiD,EAACF,EAA6BtW,IACzEG,IACJA,EAAYmG,gBAAkB,CAAClzC,EAAaqjD,EAAuBC,EAAuB,KACtF,MAAMlQ,EAAe8P,EAA4BI,GAC3CnQ,EAAgB+P,EAA4BG,GAClD,GAAIlQ,GAAiBpG,EAAYE,iBAC7B,MAAML,IAEV,MAAM2W,EAAoBxW,EAAYp6C,OAChCs+C,EAAclE,EAAYC,eAAemG,GACzCqQ,EAAoBxjD,EAAYrN,OACtC,IAAK,IAAIC,EAAIwgD,EAAe,GAAKA,EAAe,EAAGxgD,EAAIwgD,EAAemQ,GAAqB3wD,EAAI4wD,EAAmB5wD,GAAK,EACnHoN,EAAYpN,GAAKq+C,EAAYr+C,EAAIwgD,IAGzCrG,EAAYJ,cAAgB,CAACruC,EAAQ+kD,EAAuBC,EAAuB,KAC/E,MAAMlQ,EAAe8P,EAA4BI,GAC3CnQ,EAAgB+P,EAA4BG,GAClD,GAAIlQ,GAAiBpG,EAAYE,iBAC7B,MAAML,IAEV,MAAM2W,EAAoBxW,EAAYp6C,OAChCs+C,EAAclE,EAAYC,eAAemG,GACzCsQ,EAAenlD,EAAO3L,OAC5B,IAAK,IAAIC,EAAIwgD,EAAe,GAAKA,EAAe,EAAGxgD,EAAIwgD,EAAemQ,GAAqB3wD,EAAI6wD,EAAc7wD,GAAK,EAC9Gq+C,EAAYr+C,EAAIwgD,GAAgB90C,EAAO1L,K7B6Mb8wD,CAAwCR,GAA6BtW,GACzG+W,G8BvO4D,CAACT,GACvDnW,IACJA,EAAYmG,gBAAkB,CAAEA,GACrB,CAAClzC,EAAaqjD,EAAuBC,EAAuB,KAC/D,MAAMlQ,EAAe8P,EAA4BI,GAC3CnQ,EAAgB+P,EAA4BG,GAClD,GAAIjQ,EAAerG,EAAYp6C,OAC3B,OAAOugD,EAAgB1+C,KAAKu4C,EAAa/sC,EAAamzC,EAAeC,IALnD,CAQ3BrG,EAAYmG,iBACfnG,EAAYJ,cAAgB,CAAEA,GACnB,CAACruC,EAAQ+kD,EAAuBC,EAAuB,KAC1D,MAAMlQ,EAAe8P,EAA4BI,GAC3CnQ,EAAgB+P,EAA4BG,GAClD,GAAIjQ,EAAerG,EAAYp6C,OAC3B,OAAOg6C,EAAcn4C,KAAKu4C,EAAazuC,EAAQ60C,EAAeC,IAL9C,CAQzBrG,EAAYJ,gB9BoN8BiX,CAAmDV,IAClGW,GvFnOsC,EAACf,EAAkBvG,EAAiBjD,EAAyByJ,EAA8BtE,EAAsCqF,EAAyCV,EAAmCO,KACrP,IAAI9P,EAA4B,KAChC,OAAO,MAAMmP,EACT,YAAY1yC,GACR,GAA6C,OAAzCmuC,EACA,MAAM,IAAI9kD,MAAM,uDAEpB,MAAM,OAAEhH,EAAM,iBAAEs6C,EAAgB,WAAEoH,GAAe,IAAK,KAAoB/jC,GACxC,OAA9BujC,IACAA,EAA4B,IAAI4K,EAAqC,EAAG,EAAG,QAM/E,MAAM1R,EAA+C,OAAjCgW,GAChBxG,EAAgBuH,EAAyCA,GACvD,IAAIf,EAA6B,CAAEpwD,SAAQs6C,mBAAkBoH,eAC7DR,EAA0B7C,aAAa/D,EAAkBt6C,EAAQ0hD,GAEvE,GAAqC,IAAjCtH,EAAYE,iBACZ,MAAMqM,IAiBV,MAb2C,mBAAhCvM,EAAYmG,iBACnBkQ,EAAkCrW,GAClCD,EAAoCC,IAG9BwP,EAAgB9P,GAAqD,IAAMA,EAAoDM,MACrI4W,EAA6C5W,GAEjD+V,EAAiBpkD,IAAIquC,GAKdA,EAEX,OAAQ94C,OAAO8vD,aAAa/wD,GACxB,OAAsB,OAAbA,GAAyC,iBAAbA,GAAyBU,OAAOqnD,eAAe/nD,KAAcgwD,EAAYjvD,WAC1G+uD,EAAiB3+B,IAAInxB,MuFyLNgxD,CAA6BlB,GAAkBvG,GAAiBjD,GAAyByJ,GAA8BtE,G+BvO/F,CAACsE,GAC7C,KACH,GAAqC,OAAjCA,EACA,OAAO,EAEX,IACI,IAAIA,EAA6B,CAAEpwD,OAAQ,EAAG0hD,WAAY,QAE9D,MACI,OAAO,EAEX,OAAO,G/B4N6K4P,CAAwClB,IAA+BK,GAAmCO,IAEhSO,GgC1OmC,CAACpL,GAC/B,CAACtM,EAAeiL,KACnB,MAAMsB,EAAiBD,EAAqBtM,EAAe,CACvDT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBoC,KAAM,IAEVoJ,EAA+B/oC,QAAQqqC,GAAgBrqC,QAAQ89B,EAAcxsC,aAC7E,MAAMowC,EAAa,KACfqH,EAA+B7mC,oBAAoB,QAASw/B,GAC5DqH,EAA+BrH,WAAW2I,GAC1CA,EAAe3I,cAEnBqH,EAA+B9mC,iBAAiB,QAASy/B,IhC4NrC+T,CAA0BrL,IAChDsL,GiC3OwC,EAAC9G,EAAsB5P,EAA0B6C,IACpFhuC,MAAOorC,EAAYkG,EAA2B6M,EAAkB7S,KACnE,MAAMe,EAAwBlB,EAAyBC,SACjDvuC,QAAQu+C,IAAI7qD,MAAM4C,KAAKk5C,EAAsBhD,cAAcxiC,KAAI7G,OAAQjE,EAAQ2sC,MACjF,MAAM2S,EAAoBN,EAAqBh/C,GACzCu/C,QAAgCD,EAAkBE,OAAOx/C,EAAQu1C,EAA2BhG,GAC7F0C,EAAejyC,IAChBu/C,EAAwBnvC,QAAQgyC,EAAkBzV,QjCoOjCoZ,CAA+B/G,GAAsB5P,EAA0B6C,IAC1G+T,GkC5OiC,CAACF,GAC7B,CAACvQ,EAA2BlG,EAAY+S,EAAkB7S,IACtDuW,EAAyBzW,EAAYkG,EAA2B6M,EAAkB7S,GlC0OvE0W,CAAwBH,IAC5CI,GmCvOkD,EAACN,EAAqB3H,EAAiBkI,EAA6DC,EAA2DC,EAA2DxJ,EAAkEG,EAA+DC,EAAiEqJ,EAAqDC,EAAoDrJ,IACljB,CAAChP,EAAel8B,KACnB,MAAM8qC,EAA8B5O,EAAc0E,qBAkClD,OAjCAiG,GAA6BiE,EAA6B9qC,GAC1DinC,GAAqC6D,EAA6B9qC,EAAS,gBAC3E2mC,GAA4BmE,EAA6B9qC,EAAS,UAElE2mC,GAA4BmE,EAA6B9qC,EAAS,QAClE2mC,GAA4BmE,EAA6B9qC,EAAS,WAClE2mC,GAA4BmE,EAA6B9qC,EAAS,aAE7DisC,EAAgBkI,GAA6D,IAAMA,EAA4DjY,MChBxF,CAAC4O,IACjEA,EAA4B9mC,MAAQ,CAAEA,IAClC,IAAIwwC,GAAc,EAClB,MAAO,CAACpN,EAAO,EAAGnJ,EAAS,EAAG13C,KAC1B,GAAIiuD,EACA,MAAM/O,KAEVzhC,EAAM9f,KAAK4mD,EAA6B1D,EAAMnJ,EAAQ13C,GACtDiuD,GAAc,IAPc,CASjC1J,EAA4B9mC,QDOvBywC,CAAqD3J,GAGpDmB,EAAgBmI,GAA2D,IAAMA,EAA0DlY,MErBtF,CAAC4O,IAC/DA,EAA4B9mC,OAAUA,EAanC8mC,EAA4B9mC,MAZpB,CAACojC,EAAO,EAAGnJ,EAAS,EAAG13C,KAC1B,MAAMoQ,EAASm0C,EAA4Bn0C,OAErC+9C,EAA2B,OAAX/9C,EAAkBsnC,EAASp3C,KAAK0S,IAAI5C,EAAOpQ,SAAU03C,GAE5D,OAAXtnC,GAAmB+9C,EAAgB/9C,EAAOpQ,SAAW,GAAMukD,EAA4Bt3C,QAAQuwC,WAC/F//B,EAAM9f,KAAK4mD,EAA6B1D,EAAM,EAAG,GAGjDpjC,EAAM9f,KAAK4mD,EAA6B1D,EAAMsN,EAAenuD,KAVrC,IAAEyd,GFqB9BswC,CAAoDxJ,GAGnDmB,EAAgBoI,GAA2D,IAAMA,EAA0DnY,MAC5IqY,EAAmDzJ,EAA6B5O,GAG/E+P,EAAgBpB,GAAkE,IAAMA,EAAiE3O,MAC1JgL,GAA0D4D,GAGzDmB,EAAgBjB,GAA+D,IAAMA,EAA8D9O,MACpJgP,EAAuDJ,EAA6B5O,GAGnF+P,EAAgBhB,GAAiE,IAAMA,EAAgE/O,MACxJoL,GAAyDwD,GAG7D8I,EAAoB1X,EAAe4O,GAC5BA,GnCmM2B6J,CAAyCf,GAAqB3H,IsC7O5B/P,IACxE,MAAM4O,EAA8B5O,EAAc0E,qBAClDkK,EAA4B9mC,QAC5B,IACI8mC,EAA4B9mC,QAEhC,MACI,OAAO,EAEX,OAAO,KCT+Dk4B,IACtE,MAAM4O,EAA8B5O,EAAc0E,qBAC5CxE,EAAoBF,EAAcwE,aAAa,EAAG,EAAG,OAC3DoK,EAA4Bn0C,OAASylC,EACrC,IACI0O,EAA4B9mC,MAAM,EAAG,GAEzC,MACI,OAAO,EAEX,OAAO,KCV+Dk4B,IACtE,MAAM4O,EAA8B5O,EAAc0E,qBAClDkK,EAA4B9mC,QAC5B,IACI8mC,EAA4B7J,OAEhC,MACI,OAAO,EAEX,OAAO,IxCoOiS4J,GAAkEG,GAA+DC,GqC7O3W,EIAM,CAACb,GAC9D,CAACU,EAA6B5O,KACjC,MAAM0Y,EAAkB1Y,EAAcwE,aAAa,EAAG,EAAG,OACd,OAAvCoK,EAA4Bn0C,SAC5Bm0C,EAA4Bn0C,OAASi+C,GAEzCxK,EAAmBU,EAA6B,UAAWjkC,GAAQ,KAC/D,MAAMviB,EAAQuiB,EAAI3iB,KAAK4mD,GACvB,OAAOxmD,IAAUswD,EAAkB,KAAOtwD,KAC1CiyB,GAASjyB,GACFiyB,EAAIryB,KAAK4mD,EAAuC,OAAVxmD,EAAiBswD,EAAkBtwD,MzCmOscuwD,CAAyDzK,IAAqBc,IAC1mB4J,G0C9OgC,EAACC,EAAuBjB,IACnD,CAACvQ,EAA2BlG,EAAY+S,EAAkB7S,KAClCwX,EAAsB1X,GAC9B2X,OAAO5E,GACnB0D,EAAyBzW,EAAYkG,EAA2B6M,EAAkB7S,I1C0OxE0X,C2C9OkB,CAAC7X,GAChCC,IACJ,MAAMiB,EAAwBlB,EAAyBC,GACvD,GAAuC,OAAnCiB,EAAsB2O,SACtB,MAAM,IAAI5jD,MAAM,oEAEpB,OAAOi1C,EAAsB2O,U3CwOWiI,CAA4B9X,GAA2B0W,IACjGqB,G4C9OoD,EAACnB,EAAmBE,EAAmCnU,EAAoB+U,EAAkB3H,IAC5I,KACH,MAAMiI,EAAuC,IAAIzc,QACjD,IAAI30B,EAAQ,KACRi9B,EAAO,KAwCX,MAAO,CACH,UAAU38C,GACN0f,EAAQ1f,GAEZ,SAASA,GACL28C,EAAO38C,GAEX,OAAO++C,EAAOE,EAA2BhG,GACrC,MAAM8X,EAAsCD,EAAqCvuC,IAAI08B,GACrF,YAA4C97C,IAAxC4tD,EACOvmD,QAAQC,QAAQsmD,GAjDCpjD,OAAOoxC,EAAOE,EAA2BhG,KACzE,IAAIuN,EAA8B/K,EAAmBsD,GAKrD,MAAMiS,EAA8CtZ,EAAiB8O,EAA6BvH,GAClG,IAAK+R,EAA6C,CAC9C,MAAMt1C,EAAU,CACZrJ,OAAQm0C,EAA4Bn0C,OACpC8kC,aAAcqP,EAA4BrP,aAC1CC,iBAAkBoP,EAA4BpP,iBAC9CC,sBAAuBmP,EAA4BnP,sBAEnDoB,KAAM+N,EAA4B/N,KAClCC,QAAS8N,EAA4B9N,QACrCC,UAAW6N,EAA4B7N,UACvCC,aAAc4N,EAA4B5N,aAAa54C,OAE3DwmD,EAA8BoJ,EAAkC3Q,EAA2BvjC,GAC7E,OAAVgE,GACA8mC,EAA4B9mC,SAASA,GAE5B,OAATi9B,GACA6J,EAA4B7J,KAAKA,GAazC,OAVAmU,EAAqC7+B,IAAIgtB,EAA2BuH,GAC/DwK,QAMKtB,EAAkBzQ,EAA2BF,EAAMnG,aAAc4N,EAA4B5N,aAAcK,SAJ3GuX,EAAiBvR,EAA2BF,EAAMnG,aAAc4N,EAA4B5N,aAAcK,SAM9G4P,EAAwB9J,EAAOE,EAA2BuH,EAA6BvN,GACtFuN,GAcIyK,CAA4BlS,EAAOE,EAA2BhG,M5CsLzCiY,CAA2CxB,GAAmBE,GAAmCnU,GAAoB+U,GAAkB3H,IAC7KsI,G6C/OiC,EAACC,EAA0BhH,EAA0BiH,EAAiBC,EAA0BnrD,EAAoCC,EAA4CC,EAA6CC,EAAwCC,EAAgC1E,EAA+BE,EAAoC2oD,EAA+BrE,IACna,CAAC3P,EAAW6a,EAAmCzF,EAAkBC,EAAW,KAAMyF,EAAW,QAChG,MAAMC,EAAsB,IAAI,EAAAntD,oBAAoBwnD,EAAiB5oD,cAC/DwuD,EAAqBH,ECJK,CAACE,IAC9B,CACH,OAAO1Y,GACH,IAAK,MAAMr2C,KAAmB+uD,EAC1B,GAA6B,2BAAzB/uD,EAAgBf,KAAmC,CACnD,MAAM,QAAEF,EAAO,MAAEzB,GAAU0C,EAC3Bq2C,EAAW4Y,6BAA6B3xD,EAAOyB,QAE9C,GAA6B,sBAAzBiB,EAAgBf,KAA8B,CACnD,MAAM,QAAEF,EAAO,MAAEzB,GAAU0C,EAC3Bq2C,EAAW6Y,wBAAwB5xD,EAAOyB,QAEzC,GAA6B,cAAzBiB,EAAgBf,KAAsB,CAC3C,MAAM,UAAEG,EAAS,OAAEtD,EAAM,aAAE8D,GAAiBI,EAC5Cq2C,EAAW8Y,gBAAgBrzD,EAAQsD,EAAWQ,QAE7C,GAA6B,aAAzBI,EAAgBf,KAAqB,CAC1C,MAAM,UAAEG,EAAS,MAAE9B,GAAU0C,EAC7Bq2C,EAAWuN,eAAetmD,EAAO8B,OAEhC,IAA6B,kBAAzBY,EAAgBf,KAKrB,MAAM,IAAIoD,MAAM,sCAL+B,CAC/C,MAAM,SAAE9C,EAAQ,UAAEH,EAAS,OAAEE,GAAWU,EACxCq2C,EAAW+Y,oBAAoB9vD,EAAQF,EAAWG,QDlBCqvD,CAAyBG,GAAuB,KACzG1Y,EAAa,CACf,mBACI,OAAO+S,EAAiB5oD,cAE5B,eACI,OAAoB,OAAb6oD,EAAoBD,EAAiBC,SAAWA,GAE3D,eACI,OAAoB,OAAbyF,EAAoB1F,EAAiB0F,SAAWA,GAE3D,YACI,OAAO1F,EAAiB9rD,OAE5B,UAAUA,GACN8rD,EAAiB9rD,MAAQA,EAEzB+4C,EAAWuN,eAAetmD,EAAO02C,EAAUxnC,QAAQ6iD,cAEvD,oBAAoBruD,GAEhB,GAAoD,mBAAzCooD,EAAiBkG,oBACG,OAAvBN,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAI3D,EAAmCzC,IAC3DooD,EAAiBkG,oBAAoBtuD,OAEpC,CACD,MAAMuuD,EAAoB/zD,MAAM4C,KAAK2wD,GAAqBh5C,MAC/B,OAAvBi5C,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAI3D,EAAmCzC,IAC3D,MAAMwuD,EAAmBh0D,MAAM4C,KAAK2wD,GAAqBh5C,MACzDqzC,EAAiBqG,sBAAsBzuD,GACnCuuD,IAAsBC,QAAyC/uD,IAArB+uD,IACZ,2BAA1BA,EAAiBvwD,KACjBmqD,EAAiB6F,6BAA6BO,EAAiBlyD,MAAOkyD,EAAiBzwD,SAExD,sBAA1BywD,EAAiBvwD,KACtBmqD,EAAiB8F,wBAAwBM,EAAiBlyD,MAAOkyD,EAAiBzwD,SAEnD,aAA1BywD,EAAiBvwD,KACtBmqD,EAAiBxF,eAAe4L,EAAiBlyD,MAAOkyD,EAAiBpwD,WAE1C,kBAA1BowD,EAAiBvwD,MACtBmqD,EAAiBgG,oBAAoBI,EAAiBlwD,OAAQkwD,EAAiBpwD,UAAWowD,EAAiBjwD,WAIvH,OAAO82C,GAEXoZ,sBAAsBzuD,IACS,OAAvBguD,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAI1D,EAA2C1C,IACnEooD,EAAiBqG,sBAAsBzuD,GAChCq1C,GAEX,6BAA6B/4C,EAAOyB,GAEhC,GAAc,IAAVzB,EACA,MAAM,IAAI+iD,WAGd,IAAKt3C,OAAOoT,SAASpd,IAAYA,EAAU,EACvC,MAAM,IAAIshD,WAOd,OAL2B,OAAvB2O,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAIzD,EAA4CrG,EAAOyB,IAC3EqqD,EAAiB6F,6BAA6B3xD,EAAOyB,GAC9Cs3C,GAEX6Y,wBAAuB,CAAC5xD,EAAOyB,KACA,OAAvBiwD,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAIxD,EAAuCtG,EAAOyB,IACtEqqD,EAAiB8F,wBAAwB5xD,EAAOyB,GACzCs3C,GAEX8Y,gBAAe,CAACrzD,EAAQsD,EAAWQ,KACJ,OAAvBovD,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAIvD,EAA+B/H,EAAQsD,EAAWQ,IAC1EwpD,EAAiB+F,gBAAgBrzD,EAAQsD,EAAWQ,GAC7Cy2C,GAEXuN,eAAc,CAACtmD,EAAO8B,KACS,OAAvB4vD,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAIjI,EAA8B7B,EAAO8B,IAC7DgqD,EAAiBxF,eAAetmD,EAAO8B,GAChCi3C,GAEX,oBAAoB/2C,EAAQF,EAAWG,GAEnC,MAAMmwD,EAAkBpwD,aAAkBmD,aAAenD,EAAS,IAAImD,aAAanD,GAMnF,GAAsC,OAAlC0oD,GAAiF,uBAAvCA,EAA8B7pD,KAA+B,CACvG,MAAMY,EAAUK,EAAYG,EACtBw9C,EAAa/I,EAAUxnC,QAAQuwC,WAC/B4S,EAAc9vD,KAAK4B,KAAKrC,EAAY29C,GACpC6S,EAAa/vD,KAAK0B,MAAMxC,EAAUg+C,GAClC8S,EAA6BD,EAAaD,EAC1CG,EAAqB,IAAIrtD,aAAaotD,GAC5C,IAAK,IAAIv0D,EAAI,EAAGA,EAAIu0D,EAA4Bv0D,GAAK,EAAG,CACpD,MAAM+F,GAAmBquD,EAAgBr0D,OAAS,GAAKkE,IAAcowD,EAAcr0D,GAAKyhD,EAAa39C,GAC/FkC,EAAazB,KAAK0B,MAAMF,GACxBG,EAAa3B,KAAK4B,KAAKJ,GAC7ByuD,EAAmBx0D,GACfgG,IAAeE,EACTkuD,EAAgBpuD,IACf,GAAKD,EAAiBC,IAAeouD,EAAgBpuD,IACnD,GAAKE,EAAaH,IAAmBquD,EAAgBluD,GAE3C,OAAvBwtD,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAI/H,EAAmCywD,EAAoB1wD,EAAWG,IAC1F6pD,EAAiBgG,oBAAoBU,EAAoB1wD,EAAWG,GACpE,MAAMwwD,EAAmBH,EAAa7S,EAClCgT,EAAmBhxD,GACnB4kD,EAA4BtN,EAAYyZ,EAAmBA,EAAmBz0D,OAAS,GAAI00D,GAE/FpM,EAA4BtN,EAAYqZ,EAAgBA,EAAgBr0D,OAAS,GAAI0D,QAG1D,OAAvBiwD,GACAD,EAAoB9yB,MAAM+X,EAAUxnC,QAAQ6iD,aAEhDN,EAAoB3nD,IAAI/H,EAAmCqwD,EAAiBtwD,EAAWG,IACvF6pD,EAAiBgG,oBAAoBM,EAAiBtwD,EAAWG,GAErE,OAAO82C,IAMf,OAHAsY,EAAgBp/B,IAAI8mB,EAAY+S,GAChC1B,EAAyBn4B,IAAI8mB,EAAYrC,GACzC0a,EAAyBrY,EAAY2Y,GAC9B3Y,G7CsFU2Z,E+ChPsBC,G/CgPiCpe,E+C/OrE,CAACwE,EAAY2Y,KAChBiB,GAA2B1gC,IAAI8mB,EAAY,CAAE/B,aAAc,IAAI7nB,IAAOinB,cAAe,IAAI/B,QAAWsU,SAAU+I,M/C8ONtH,GAA0B5V,E8ChPlG,E9CgP+I,EAAAruC,mCAAoC,EAAAC,2CAA4C,EAAAC,4CAA6C,EAAAC,uCAAwC,EAAAC,+BAAgC,EAAA1E,8BAA+B,EAAAE,mCAAoC2oD,GAA+BrE,I+ChPhb,IAACsM,G/CiP/C,MAAMC,GpFlOgD,EAACvH,EAAsBwF,EAAqCM,EAAkBhQ,EAAyByO,EAAmCjG,EAAkBM,EAA6BnD,IACpO,cAAoCuE,EACvC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,KAAoBlyC,GACzC8qC,EAA8BoJ,EAAkChY,EAAegW,GAC/EnQ,EAAYwM,EAA4BrS,GACxCib,EAAkCpV,EAAYoT,IAAwC,KAC5FlF,MAAMz8C,GAAS,EAAOs3C,EAA6BqM,GACnDtuD,KAAKuuD,+BAAiCD,EACtCtuD,KAAKwuD,oBAAqB,EAC1BxuD,KAAKyuD,aAAwC,OAAzBpF,EAAcv7C,OAClC9N,KAAK0uD,6BAA+BzM,EACpCjiD,KAAK2uD,SAAW,KAEhB3uD,KAAK4uD,cAAgBhC,EAAiB5sD,KAAMk5C,EAAW+I,EAA4B5N,aAAcL,EAA4BD,GAEjI,aACI,OAAI/zC,KAAKwuD,mBACE,KAEJxuD,KAAK0uD,6BAA6B5gD,OAE7C,WAAWrS,GAGP,GAFAuE,KAAK0uD,6BAA6B5gD,OAASrS,EAE7B,OAAVA,EAAgB,CAChB,GAAIuE,KAAKyuD,aACL,MAAM7R,IAEV58C,KAAKyuD,cAAe,GAG5B,WACI,OAAOzuD,KAAK0uD,6BAA6Bxa,KAE7C,SAASz4C,GACLuE,KAAK0uD,6BAA6Bxa,KAAOz4C,EAE7C,cACI,OAAOuE,KAAK0uD,6BAA6Bva,QAE7C,YAAY14C,GACRuE,KAAK0uD,6BAA6Bva,QAAU14C,EAEhD,gBACI,OAAOuE,KAAK0uD,6BAA6Bta,UAE7C,cAAc34C,GACVuE,KAAK0uD,6BAA6Bta,UAAY34C,EAElD,cACI,OAAOuE,KAAK2uD,SAEhB,YAAYlzD,GACR,MAAMozD,EAAmC,mBAAVpzD,EAAuB8mD,EAAkBviD,KAAMvE,GAAS,KACvFuE,KAAK0uD,6BAA6BI,QAAUD,EAC5C,MAAME,EAAgB/uD,KAAK0uD,6BAA6BI,QACxD9uD,KAAK2uD,SAA6B,OAAlBI,GAA0BA,IAAkBF,EAAkBpzD,EAAQszD,EAE1F,mBACI,OAAO/uD,KAAK4uD,cAEhB,MAAMrQ,EAAO,EAAGnJ,EAAS,EAAG13C,GAKxB,GAJAsC,KAAK0uD,6BAA6BvzC,MAAMojC,EAAMnJ,EAAQ13C,GACV,OAAxCsC,KAAKuuD,iCACLvuD,KAAKuuD,+BAA+BpzC,WAAqBvc,IAAblB,EAAyB,CAAC6gD,EAAMnJ,GAAU,CAACmJ,EAAMnJ,EAAQ13C,IAE9E,WAAvBsC,KAAK2K,QAAQjB,MAAoB,CACjC0oC,EAAyBpyC,MACzB,MAAMgvD,EAA8B,KAChChvD,KAAK0uD,6BAA6Bj3C,oBAAoB,QAASu3C,GAC3D/a,EAAkBj0C,OAClBuyC,EAA0BvyC,OAGlCA,KAAK0uD,6BAA6Bl3C,iBAAiB,QAASw3C,IAGpE,KAAKzQ,EAAO,GACRv+C,KAAK0uD,6BAA6BtW,KAAKmG,GACK,OAAxCv+C,KAAKuuD,iCACLvuD,KAAKuuD,+BAA+BnW,KAAOmG,KoFgJlB0Q,CAAuCnI,GAAsBwF,GAAqCM,GAAkBhQ,GAAyByO,GAAmCjG,GAAkBM,GAA6BnD,IAElQ2M,GgDnP+C,EAACpI,EAAsBqI,EAAoC1b,EAAsBmJ,EAAyBwS,EAAkChK,EAAkBM,EAA6BpB,IACrO,cAAmCwC,EACtC,YAAYn8C,EAASioC,GACjB,MAAMS,EAAgB+R,EAAiBz6C,GACjCuuC,EAAYwM,EAA4BrS,GACxCgc,EAA6BD,EAAiC/b,EAAeT,EAAcsG,GAEjGkO,MAAMz8C,GAAS,EAAO0kD,EADiBnW,ECND,CAACoL,IAC/C,IAAIgL,EAAoC,KAMxC,MAAO,CACH3K,OAAM,CAACnK,EAAOE,EAA2BhG,KACK,OAAtC4a,IACAA,EARuBlmD,OAAOoxC,EAAOE,EAA2BhG,KACxE,MAAM2a,EAA6B3U,EAA0B7zC,YAE7D,aADMy9C,EAAwB9J,EAAOE,EAA2B2U,EAA4B3a,GACrF2a,GAKqCE,CAA2B/U,EAAOE,EAA2BhG,IAE9F4a,KDN4CH,CAAmC7K,GAA2B,MAEjHtkD,KAAKwvD,mCAAqCtW,EAC1Cl5C,KAAKyvD,4BAA8BJ,EAEvC,mBACI,OAAOrvD,KAAKyvD,4BAA4B7c,aAE5C,iBAAiBn3C,GAGb,GAAIuE,KAAKwvD,mCACL,MAAM5S,IAGV,GAAInhD,EAAQuE,KAAKyvD,4BAA4BC,gBACzC,MAAMjc,IAEVzzC,KAAKyvD,4BAA4B7c,aAAen3C,EAEpD,uBACI,OAAOuE,KAAKyvD,4BAA4B5c,iBAE5C,qBAAqBp3C,GAEjB,GAAIuE,KAAKwvD,mCACL,MAAM5S,IAEV58C,KAAKyvD,4BAA4B5c,iBAAmBp3C,EAExD,sBACI,OAAOuE,KAAKyvD,4BAA4BC,kBhD8MZC,CAAsC7I,GiDnP5B,EjDmPsFrT,EAAsBmJ,GkDnPvG,EAAC+C,EAAsB4B,IACnE,CAAClO,EAAeT,EAAcgd,KACjC,MAAMP,EAA6Bhc,EAAcxsC,YAEjD,GAAIwoD,EAA2Bzc,eAAiBA,EAC5C,IACIyc,EAA2Bzc,aAAeA,EAE9C,OAKAgd,GAAqF,aAAhDP,EAA2Bxc,mBAChEwc,EAA2Bxc,iBAAmB,YAGC,IAA/Cwc,EAA2BK,iBAC3Bn1D,OAAOC,eAAe60D,EAA4B,kBAAmB,CACjE5zD,MAAOm3C,IAIf,MAAMid,EAAWlQ,EAAqBtM,EAAe,CACjDT,eACAC,iBAAkBwc,EAA2Bxc,iBAC7CC,sBAAuBuc,EAA2Bvc,sBAClDoC,KAAM,IA2BV,OAzBAqM,EAAmBsO,EAAU,gBAAiB7xC,GAAQ,IAAMA,EAAI3iB,KAAKw0D,KAAYniC,GAASjyB,IACtFiyB,EAAIryB,KAAKw0D,EAAUp0D,GACnB,IACI4zD,EAA2Bzc,aAAen3C,EAE9C,MAAOC,GAEH,GAAID,EAAQ4zD,EAA2BK,gBACnC,MAAMh0D,MAIlB6lD,EAAmBsO,EAAU,oBAAqB7xC,GAAQ,IAAMA,EAAI3iB,KAAKw0D,KAAYniC,GAASjyB,IAC1FiyB,EAAIryB,KAAKw0D,EAAUp0D,GACnB4zD,EAA2Bxc,iBAAmBp3C,KAElD8lD,EAAmBsO,EAAU,yBAA0B7xC,GAAQ,IAAMA,EAAI3iB,KAAKw0D,KAAYniC,GAASjyB,IAC/FiyB,EAAIryB,KAAKw0D,EAAUp0D,GACnB4zD,EAA2Bvc,sBAAwBr3C,KAEvDlB,OAAOC,eAAeq1D,EAAU,kBAAmB,CAC/C7xC,IAAK,IAAMqxC,EAA2BK,kBAG1CG,EAASt6C,QAAQ85C,GACVQ,GlD6LwKC,CAAwCnQ,GAAsB4B,IAAqB6D,GAAkBM,GAA6BpB,IACnTyL,GmDnP+C,EAAC5E,EAAmBtM,EAA8B3H,EAAoB+U,EAAkB3H,IAClI,KACH,MAAM0L,EAAkC,IAAIlgB,QAqC5C,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAMub,EAAiCD,EAAgChyC,IAAI08B,GAC3E,YAAuC97C,IAAnCqxD,EACOhqD,QAAQC,QAAQ+pD,GAxCJ7mD,OAAOoxC,EAAOE,EAA2BhG,KACpE,IAAIoK,EAAyB5H,EAAmBsD,GAKhD,MAAM0V,EAAyC/c,EAAiB2L,EAAwBpE,GACxF,IAAKwV,EAAwC,CACzC,MAAM/4C,EAAU,CACZ69B,EAAG8J,EAAuB9J,EAAEv5C,MAC5Bm3C,aAAckM,EAAuBlM,aACrCC,iBAAkBiM,EAAuBjM,iBACzCC,sBAAuBgM,EAAuBhM,sBAC9CmC,OAAQ6J,EAAuB7J,OAAOx5C,MACtC+yC,UAAWsQ,EAAuBtQ,UAAU/yC,MAC5Cy5C,KAAM4J,EAAuB5J,KAAKz5C,MAClC2B,KAAM0hD,EAAuB1hD,MAEjC0hD,EAAyBD,EAA6BnE,EAA2BvjC,GAgBrF,OAdA64C,EAAgCtiC,IAAIgtB,EAA2BoE,GAC1DoR,SAOK/E,EAAkBzQ,EAA2BF,EAAMxF,EAAG8J,EAAuB9J,EAAGN,SAChFyW,EAAkBzQ,EAA2BF,EAAMvF,OAAQ6J,EAAuB7J,OAAQP,SAC1FyW,EAAkBzQ,EAA2BF,EAAMhM,UAAWsQ,EAAuBtQ,UAAWkG,SAChGyW,EAAkBzQ,EAA2BF,EAAMtF,KAAM4J,EAAuB5J,KAAMR,WATtFuX,EAAiBvR,EAA2BF,EAAMxF,EAAG8J,EAAuB9J,EAAGN,SAC/EuX,EAAiBvR,EAA2BF,EAAMvF,OAAQ6J,EAAuB7J,OAAQP,SACzFuX,EAAiBvR,EAA2BF,EAAMhM,UAAWsQ,EAAuBtQ,UAAWkG,SAC/FuX,EAAiBvR,EAA2BF,EAAMtF,KAAM4J,EAAuB5J,KAAMR,UAQzF4P,EAAwB9J,EAAOE,EAA2BoE,EAAwBpK,GACjFoK,GAQIqR,CAAuB3V,EAAOE,EAA2BhG,MnDsMzC0b,CAAsCjF,GAAmBtM,GAA8B3H,GAAoB+U,GAAkB3H,IAC9J+L,GoDrPoC,CAACpN,GAChC,CAAC9Q,EAAWkW,IAAapF,EAAuBv1B,IAAIykB,EAAWkW,GpDoP7CiI,CAA2BrN,IAClDsN,G9C3O2C,EAACzJ,EAAsB8F,EAAkBmD,EAAgClT,EAA0BgC,EAA8BuG,EAAkBM,EAA6B2K,IACtN,cAA+BvJ,EAClC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzC2nC,EAAyBD,EAA6BxL,EAAegW,GACrEnQ,EAAYwM,EAA4BrS,GAE9C+T,MAAMz8C,GAAS,EAAOm0C,EADY5F,EAAY6W,IAAmC,MAGjF/vD,KAAKwwD,GAAK5D,EAAiB5sD,KAAMk5C,EAAW4F,EAAuB9J,EAAGhB,EAA4BD,GAElG/zC,KAAKywD,QAAU7D,EAAiB5sD,KAAMk5C,EAAW4F,EAAuB7J,OAAQ,KAAOj3C,KAAK4gD,KAAK5K,IAA8B,KAAOh2C,KAAK4gD,KAAK5K,IAEhJh0C,KAAK0wD,WAAa9D,EAAiB5sD,KAAMk5C,EAAW4F,EAAuBtQ,UAAW7jC,EAAQuwC,WAAa,EAAG,GAE9Gl7C,KAAK2wD,MAAQ/D,EAAiB5sD,KAAMk5C,EAAW4F,EAAuB5J,KAAM,GAAKl3C,KAAK4yD,MAAM5c,GAA6BD,GACzH/zC,KAAK6wD,wBAA0B/R,EAE/BuR,EAAqBrwD,KAAM,GAE/B,aACI,OAAOA,KAAKywD,QAEhB,gBACI,OAAOzwD,KAAK0wD,WAEhB,WACI,OAAO1wD,KAAK2wD,MAEhB,QACI,OAAO3wD,KAAKwwD,GAEhB,WACI,OAAOxwD,KAAK6wD,wBAAwBzzD,KAExC,SAAS3B,GACLuE,KAAK6wD,wBAAwBzzD,KAAO3B,EAExC,qBAAqBq1D,EAAaC,EAAaC,GAE3C,IACIhxD,KAAK6wD,wBAAwBI,qBAAqBH,EAAaC,EAAaC,GAEhF,MAAOt1D,GACH,GAAiB,KAAbA,EAAImmB,KACJ,MAAMg7B,IAEV,MAAMnhD,EAGV,GAAIo1D,EAAYt3D,SAAWu3D,EAAYv3D,QAAUu3D,EAAYv3D,SAAWw3D,EAAcx3D,OAClF,MAAMqjD,M8CuLcqU,CAAkCpK,GAAsB8F,GAAkBmD,GAAgClT,GAA0BgC,GAA8BuG,GAAkBM,GAA6B2K,IAC/Oc,GqDvPkC,EAACpb,EAAoB2C,IAClD,CAACtF,EAAiBge,EAAeC,KACpC,MAAM3e,EAAc,IAAI9nB,IA6DxB,OA5DAwoB,EAAgB79B,SAAYA,EAoBzB69B,EAAgB79B,QAlBR,CAAC1O,EAAairC,EAAS,EAAGlO,EAAQ,KACrC,MAAM0tB,EAAuC,IAArB5e,EAAYhQ,KACpC,GAAIgW,EAAkB7xC,GAOlB,OALA0O,EAAQla,KAAK+3C,EAAiBvsC,EAAairC,EAAQlO,GACnDmS,EAAmBrD,EAAa,CAAC7rC,EAAairC,EAAQlO,IAASpuB,GAAeA,EAAW,KAAO3O,GAAe2O,EAAW,KAAOs8B,GAAUt8B,EAAW,KAAOouB,IAAO,GAChK0tB,GACAF,IAEGvqD,EAEX0O,EAAQla,KAAK+3C,EAAiBvsC,EAAairC,GAC3CiE,EAAmBrD,EAAa,CAAC7rC,EAAairC,IAAUt8B,GAAeA,EAAW,KAAO3O,GAAe2O,EAAW,KAAOs8B,IAAQ,GAC9Hwf,GACAF,MAKZhe,EAAgB6D,YAAeA,EAsC5B7D,EAAgB6D,WArCR,CAAC8B,EAAqBjH,EAAQlO,KACjC,MAAM2tB,EAAe7e,EAAYhQ,KAAO,EACxC,QAA4B9jC,IAAxBm6C,EACA9B,EAAWviC,MAAM0+B,GACjBV,EAAY7nB,aAEX,GAAmC,iBAAxBkuB,EAAkC,CAE9C9B,EAAW57C,KAAK+3C,EAAiB2F,GACjC,IAAK,MAAMvjC,KAAck9B,EACjBl9B,EAAW,KAAOujC,GAClBrG,EAAYf,OAAOn8B,OAI1B,CACGkjC,EAAkBK,GAElB9B,EAAW57C,KAAK+3C,EAAiB2F,EAAqBjH,EAAQlO,GAI9DqT,EAAW57C,KAAK+3C,EAAiB2F,EAAqBjH,GAE1D,IAAK,MAAMt8B,KAAck9B,EACjBl9B,EAAW,KAAOujC,QACNn6C,IAAXkzC,GAAwBt8B,EAAW,KAAOs8B,QAChClzC,IAAVglC,GAAuBpuB,EAAW,KAAOouB,GAC1C8O,EAAYf,OAAOn8B,GAI/B,MAAMg8C,EAAsC,IAArB9e,EAAYhQ,KAC/B6uB,GAAgBC,GAChBH,MAILje,EAvCsB,IAAE6D,EArBH1hC,GrDoPTk8C,CAAyB1b,EAAoB,IAElE2b,GsDxP8C,EAACvL,EAA+BwL,IACzE,CAACte,EAAel8B,KACnB,MAAMy6C,EAA0Bve,EAAcwe,oBAAoB16C,EAAQwiC,gBAU1E,OAJsC,OAAlCwM,GAAiF,uBAAvCA,EAA8B7pD,MACxEq1D,EAAsBte,EAAeue,GAEzC5T,GAA6B4T,EAAyBz6C,GAC/Cy6C,GtD4OuBE,CAAqC3L,GuDzPhC,EAACvJ,EAAyBuU,IAC1D,CAAC9d,EAAe0e,KAEnBA,EAAkBnf,aAAe,EACjCmf,EAAkBlf,iBAAmB,WAErCt4C,OAAOC,eAAeu3D,EAAmB,eAAgB,CACrD/zC,IAAK,IAAM,EACX0P,IAAK,KACD,MAAMkvB,OAGdriD,OAAOC,eAAeu3D,EAAmB,mBAAoB,CACzD/zC,IAAK,IAAM,WACX0P,IAAK,KACD,MAAMkvB,OAId,MAAMoV,EAAwB3e,EAAc0E,qBAQ5CoZ,EAAmBY,GAPG,KAClB,MAAMv4D,EAASu4D,EAAkBpY,eACjC,IAAK,IAAIlgD,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC7Bu4D,EAAsBz8C,QAAQw8C,EAAmB,EAAGt4D,MAGnC,IAAMu4D,EAAsB/a,WAAW8a,MvD8N1CE,CAA4BrV,GAAyBuU,KAG7Ee,G7CrP4C,EAACpL,EAAsBqL,EAAiCT,EAA+BtM,EAAkBM,IAChJ,cAAgCoB,EACnC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GAG/CiwC,MAAMz8C,GAAS,EAFiB+mD,EAA8Bre,EAAegW,GACzC3D,EAA4BrS,GAAiB8e,IAAoC,Q6C+O5FC,CAAmCtL,GwD1PlB,EAAC4K,EAA+Bxa,EAAoBoN,IAC/F,KACH,MAAM+N,EAA2B,IAAIviB,QAkBrC,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAMgQ,EAA0B2N,EAAyBr0C,IAAI08B,GAC7D,YAAgC97C,IAA5B8lD,EACOz+C,QAAQC,QAAQw+C,GArBXt7C,OAAOoxC,EAAOE,EAA2BhG,KAC7D,IAAItB,EAAkB8D,EAAmBsD,GAGzC,IADwCrH,EAAiBC,EAAiBsH,GACpC,CAClC,MAAMvjC,EAAU,CACZy7B,aAAcQ,EAAgBR,aAC9BC,iBAAkBO,EAAgBP,iBAClCC,sBAAuBM,EAAgBN,sBACvC6G,eAAgBvG,EAAgBuG,gBAEpCvG,EAAkBse,EAA8BhX,EAA2BvjC,GAI/E,OAFAk7C,EAAyB3kC,IAAIgtB,EAA2BtH,SAClDkR,EAAwB9J,EAAOE,EAA2BtH,EAAiBsB,GAC1EtB,GAQIkf,CAAgB9X,EAAOE,EAA2BhG,MxD+NjC6d,CAAuCb,GAA+Bxa,GAAoBoN,IACHoN,GAA+BtM,GAAkBM,IAE1K8M,G5CvP8C,EAAC1L,EAAsB2L,EAAmCzT,EAAiCoG,EAAkBM,EAA6BgN,IACnL,cAAkC5L,EACrC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EqGV4B,CAAClyC,IACpC,IAAKA,EAASy7B,aAAcz7B,EAAQyiC,kBrGSb8Y,CAA+B,IAAK,MAAoBv7C,IAG9EiwC,MAAMz8C,GAAS,EAFmBq0C,EAAgC3L,EAAegW,GAC3C3D,EAA4BrS,GAAiBof,IAAsC,Q4CiP9FE,CAAqC7L,G0D5PpB,EAAC9H,EAAiC9H,EAAoBoN,IACnG,KACH,MAAM+N,EAA2B,IAAIviB,QAkBrC,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAMgQ,EAA0B2N,EAAyBr0C,IAAI08B,GAC7D,YAAgC97C,IAA5B8lD,EACOz+C,QAAQC,QAAQw+C,GArBXt7C,OAAOoxC,EAAOE,EAA2BhG,KAC7D,IAAItB,EAAkB8D,EAAmBsD,GAGzC,IADwCrH,EAAiBC,EAAiBsH,GACpC,CAClC,MAAMvjC,EAAU,CACZy7B,aAAcQ,EAAgBR,aAC9BC,iBAAkBO,EAAgBP,iBAClCC,sBAAuBM,EAAgBN,sBACvC8G,gBAAiBxG,EAAgBwG,iBAErCxG,EAAkB4L,EAAgCtE,EAA2BvjC,GAIjF,OAFAk7C,EAAyB3kC,IAAIgtB,EAA2BtH,SAClDkR,EAAwB9J,EAAOE,EAA2BtH,EAAiBsB,GAC1EtB,GAQIkf,CAAgB9X,EAAOE,EAA2BhG,M1DiO/Bke,CAAyC5T,GAAiC9H,GAAoBoN,IACHtF,GAAiCoG,GAAkBM,IAClLmN,G2D7PoD,EAAC9H,EAAqBM,EAAmC1L,EAAsBwR,IAC9H,CAAC9d,GAAiB+B,YAAW0d,MAChC,MAAMlf,EAAcP,EAAcwE,aAAa,EAAG,EAAG,OAC/Cma,EAAwB3G,EAAkChY,EAAe,CAC3EvlC,OAAQ,KACR8kC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBoB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAEZwb,EAAWlQ,EAAqBtM,EAAe,IAAKyf,EAAkB5d,KAAME,IAE5E0C,EAAclE,EAAYC,eAAe,GAE/CiE,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjBka,EAAsBlkD,OAAS8lC,EAC/Boe,EAAsB9d,MAAO,EAC7B,MAAM6e,EAAgC,CAClC,mBAGA,mBACI,OAAOlD,EAASjd,cAEpB,iBAAiBn3C,GACbo0D,EAASjd,aAAen3C,GAE5B,uBACI,OAAOo0D,EAAShd,kBAEpB,qBAAqBp3C,GACjBo0D,EAAShd,iBAAmBp3C,GAEhC,4BACI,OAAOo0D,EAAS/c,uBAEpB,0BAA0Br3C,GACtBo0D,EAAS/c,sBAAwBr3C,GAErC,cACI,OAAOo0D,EAASllD,SAEpB,aACI,MAAO,IAEX,qBACI,OAAOqnD,EAAsBrY,gBAEjC,sBACI,OAAOkW,EAASjW,iBAEpB,aACI,OAAOiW,EAAS3a,MAEpB,cACI,OAAO8c,EAAsBlD,SAEjC,YAAYrzD,GACRu2D,EAAsBlD,QAAUrzD,GAEpC+b,iBAAgB,IAAInD,IACT29C,EAAsBx6C,iBAAiBnD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEzEwnC,cAAa,IAAIxnC,IACN29C,EAAsBnW,cAAcxnC,EAAK,IAEpDoD,oBAAmB,IAAIpD,IACZ29C,EAAsBv6C,oBAAoBpD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE5E,MAAMkqC,EAAO,GACTyT,EAAsB72C,MAAM9f,KAAK22D,EAAuBzT,IAE5D,KAAKA,EAAO,GACRyT,EAAsB5Z,KAAK/8C,KAAK22D,EAAuBzT,KAO/D,OADAwM,EAAoB1X,EAAe2e,GAC5Bb,EAAmB9R,GAAqB0T,EAA+BlD,IAJxD,IAAMmC,EAAsBz8C,QAAQs6C,KACjC,IAAMmC,EAAsB/a,WAAW4Y,M3D4K5BmD,CAA2CjI,GAAqBM,GAAmC1L,GAAsBwR,IAC/J8B,G4D3P+C,EAAClI,EAAqB3H,EAAiByP,EAAqC7Q,EAAkEI,IACxL,CAAC/O,EAAel8B,KAEnB,QAA2CvY,IAAvCy0C,EAAc6f,qBACd,OAAOL,EAAoCxf,EAAel8B,GAE9D,MAAMg8C,EAA2B9f,EAAc6f,uBAa/C,OAZAlV,GAA6BmV,EAA0Bh8C,GACvDinC,GAAqC+U,EAA0Bh8C,EAAS,UAEnEisC,EAAgBpB,GAAkE,IAAMA,EAAiE3O,MAC1JgL,GAA0D8U,GAGzD/P,EAAgBhB,GAAiE,IAAMA,EAAgE/O,MACxJoL,GAAyD0U,GAG7DpI,EAAoB1X,EAAe8f,GAC5BA,G5DwOwBC,CAAsCrI,GAAqB3H,GAAiByP,GAAqC7Q,GAAkEI,IAEpNiR,G3CvP6C,EAACvM,EAAsB8F,EAAkB0G,EAAyCL,EAAgC7N,EAAkBM,EAA6BnD,IACzM,cAAiCuE,EACpC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzCg8C,EAA2BF,EAA+B5f,EAAegW,GACzEnQ,EAAYwM,EAA4BrS,GACxCkgB,EAA+Bra,EAAYoa,IAA4C,KAC7FlM,MAAMz8C,GAAS,EAAOwoD,EAA0BI,GAChDvzD,KAAKwzD,4BAA8BD,EACnCvzD,KAAKyzD,0BAA4BN,EAKjCnzD,KAAK0zD,QAAU9G,EAAiB5sD,KAAMk5C,EAAWia,EAAyB/d,OAAQpB,EAA4BD,GAC9G/zC,KAAK2uD,SAAW,KAEpB,aACI,OAAO3uD,KAAK0zD,QAEhB,cACI,OAAO1zD,KAAK2uD,SAEhB,YAAYlzD,GACR,MAAMozD,EAAmC,mBAAVpzD,EAAuB8mD,EAAkBviD,KAAMvE,GAAS,KACvFuE,KAAKyzD,0BAA0B3E,QAAUD,EACzC,MAAME,EAAgB/uD,KAAKyzD,0BAA0B3E,QACrD9uD,KAAK2uD,SAA6B,OAAlBI,GAA0BA,IAAkBF,EAAkBpzD,EAAQszD,EAE1F,MAAMxQ,EAAO,GAKT,GAJAv+C,KAAKyzD,0BAA0Bt4C,MAAMojC,GACI,OAArCv+C,KAAKwzD,8BACLxzD,KAAKwzD,4BAA4Br4C,MAAQojC,GAElB,WAAvBv+C,KAAK2K,QAAQjB,MAAoB,CACjC0oC,EAAyBpyC,MACzB,MAAMgvD,EAA8B,KAChChvD,KAAKyzD,0BAA0Bh8C,oBAAoB,QAASu3C,GACxD/a,EAAkBj0C,OAClBuyC,EAA0BvyC,OAGlCA,KAAKyzD,0BAA0Bj8C,iBAAiB,QAASw3C,IAGjE,KAAKzQ,EAAO,GACRv+C,KAAKyzD,0BAA0Brb,KAAKmG,GACK,OAArCv+C,KAAKwzD,8BACLxzD,KAAKwzD,4BAA4Bpb,KAAOmG,K2CsMlBoV,CAAoC7M,GAAsB8F,G6DhQzC,EAACzB,EAAmB8H,EAAgC/b,EAAoB+U,EAAkB3H,IACtI,KACH,MAAMsP,EAAoC,IAAI9jB,QAC9C,IAAI30B,EAAQ,KACRi9B,EAAO,KAiCX,MAAO,CACH,UAAU38C,GACN0f,EAAQ1f,GAEZ,SAASA,GACL28C,EAAO38C,GAEX,OAAO++C,EAAOE,EAA2BhG,GACrC,MAAMmf,EAAmCD,EAAkC51C,IAAI08B,GAC/E,YAAyC97C,IAArCi1D,EACO5tD,QAAQC,QAAQ2tD,GA1CFzqD,OAAOoxC,EAAOE,EAA2BhG,KACtE,IAAIye,EAA2Bjc,EAAmBsD,GAKlD,MAAMsZ,EAA2C3gB,EAAiBggB,EAA0BzY,GAC5F,IAAKoZ,EAA0C,CAC3C,MAAM38C,EAAU,CACZy7B,aAAcugB,EAAyBvgB,aACvCC,iBAAkBsgB,EAAyBtgB,iBAC3CC,sBAAuBqgB,EAAyBrgB,sBAChDsC,OAAQ+d,EAAyB/d,OAAO35C,OAE5C03D,EAA2BF,EAA+BvY,EAA2BvjC,GACvE,OAAVgE,GACAg4C,EAAyBh4C,MAAMA,GAEtB,OAATi9B,GACA+a,EAAyB/a,KAAKA,GAWtC,OARAwb,EAAkClmC,IAAIgtB,EAA2ByY,GAC5DW,QAIK3I,EAAkBzQ,EAA2BF,EAAMpF,OAAQ+d,EAAyB/d,OAAQV,SAH5FuX,EAAiBvR,EAA2BF,EAAMpF,OAAQ+d,EAAyB/d,OAAQV,SAK/F4P,EAAwB9J,EAAOE,EAA2ByY,EAA0Bze,GACnFye,GAcIY,CAAyBvZ,EAAOE,EAA2BhG,M7D8MzC4e,CAAwCnI,GAAmB8H,GAAgC/b,GAAoB+U,GAAkB3H,IACtB2O,GAAgC7N,GAAkBM,GAA6BnD,IAC7NyR,G8DhQ0C,EAAC7T,EAAyBoB,IAC/D,CAAClO,EAAel8B,KACnB,MAAM88C,EAAsB5gB,EAAc6gB,kBAQ1C,GAPAlW,GAA6BiW,EAAqB98C,GAE9CA,EAAQ+kC,uBAAyB+X,EAAoBE,YACrDF,EAAoBE,WAAah9C,EAAQ+kC,sBAE7C4B,GAA4BmW,EAAqB98C,EAAS,UAEtDA,EAAQy7B,aAAe,EACvB,MAAMuN,IASV,GAPAoB,EAAmB0S,EAAqB,gBAAiBj2C,GAAQ,IAAMA,EAAI3iB,KAAK44D,KAAuBvmC,GAASjyB,IAC5G,GAAIA,EAAQ,EACR,MAAM0kD,IAEV,OAAOzyB,EAAIryB,KAAK44D,EAAqBx4D,MAGR,QAA7B0b,EAAQ07B,iBACR,MAAMsN,IAQV,OANAoB,EAAmB0S,EAAqB,oBAAqBj2C,GAAQ,IAAMA,EAAI3iB,KAAK44D,KAAuBvmC,GAASjyB,IAChH,GAAc,QAAVA,EACA,MAAM0kD,IAEV,OAAOzyB,EAAIryB,KAAK44D,EAAqBx4D,MAElCw4D,G9DmOmBG,CAAiCjU,GAAyBoB,IAEtF8S,G1C7PwC,EAACvN,EAAsBwN,EAA6BN,EAA2B5O,EAAkBM,EAA6B2K,IACjK,cAA4BvJ,EAC/B,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzC88C,EAAsBD,EAA0B3gB,EAAegW,GAGrEjC,MAAMz8C,GAAS,EAAOspD,EAFJvO,EAA4BrS,GACHihB,IAAgC,MAE3Et0D,KAAKwuD,oBAAqB,EAC1BxuD,KAAKu0D,qBAAuBN,EACC,OAAzB5K,EAAcv7C,QACduiD,EAAqBrwD,KAAMqpD,EAAcv7C,OAAOpQ,UAGxD,aACI,OAAIsC,KAAKwuD,mBACE,KAEJxuD,KAAKu0D,qBAAqBzmD,OAErC,WAAWrS,GAGP,GAFAuE,KAAKu0D,qBAAqBzmD,OAASrS,EAErB,OAAVA,GAAuD,OAArCuE,KAAKu0D,qBAAqBzmD,OAAiB,CAC7D,MAAMulC,EAAgBrzC,KAAKu0D,qBAAqB5pD,QAChD3K,KAAKu0D,qBAAqBzmD,OAASulC,EAAcwE,aAAa,EAAG,EAAG,OACpE73C,KAAKwuD,oBAAqB,EAC1B6B,EAAqBrwD,KAAM,QAG3BA,KAAKwuD,oBAAqB,EAC1B6B,EAAqBrwD,KAA2C,OAArCA,KAAKu0D,qBAAqBzmD,OAAkB,EAAI9N,KAAKu0D,qBAAqBzmD,OAAOpQ,UAGpH,gBACI,OAAOsC,KAAKu0D,qBAAqBJ,UAErC,cAAc14D,GACVuE,KAAKu0D,qBAAqBJ,UAAY14D,I0CsNjB+4D,CAA+B1N,G+DlQd,EAACkN,EAA2B9c,EAAoBoN,IACvF,KACH,MAAMmQ,EAA+B,IAAI3kB,QAwBzC,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAMggB,EAA8BD,EAA6Bz2C,IAAI08B,GACrE,YAAoC97C,IAAhC81D,EACOzuD,QAAQC,QAAQwuD,GA3BPtrD,OAAOoxC,EAAOE,EAA2BhG,KACjE,IAAIuf,EAAsB/c,EAAmBsD,GAG7C,IAD4CrH,EAAiB8gB,EAAqBvZ,GACxC,CACtC,MAAMvjC,EAAU,CACZrJ,OAAQmmD,EAAoBnmD,OAC5B8kC,aAAcqhB,EAAoBrhB,aAClCC,iBAAkBohB,EAAoBphB,iBACtCC,sBAAuBmhB,EAAoBnhB,sBAC3CoJ,sBAAuB+X,EAAoBE,WAE/CF,EAAsBD,EAA0BtZ,EAA2BvjC,GAS/E,OAPAs9C,EAA6B/mC,IAAIgtB,EAA2BuZ,GACxD5d,EAAuB4d,SACjB3P,EAAwB9J,EAAOE,EAA2BuZ,EAAoBtd,OAAO,GAAIjC,SAGzF4P,EAAwB9J,EAAOE,EAA2BuZ,EAAqBvf,GAElFuf,GAQIU,CAAoBna,EAAOE,EAA2BhG,M/DiOzCkgB,CAAmCZ,GAA2B9c,GAAoBoN,IACH0P,GAA2B5O,GAAkBM,GAA6B2K,IAEvLwE,GzC/PoC,EAAC/N,EAAsB8F,EAAkBkI,EAAyBtV,EAAuB4F,EAAkBM,EAA6B2K,IACvK,cAAwBvJ,EAC3B,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzCsoC,EAAkBD,EAAsBnM,EAAegW,GACvDnQ,EAAYwM,EAA4BrS,GAE9C+T,MAAMz8C,GAAS,EAAO80C,EADKvG,EAAY4b,EAAwBzL,EAAclN,cAAgB,MAE7Fn8C,KAAK+0D,WAAanI,EAAiB5sD,KAAMk5C,EAAWuG,EAAgBnkC,WACpE+0C,EAAqBrwD,KAAMqpD,EAAclN,cAE7C,gBACI,OAAOn8C,KAAK+0D,ayCkPKC,CAA2BlO,GAAsB8F,GgErQhC,EAACzB,EAAmB3L,EAAuBtI,EAAoB+U,EAAkB3H,IACnHnI,IACJ,MAAM8Y,EAA2B,IAAInlB,QAyBrC,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAMwgB,EAA0BD,EAAyBj3C,IAAI08B,GAC7D,YAAgC97C,IAA5Bs2D,EACOjvD,QAAQC,QAAQgvD,GA5BX9rD,OAAOoxC,EAAOE,EAA2BhG,KAC7D,IAAI+K,EAAkBvI,EAAmBsD,GAEzC,MAAM2a,EAAkChiB,EAAiBsM,EAAiB/E,GAC1E,IAAKya,EAAiC,CAClC,MAAMh+C,EAAU,CACZy7B,aAAc6M,EAAgB7M,aAC9BC,iBAAkB4M,EAAgB5M,iBAClCC,sBAAuB2M,EAAgB3M,sBACvCx3B,UAAWmkC,EAAgBnkC,UAAU7f,MACrC0gD,gBAEJsD,EAAkBD,EAAsB9E,EAA2BvjC,GAUvE,OARA89C,EAAyBvnC,IAAIgtB,EAA2B+E,GACnD0V,QAIKhK,EAAkBzQ,EAA2BF,EAAMl/B,UAAWmkC,EAAgBnkC,UAAWo5B,SAHzFuX,EAAiBvR,EAA2BF,EAAMl/B,UAAWmkC,EAAgBnkC,UAAWo5B,SAK5F4P,EAAwB9J,EAAOE,EAA2B+E,EAAiB/K,GAC1E+K,GAQI2V,CAAgB5a,EAAOE,EAA2BhG,MhEmOzC2gB,CAA+BlK,GAAmB3L,GAAuBtI,GAAoB+U,GAAkB3H,IACtB9E,GAAuB4F,GAAkBM,GAA6B2K,IACzLiF,GiErQmD,CAACnV,GAC/C,CAAC9M,EAAel8B,KACnB,MAAMo+C,EAA+BliB,EAAcmiB,2BAGnD,GAFAxX,GAA6BuX,EAA8Bp+C,GAEvDA,EAAQy7B,aAAe,EACvB,MAAMuN,IAGV,GAAiC,QAA7BhpC,EAAQ07B,iBACR,MAAMsN,IAOV,OALA/B,GAAqCmX,EAA8Bp+C,EAAS,UAC5EinC,GAAqCmX,EAA8Bp+C,EAAS,QAC5EinC,GAAqCmX,EAA8Bp+C,EAAS,SAC5EinC,GAAqCmX,EAA8Bp+C,EAAS,WAC5EinC,GAAqCmX,EAA8Bp+C,EAAS,aACrEo+C,GjEoP4BE,CAA0CtV,IAE/EuV,GvC/PiD,EAAC5O,EAAsB8F,EAAkB+I,EAAsCL,EAAoCnV,EAAyBiF,EAAkBM,EAA6B2K,IACvO,cAAqCvJ,EACxC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzCo+C,EAA+BD,EAAmCjiB,EAAegW,GACjFnQ,EAAYwM,EAA4BrS,GAE9C+T,MAAMz8C,GAAS,EAAO4qD,EADkBrc,EAAYyc,IAAyC,MAE7F31D,KAAK41D,QAAUhJ,EAAiB5sD,KAAMk5C,EAAWqc,EAA6BhZ,QAC9Ev8C,KAAK61D,MAAQjJ,EAAiB5sD,KAAMk5C,EAAWqc,EAA6B/Y,MAC5Ex8C,KAAK81D,8BAAgCP,EACrCv1D,KAAK+1D,OAASnJ,EAAiB5sD,KAAMk5C,EAAWqc,EAA6B9Y,OAC7Ez8C,KAAKg2D,SAAWpJ,EAAiB5sD,KAAMk5C,EAAWqc,EAA6B7Y,SAC/E18C,KAAKi2D,WAAarJ,EAAiB5sD,KAAMk5C,EAAWqc,EAA6B5Y,WACjF0T,EAAqBrwD,KAAM,MAE/B,aACI,OAAOA,KAAK41D,QAGhB,mBACI,OAAO51D,KAAK81D,8BAA8BljB,aAE9C,iBAAiBn3C,GACb,MAAMy6D,EAAuBl2D,KAAK81D,8BAA8BljB,aAEhE,GADA5yC,KAAK81D,8BAA8BljB,aAAen3C,EAC9CA,EAAQ,EAER,MADAuE,KAAK81D,8BAA8BljB,aAAesjB,EAC5C/V,IAOd,uBACI,OAAOngD,KAAK81D,8BAA8BjjB,iBAE9C,qBAAqBp3C,GACjB,MAAMy6D,EAAuBl2D,KAAK81D,8BAA8BjjB,iBAEhE,GADA7yC,KAAK81D,8BAA8BjjB,iBAAmBp3C,EACxC,QAAVA,EAEA,MADAuE,KAAK81D,8BAA8BjjB,iBAAmBqjB,EAChD/V,IAGd,WACI,OAAOngD,KAAK61D,MAEhB,YACI,OAAO71D,KAAK+1D,OAEhB,gBAEI,MAAkE,iBAAvD/1D,KAAK81D,8BAA8BK,UAAU16D,MAC7CuE,KAAK81D,8BAA8BK,UAAU16D,MAEjDuE,KAAK81D,8BAA8BK,UAE9C,cACI,OAAOn2D,KAAKg2D,SAEhB,gBACI,OAAOh2D,KAAKi2D,auC+LkBG,CAAwCtP,GAAsB8F,GkExQ7C,EAACzB,EAAmBmK,EAAoCpe,EAAoB+U,EAAkB3H,IAC9I,KACH,MAAM+R,EAAwC,IAAIvmB,QAuClD,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAM4hB,EAAuCD,EAAsCr4C,IAAI08B,GACvF,YAA6C97C,IAAzC03D,EACOrwD,QAAQC,QAAQowD,GA1CEltD,OAAOoxC,EAAOE,EAA2BhG,KAC1E,IAAI6gB,EAA+Bre,EAAmBsD,GAKtD,MAAM+b,EAA+CpjB,EAAiBoiB,EAA8B7a,GACpG,IAAK6b,EAA8C,CAC/C,MAAMp/C,EAAU,CACZolC,OAAQgZ,EAA6BhZ,OAAO9gD,MAC5Cm3C,aAAc2iB,EAA6B3iB,aAC3CC,iBAAkB0iB,EAA6B1iB,iBAC/CC,sBAAuByiB,EAA6BziB,sBACpD0J,KAAM+Y,EAA6B/Y,KAAK/gD,MACxCghD,MAAO8Y,EAA6B9Y,MAAMhhD,MAC1CihD,QAAS6Y,EAA6B7Y,QAAQjhD,MAC9CkhD,UAAW4Y,EAA6B5Y,UAAUlhD,OAEtD85D,EAA+BD,EAAmC5a,EAA2BvjC,GAkBjG,OAhBAk/C,EAAsC3oC,IAAIgtB,EAA2B6a,GAChEgB,SAQKpL,EAAkBzQ,EAA2BF,EAAM+B,OAAQgZ,EAA6BhZ,OAAQ7H,SAChGyW,EAAkBzQ,EAA2BF,EAAMgC,KAAM+Y,EAA6B/Y,KAAM9H,SAC5FyW,EAAkBzQ,EAA2BF,EAAMiC,MAAO8Y,EAA6B9Y,MAAO/H,SAC9FyW,EAAkBzQ,EAA2BF,EAAMkC,QAAS6Y,EAA6B7Y,QAAShI,SAClGyW,EAAkBzQ,EAA2BF,EAAMmC,UAAW4Y,EAA6B5Y,UAAWjI,WAXtGuX,EAAiBvR,EAA2BF,EAAM+B,OAAQgZ,EAA6BhZ,OAAQ7H,SAC/FuX,EAAiBvR,EAA2BF,EAAMgC,KAAM+Y,EAA6B/Y,KAAM9H,SAC3FuX,EAAiBvR,EAA2BF,EAAMiC,MAAO8Y,EAA6B9Y,MAAO/H,SAC7FuX,EAAiBvR,EAA2BF,EAAMkC,QAAS6Y,EAA6B7Y,QAAShI,SACjGuX,EAAiBvR,EAA2BF,EAAMmC,UAAW4Y,EAA6B5Y,UAAWjI,UASzG4P,EAAwB9J,EAAOE,EAA2B6a,EAA8B7gB,GACvF6gB,GAQIiB,CAA6Bhc,EAAOE,EAA2BhG,MlEwNzC+hB,CAA4CtL,GAAmBmK,GAAoCpe,GAAoB+U,GAAkB3H,IACtBgR,GAAoCnV,GAAyBiF,GAAkBM,GAA6B2K,IAEtQqG,GtCpQmC,EAAC5P,EAAsB8F,EAAkB+J,EAAwBhX,EAAsByF,EAAkBM,IACvI,cAAuBoB,EAC1B,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzCyoC,EAAiBD,EAAqBtM,EAAegW,GACrDnQ,EAAYwM,EAA4BrS,GAE9C+T,MAAMz8C,GAAS,EAAOi1C,EADI1G,EAAYyd,IAA2B,MAGjE32D,KAAK2wD,MAAQ/D,EAAiB5sD,KAAMk5C,EAAW0G,EAAe1K,KAAMlB,EAA4BD,GAEpG,WACI,OAAO/zC,KAAK2wD,QsCuPIiG,CAA0B9P,GAAsB8F,GmE1Q/B,EAACzB,EAAmBxL,EAAsBzI,EAAoB+U,EAAkB3H,IAClH,KACH,MAAMuS,EAA0B,IAAI/mB,QAwBpC,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAMoiB,EAAyBD,EAAwB74C,IAAI08B,GAC3D,YAA+B97C,IAA3Bk4D,EACO7wD,QAAQC,QAAQ4wD,GA3BZ1tD,OAAOoxC,EAAOE,EAA2BhG,KAC5D,IAAIkL,EAAiB1I,EAAmBsD,GAExC,MAAMuc,EAAiC5jB,EAAiByM,EAAgBlF,GACxE,IAAKqc,EAAgC,CACjC,MAAM5/C,EAAU,CACZy7B,aAAcgN,EAAehN,aAC7BC,iBAAkB+M,EAAe/M,iBACjCC,sBAAuB8M,EAAe9M,sBACtCoC,KAAM0K,EAAe1K,KAAKz5C,OAE9BmkD,EAAiBD,EAAqBjF,EAA2BvjC,GAUrE,OARA0/C,EAAwBnpC,IAAIgtB,EAA2BkF,GAClDmX,QAIK5L,EAAkBzQ,EAA2BF,EAAMtF,KAAM0K,EAAe1K,KAAMR,SAH9EuX,EAAiBvR,EAA2BF,EAAMtF,KAAM0K,EAAe1K,KAAMR,SAKjF4P,EAAwB9J,EAAOE,EAA2BkF,EAAgBlL,GACzEkL,GAQIoX,CAAexc,EAAOE,EAA2BhG,MnEyOzCuiB,CAA8B9L,GAAmBxL,GAAsBzI,GAAoB+U,GAAkB3H,IACtB3E,GAAsByF,GAAkBM,IACxJwR,GlB1P+C,EAACra,EAA0BD,EAAyBsD,EAAiCC,IAC/H,CAAC9M,EAAesL,GAAe/L,eAAcC,mBAAkBC,wBAAuBiK,WAAUE,kBACnG,MAAMl2C,EAAa23C,GAAkBC,EAAatL,EAAc6H,YAC1Dic,EAAoBpa,aAAoBqa,aAAera,EAAW,IAAIqa,aAAara,GACnFsa,EAAuBpa,aAAuBma,aAAena,EAAc,IAAIma,aAAana,GAC5FD,EAAiBma,EAAkB39D,OACnC0jD,EAAoBma,EAAqB79D,OACzC2jD,EAAYn/C,KAAK0S,IAAIssC,EAAgBE,GAC3C,GAAuB,IAAnBF,GAAwBA,EAAiB,GACzC,MAAMmD,IAEV,GAA6B,IAAzBgX,EAAkB,GAClB,MAAMva,IAEV,GAA0B,IAAtBM,GAA2BA,EAAoB,GAC/C,MAAMiD,IAEV,GAAgC,IAA5BkX,EAAqB,GACrB,MAAMza,IAEV,GAA6B,IAAzBua,EAAkB,GAAU,CAC5B,IAAK,IAAI19D,EAAI,EAAGA,EAAIyjD,EAAmBzjD,GAAK,EACxC49D,EAAqB59D,IAAM09D,EAAkB,GAEjD,IAAK,IAAI19D,EAAI,EAAGA,EAAIujD,EAAgBvjD,GAAK,EACrC09D,EAAkB19D,IAAM09D,EAAkB,GAGlD,MAAMG,EAAsBpX,EAAgC7M,EAAetsC,EAAY6rC,EAAcA,GACrG0kB,EAAoB1kB,aAAeA,EACnC0kB,EAAoBzkB,iBAAmBA,EACvCykB,EAAoBxkB,sBAAwBA,EAC5C,MACMykB,EAAgB,GAChBC,EAAW,GACXC,EAAW,GACjB,IAAK,IAAIh+D,EAAI,EAAGA,EAAIm5C,EAAcn5C,GAAK,EAAG,CACtC89D,EAAc/7D,KAAK,GACnB,MAAM4hD,EAAU,IAAIx8C,aANH,IAOXy8C,EAAU,IAAIz8C,aAPH,IAQjBw8C,EAAQsa,KAAK,GACbra,EAAQqa,KAAK,GACbF,EAASh8D,KAAK4hD,GACdqa,EAASj8D,KAAK6hD,GAGlBia,EAAoBtf,eAAkBnW,IAClC,MAAMqW,EAAcrW,EAAMqW,YACpByf,EAAe91B,EAAM81B,aACrB7jB,EAAmBoE,EAAYpE,iBACrC,IAAK,IAAIr6C,EAAI,EAAGA,EAAIq6C,EAAkBr6C,GAAK,EAAG,CAC1C,MAAMmqC,EAAQsU,EAAYrE,eAAep6C,GACnCq4C,EAAS6lB,EAAa9jB,eAAep6C,GAC3C89D,EAAc99D,GAAKqjD,GAAaqa,EAAmBna,EAAgBqa,EAAsBna,EAAmBC,EAAWqa,EAAS/9D,GAAIg+D,EAASh+D,GAAI89D,EAAc99D,GArBlJ,GAqBoKmqC,EAAOkO,KAGhM,MAAM8lB,EAAUvkB,EAAc6H,WAAa,EA6D3C,OAAOmE,GA5D0B,CAC7B,iBACI,OAAOt4C,GAEX,mBACI,OAAOuwD,EAAoB1kB,cAE/B,iBAAiBn3C,GACb67D,EAAoB1kB,aAAen3C,GAEvC,uBACI,OAAO67D,EAAoBzkB,kBAE/B,qBAAqBp3C,GACjB67D,EAAoBzkB,iBAAmBp3C,GAE3C,4BACI,OAAO67D,EAAoBxkB,uBAE/B,0BAA0Br3C,GACtB67D,EAAoBxkB,sBAAwBr3C,GAEhD,cACI,OAAO67D,EAAoB3sD,SAE/B,aACI,MAAO,CAAC2sD,IAEZ,qBACI,OAAOA,EAAoB3d,gBAE/B,sBACI,OAAO2d,EAAoB1d,iBAE/BpiC,iBAAgB,IAAInD,IAETijD,EAAoB9/C,iBAAiBnD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEvEwnC,cAAa,IAAIxnC,IACNijD,EAAoBzb,cAAcxnC,EAAK,IAElD,qBAAqBy8C,EAAaC,EAAaC,GAC3C,GAAIF,EAAYt3D,SAAWu3D,EAAYv3D,QAAUu3D,EAAYv3D,SAAWw3D,EAAcx3D,OAClF,MAAMqjD,IAEV,MAAMrjD,EAASs3D,EAAYt3D,OAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAChC,MAAMo+D,GAAS75D,KAAKgoC,IAAM8qB,EAAYr3D,GAAKm+D,GACrC3X,EAAI,CAACjiD,KAAKmrC,IAAI0uB,GAAQ75D,KAAKorC,IAAIyuB,IAG/Bp5C,EAAWohC,GAFCE,GAAmBsX,EAAsBpX,GACvCF,GAAmBoX,EAAmBlX,IAE1D8Q,EAAYt3D,GAAKuE,KAAK+qC,KAAKtqB,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAC9EuyC,EAAcv3D,GAAKuE,KAAK8qC,MAAMrqB,EAAS,GAAIA,EAAS,MAG5DhH,oBAAmB,IAAIpD,IACZijD,EAAoB7/C,oBAAoBpD,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAGxBijD,IkBqIvBQ,CAAsCjb,GAA0BD,GAAyBsD,GAAiCC,IAC3J4X,GoE5Q+C,EAAC3U,EAAiBzD,EAAsBO,EAAiC8X,IAClHtd,GAEA0I,EAAgB3F,IAAoB,IAAMA,GAAmB/C,KAEtDz0C,QAAQC,QAAQk9C,EAAgB4U,EAA2CA,IAA4C/8C,MAAMg9C,IAChI,IAAKA,EAA2C,CAC5C,MAAMX,EAAsBpX,EAAgCxF,EAA2B,IAAK,EAAG,GAC/FA,EAA0Bwd,WAAa,KACnCZ,EAAoBtf,eAAiB,KACrCsf,EAAoBrgB,cAExBqgB,EAAoBtf,eAAiB,IAAM0C,EAA0B8S,YACrE8J,EAAoB/hD,QAAQmlC,EAA0B7zC,aAE1D,OAAO6zC,EAA0Byd,oBAGlC,IAAIlyD,SAASC,IAEhB,MAAM2pD,EAAWlQ,EAAqBjF,EAA2B,CAC7D9H,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBoC,KAAM,IAEVwF,EAA0Bwd,WAAcr2B,IACpCguB,EAAS5Y,aACT/wC,EAAQ27B,EAAM4Y,iBAElBoV,EAASt6C,QAAQmlC,EAA0B7zC,aAC3C6zC,EAA0Byd,oBpE6OEC,CAAsChV,GAAiBzD,GAAsBO,GqE7QtD,EAACP,EAAsB2F,IAC3E,KACH,GAA6C,OAAzCA,EACA,OAAOr/C,QAAQC,SAAQ,GAE3B,MAAMw0C,EAA4B,IAAI4K,EAAqC,EAAG,EAAG,OAE3EuK,EAAWlQ,EAAqBjF,EAA2B,CAC7D9H,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBoC,KAAM,IAGV,OAAO,IAAIjvC,SAASC,IAChBw0C,EAA0Bwd,WAAa,KACnCrI,EAAS5Y,aACT/wC,EAAkD,IAA1Cw0C,EAA0B8S,cAEtC9S,EAA0Byd,qBrE0PgHE,CAAgD1Y,GAAsB2F,KACtNgT,GsEhP4C,EAACjN,EAAmCnU,EAAoBoO,EAAsChB,EAAyByT,IAC9J,CAAChb,EAAUE,KACd,MAAMoV,EAA2B,IAAIviB,QACrC,IAAIyoB,EAAwB,KAgD5B,MAAO,CACH,OAAO/d,EAAOE,EAA2BhG,GACrC,MAAMgQ,EAA0B2N,EAAyBr0C,IAAI08B,GAC7D,YAAgC97C,IAA5B8lD,EACOz+C,QAAQC,QAAQw+C,GAnDXt7C,OAAOoxC,EAAOE,EAA2BhG,KAC7D,IAAIuN,EAA8B,KAC9BuW,EAAsBthB,EAAmBsD,GAE7C,MAAMie,EAAsCtlB,EAAiBqlB,EAAqB9d,GAmBlF,QAjBkD97C,IAA9C87C,EAA0Bge,gBAC1BzW,EAA8BoJ,EAAkC3Q,EAA2B,CACvF5sC,OAAQ,KACR8kC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBoB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAGZokB,IAEND,EAAsB9d,EAA0Bge,gBAAgBzb,EAAaF,IAEjFsV,EAAyB3kC,IAAIgtB,EAA2D,OAAhCuH,EAAuCuW,EAAsBvW,GACjF,OAAhCA,EAAsC,CACtC,GAA8B,OAA1BsW,EAAgC,CAChC,GAA6C,OAAzCjT,EACA,MAAM,IAAI9kD,MAAM,uDAEpB,MAAMm4D,EAA6B,IAAIrT,EAEvC9K,EAAM7vC,QAAQ9D,YAAY+rC,aAE1B4H,EAAM7vC,QAAQnR,OAAQkhD,EAA0BQ,YAChDqd,EAAwB,iBACdjU,EAAwB9J,EAAOme,EAA4BA,EAA2B9xD,YAAa6tC,GAlExG,EAAC+F,EAAgBC,EAA2BqC,EAAUE,KAC3E,MAAMka,EAAoBpa,aAAoBqa,aAAera,EAAW,IAAIqa,aAAara,GACnFsa,EAAuBpa,aAAuBma,aAAena,EAAc,IAAIma,aAAana,GAC5FD,EAAiBma,EAAkB39D,OACnC0jD,EAAoBma,EAAqB79D,OACzC2jD,EAAYn/C,KAAK0S,IAAIssC,EAAgBE,GAC3C,GAA6B,IAAzBia,EAAkB,GAAU,CAC5B,IAAK,IAAI19D,EAAI,EAAGA,EAAIujD,EAAgBvjD,GAAK,EACrC49D,EAAqB59D,IAAM09D,EAAkB,GAEjD,IAAK,IAAI19D,EAAI,EAAGA,EAAIyjD,EAAmBzjD,GAAK,EACxC09D,EAAkB19D,IAAM09D,EAAkB,GAGlD,MACM/Z,EAAU,IAAIx8C,aADC,IAEfy8C,EAAU,IAAIz8C,aAFC,IAGfg4D,EAAiBle,EAA0B7C,aAAa4C,EAAe3G,iBAAkB2G,EAAejhD,OAAQihD,EAAeS,YAC/HpH,EAAmB2G,EAAe3G,iBACxC,IAAK,IAAIr6C,EAAI,EAAGA,EAAIq6C,EAAkBr6C,GAAK,EAAG,CAC1C,MAAMmqC,EAAQ6W,EAAe5G,eAAep6C,GACtCq4C,EAAS8mB,EAAe/kB,eAAep6C,GAC7C2jD,EAAQsa,KAAK,GACbra,EAAQqa,KAAK,GACb5a,GAAaqa,EAAmBna,EAAgBqa,EAAsBna,EAAmBC,EAAWC,EAASC,EAAS,EAVrG,GAUsHzZ,EAAOkO,GAElJ,OAAO8mB,GA0CoBC,OADsBd,EAAgCY,GACrBje,EAA2BqC,EAAUE,IAHzD,GAM5B,MAAM2b,QAAuBL,EAG7B,OAFAtW,EAA4Bn0C,OAAS8qD,EACrC3W,EAA4B9mC,MAAM,GAC3B8mC,EAGX,aADMqC,EAAwB9J,EAAOE,EAA2B8d,EAAqB9jB,GAC9E8jB,GAQIlG,CAAgB9X,EAAOE,EAA2BhG,MtEuLrCokB,CAAmCzN,GAAmCnU,GAAoBoO,GAAsChB,GAAyByT,IAEvLgB,GnC1QwC,EAACjS,EAAsBkS,EAA2BV,EAA6BlT,EAAkBM,EAA6B2K,IACjK,cAA4BvJ,EAC/B,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjCuuC,EAAYwM,EAA4BrS,GACxCgW,EAAgB,IAAK,MAAoBlyC,GACzCqhD,EAAsBQ,EAA0B3lB,EAAe6F,EAAY,KAAOvuC,EAAQg0C,YAAa0K,GAE7GjC,MAAMz8C,GAAS,EAAO6tD,EADUtf,EAAYof,EAA4BjP,EAActM,SAAUsM,EAAcpM,aAAe,M0GZ9E,CAACub,IACb,IAAEvH,EAA7CuH,EAAoBvH,sBAAyBA,EAO1CuH,EAAoBvH,qBANZ,CAACH,EAAaC,EAAaC,KAC9B,GAAIF,EAAYt3D,SAAWu3D,EAAYv3D,QAAUu3D,EAAYv3D,SAAWw3D,EAAcx3D,OAClF,MAAMqjD,KAEV,OAAOoU,EAAqB51D,KAAKm9D,EAAqB1H,EAAaC,EAAaC,M1GUhFiI,CAA4CT,GAC5Cx4D,KAAKk5D,qBAAuBV,EAE5BnI,EAAqBrwD,KAAM,GAE/B,qBAAqB8wD,EAAaC,EAAaC,GAC3C,OAAOhxD,KAAKk5D,qBAAqBjI,qBAAqBH,EAAaC,EAAaC,KmCyP3DmI,CAA+BrS,GwE/QhB,CAACoQ,GACtC,CAAC7jB,EAAesL,EAAaxnC,KAEhC,QAAsCvY,IAAlCy0C,EAAcqlB,gBACd,OAAOxB,EAA+B7jB,EAAesL,EAAaxnC,GAGtE,MAAMqhD,EAAsBnlB,EAAcqlB,gBAAgBvhD,EAAQ8lC,YAAa9lC,EAAQ4lC,UAEvF,OADAiB,GAA6Bwa,EAAqBrhD,GAC3CqhD,GxEqQmBY,CAAiClC,IAC8CoB,GAA6BlT,GAAkBM,GAA6B2K,IACvLgJ,GyEhRoC,EAACzM,EAAkB8E,EAA+BuB,EAAgC/S,EAAiCwF,IAClJ,CAAC/6C,EAAS0oC,KACb,MAAMimB,EAAiBjmB,EAAc8F,UAuE/B,SAAEogB,EAAQ,SAAEC,EAAQ,SAAEC,EAAQ,UAAE3Y,EAAS,UAAEC,EAAS,UAAEC,EAAS,IAAE0Y,EAAG,IAAEC,EAAG,IAAEC,QAAoCh7D,IAA5B06D,EAAeC,SArE1E,MAC1B,MAAMxH,EAAoBL,EAA8Bre,EAAe,CACnET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB6G,eAAgB,IAEdT,EAAYwM,EAA4BrS,GACxCikB,EAAsBpX,EAAgC7M,EAAe,IAAK,EAAG,GAC7EwmB,EAAuB,CAACj2B,EAAOnoC,KACjC,MAAMq+D,EAAqB7G,EAA+B5f,EAAe,CACrET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBsC,OAAQ35C,IAcZ,OAZAq+D,EAAmBvkD,QAAQw8C,EAAmB,EAAGnuB,GAEjDk2B,EAAmB3+C,QACnB5gB,OAAOC,eAAes/D,EAAmB1kB,OAAQ,eAAgB,CAC7Dp3B,IAAG,IACQviB,IAORmxD,EAAiB,CAAEjiD,WAAWuuC,EAAW4gB,EAAmB1kB,OAAQpB,EAA4BD,IAE3G,IAAIgmB,EAAkB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACnCC,EAAe,CAAC,EAAG,EAAG,GA0B1B,OAxBA1C,EAAoBtf,eAAiB,EAAGE,kBACpC,MAAM+hB,EAAc,CAChB/hB,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,IAE9BomB,EAAY9hB,MAAK,CAAC18C,EAAOiD,IAAUjD,IAAUs+D,EAAgBr7D,OAC7D46D,EAAeY,kBAAkBD,GACjCF,EAAkBE,GAEtB,MAAME,EAAU,CACZjiB,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,IAE9BsmB,EAAQhiB,MAAK,CAAC18C,EAAOiD,IAAUjD,IAAUu+D,EAAat7D,OACtD46D,EAAec,eAAeD,GAC9BH,EAAeG,IAGvBpI,EAAkBx8C,QAAQ+hD,GACnB,CACHiC,SAAUM,EAAqB,EAAG,GAClCL,SAAUK,EAAqB,EAAG,GAClCJ,SAAUI,EAAqB,GAAI,GACnC/Y,UAAW+Y,EAAqB,EAAG,GACnC9Y,UAAW8Y,EAAqB,EAAG,GACnC7Y,UAAW6Y,EAAqB,EAAG,GACnCH,IAAKG,EAAqB,EAAG,GAC7BF,IAAKE,EAAqB,EAAG,GAC7BD,IAAKC,EAAqB,EAAG,KAG4FQ,GAA0Bf,EAC3J,MAAO,CACH,eACI,OAAOC,GAEX,eACI,OAAOC,GAEX,eACI,OAAOC,GAEX,gBACI,OAAO3Y,GAEX,gBACI,OAAOC,GAEX,gBACI,OAAOC,GAEX,UACI,OAAO0Y,GAEX,UACI,OAAOC,GAEX,UACI,OAAOC,KzE4KKU,CAA2B1N,GAAkB8E,GAA+BuB,GAAgC/S,GAAiCwF,IACnK6U,GAAkC,IAAIzqB,QACtC0qB,G0ElRkD,EAACtL,EAAiCmK,EAAqBvT,EAAwBJ,EAA6B6U,EAAiChY,IAC1L,cAAsCuD,EACzC,YAAY2U,EAAgB3mB,GACxBsT,MAAMqT,GACNz6D,KAAKy6D,eAAiBA,EACtBvqB,EAAcxiB,IAAI1tB,KAAMy6D,GACpB/U,EAA4B+U,IAC5BF,EAAgC7sC,IAAI+sC,EAAgB,IAAI7vC,KAE5D5qB,KAAK06D,aAAe,IAAIxL,EAAgClvD,KAAM8zC,GAC9D9zC,KAAK26D,UAAYtB,EAAoBr5D,KAAMy6D,GAC3Cz6D,KAAK46D,eAAiB,KAE1B,kBACI,OAAO56D,KAAKy6D,eAAejN,YAE/B,kBACI,OAAOxtD,KAAK06D,aAEhB,eACI,OAAO16D,KAAK26D,UAEhB,oBACI,OAAO36D,KAAK46D,eAEhB,kBAAkBn/D,GACd,MAAMozD,EAAmC,mBAAVpzD,EAAuB8mD,EAAkBviD,KAAMvE,GAAS,KACvFuE,KAAKy6D,eAAeI,cAAgBhM,EACpC,MAAMiM,EAAsB96D,KAAKy6D,eAAeI,cAChD76D,KAAK46D,eACuB,OAAxBE,GAAgCA,IAAwBjM,EAClDpzD,EACAq/D,EAEd,iBACI,OAAO96D,KAAKy6D,eAAevf,WAE/B,YACI,OAAOl7C,KAAKy6D,eAAe/wD,Q1E4OIqxD,CAAyC7L,GAAiCmK,GAAqBvT,GAAwBJ,GAA6B6U,GAAiChY,IAC1NyY,G2E/Q2C,EAACjQ,EAAqB3H,EAAiBpB,EAAkEG,EAA+DC,EAAiEC,IAC/Q,CAAChP,EAAel8B,KACnB,MAAM8jD,EAAuB5nB,EAAc6O,mBAwB3C,OAvBAlE,GAA6Bid,EAAsB9jD,GACnDinC,GAAqC6c,EAAsB9jD,EAAS,UACpEinC,GAAqC6c,EAAsB9jD,EAAS,kBACvCvY,IAAzBuY,EAAQipC,aACR6a,EAAqBC,gBAAgB/jD,EAAQipC,cAG7CtC,GAA4Bmd,EAAsB9jD,EAAS,QAG1DisC,EAAgBpB,GAAkE,IAAMA,EAAiE3O,MAC1JgL,GAA0D4c,GAGzD7X,EAAgBjB,GAA+D,IAAMA,EAA8D9O,MACpJgP,EAAuD4Y,EAAsB5nB,GAG5E+P,EAAgBhB,GAAiE,IAAMA,EAAgE/O,MACxJoL,GAAyDwc,GAG7DlQ,EAAoB1X,EAAe4nB,GAC5BA,G3EqPoBE,CAAkCpQ,GAAqB3H,GAAiBpB,GAAkEG,GAA+DC,GAAiEC,IACvS+Y,G4EpR6C,EAACjQ,EAAmB6P,EAA4B9jB,EAAoB+U,EAAkB3H,IAC9H,KACH,MAAM+W,EAAgC,IAAIvrB,QAC1C,IAAIsQ,EAAe,KACfjlC,EAAQ,KACRi9B,EAAO,KAmCX,MAAO,CACH,iBAAiB38C,GACb2kD,EAAe3kD,GAEnB,UAAUA,GACN0f,EAAQ1f,GAEZ,SAASA,GACL28C,EAAO38C,GAEX,OAAO++C,EAAOE,EAA2BhG,GACrC,MAAM4mB,EAA+BD,EAA8Br9C,IAAI08B,GACvE,YAAqC97C,IAAjC08D,EACOr1D,QAAQC,QAAQo1D,GA/CNlyD,OAAOoxC,EAAOE,EAA2BhG,KAClE,IAAIumB,EAAuB/jB,EAAmBsD,GAE9C,MAAM+gB,EAAuCpoB,EAAiB8nB,EAAsBvgB,GACpF,IAAK6gB,EAAsC,CACvC,MAAMpkD,EAAU,CACZy7B,aAAcqoB,EAAqBroB,aACnCC,iBAAkBooB,EAAqBpoB,iBACvCC,sBAAuBmoB,EAAqBnoB,sBAC5CmC,OAAQgmB,EAAqBhmB,OAAOx5C,MACpC+yC,UAAWysB,EAAqBzsB,UAAU/yC,MAC1C2kD,aAA+B,OAAjBA,OAAwBxhD,EAAYwhD,EAClDhjD,KAAM69D,EAAqB79D,MAE/B69D,EAAuBD,EAA2BtgB,EAA2BvjC,GAC/D,OAAVgE,GACA8/C,EAAqB9/C,MAAMA,GAElB,OAATi9B,GACA6iB,EAAqB7iB,KAAKA,GAalC,OAVAijB,EAA8B3tC,IAAIgtB,EAA2BugB,GACxDM,SAKKpQ,EAAkBzQ,EAA2BF,EAAMvF,OAAQgmB,EAAqBhmB,OAAQP,SACxFyW,EAAkBzQ,EAA2BF,EAAMhM,UAAWysB,EAAqBzsB,UAAWkG,WAL9FuX,EAAiBvR,EAA2BF,EAAMvF,OAAQgmB,EAAqBhmB,OAAQP,SACvFuX,EAAiBvR,EAA2BF,EAAMhM,UAAWysB,EAAqBzsB,UAAWkG,UAMjG4P,EAAwB9J,EAAOE,EAA2BugB,EAAsBvmB,GAC/EumB,GAiBIO,CAAqBhhB,EAAOE,EAA2BhG,M5E6NzC+mB,CAAoCtQ,GAAmB6P,GAA4B9jB,GAAoB+U,GAAkB3H,IACxJoX,Gd1QyC,EAAC5U,EAAsB8F,EAAkBoO,EAA4BI,EAA8BhW,EAAkBM,EAA6BnD,IACtL,cAA6BuE,EAChC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzC8jD,EAAuBD,EAA2B3nB,EAAegW,GACjEnQ,EAAYwM,EAA4BrS,GACxCsoB,EAA0BziB,EAAYkiB,IAAiC,KACvExD,EAAUjtD,EAAQuwC,WAAa,EACrCkM,MAAMz8C,GAAS,EAAOswD,EAAsBU,GAE5C37D,KAAKywD,QAAU7D,EAAiB5sD,KAAMk5C,EAAW+hB,EAAqBhmB,OAAQ,QAAS,QAEvFj1C,KAAK0wD,WAAa9D,EAAiB5sD,KAAMk5C,EAAW+hB,EAAqBzsB,UAAWopB,GAAUA,GAC9F53D,KAAK47D,sBAAwBX,EAC7Bj7D,KAAK2uD,SAAW,KAChB3uD,KAAK67D,wBAA0BF,EACM,OAAjC37D,KAAK67D,8BAAmEj9D,IAA/ByqD,EAAcjJ,eACvDpgD,KAAK67D,wBAAwBzb,aACzBiJ,EAAcjJ,cAG1B,aACI,OAAOpgD,KAAKywD,QAEhB,gBACI,OAAOzwD,KAAK0wD,WAEhB,cACI,OAAO1wD,KAAK2uD,SAEhB,YAAYlzD,GACR,MAAMozD,EAAmC,mBAAVpzD,EAAuB8mD,EAAkBviD,KAAMvE,GAAS,KACvFuE,KAAK47D,sBAAsB9M,QAAUD,EACrC,MAAME,EAAgB/uD,KAAK47D,sBAAsB9M,QACjD9uD,KAAK2uD,SAA6B,OAAlBI,GAA0BA,IAAkBF,EAAkBpzD,EAAQszD,EAE1F,WACI,OAAO/uD,KAAK47D,sBAAsBx+D,KAEtC,SAAS3B,GACLuE,KAAK47D,sBAAsBx+D,KAAO3B,EACG,OAAjCuE,KAAK67D,0BACL77D,KAAK67D,wBAAwBzb,aAAe,MAGpD,gBAAgBA,GACZpgD,KAAK47D,sBAAsBV,gBAAgB9a,GACN,OAAjCpgD,KAAK67D,0BACL77D,KAAK67D,wBAAwBzb,aAAeA,GAGpD,MAAM7B,EAAO,GAKT,GAJAv+C,KAAK47D,sBAAsBzgD,MAAMojC,GACI,OAAjCv+C,KAAK67D,0BACL77D,KAAK67D,wBAAwB1gD,MAAQojC,GAEd,WAAvBv+C,KAAK2K,QAAQjB,MAAoB,CACjC0oC,EAAyBpyC,MACzB,MAAMgvD,EAA8B,KAChChvD,KAAK47D,sBAAsBnkD,oBAAoB,QAASu3C,GACpD/a,EAAkBj0C,OAClBuyC,EAA0BvyC,OAGlCA,KAAK47D,sBAAsBpkD,iBAAiB,QAASw3C,IAG7D,KAAKzQ,EAAO,GACRv+C,KAAK47D,sBAAsBxjB,KAAKmG,GACK,OAAjCv+C,KAAK67D,0BACL77D,KAAK67D,wBAAwBzjB,KAAOmG,KcmMlBud,CAAgChV,GAAsB8F,GAAkBoO,GAA4BI,GAA8BhW,GAAkBM,GAA6BnD,IAC7MwZ,G6EvR2D,CAAC1Q,GACvD,CAAChY,EAAeD,KACnB,MAAM6O,EAA8BoJ,EAAkChY,EAAe,CACjFvlC,OAAQ,KACR8kC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBoB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAEZd,EAAoBF,EAAcwE,aAAa,EAAG,EAAG,OAK3D,OAJAoK,EAA4Bn0C,OAASylC,EACrC0O,EAA4B/N,MAAO,EACnC+N,EAA4B1sC,QAAQ69B,GACpC6O,EAA4B9mC,QACrB,KACH8mC,EAA4B7J,OAC5B6J,EAA4BhL,WAAW7D,K7EoQA4oB,CAAkD3Q,IAC/F4Q,G8EtRgD,EAACF,EAA4Cnf,EAAyB+C,EAAsB2B,EAAW6P,IAClJ,CAAC9d,GAAiB+N,QAAOC,gBAAeyR,MAC3C,MAAMoJ,EAAyB7oB,EAAc8oB,mBACvCC,EAAyB/oB,EAAc8oB,mBAC7Cne,GAA6Bke,EAAwBpJ,GACrD9U,GAA6Boe,EAAwBtJ,GACrD,MAAMuJ,EAAgB1c,EAAqBtM,EAAe,IAAKyf,EAAkB5d,KAAM,IACjFonB,EAAiB3c,EAAqBtM,EAAe,IAAKyf,EAAkB5d,MAAO,IACnFqnB,EAAiB5c,EAAqBtM,EAAe,IAAKyf,EAAkB5d,KAAM,IAClFsnB,EAAiB7c,EAAqBtM,EAAe,IAAKyf,EAAkB5d,MAAO,IACzF,IAAIunB,EAAwC,KACxCC,GAAc,EACdC,EAAkB,KACtB,MAAMC,EAA4B,CAC9B,mBAGA,mBACI,OAAOV,EAAuBtpB,cAElC,iBAAiBn3C,GACb4gE,EAAczpB,aAAen3C,EAC7B6gE,EAAe1pB,aAAen3C,EAC9BygE,EAAuBtpB,aAAen3C,EACtC8gE,EAAe3pB,aAAen3C,EAC9B2gE,EAAuBxpB,aAAen3C,EACtC+gE,EAAe5pB,aAAen3C,GAElC,uBACI,OAAOygE,EAAuBrpB,kBAElC,qBAAqBp3C,GACjB4gE,EAAcxpB,iBAAmBp3C,EACjC6gE,EAAezpB,iBAAmBp3C,EAClCygE,EAAuBrpB,iBAAmBp3C,EAC1C8gE,EAAe1pB,iBAAmBp3C,EAClC2gE,EAAuBvpB,iBAAmBp3C,EAC1C+gE,EAAe3pB,iBAAmBp3C,GAEtC,4BACI,OAAOygE,EAAuBppB,uBAElC,0BAA0Br3C,GACtB4gE,EAAcvpB,sBAAwBr3C,EACtC6gE,EAAexpB,sBAAwBr3C,EACvCygE,EAAuBppB,sBAAwBr3C,EAC/C8gE,EAAezpB,sBAAwBr3C,EACvC2gE,EAAuBtpB,sBAAwBr3C,EAC/C+gE,EAAe1pB,sBAAwBr3C,GAE3C,cACI,OAAOygE,EAAuBvxD,SAElC,YACI,OAAOgyD,GAEX,UAAUlhE,GAEN,GAAc,OAAVA,GAAkBA,EAAMjC,OAAS,EACjC,MAAMojD,IAEV,GAAc,OAAVnhD,EACAygE,EAAuB9a,MAAQ3lD,EAC/B2gE,EAAuBhb,MAAQ3lD,MAE9B,CACD,MAAMohE,EAAcphE,EAAMjC,OACpBsjE,EAAgB,IAAIl8D,aAAai8D,EAAc,EAAKA,EAAc,GAClEE,EAAgB,IAAIn8D,aAAai8D,EAAc,EAAKA,EAAc,GACxEC,EAAc,GAAKrhE,EAAM,GACzBshE,EAAc,IAAMthE,EAAMohE,EAAc,GACxC,MAAMrjE,EAASwE,KAAK4B,MAAMi9D,EAAc,GAAK,GACvCG,GAAeH,EAAc,GAAK,EAAI,EAC5C,IAAK,IAAIpjE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAChC,MAAM+F,EAAkB/F,EAAID,EAAUwjE,EAChCv9D,EAAazB,KAAK0B,MAAMF,GACxBG,EAAa3B,KAAK4B,KAAKJ,GAC7Bs9D,EAAcrjE,GACVgG,IAAeE,EACTlE,EAAMgE,IACL,GAAKD,EAAiBC,IAAehE,EAAMgE,IACzC,GAAKE,EAAaH,IAAmB/D,EAAMkE,GACxDo9D,EAActjE,GACVgG,IAAeE,GACRlE,EAAMohE,EAAc,EAAIp9D,KACtB,GAAKD,EAAiBC,IAAehE,EAAMohE,EAAc,EAAIp9D,IAC7D,GAAKE,EAAaH,IAAmB/D,EAAMohE,EAAc,EAAIl9D,GAE9Em9D,EAActjE,GAAUqjE,EAAc,GAAM,EAAIphE,EAAMjC,EAAS,IAAMiC,EAAMjC,EAAS,GAAKiC,EAAMjC,EAAS,IAAM,EAC9G0iE,EAAuB9a,MAAQ0b,EAC/BV,EAAuBhb,MAAQ2b,EAEnCJ,EAAkBlhE,EACdihE,IACIpb,EAAUqb,IAA8D,OAA1CF,EAC9BA,EAAwCV,EAA2C1oB,EAAegpB,GAEnD,OAA1CI,IACLA,IACAA,EAAwC,QAIpD,aACI,MAAO,CAACJ,IAEZ,qBACI,OAAOH,EAAuBviB,gBAElC,sBACI,OAAOuiB,EAAuBtiB,iBAElC,iBACI,OAAOsiB,EAAuB7a,YAElC,eAAe5lD,GACXygE,EAAuB7a,WAAa5lD,EACpC2gE,EAAuB/a,WAAa5lD,GAExC+b,iBAAgB,IAAInD,IACTgoD,EAAc7kD,iBAAiBnD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEjEwnC,cAAa,IAAIxnC,IACNgoD,EAAcxgB,cAAcxnC,EAAK,IAE5CoD,oBAAmB,IAAIpD,IACZgoD,EAAc5kD,oBAAoBpD,EAAK,GAAIA,EAAK,GAAIA,EAAK,KA+BxE,OA5Bc,OAAV+sC,IAEAwb,EAA0Bxb,MAAQA,aAAiBxgD,aAAewgD,EAAQ,IAAIxgD,aAAawgD,IAE3FC,IAAeub,EAA0Bvb,aACzCub,EAA0Bvb,WAAaA,GAuBpC8P,EAAmB9R,GAAqBud,EAA2BL,IArBpD,KAClBF,EAAc9mD,QAAQ2mD,GAAwB3mD,QAAQgnD,GACtDF,EAAc9mD,QAAQ+mD,GAAgB/mD,QAAQ6mD,GAAwB7mD,QAAQinD,GAAgBjnD,QAAQgnD,GACtGG,GAAc,EACVpb,EAAUqb,KACVF,EAAwCV,EAA2C1oB,EAAegpB,OAGjF,KACrBA,EAAcplB,WAAWilB,GACzBA,EAAuBjlB,WAAWslB,GAClCF,EAAcplB,WAAWqlB,GACzBA,EAAerlB,WAAWmlB,GAC1BA,EAAuBnlB,WAAWulB,GAClCA,EAAevlB,WAAWslB,GAC1BG,GAAc,EACgC,OAA1CD,IACAA,IACAA,EAAwC,U9E4HhBQ,CAAuClB,GAA4Cnf,GAAyB+C,GAAsB2B,GAAW6P,IAC/K+L,G+EvR2C,EAACnB,EAA4Cnf,EAAyBqf,EAAiC3a,EAAW6P,EAAoBhL,EAA+B5E,IAC3M,CAAClO,EAAel8B,KACnB,MAAMgmD,EAAuB9pB,EAAc8oB,mBAO3C,GAAsC,OAAlChW,GACuC,uBAAvCA,EAA8B7pD,WACqBsC,IAAnDy0C,EAAcsE,aAAazC,KAAKkoB,eAChC,OAAOnB,EAAgC5oB,EAAel8B,GAE1D6mC,GAA6Bmf,EAAsBhmD,GACnD,MAAMiqC,EAA0B,OAAlBjqC,EAAQiqC,OAAkBjqC,EAAQiqC,iBAAiBxgD,aAAeuW,EAAQiqC,MAAQ,IAAIxgD,aAAauW,EAAQiqC,OAEzH,GAAc,OAAVA,GAAkBA,EAAM5nD,OAAS,EACjC,MAAMojD,IAGVkB,GAA4Bqf,EAAsB,CAAE/b,SAAS,SAC7DtD,GAA4Bqf,EAAsBhmD,EAAS,cAC3D,IAAIslD,EAAwC,KACxCC,GAAc,EA2BlB,OA1BAnb,EAAmB4b,EAAsB,SAAUn/C,GAAQ,IAAMA,EAAI3iB,KAAK8hE,KAAwBzvC,GAASjyB,IACvGiyB,EAAIryB,KAAK8hE,EAAsB1hE,GAC3BihE,IACIpb,EAAU7lD,IAAoD,OAA1CghE,EACpBA,EAAwCV,EAA2C1oB,EAAe8pB,GAE5F7b,EAAU7lD,IAAoD,OAA1CghE,IAC1BA,IACAA,EAAwC,OAGzChhE,KAeJ01D,EAAmBgM,GAbJ,KAClBT,GAAc,EACVpb,EAAU6b,EAAqB/b,SAC/Bqb,EAAwCV,EAA2C1oB,EAAe8pB,OAGjF,KACrBT,GAAc,EACgC,OAA1CD,IACAA,IACAA,EAAwC,U/EuOrBY,CAAkCtB,GAA4Cnf,GAAyBqf,GAAiC3a,GAAW6P,GAAoBhL,GAA+B5E,IAEnO+b,IgFxRwCC,GCDI,EAAChnB,EAAyCqG,EAAyB8U,EAA+B/R,EAAsBO,EAAiCgd,EAA4B/c,EAAyBnJ,EAA8Cma,IACnS,CAAC9d,GAAiBgN,iBAAgBC,iBAAgBC,gBAAeC,gBAAeC,cAAaC,eAAcC,eAAcC,eAAcC,eAAcC,YAAWC,YAAWC,YAAWC,cAAaC,mBAAkB4R,MACxN,MAAM0K,EAAanqB,EAAcoqB,eAEjC,GAAI3K,EAAiBlgB,aAAe,EAChC,MAAMuN,IAGV,GAA0C,QAAtC2S,EAAiBjgB,iBACjB,MAAMsN,IAEVnC,GAA6Bwf,EAAY1K,GACzC,MAAM4K,EAAyB,CAC3B9qB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,YAErBif,EAAoBL,EAA8Bre,EAAe,IAChEqqB,EACH5qB,sBAAuB,WACvB6G,eAAgB,IAEd0iB,EAAgB1c,EAAqBtM,EAAe,IAAKyf,EAAkB5d,KAAM,IACjFyoB,EAAuBhe,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAC9F0oB,EAAuBje,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAC9F2oB,EAAuBle,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAC9F4oB,EAAoBne,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAC3F6oB,EAAoBpe,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAC3F8oB,EAAoBre,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAC3FoiB,EAAsBpX,EAAgC7M,EAAe,IAAK,EAAG,GAC7E4qB,EAAiBf,EAA2B7pB,EAAe,IAC1DqqB,EACHtc,MAAO,IAAIxgD,aAAa,CAAC,EAAG,IAC5BygD,WAAY,SAEhB,IAAI0Y,EAAkB,CAACrZ,EAAcC,EAAcC,GAC/CoZ,EAAe,CAAClZ,EAAWC,EAAWC,GAE1CsW,EAAoBtf,eAAiB,EAAGE,kBACpC,MAAM+hB,EAAc,CAChB/hB,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,IAE9BomB,EAAY9hB,MAAK,CAAC18C,EAAOiD,IAAUjD,IAAUs+D,EAAgBr7D,OAC7D8+D,EAAWtD,kBAAkBD,GAC7BF,EAAkBE,GAEtB,MAAME,EAAU,CACZjiB,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,GAC9BqE,EAAYrE,eAAe,GAAG,IAE9BsmB,EAAQhiB,MAAK,CAAC18C,EAAOiD,IAAUjD,IAAUu+D,EAAat7D,OACtD8+D,EAAWpD,eAAeD,GAC1BH,EAAeG,IAGvB5/D,OAAOC,eAAeojE,EAAqB1oB,KAAM,eAAgB,CAAEl3B,IAAK,IAAM,IAC9EzjB,OAAOC,eAAeqjE,EAAqB3oB,KAAM,eAAgB,CAAEl3B,IAAK,IAAM,IAC9EzjB,OAAOC,eAAesjE,EAAkB5oB,KAAM,eAAgB,CAAEl3B,IAAK,IAAM,IAC3EzjB,OAAOC,eAAeujE,EAAkB7oB,KAAM,eAAgB,CAAEl3B,IAAK,IAAM,IAC3EzjB,OAAOC,eAAewjE,EAAkB9oB,KAAM,eAAgB,CAAEl3B,IAAK,IAAM,IAC3E,MAAMkgD,EAAwB,CAC1B,mBAGA,mBACI,OAAOV,EAAW5qB,cAEtB,iBAAiBn3C,GAEb,GAAIA,EAAQ,EACR,MAAM0kD,IAEVkc,EAAczpB,aAAen3C,EAC7B+hE,EAAW5qB,aAAen3C,GAE9B,uBACI,OAAO+hE,EAAW3qB,kBAEtB,qBAAqBp3C,GAEjB,GAAc,QAAVA,EACA,MAAM0kD,IAEVkc,EAAcxpB,iBAAmBp3C,EACjC+hE,EAAW3qB,iBAAmBp3C,GAElC,4BACI,OAAO+hE,EAAW1qB,uBAEtB,0BAA0Br3C,GACtB4gE,EAAcvpB,sBAAwBr3C,EACtC+hE,EAAW1qB,sBAAwBr3C,GAEvC,qBACI,OAAO+hE,EAAWnd,gBAEtB,mBAAmB5kD,GACf+hE,EAAWnd,eAAiB5kD,GAEhC,qBACI,OAAO+hE,EAAWld,gBAEtB,mBAAmB7kD,GACf+hE,EAAWld,eAAiB7kD,GAEhC,oBACI,OAAO+hE,EAAWjd,eAEtB,kBAAkB9kD,GAEd,GAAIA,EAAQ,GAAKA,EAAQ,EACrB,MAAMmhD,IAEV4gB,EAAWjd,cAAgB9kD,GAE/B,cACI,OAAO+hE,EAAW7yD,SAEtB,oBACI,OAAO6yD,EAAWhd,eAEtB,kBAAkB/kD,GACd+hE,EAAWhd,cAAgB/kD,GAE/B,aACI,MAAO,CAAC4gE,IAEZ,kBACI,OAAOmB,EAAW/c,aAEtB,gBAAgBhlD,GAEZ,GAAIA,EAAQ,EACR,MAAM,IAAI+iD,WAEdgf,EAAW/c,YAAchlD,GAE7B,qBACI,OAAO+hE,EAAW7jB,gBAEtB,sBACI,OAAO6jB,EAAW5jB,iBAEtB,mBACI,OAAO+jB,EAAqBzoB,MAEhC,mBACI,OAAO0oB,EAAqB1oB,MAEhC,mBACI,OAAO2oB,EAAqB3oB,MAEhC,mBACI,OAAOsoB,EAAW3c,cAEtB,iBAAiBplD,GACb+hE,EAAW3c,aAAeplD,GAE9B,gBACI,OAAOqiE,EAAkB5oB,MAE7B,gBACI,OAAO6oB,EAAkB7oB,MAE7B,gBACI,OAAO8oB,EAAkB9oB,MAE7B,kBACI,OAAOsoB,EAAWvc,aAEtB,gBAAgBxlD,GAEZ,GAAIA,EAAQ,EACR,MAAM,IAAI+iD,WAEdgf,EAAWvc,YAAcxlD,GAE7B,oBACI,OAAO+hE,EAAWtc,eAEtB,kBAAkBzlD,GAEd,GAAIA,EAAQ,EACR,MAAM,IAAI+iD,WAEdgf,EAAWtc,cAAgBzlD,GAE/B+b,iBAAgB,IAAInD,IACTgoD,EAAc7kD,iBAAiBnD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEjEwnC,cAAa,IAAIxnC,IACNgoD,EAAcxgB,cAAcxnC,EAAK,IAE5CoD,oBAAmB,IAAIpD,IACZgoD,EAAc5kD,oBAAoBpD,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAkFxE,OA/EIgsC,IAAmB6d,EAAsB7d,iBACzC6d,EAAsB7d,eAAiBA,GAEvCC,IAAmB4d,EAAsB5d,iBACzC4d,EAAsB5d,eAAiBA,GAEvCC,IAAkB2d,EAAsB3d,gBACxC2d,EAAsB3d,cAAgBA,GAEtCC,IAAkB0d,EAAsB1d,gBACxC0d,EAAsB1d,cAAgBA,GAEtCC,IAAgByd,EAAsBzd,cACtCyd,EAAsBzd,YAAcA,GAEpCC,IAAiBwd,EAAsBxd,aAAajlD,QACpDyiE,EAAsBxd,aAAajlD,MAAQilD,GAE3CC,IAAiBud,EAAsBvd,aAAallD,QACpDyiE,EAAsBvd,aAAallD,MAAQklD,GAE3CC,IAAiBsd,EAAsBtd,aAAanlD,QACpDyiE,EAAsBtd,aAAanlD,MAAQmlD,GAE3CC,IAAiBqd,EAAsBrd,eACvCqd,EAAsBrd,aAAeA,GAErCC,IAAcod,EAAsBpd,UAAUrlD,QAC9CyiE,EAAsBpd,UAAUrlD,MAAQqlD,GAExCC,IAAcmd,EAAsBnd,UAAUtlD,QAC9CyiE,EAAsBnd,UAAUtlD,MAAQslD,GAExCC,IAAckd,EAAsBld,UAAUvlD,QAC9CyiE,EAAsBld,UAAUvlD,MAAQulD,GAExCC,IAAgBid,EAAsBjd,cACtCid,EAAsBjd,YAAcA,GAEpCC,IAAkBgd,EAAsBhd,gBACxCgd,EAAsBhd,cAAgBA,GAEf,IAAvB6Y,EAAgB,IAAmC,IAAvBA,EAAgB,IAAmC,IAAvBA,EAAgB,IACxEyD,EAAWtD,kBAAkBH,GAET,IAApBC,EAAa,IAAgC,IAApBA,EAAa,IAAgC,IAApBA,EAAa,IAC/DwD,EAAWpD,eAAeJ,GAiCvB7I,EAAmB9R,GAAqB6e,EAAuBV,IA/BhD,KAClBnB,EAAc9mD,QAAQioD,GAEtBjnB,EAAwC8lB,EAAe4B,EAAgB,EAAG,GAC1EA,EAAe1oD,QAAQooD,GAAsBpoD,QAAQw8C,EAAmB,EAAG,GAC3EkM,EAAe1oD,QAAQqoD,GAAsBroD,QAAQw8C,EAAmB,EAAG,GAC3EkM,EAAe1oD,QAAQsoD,GAAsBtoD,QAAQw8C,EAAmB,EAAG,GAC3EkM,EAAe1oD,QAAQuoD,GAAmBvoD,QAAQw8C,EAAmB,EAAG,GACxEkM,EAAe1oD,QAAQwoD,GAAmBxoD,QAAQw8C,EAAmB,EAAG,GACxEkM,EAAe1oD,QAAQyoD,GAAmBzoD,QAAQw8C,EAAmB,EAAG,GACxEA,EAAkBx8C,QAAQ+hD,GAAqB/hD,QAAQ89B,EAAcxsC,gBAEhD,KACrBw1D,EAAcplB,WAAWumB,GAEzBxmB,EAA6CqlB,EAAe4B,EAAgB,EAAG,GAC/EA,EAAehnB,WAAW0mB,GAC1BA,EAAqB1mB,WAAW8a,GAChCkM,EAAehnB,WAAW2mB,GAC1BA,EAAqB3mB,WAAW8a,GAChCkM,EAAehnB,WAAW4mB,GAC1BA,EAAqB5mB,WAAW8a,GAChCkM,EAAehnB,WAAW6mB,GAC1BA,EAAkB7mB,WAAW8a,GAC7BkM,EAAehnB,WAAW8mB,GAC1BA,EAAkB9mB,WAAW8a,GAC7BkM,EAAehnB,WAAW+mB,GAC1BA,EAAkB/mB,WAAW8a,GAC7BA,EAAkB9a,WAAWqgB,GAC7BA,EAAoBrgB,WAAW5D,EAAcxsC,iBjFGrBs3D,CAAmC5nB,EAAyCqG,GAAyB8U,GAA+B/R,GAAsBO,GAAiCgd,GAA4B/c,GAAyBnJ,EAA8Cma,IgFtRvT,CAAC9d,EAAel8B,KACnB,MAAMinD,EAAmB/qB,EAAcoqB,eAEvC,YAAsC7+D,IAAlCw/D,EAAiB1d,aACV6c,GAA4BlqB,EAAel8B,IAEtD6mC,GAA6BogB,EAAkBjnD,GAC/CinC,GAAqCggB,EAAkBjnD,EAAS,gBAChEinC,GAAqCggB,EAAkBjnD,EAAS,gBAChEinC,GAAqCggB,EAAkBjnD,EAAS,gBAChEinC,GAAqCggB,EAAkBjnD,EAAS,aAChEinC,GAAqCggB,EAAkBjnD,EAAS,aAChEinC,GAAqCggB,EAAkBjnD,EAAS,aAChE2mC,GAA4BsgB,EAAkBjnD,EAAS,kBACvD2mC,GAA4BsgB,EAAkBjnD,EAAS,kBACvD2mC,GAA4BsgB,EAAkBjnD,EAAS,iBACvD2mC,GAA4BsgB,EAAkBjnD,EAAS,iBACvD2mC,GAA4BsgB,EAAkBjnD,EAAS,eACvD2mC,GAA4BsgB,EAAkBjnD,EAAS,gBACvD2mC,GAA4BsgB,EAAkBjnD,EAAS,eACvD2mC,GAA4BsgB,EAAkBjnD,EAAS,iBAChDinD,KhFmQTC,GkF1RyC,EAAClT,EAAmBuG,EAA+BuB,EAAgCtT,EAAsB2d,EAAwBpmB,EAAoBoO,EAAsC2G,EAAkB3H,EAAyByT,IAC1Q,KACH,MAAM1F,EAA2B,IAAIviB,QACrC,IAAIwuB,EAAwB,KAsJ5B,MAAO,CACH,OAAO9jB,EAAOE,EAA2BhG,GACrC,MAAM6pB,EAA2ClM,EAAyBr0C,IAAI08B,GAC9E,YAAiD97C,IAA7C2/D,EACOt4D,QAAQC,QAAQq4D,GAzJXn1D,OAAOoxC,EAAOE,EAA2BhG,KAC7D,IAAIkL,EAAiB,KACjBwe,EAAmBlnB,EAAmBsD,GAC1C,MAAMgkB,EAAyB,CAC3B5rB,aAAcwrB,EAAiBxrB,aAC/BC,iBAAkBurB,EAAiBvrB,iBACnCC,sBAAuBsrB,EAAiBtrB,uBAEtC2rB,EAAgC,IAC/BD,EACHne,eAAgB+d,EAAiB/d,eACjCC,eAAgB8d,EAAiB9d,eACjCC,cAAe6d,EAAiB7d,cAChCC,cAAe4d,EAAiB5d,cAChCC,YAAa2d,EAAiB3d,YAC9BI,aAAcud,EAAiBvd,aAC/BI,YAAamd,EAAiBnd,YAC9BC,cAAekd,EAAiBld,eAG9Bwd,EAAmCvrB,EAAiBirB,EAAkB1jB,GAE5E,GAAI,eAAgB0jB,EAChBxe,EAAiBD,EAAqBjF,EAA2B,IAAK8jB,EAAwBtpB,KAAM,SAEnG,IAAKwpB,EAAkC,CACxC,MAAMvnD,EAAU,IACTsnD,EACH/d,aAAc0d,EAAiB1d,aAAajlD,MAC5CklD,aAAcyd,EAAiBzd,aAAallD,MAC5CmlD,aAAcwd,EAAiBxd,aAAanlD,MAC5CqlD,UAAWsd,EAAiBtd,UAAUrlD,MACtCslD,UAAWqd,EAAiBrd,UAAUtlD,MACtCulD,UAAWod,EAAiBpd,UAAUvlD,OAE1C2iE,EAAmBd,EAAuB5iB,EAA2BvjC,GAGzE,GADAk7C,EAAyB3kC,IAAIgtB,EAA8C,OAAnBkF,EAA0Bwe,EAAmBxe,GAC9E,OAAnBA,EAAyB,CACzB,GAA8B,OAA1B0e,EAAgC,CAChC,GAA6C,OAAzChZ,EACA,MAAM,IAAI9kD,MAAM,uDAEpB,MAAMm4D,EAA6B,IAAIrT,EAAqC,EAE5E9K,EAAM7vC,QAAQnR,OAAQkhD,EAA0BQ,YAC1C0W,EAA0BF,EAA8BiH,EAA4B,CACtF/lB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB6G,eAAgB,IAEpBiY,EAAwBr8C,QAAQojD,EAA2B9xD,aAC3Dy3D,EAAwB,WACpB,MAAMK,QAAkC14D,QAAQu+C,IAAI,CAChDhK,EAAMkG,aACNlG,EAAMmG,aACNnG,EAAMoG,aACNpG,EAAMsG,UACNtG,EAAMuG,UACNvG,EAAMwG,WACR/wC,KAAI7G,MAAOorC,EAAY91C,KACrB,MAAMy0D,EAA2BF,EAA+B0F,EAA4B,CACxF/lB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBsC,OAAkB,IAAV12C,EAAc,EAAI,IAG9B,aADMutD,EAAiB0M,EAA4BnkB,EAAY2e,EAAyB/d,OAAQV,GACzFye,MAEX,IAAK,IAAI15D,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBklE,EAA0BllE,GAAG8b,QAAQq8C,EAAyB,EAAGn4D,GACjEklE,EAA0BllE,GAAG0hB,MAAM,GAEvC,OAAO48C,EAAgCY,IAtBnB,GAyB5B,MAAMle,QAAuB6jB,EACvBjC,EAAgB1c,EAAqBjF,EAA2B,IAAK8jB,EAAwBtpB,KAAM,UACnGoP,EAAwB9J,EAAOE,EAA2B2hB,EAAe3nB,GAC/E,MAAMkqB,EAAe,GACrB,IAAK,IAAInlE,EAAI,EAAGA,EAAIghD,EAAe3G,iBAAkBr6C,GAAK,EACtDmlE,EAAapjE,KAAKi/C,EAAe5G,eAAep6C,IAEpD,IAAIsgE,EAAkB,CAAC6E,EAAa,GAAG,GAAIA,EAAa,GAAG,GAAIA,EAAa,GAAG,IAC3E5E,EAAe,CAAC4E,EAAa,GAAG,GAAIA,EAAa,GAAG,GAAIA,EAAa,GAAG,IACxEC,EAAelf,EAAqBjF,EAA2B,IAAK8jB,EAAwBtpB,KAAM,IAClG4pB,EAAoBxB,EAAuB5iB,EAA2B,IACnE+jB,EACH/d,aAAcqZ,EAAgB,GAC9BpZ,aAAcoZ,EAAgB,GAC9BnZ,aAAcmZ,EAAgB,GAC9BjZ,UAAWkZ,EAAa,GACxBjZ,UAAWiZ,EAAa,GACxBhZ,UAAWgZ,EAAa,KAE5BqC,EAAc9mD,QAAQspD,GAActpD,QAAQupD,EAAkBnoB,OAAO,IACrEmoB,EAAkBvpD,QAAQqqC,GAC1B,IAAK,IAAInmD,EAAI,IAAKA,EAAIghD,EAAejhD,OAAQC,GAAK,IAAK,CACnD,MAAMwgE,EAAc,CAAC2E,EAAa,GAAGnlE,GAAImlE,EAAa,GAAGnlE,GAAImlE,EAAa,GAAGnlE,IACvE0gE,EAAU,CAACyE,EAAa,GAAGnlE,GAAImlE,EAAa,GAAGnlE,GAAImlE,EAAa,GAAGnlE,IACzE,GAAIwgE,EAAY9hB,MAAK,CAAC18C,EAAOiD,IAAUjD,IAAUs+D,EAAgBr7D,MAC7Dy7D,EAAQhiB,MAAK,CAAC18C,EAAOiD,IAAUjD,IAAUu+D,EAAat7D,KAAS,CAC/Dq7D,EAAkBE,EAClBD,EAAeG,EACf,MAAM3M,EAAc/zD,EAAIihD,EAA0BQ,WAClD2jB,EAAa3pB,KAAK6M,eAAe,EAAGyL,GACpCqR,EAAelf,EAAqBjF,EAA2B,IAAK8jB,EAAwBtpB,KAAM,IAClG4pB,EAAoBxB,EAAuB5iB,EAA2B,IAC/D+jB,EACH/d,aAAcqZ,EAAgB,GAC9BpZ,aAAcoZ,EAAgB,GAC9BnZ,aAAcmZ,EAAgB,GAC9BjZ,UAAWkZ,EAAa,GACxBjZ,UAAWiZ,EAAa,GACxBhZ,UAAWgZ,EAAa,KAE5B6E,EAAa3pB,KAAK6M,eAAe,EAAGyL,GACpC6O,EAAc9mD,QAAQspD,GAActpD,QAAQupD,EAAkBnoB,OAAO,IACrEmoB,EAAkBvpD,QAAQqqC,IAGlC,OAAOA,EAwBX,OAtBK8e,SASKvT,EAAkBzQ,EAA2BF,EAAMkG,aAAc0d,EAAiB1d,aAAchM,SAChGyW,EAAkBzQ,EAA2BF,EAAMmG,aAAcyd,EAAiBzd,aAAcjM,SAChGyW,EAAkBzQ,EAA2BF,EAAMoG,aAAcwd,EAAiBxd,aAAclM,SAChGyW,EAAkBzQ,EAA2BF,EAAMsG,UAAWsd,EAAiBtd,UAAWpM,SAC1FyW,EAAkBzQ,EAA2BF,EAAMuG,UAAWqd,EAAiBrd,UAAWrM,SAC1FyW,EAAkBzQ,EAA2BF,EAAMwG,UAAWod,EAAiBpd,UAAWtM,WAb1FuX,EAAiBvR,EAA2BF,EAAMkG,aAAc0d,EAAiB1d,aAAchM,SAC/FuX,EAAiBvR,EAA2BF,EAAMmG,aAAcyd,EAAiBzd,aAAcjM,SAC/FuX,EAAiBvR,EAA2BF,EAAMoG,aAAcwd,EAAiBxd,aAAclM,SAC/FuX,EAAiBvR,EAA2BF,EAAMsG,UAAWsd,EAAiBtd,UAAWpM,SACzFuX,EAAiBvR,EAA2BF,EAAMuG,UAAWqd,EAAiBrd,UAAWrM,SACzFuX,EAAiBvR,EAA2BF,EAAMwG,UAAWod,EAAiBpd,UAAWtM,IAU/F2B,EAAuB+nB,SACjB9Z,EAAwB9J,EAAOE,EAA2B0jB,EAAiBznB,OAAO,GAAIjC,SAGtF4P,EAAwB9J,EAAOE,EAA2B0jB,EAAkB1pB,GAE/E0pB,GAQI9L,CAAgB9X,EAAOE,EAA2BhG,MlF2HxCqqB,CAAgC5T,GAAmBuG,GAA+BuB,GAAgCtT,GAAsB2d,GAAwBpmB,GAAoBoO,GAAsC2G,GAAkB3H,GAAyByT,IAChSiH,GbzQqC,EAAClY,EAAsB8F,EAAkB0Q,EAAwBe,EAA0BjZ,EAAkBM,EAA6B2K,IAC1K,cAAyBvJ,EAC5B,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzCinD,EAAmBd,EAAuBjqB,EAAegW,GACzDnQ,EAAYwM,EAA4BrS,GAE9C+T,MAAMz8C,GAAS,EAAOyzD,EADMllB,EAAYmlB,IAA6B,MAErEr+D,KAAKi/D,kBAAoBb,EAEzBp+D,KAAKk/D,cAAgBtS,EAAiB5sD,KAAMk5C,EAAWklB,EAAiB1d,aAAc1M,EAA4BD,GAClH/zC,KAAKm/D,cAAgBvS,EAAiB5sD,KAAMk5C,EAAWklB,EAAiBzd,aAAc3M,EAA4BD,GAClH/zC,KAAKo/D,cAAgBxS,EAAiB5sD,KAAMk5C,EAAWklB,EAAiBxd,aAAc5M,EAA4BD,GAClH/zC,KAAKq/D,WAAazS,EAAiB5sD,KAAMk5C,EAAWklB,EAAiBtd,UAAW9M,EAA4BD,GAC5G/zC,KAAKs/D,WAAa1S,EAAiB5sD,KAAMk5C,EAAWklB,EAAiBrd,UAAW/M,EAA4BD,GAC5G/zC,KAAKu/D,WAAa3S,EAAiB5sD,KAAMk5C,EAAWklB,EAAiBpd,UAAWhN,EAA4BD,GAE5Gsc,EAAqBrwD,KAAM,GAE/B,qBACI,OAAOA,KAAKi/D,kBAAkB5e,eAElC,mBAAmB5kD,GACfuE,KAAKi/D,kBAAkB5e,eAAiB5kD,EAE5C,qBACI,OAAOuE,KAAKi/D,kBAAkB3e,eAElC,mBAAmB7kD,GACfuE,KAAKi/D,kBAAkB3e,eAAiB7kD,EAE5C,oBACI,OAAOuE,KAAKi/D,kBAAkB1e,cAElC,kBAAkB9kD,GACduE,KAAKi/D,kBAAkB1e,cAAgB9kD,EAE3C,oBACI,OAAOuE,KAAKi/D,kBAAkBze,cAElC,kBAAkB/kD,GACduE,KAAKi/D,kBAAkBze,cAAgB/kD,EAE3C,kBACI,OAAOuE,KAAKi/D,kBAAkBxe,YAElC,gBAAgBhlD,GACZuE,KAAKi/D,kBAAkBxe,YAAchlD,EAEzC,mBACI,OAAOuE,KAAKk/D,cAEhB,mBACI,OAAOl/D,KAAKm/D,cAEhB,mBACI,OAAOn/D,KAAKo/D,cAEhB,mBACI,OAAOp/D,KAAKi/D,kBAAkBpe,aAElC,iBAAiBplD,GACbuE,KAAKi/D,kBAAkBpe,aAAeplD,EAE1C,gBACI,OAAOuE,KAAKq/D,WAEhB,gBACI,OAAOr/D,KAAKs/D,WAEhB,gBACI,OAAOt/D,KAAKu/D,WAEhB,kBACI,OAAOv/D,KAAKi/D,kBAAkBhe,YAElC,gBAAgBxlD,GACZuE,KAAKi/D,kBAAkBhe,YAAcxlD,EAEzC,oBACI,OAAOuE,KAAKi/D,kBAAkB/d,cAElC,kBAAkBzlD,GACduE,KAAKi/D,kBAAkB/d,cAAgBzlD,IaqLrB+jE,CAA4B1Y,GAAsB8F,GAAkB0Q,GAAwBe,GAA0BjZ,GAAkBM,GAA6B2K,IAE7LoP,GZ5RuC,EAACC,EAA0Bta,EAAkBua,EAAmBC,IAClG,MAAMC,EACT,YAAYl1D,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,E+FPyB,CAAClyC,IACxC,MAAM,KAAE2oD,EAAI,KAAEC,GAAS5oD,EACvB,YAAavY,IAATkhE,OACalhE,IAATmhE,EACO,IAAK5oD,EAAS2oD,KAAM,CAAC,EAAG,GAAIC,KAAM,CAAC,EAAG,IAE1C,IAAK5oD,EAAS2oD,KAAMnmE,MAAM4C,KAAKwjE,GAAM,IAAM,IAAIA,aAE7CnhE,IAATmhE,EACO,IAAK5oD,EAAS2oD,OAAMC,KAAMpmE,MAAM4C,KAAKujE,GAAM,IAAM,KAErD,IAAK3oD,EAAS2oD,OAAMC,S/FJGH,CAA4B,IAAK,MAAoBzoD,IACrEipC,EAAesf,EAAyBrsB,EAAegW,GAG7D,OAFAsW,EAAkBp6D,IAAI66C,GAEfA,EAEX,OAAQtlD,OAAO8vD,aAAa/wD,GACxB,OAAsB,OAAbA,GAAyC,iBAAbA,GAAyBU,OAAOqnD,eAAe/nD,KAAcgmE,EAAajlE,WAC3G+kE,EAAkB30C,IAAInxB,KYgRNmmE,CoF/Re,CAACvsB,GACrC,CAACJ,GAAiB6I,uBAAsB4jB,OAAMC,WAEjD,MAAME,EAAgBH,aAAgBl/D,aAAek/D,EAAO,IAAIl/D,aAAak/D,GACvEI,EAAgBH,aAAgBn/D,aAAem/D,EAAO,IAAIn/D,aAAam/D,GACvEI,EAAqB9sB,EAAc+sB,mBAAmBF,EAAeD,EAAe,CAAE/jB,yBAE5F,GAAIviD,MAAM4C,KAAKujE,GAAMtmE,OAAS,EAC1B,MAAMi6C,IAEV,OAAO0sB,GpFoRkBE,CAAgC5sB,GACuB2R,GAAkB,IAAIxV,SAExG0wB,GqF/R6C,EAACC,EAAmCpgB,IAC5E,CAAC9M,EAAel8B,KACnB,MAAM07B,EAAmB17B,EAAQ07B,iBAKjC,GAAyB,gBAArBA,EACA,MAAMsN,IAGV,QAAyCvhD,IAArCy0C,EAAcmtB,mBACd,OAAOD,EAAkCltB,EAAel8B,GAE5D,MAAMspD,EAAyBptB,EAAcmtB,qBAe7C,OAdAxiB,GAA6ByiB,EAAwBtpD,GACrDinC,GAAqCqiB,EAAwBtpD,EAAS,OAKtE5c,OAAOC,eAAeimE,EAAwB,mBAAoB,CAC9DziD,IAAK,IAAM60B,EACXnlB,IAAMjyB,IACF,GAAIA,IAAUo3C,EACV,MAAMsN,OAIXsgB,GrFkQsBC,CsFhSmB,EAAChP,EAA+B1S,EAAiCW,EAAsBud,EAA4B/c,EAAyBgR,KAEhM,MAAMwP,EAAa,MACbC,EAAW,IAAIhgE,aAAa,CAAC,EAAG,IAChCigE,EAAU7iE,KAAKgoC,GAAK,EACpB03B,EAAyB,CAAE9qB,aAAc,EAAGC,iBAAkB,WAAYC,sBAAuB,YACjGguB,EAAqC,IAAKpD,EAAwBrc,WAAY,QA+J9E0f,EAAqB,CAAC1tB,EAAeT,EAAcypB,EAAe2E,EAAajP,KACjF,GAAqB,IAAjBnf,EACA,MAhK0B,EAACS,EAAegpB,EAAe2E,EAAajP,KAC1E,MAAMkP,EAAsB,IAAIrgE,aAAa+/D,GACvCO,EAAuB,IAAItgE,aAAa+/D,GAC9C,IAAK,IAAIlnE,EAAI,EAAGA,EAAIknE,EAAYlnE,GAAK,EAAG,CACpC,MAAM+M,EAAK/M,EAAI,MAAoBonE,EACnCI,EAAoBxnE,GAAKuE,KAAKmrC,IAAI3iC,GAClC06D,EAAqBznE,GAAKuE,KAAKorC,IAAI5iC,GAEvC,MAAM26D,EAAexhB,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAEtFksB,EAAsBlE,EAA2B7pB,EAAe,IAAKytB,EAAoC1f,MAAO6f,IAEhHI,EAAqBnE,EAA2B7pB,EAAe,IAAKytB,EAAoC1f,MAAOwf,IAC/GU,EAAgB3hB,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAEvFqsB,EAAuBrE,EAA2B7pB,EAAe,IAAKytB,EAAoC1f,MAAO8f,IACvH,MAAO,CACH,eACI7E,EAAc9mD,QAAQ4rD,GACtB9E,EAAc9mD,aAAqC3W,IAA7ByiE,EAAkB1qB,OAAuB0qB,EAAoBA,EAAkB1qB,OAAO,IAC5G0lB,EAAc9mD,QAAQ+rD,GACtBD,EAAkB9rD,QAAQyrD,GAC1BA,EAAYzrD,aAAsC3W,IAA9BwiE,EAAmBzqB,OAAuByqB,EAAqBA,EAAmBzqB,OAAO,IAC7GqqB,EAAYzrD,aAAuC3W,IAA/B2iE,EAAoB5qB,OAAuB4qB,EAAsBA,EAAoB5qB,OAAO,IAChHyqB,EAAmB7rD,QAAQ4rD,EAAajsB,MACxCqsB,EAAoBhsD,QAAQ+rD,EAAcpsB,MAC1CisB,EAAa5rD,QAAQw8C,EAAmB,EAAG,GAC3CuP,EAAc/rD,QAAQw8C,EAAmB,EAAG,IAEhD,kBACIsK,EAAcplB,WAAWkqB,GACzB9E,EAAcplB,gBAAwCr4C,IAA7ByiE,EAAkB1qB,OAAuB0qB,EAAoBA,EAAkB1qB,OAAO,IAC/G0lB,EAAcplB,WAAWqqB,GACzBD,EAAkBpqB,WAAW+pB,GAC7BA,EAAY/pB,gBAAyCr4C,IAA9BwiE,EAAmBzqB,OAAuByqB,EAAqBA,EAAmBzqB,OAAO,IAChHqqB,EAAY/pB,gBAA0Cr4C,IAA/B2iE,EAAoB5qB,OAAuB4qB,EAAsBA,EAAoB5qB,OAAO,IACnHyqB,EAAmBnqB,WAAWkqB,EAAajsB,MAC3CqsB,EAAoBtqB,WAAWqqB,EAAcpsB,MAC7CisB,EAAalqB,WAAW8a,EAAmB,EAAG,GAC9CuP,EAAcrqB,WAAW8a,EAAmB,EAAG,MAyH5CyP,CAA0BnuB,EAAegpB,EAAe2E,EAAajP,GAEhF,GAAqB,IAAjBnf,EACA,MAxH4B,EAACS,EAAegpB,EAAe2E,EAAajP,KAC5E,MAAM0P,EAAwC,IAAI7gE,aAAa+/D,GACzDe,EAAyC,IAAI9gE,aAAa+/D,GAC1DgB,EAAyC,IAAI/gE,aAAa+/D,GAC1DiB,EAA0C,IAAIhhE,aAAa+/D,GAC3D3D,EAAch/D,KAAK0B,MAAMihE,QAC/B,IAAK,IAAIlnE,EAAI,EAAGA,EAAIknE,EAAYlnE,GAAK,EACjC,GAAIA,EAAIujE,EAAa,CACjB,MAAMx2D,GAAM/M,EAAIujE,IAAgB2D,MAAiB3D,GAAgB6D,EACjEY,EAAsChoE,GAAKuE,KAAKmrC,IAAI3iC,GACpDk7D,EAAuCjoE,GAAKuE,KAAKorC,IAAI5iC,GACrDm7D,EAAuCloE,GAAK,EAC5CmoE,EAAwCnoE,GAAK,MAE5C,CACD,MAAM+M,EAAK/M,GAAKknE,MAAiB3D,GAAgB6D,EACjDY,EAAsChoE,GAAK,EAC3CioE,EAAuCjoE,GAAK,EAC5CkoE,EAAuCloE,GAAKuE,KAAKmrC,IAAI3iC,GACrDo7D,EAAwCnoE,GAAKuE,KAAKorC,IAAI5iC,GAG9D,MAAM24C,EAAsBH,EAAgC3L,EAAe,CACvET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB8G,gBAAiB,IAEfioB,EAAiCliB,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAExG4sB,EAAuC5E,EAA2B7pB,EAAe,IAChFytB,EACH1f,MAAOqgB,IAELM,EAAkCpiB,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAEzG8sB,EAAwC9E,EAA2B7pB,EAAe,IACjFytB,EACH1f,MAAOsgB,IAGLL,EAAqBnE,EAA2B7pB,EAAe,IAAKytB,EAAoC1f,MAAOwf,IAC/GqB,EAAkCtiB,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAEzGgtB,EAAwChF,EAA2B7pB,EAAe,IACjFytB,EACH1f,MAAOugB,IAELQ,EAAmCxiB,EAAqBtM,EAAe,IAAKqqB,EAAwBxoB,KAAM,IAE1GktB,EAAyClF,EAA2B7pB,EAAe,IAClFytB,EACH1f,MAAOwgB,IAEX,MAAO,CACH,eACIvF,EAAc9mD,QAAQ4pC,GACtBkd,EAAc9mD,aAAqC3W,IAA7ByiE,EAAkB1qB,OAAuB0qB,EAAoBA,EAAkB1qB,OAAO,IAC5GwI,EAAoB5pC,QAAQssD,EAAgC,GAC5D1iB,EAAoB5pC,QAAQwsD,EAAiC,GAC7D5iB,EAAoB5pC,QAAQ0sD,EAAiC,GAC7D9iB,EAAoB5pC,QAAQ4sD,EAAkC,GAC9Dd,EAAkB9rD,QAAQyrD,GAC1BA,EAAYzrD,aAAwD3W,IAAhDkjE,EAAqCnrB,OACnDmrB,EACAA,EAAqCnrB,OAAO,IAClDqqB,EAAYzrD,aAAyD3W,IAAjDojE,EAAsCrrB,OACpDqrB,EACAA,EAAsCrrB,OAAO,IACnDqqB,EAAYzrD,aAAyD3W,IAAjDsjE,EAAsCvrB,OACpDurB,EACAA,EAAsCvrB,OAAO,IACnDqqB,EAAYzrD,aAA0D3W,IAAlDwjE,EAAuCzrB,OACrDyrB,EACAA,EAAuCzrB,OAAO,IACpDmrB,EAAqCvsD,QAAQssD,EAA+B3sB,MAC5E8sB,EAAsCzsD,QAAQwsD,EAAgC7sB,MAC9EgtB,EAAsC3sD,QAAQ0sD,EAAgC/sB,MAC9EktB,EAAuC7sD,QAAQ4sD,EAAiCjtB,MAChF2sB,EAA+BtsD,QAAQw8C,EAAmB,EAAG,GAC7DkQ,EAAgC1sD,QAAQw8C,EAAmB,EAAG,GAC9DgQ,EAAgCxsD,QAAQw8C,EAAmB,EAAG,GAC9DoQ,EAAiC5sD,QAAQw8C,EAAmB,EAAG,IAEnE,kBACIsK,EAAcplB,WAAWkI,GACzBkd,EAAcplB,gBAAwCr4C,IAA7ByiE,EAAkB1qB,OAAuB0qB,EAAoBA,EAAkB1qB,OAAO,IAC/GwI,EAAoBlI,WAAW4qB,EAAgC,GAC/D1iB,EAAoBlI,WAAW8qB,EAAiC,GAChE5iB,EAAoBlI,WAAWgrB,EAAiC,GAChE9iB,EAAoBlI,WAAWkrB,EAAkC,GACjEd,EAAkBpqB,WAAW+pB,GAC7BA,EAAY/pB,gBAA2Dr4C,IAAhDkjE,EAAqCnrB,OACtDmrB,EACAA,EAAqCnrB,OAAO,IAClDqqB,EAAY/pB,gBAA4Dr4C,IAAjDojE,EAAsCrrB,OACvDqrB,EACAA,EAAsCrrB,OAAO,IACnDqqB,EAAY/pB,gBAA4Dr4C,IAAjDsjE,EAAsCvrB,OACvDurB,EACAA,EAAsCvrB,OAAO,IACnDqqB,EAAY/pB,gBAA6Dr4C,IAAlDwjE,EAAuCzrB,OACxDyrB,EACAA,EAAuCzrB,OAAO,IACpDmrB,EAAqC7qB,WAAW4qB,EAA+B3sB,MAC/E8sB,EAAsC/qB,WAAW8qB,EAAgC7sB,MACjFgtB,EAAsCjrB,WAAWgrB,EAAgC/sB,MACjFktB,EAAuCnrB,WAAWkrB,EAAiCjtB,MACnF2sB,EAA+B5qB,WAAW8a,EAAmB,EAAG,GAChEkQ,EAAgChrB,WAAW8a,EAAmB,EAAG,GACjEgQ,EAAgC9qB,WAAW8a,EAAmB,EAAG,GACjEoQ,EAAiClrB,WAAW8a,EAAmB,EAAG,MAS/DsQ,CAA4BhvB,EAAegpB,EAAe2E,EAAajP,GAElF,MAAM5R,KAEV,MAAO,CAAC9M,GAAiBT,eAAcC,mBAAkB2C,SAAQsd,MAC7D,GAAyB,QAArBjgB,EACA,MAAMsN,IAEV,MAAM4R,EAAoBL,EAA8Bre,EAAe,IAChEyf,EACHlgB,aAAc,EACdC,mBACA8G,eAAgB,IAEd0iB,EAAgB1c,EAAqBtM,EAAe,IAAKyf,EAAkBlgB,eAAcC,mBAAkBqC,KAAM,IACjH8rB,EAAcrhB,EAAqBtM,EAAe,CACpDT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBoC,KAAMM,IAEV,IAAI,aAAE8sB,EAAY,gBAAEC,GAAoBxB,EAAmB1tB,EAAeT,EAAcypB,EAAe2E,EAAajP,GACpHx3D,OAAOC,eAAewmE,EAAY9rB,KAAM,eAAgB,CAAEl3B,IAAK,IAAM,IACrEzjB,OAAOC,eAAewmE,EAAY9rB,KAAM,WAAY,CAAEl3B,IAAK,IAAM,IACjEzjB,OAAOC,eAAewmE,EAAY9rB,KAAM,WAAY,CAAEl3B,IAAK,KAAO,IAClE,MAAMwkD,EAAqC,CACvC,mBAGA,mBACI,OAAOnG,EAAczpB,cAEzB,iBAAiBn3C,GACT4gE,EAAczpB,eAAiBn3C,IAC3BihE,GACA6F,MAEDD,eAAcC,mBAAoBxB,EAAmB1tB,EAAe53C,EAAO4gE,EAAe2E,EAAajP,IACtG2K,GACA4F,KAGRjG,EAAczpB,aAAen3C,GAEjC,uBACI,OAAO4gE,EAAcxpB,kBAEzB,qBAAqBp3C,GACjB,GAAc,gBAAVA,GAAqC,QAAVA,EAC3B,MAAM0kD,IAEVkc,EAAcxpB,iBAAmBp3C,GAErC,4BACI,OAAO4gE,EAAcvpB,uBAEzB,0BAA0Br3C,GACtB4gE,EAAcvpB,sBAAwBr3C,GAE1C,cACI,OAAO4gE,EAAc1xD,SAEzB,aACI,MAAO,CAAC0xD,IAEZ,qBACI,OAAOA,EAAc1iB,gBAEzB,sBACI,OAAO0iB,EAAcziB,iBAEzB,UACI,OAAOonB,EAAY9rB,MAEvB19B,iBAAgB,IAAInD,IACTgoD,EAAc7kD,iBAAiBnD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEjEwnC,cAAa,IAAIxnC,IACNgoD,EAAcxgB,cAAcxnC,EAAK,IAE5CoD,oBAAmB,IAAIpD,IACZgoD,EAAc5kD,oBAAoBpD,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAGxE,IAAIqoD,GAAc,EASlB,OAAOvL,EAAmB9R,GAAqBmjB,EAAoCzQ,IAR7D,KAClBuQ,IACA5F,GAAc,KAEO,KACrB6F,IACA7F,GAAc,OtF0BiB+F,CAAyC/Q,GAA+B1S,GAAiCW,GAAsBud,GAA4B/c,GAAyBgR,IAClHhR,IACvGuiB,GuFhS+C,EAACvX,EAAmBmV,EAA8BppB,EAAoB+U,EAAkB3H,IAClI,KACH,MAAMqe,EAAkC,IAAI7yB,QAgC5C,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAMkuB,EAAiCD,EAAgC3kD,IAAI08B,GAC3E,YAAuC97C,IAAnCgkE,EACO38D,QAAQC,QAAQ08D,GAnCJx5D,OAAOoxC,EAAOE,EAA2BhG,KACpE,IAAI+rB,EAAyBvpB,EAAmBsD,GAKhD,MAAMqoB,EAAyC1vB,EAAiBstB,EAAwB/lB,GACxF,IAAKmoB,EAAwC,CACzC,MAAM1rD,EAAU,CACZy7B,aAAc6tB,EAAuB7tB,aACrCC,iBAAkB4tB,EAAuB5tB,iBACzCC,sBAAuB2tB,EAAuB3tB,sBAC9C0C,IAAKirB,EAAuBjrB,IAAI/5C,OAEpCglE,EAAyBH,EAA6B5lB,EAA2BvjC,GAerF,OAbAwrD,EAAgCj1C,IAAIgtB,EAA2B+lB,GAC1DoC,QAIK1X,EAAkBzQ,EAA2BF,EAAMhF,IAAKirB,EAAuBjrB,IAAKd,SAHpFuX,EAAiBvR,EAA2BF,EAAMhF,IAAKirB,EAAuBjrB,IAAKd,GAKzF2B,EAAuBoqB,SACjBnc,EAAwB9J,EAAOE,EAA2B+lB,EAAuB9pB,OAAO,GAAIjC,SAG5F4P,EAAwB9J,EAAOE,EAA2B+lB,EAAwB/rB,GAErF+rB,GAQIqC,CAAuBtoB,EAAOE,EAA2BhG,MvFwPzCquB,CAAsC5X,GAAmBmV,GAA8BppB,GAAoB+U,GAAkB3H,IAC9J0e,GXzR2C,EAAClc,EAAsB8F,EAAkB0T,EAA8BoC,EAAgCtd,EAAkBM,IAC/J,cAA+BoB,EAClC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzCspD,EAAyBH,EAA6BjtB,EAAegW,GACrEnQ,EAAYwM,EAA4BrS,GAE9C+T,MAAMz8C,GAAS,EAAO81D,EADYvnB,EAAYwpB,IAAmC,MAEjF1iE,KAAKijE,KAAOrW,EAAiB5sD,KAAMk5C,EAAWunB,EAAuBjrB,KAEzE,UACI,OAAOx1C,KAAKijE,OW6QYC,CAAkCpc,GAAsB8F,GAAkB0T,GAA8BoC,GAAgCtd,GAAkBM,IACxLyd,GwFlS6C,EAACjG,EAA4BhmB,EAAoBoN,IACzF,KACH,MAAM8e,EAAgC,IAAItzB,QAwB1C,MAAO,CACH,OAAO0K,EAAOE,EAA2BhG,GACrC,MAAM2uB,EAA+BD,EAA8BplD,IAAI08B,GACvE,YAAqC97C,IAAjCykE,EACOp9D,QAAQC,QAAQm9D,GA3BNj6D,OAAOoxC,EAAOE,EAA2BhG,KAClE,IAAIyoB,EAAuBjmB,EAAmBsD,GAG9C,IAD6CrH,EAAiBgqB,EAAsBziB,GACzC,CACvC,MAAMvjC,EAAU,CACZy7B,aAAcuqB,EAAqBvqB,aACnCC,iBAAkBsqB,EAAqBtqB,iBACvCC,sBAAuBqqB,EAAqBrqB,sBAC5CsO,MAAO+b,EAAqB/b,MAC5BC,WAAY8b,EAAqB9b,YAErC8b,EAAuBD,EAA2BxiB,EAA2BvjC,GASjF,OAPAisD,EAA8B11C,IAAIgtB,EAA2ByiB,GACzD9mB,EAAuB8mB,SACjB7Y,EAAwB9J,EAAOE,EAA2ByiB,EAAqBxmB,OAAO,GAAIjC,SAG1F4P,EAAwB9J,EAAOE,EAA2ByiB,EAAsBzoB,GAEnFyoB,GAQImG,CAAqB9oB,EAAOE,EAA2BhG,MxFkQzC6uB,CAAoCrG,GAA4BhmB,GAAoBoN,IACnHkf,GT9RyC,EAAC1c,EAAsBlK,EAAyBsgB,EAA4BiG,EAA8B/d,EAAkBM,EAA6B2K,IAC7L,cAA6BvJ,EAChC,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC0+C,EAAgB,IAAK,MAAoBlyC,GACzCgmD,EAAuBD,EAA2B7pB,EAAegW,GAIvEjC,MAAMz8C,GAAS,EAAMwyD,EAHHzX,EAA4BrS,GACF8vB,IAAiC,MAG7EnjE,KAAKyjE,mBAAoB,EACzBzjE,KAAK0jE,sBAAwBvG,EAE7B9M,EAAqBrwD,KAAM,GAE/B,YACI,OAAIA,KAAKyjE,kBACE,KAEJzjE,KAAK0jE,sBAAsBtiB,MAEtC,UAAU3lD,GAEN,GAAc,OAAVA,EACAuE,KAAKyjE,mBAAoB,EACzBzjE,KAAK0jE,sBAAsBtiB,MAAQ,IAAIxgD,aAAa,CAAC,EAAG,QAEvD,CAGD,GAAInF,EAAMjC,OAAS,EACf,MAAMojD,IAEV58C,KAAKyjE,mBAAoB,EACzBzjE,KAAK0jE,sBAAsBtiB,MAAQ3lD,GAG3C,iBACI,OAAOuE,KAAK0jE,sBAAsBriB,WAEtC,eAAe5lD,GACXuE,KAAK0jE,sBAAsBriB,WAAa5lD,ISqPlBkoE,CAAgC7c,GAAsBlK,GAAyBsgB,GAA4BiG,GAA8B/d,GAAkBM,GAA6B2K,IACpNuT,GyFtS+B,CAACzwD,GAAsB,OAAXA,GAAmBA,EAAOywD,gBzFsSnDC,CAAsB,IACxChpB,G0FvSgD,CAAC1nC,GAC5C,CAACq6C,EAAatS,EAAYhwC,KAC7B3Q,OAAOioD,iBAAiBrvC,EAAQ,CAC5B2wD,aAAc,CACVzpE,cAAc,EACd2jB,IAAG,IACQhgB,KAAK+sC,MAAMyiB,EAActS,IAGxCsS,YAAa,CACTnzD,cAAc,EACd2jB,IAAG,IACQwvC,KAInB,IACI,OAAOtiD,IAEX,QACmB,OAAXiI,WACOA,EAAO2wD,oBACP3wD,EAAOq6C,e1FiRWuW,CAAuC,IAC1EC,GAAiC,IAAIl0B,QACrCm0B,G2FzSoD,EAACD,EAAgC1e,IAC/EjS,IACJ,IAAI6wB,EAA4BF,EAA+BhmD,IAAIq1B,GACnE,QAAkCz0C,IAA9BslE,EACA,OAAOA,EAEX,GAA6C,OAAzC5e,EACA,MAAM,IAAI9kD,MAAM,uDAIpB,OAFA0jE,EAA4B,IAAI5e,EAAqC,EAAG,EAAG,KAC3E0e,EAA+Bt2C,IAAI2lB,EAAe6wB,GAC3CA,G3F8R8BC,CAA2CH,GAAgC1e,IAClH8e,G4F1SiD,CAACjxD,GACrC,OAAXA,EACO,KAEJA,EAAO2K,eAAe,oBAAsB3K,EAAOkxD,iBAAmB,K5FsSvCC,CAAwC,IAErEC,GAAwBX,GrG5RM,EAACxgB,EAAiBjD,EAAyBqkB,EAAgB3pB,EAAkC4pB,EAAarf,EAAkB6e,EAAsCve,EAA6Bgf,EAAiBC,EAAkBC,EAA6CzxD,IAC/S,CAACxI,EAASk6D,EAAW1tD,EAAU,CAAE2tD,YAAa,WACjD,MAAMzxB,EAAgB+R,EAAiBz6C,GAEvC,QAAmC/L,IAA/By0C,EAAc0xB,aACd,OAAO9+D,QAAQu+C,IAAI,CACfigB,EAAYI,GACZ5+D,QAAQC,QAAQk9C,EAAgBwhB,EAA6CA,MAC9E3pD,MAAK,GAAG9V,EAAQ6/D,GAAcC,MAC7B,MAAOv0B,EAAkBC,GAAiCF,EAAsBtrC,EAAQ6/D,GA2BlFE,EAAuCD,EACvCt0B,EACAA,EAA8B5D,QAAQ,yCAA0C,qMAsChFo4B,EAAO,IAAIC,KAAK,CAFA,GAAG10B,0BAAyCw0B,oDAJzCD,EAA0B,GAAK,sEAC7BA,EACrB,GACA,6IAGiC,CAAE7nE,KAAM,0CACzCmf,EAAMw0B,IAAIs0B,gBAAgBF,GAChC,OAAO9xB,EAAc0xB,aAChBO,UAAU/oD,EAAKpF,GACf8D,MAAK,KACN,IAAIyqC,EAA4BrS,GAKhC,OADkC4wB,EAAqC5wB,GACtC0xB,aAAaO,UAAU/oD,EAAKpF,MAE5DouD,SAAQ,IAAMx0B,IAAIy0B,gBAAgBjpD,QAG/C,MAAMkpD,EAA4Bd,EAAiB3mD,IAAIrT,GACvD,QAAkC/L,IAA9B6mE,GAA2CA,EAA0Bz6C,IAAI65C,GACzE,OAAO5+D,QAAQC,UAEnB,MAAMw/D,EAA2BhB,EAAgB1mD,IAAIrT,GACrD,QAAiC/L,IAA7B8mE,EAAwC,CACxC,MAAMC,EAA0BD,EAAyB1nD,IAAI6mD,GAC7D,QAAgCjmE,IAA5B+mE,EACA,OAAOA,EAGf,MAAM3qD,EAAUypD,EAAYI,GACvB5pD,MAAK,EAAE9V,EAAQ6/D,MAChB,MAAOt0B,EAAkBC,GAAiCF,EAAsBtrC,EAAQ6/D,GAmBxF,OAAOR,EAHe,GAAG9zB,6GAA4HC,8BAKpJ11B,MAAK,KACN,MAAM2qD,EAAkCzyD,EAAO0yD,MAAM3xD,MACrD,QAAwCtV,IAApCgnE,EAEA,MAAM,IAAIE,YAEdjrB,EAAiCxH,EAAcma,YAAana,EAAc6H,YAAY,IAAM0qB,EAAgC,aACzHhnE,GAAW,CAACtC,EAAM60C,KACjB,GAAoB,KAAhB70C,EAAKypE,OACL,MAAM5lB,IAEV,MAAM6lB,EAAoC31B,EAAwCryB,IAAIq1B,GACtF,QAA0Cz0C,IAAtConE,EAAiD,CACjD,GAAIA,EAAkCh7C,IAAI1uB,GACtC,MAAM6jD,IAEVjP,EAAoBC,GACpBH,EAA2BG,EAAcF,sBACzC+0B,EAAkCt4C,IAAIpxB,EAAM60C,QAG5CD,EAAoBC,GACpBH,EAA2BG,EAAcF,sBACzCZ,EAAwC3iB,IAAI2lB,EAAe,IAAI9lB,IAAI,CAAC,CAACjxB,EAAM60C,QAEhFkC,EAAc6H,gBAAYt8C,OAAWA,QAwB5C,YAtBiCA,IAA7B8mE,EACAhB,EAAgBh3C,IAAI/iB,EAAS,IAAI4iB,IAAI,CAAC,CAACs3C,EAAW7pD,MAGlD0qD,EAAyBh4C,IAAIm3C,EAAW7pD,GAE5CA,EACKC,MAAK,KACN,MAAMgrD,EAAmBtB,EAAiB3mD,IAAIrT,QACrB/L,IAArBqnE,EACAtB,EAAiBj3C,IAAI/iB,EAAS,IAAIigB,IAAI,CAACi6C,KAGvCoB,EAAiB1gE,IAAIs/D,MAGxBU,SAAQ,KACT,MAAMW,EAAkBxB,EAAgB1mD,IAAIrT,QACpB/L,IAApBsnE,GACAA,EAAgBv0B,OAAOkzB,MAGxB7pD,GqG+GTmrD,CAA4B/iB,GAAiBjD,G6F7Sf,CAAChtC,GACzBhO,GAAW,IAAIc,SAAQ,CAACC,EAASC,KACrC,GAAe,OAAXgN,EAGA,YADAhN,EAAO,IAAI2/D,aAGf,MAAMM,EAAOjzD,EAAO4tB,SAASqlC,KAC7B,GAAa,OAATA,EAEAjgE,EAAO,IAAI2/D,iBAEV,CACD,MAAMzjC,EAASlvB,EAAO4tB,SAASC,cAAc,UAEvCmkC,EAAO,IAAIC,KAAK,CAACjgE,GAAS,CAAE/H,KAAM,2BAClCmf,EAAMw0B,IAAIs0B,gBAAgBF,GAC1BkB,EAAyBlzD,EAAOyM,QAChC0mD,EAAuC,KACzCnzD,EAAOyM,QAAUymD,EACjBt1B,IAAIy0B,gBAAgBjpD,IAExBpJ,EAAOyM,QAAU,CAACS,EAASkmD,EAAKtqB,EAAQF,EAAOx5C,IAEvCgkE,IAAQhqD,GAAQgqD,IAAQpzD,EAAOg8B,SAASC,MAAmB,IAAX6M,GAA0B,IAAVF,GAChEuqB,IACAngE,EAAO5D,IACA,GAEoB,OAA3B8jE,EACOA,EAAuBhmD,EAASkmD,EAAKtqB,EAAQF,EAAOx5C,QAD/D,EAIJ8/B,EAAOziB,QAAU,KACb0mD,IAEAngE,EAAO,IAAI2/D,cAEfzjC,EAAOmkC,OAAS,KACZF,IACApgE,KAEJm8B,EAAOkkC,IAAMhqD,EACb8lB,EAAOjlC,KAAO,SACdgpE,EAAK7jC,YAAYF,O7FiQ+CokC,CAAqB,IAAS5rB,I8F5S/FzxC,MAAOmT,IACV,IACI,MAAMkC,QAAiBioD,MAAMnqD,GAC7B,GAAIkC,EAASkoD,GACT,MAAO,OAAOloD,EAASmoD,OAAQnoD,EAASlC,KAGhD,OAGA,MvMX8B,IAAIm3B,aAAa,GAAI,gByG6SsH0R,GAAkB6e,GAAsCve,GAA6B,IAAI5V,QAAW,IAAIA,Q+F5SxN,EAACs0B,EAAmC9e,IAC1Fl8C,UAEH,GAA0C,OAAtCg7D,EACA,OAAO,EAEX,GAA6C,OAAzC9e,EACA,OAAO,EAEX,MAAM6f,EAAO,IAAIC,KAAK,CAAC,wHAAyH,CAC5IhoE,KAAM,0CAEJypE,EAAsB,IAAIvhB,EAAqC,EAAG,IAAK,KACvE/oC,EAAMw0B,IAAIs0B,gBAAgBF,GAChC,IAAI2B,GAA0B,EAC1BC,GAAiC,EACrC,UACUF,EAAoB9B,aAAaO,UAAU/oD,GACjD,MAAMyqD,EAAmB,IAAI5C,EAAkCyC,EAAqB,IAAK,CAAEjtB,gBAAiB,IACtGqtB,EAAaJ,EAAoB3kB,mBACvC8kB,EAAiBE,KAAKhlD,UAAY,IAAO4kD,GAA0B,EACnEE,EAAiBG,iBAAmB,IAAOJ,GAAiC,EAC5EE,EAAW1xD,QAAQyxD,SACbH,EAAoB1O,iBAE9B,OAGA,QACIpnB,IAAIy0B,gBAAgBjpD,GAExB,OAAOuqD,IAA4BC,G/F6QyPK,CAAkDhD,GAAmC9e,IAErX,SACE1mD,EACAyoE,GgGjT+B,EAAC9gB,EAAsBb,IAChDC,GACGY,EAAqBZ,IAAaD,EAA4BC,GhG+SrD2hB,CAAsB/gB,GAAsBb,IAE9D6hB,GiGnT2C,EAAChD,EAAuBpb,EAAyBuB,EAAwB2D,EAAkCkC,EAA6B2B,EAA8BM,EAAgCa,EAA+BgB,EAA0BzW,EAAiBiX,EAAsBa,EAAmCgB,EAAqBqC,EAA0ByB,EAAoCkB,EAA2BsD,EAAuBS,EAAyBuD,EAA6BQ,IAC1iB,cAA+BhJ,EAClC,YAAYC,EAAgB3mB,GACxBsT,MAAMqT,EAAgB3mB,GACtB9zC,KAAKy6D,eAAiBA,EACtBz6D,KAAKwnE,mBACyB5oE,IAA1B2lE,OACM3lE,EACA,CACE0mE,UAAW,CAACT,EAAW1tD,IACZotD,EAAsBvkE,KAAM6kE,EAAW1tD,IAIlE,mBACI,OAAOnX,KAAKwnE,cAEhB,iBACI,OAAO,IAAIre,EAAwBnpD,MAEvC,qBACI,OAAO,IAAIuwD,EAA4BvwD,MAE3C,aAAa8zC,EAAkBt6C,EAAQ0hD,GACnC,OAAO,IAAIwP,EAAuB,CAAElxD,SAAQs6C,mBAAkBoH,eAElE,qBACI,OAAO,IAAImT,EAAiCruD,MAEhD,oBAAoB25C,EAAiB,GACjC,OAAO,IAAIuY,EAA6BlyD,KAAM,CAAE25C,mBAEpD,sBAAsBC,EAAkB,GACpC,OAAO,IAAI4Y,EAA+BxyD,KAAM,CAAE45C,oBAEtD,uBACI,OAAO,IAAIyZ,EAA8BrzD,MAE7C,kBACI,OAAO,IAAIq0D,EAAyBr0D,MAExC,YAAYm8C,EAAe,GACvB,OAAO,IAAI0Y,EAAqB70D,KAAM,CAAEm8C,iBAE5C,2BACI,OAAO,IAAIuZ,EAAkC11D,MAEjD,aACI,OAAO,IAAI02D,EAAoB12D,MAEnC,gBAAgBi9C,EAAaF,GACzB,OAAO,IAAIgc,EAAyB/4D,KAAM,CAAE+8C,WAAUE,gBAE1D,mBACI,OAAO,IAAIye,EAA0B17D,MAEzC,eACI,OAAO,IAAIg/D,EAAsBh/D,MAErC,mBAAmB+/D,EAAMD,EAAM2H,EAAc,CAAEvrB,sBAAsB,IACjE,OAAO,IAAIujB,EAAwBz/D,KAAM,IAAKynE,EAAa3H,OAAMC,SAErE,qBACI,OAAO,IAAIiD,EAA4BhjE,MAE3C,mBACI,OAAO,IAAIwjE,EAA0BxjE,MAEzC,gBAAgB0nE,EAAWC,EAAiBC,GACxC,OAAOhqB,EAAgB59C,KAAKy6D,eAAgBiN,GACvCzsD,MAAM24B,IACwB,mBAApB+zB,GACPA,EAAgB/zB,GAEbA,KAENiK,OAAOniD,IAIR,KAH6B,mBAAlBksE,GACPA,EAAclsE,GAEZA,OjGmOcmsE,CAAkCtD,GAAuBpb,GAAyBuB,GAAwB2D,GAAkCkC,GAA6B2B,GAA8BM,GAAgCa,GAA+BgB,GkGjTrQ,EAAC1K,EAAkBvG,EAAiB0kB,EAAsBC,EAAqBC,EAAsB5iB,EAAkBiiB,EAAiB/zB,EAAqDmK,EAAoBwM,EAAmCO,IAC9Q,CAACyd,EAAYP,KAChB,MAAMr0B,EAAgBg0B,EAAgBY,GAAcA,EAAa7iB,EAAiB6iB,GAElF,GAAID,EAAqBh9C,IAAI08C,GAAY,CACrC,MAAMhsE,ECPwB,IAAIg4C,aAAa,GAAI,kBDQnD,OAAOztC,QAAQE,OAAOzK,GAG1B,IACIssE,EAAqBziE,IAAImiE,GAE7B,OAIA,OAAItkB,EAAgB3F,GAAoB,IAAMA,EAAmBpK,KACtDA,EAAcuK,gBAAgB8pB,GAAWzsD,MAAM24B,IAE7CwP,EAAgB9P,GAAqD,IAAMA,EAAoDM,MAChI4W,EAA6C5W,GAEjD+V,EAAiBpkD,IAAIquC,GACdA,KAIR,IAAI3tC,SAAQ,CAACC,EAASC,KACzB,MAAMxD,EAAWyG,UAEb,SEhCiB,CAAC8+D,IAC9B,MAAM,MAAElmC,EAAK,MAAEC,GAAU,IAAInB,eAC7B,OAAO,IAAI76B,SAASC,IAChB+7B,EAAM/f,UAAY,KACd8f,EAAMvgB,QACNwgB,EAAMxgB,QACNvb,KAEJ87B,EAAMf,YAAYinC,EAAa,CAACA,QFyBdC,CAAkBT,GAE5B,SAIEU,EAAQ1sE,IACVyK,EAAOzK,GACPiH,KAGJ,IAEI0wC,EAAcuK,gBAAgB8pB,GAAY9zB,IAGK,mBAAhCA,EAAYmG,kBACnBkQ,EAAkCrW,GAClCD,EAAoCC,IAExC+V,EAAiBpkD,IAAIquC,GACrBjxC,IAAWsY,MAAK,IAAM/U,EAAQ0tC,QAC9Bl4C,IAGI0sE,EADQ,OAAR1sE,EGzDiB,IAAIg4C,aAAa,GAAI,iBH6DjCh4C,MAIjB,MAAOA,GACH0sE,EAAK1sE,QlGgPU2sE,CAAsB1e,GAAkBvG,GmGlTnC,EEAD,ErGkTgG,IAAIxT,QAAWwV,GAAkBiiB,GAAiB/zB,EAAqDmK,GAAoBwM,GAAmCO,IACoDqK,GAAsBa,GAAmCgB,GAAqBqC,GAA0ByB,GAAoCkB,GAA2BsD,GAAuBS,GAAyBuD,GAA6BQ,IACnkB8E,GsGpTsD,EAACxhB,EAAsByhB,EAAyCnjB,EAAkBM,IACnI,cAA0CoB,EAC7C,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC69D,ECJqC,EAACjxB,EAAoBpgC,IACjEogC,EAAmBkxB,yBAAyBtxD,EAAQuxD,cDGTH,CAAwCl1B,EAAel8B,GAEjG,GAAIuuC,EAA4BrS,GAC5B,MAAMt5C,YAEVqtD,MAAMz8C,GAAS,EAAM69D,EAAmC,MACxDxoE,KAAK2oE,mCAAqCH,EAE9C,mBACI,OAAOxoE,KAAK2oE,mCAAmCD,etGuSZE,CAA6C9hB,GuGpTrC,EvGoToG1B,GAAkBM,IACvKmjB,GjChT0D,EAAC/hB,EAAsBgiB,EAA6C1jB,EAAkBM,IAC3I,cAA8CoB,EACjD,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GAEvC,GAAI+6C,EAA4BrS,GAC5B,MAAM,IAAIt5C,UAEd,MACMgvE,EyIbyC,EAACxxB,EAAoBpgC,KAC5E,MAAM4xD,EAAwCxxB,EAAmByxB,+BAMjE,OALAhrB,GAA6B+qB,EAAuC5xD,GAEN,IAA1D4xD,EAAsCnvB,iBACtCr/C,OAAOC,eAAeuuE,EAAuC,kBAAmB,CAAE/qD,IAAK,IAAM,IAE1F+qD,GzIM+CD,CAA4Cz1B,EADpE,IAAK,MAAoBl8B,IAE/CiwC,MAAMz8C,GAAS,EAAOo+D,EAAuC,MAC7D/oE,KAAKipE,uCAAyCF,EAElD,aACI,OAAO/oE,KAAKipE,uCAAuCC,SiCkSZC,CAAiDriB,GwGpTzC,ExGoT4G1B,GAAkBM,IACnL0jB,GyGtTqD,EAACtiB,EAAsBuiB,EAAwCjkB,EAAkBM,IACjI,cAAyCoB,EAC5C,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GACjC2+D,ECJoC,EAAC/xB,GAAsBgyB,kBACzE,MAAMC,EAAoBD,EAAYE,iBAKtCD,EAAkB5tC,MAAK,CAACtJ,EAAGC,IAAOD,EAAEyH,GAAKxH,EAAEwH,IAAM,EAAIzH,EAAEyH,GAAKxH,EAAEwH,GAAK,EAAI,IACvE,MAAM2vC,EAA4BF,EAAkBptE,MAAM,EAAG,GACvDktE,EAAmC/xB,EAAmBoyB,wBAAwB,IAAIC,YAAYF,IAMpG,OADAnvE,OAAOC,eAAe8uE,EAAkC,cAAe,CAAE7tE,MAAO8tE,IACzED,GDV0CD,CAAuCh2B,EAAel8B,GAE/F,GAAIuuC,EAA4BrS,GAC5B,MAAM,IAAIt5C,UAEdqtD,MAAMz8C,GAAS,EAAM2+D,EAAkC,MACvDtpE,KAAK6pE,kCAAoCP,EAE7C,kBACI,OAAOtpE,KAAK6pE,kCAAkCN,czGySZO,CAA4ChjB,G0GtTpC,E1GsTkG1B,GAAkBM,IAEpKqkB,G2GxT0D,EAACjjB,EAAsBkjB,EAA6C5kB,IACzH,cAA8C0B,EACjD,YAAYn8C,EAASwM,GACjB,MAAMk8B,EAAgB+R,EAAiBz6C,GAEvCy8C,MAAMz8C,GAAS,EAD+Bq/D,EAA4C32B,EAAel8B,GAC7C,Q3GmTrB8yD,CAAiDnjB,G4GxTlC,EAAClK,EAAyB8I,IACjF,CAACnO,GAAsB2yB,uBAE1B,GAA+D,mBAApD3yB,EAAmB4yB,6BAC1B,OAAO5yB,EAAmB4yB,6BAA6BD,GAE3D,MAAMX,EAAc,IAAIK,YAAY,CAACM,IAC/BZ,EAAmC/xB,EAAmBoyB,wBAAwBJ,GAEpF,GAA8B,UAA1BW,EAAiBpmE,KACjB,MAAM84C,IAGV,GAAI8I,EAA4BnO,GAC5B,MAAM,IAAIx9C,UAEd,OAAOuvE,G5GuSqCc,CAAmDxtB,GAAyB8I,IACuCN,IACjKilB,G6GvTuC,EAAC9C,EAA6B3qB,EAAyBuD,EAAyBgB,EAAoBmnB,EAAwCO,EAA4CO,EAAuCW,EAA4C5jB,IAC7S,cAA2BohB,EAC9B,YAAYpwD,EAAU,IAClB,GAAsC,OAAlCgvC,EACA,MAAM,IAAI3lD,MAAM,gDAEpB,MAAM+2C,EAAqB,IAAI4O,EAA8BhvC,GAE7D,GAA2B,OAAvBogC,EACA,MAAM4J,IAGV,ICdsB,CAACmpB,QACP1rE,IAAhB0rE,GACmB,iBAAhBA,GACiB,iBAAhBA,IAA6C,aAAhBA,GAA8C,gBAAhBA,GAAiD,aAAhBA,GDW3FC,CAAmBpzD,EAAQmzD,aAC5B,MAAM,IAAIvwE,UAAU,uBAAuBod,EAAQmzD,+EAGvD,QAA2B1rE,IAAvBuY,EAAQ+jC,YAA4B3D,EAAmB2D,aAAe/jC,EAAQ+jC,WAC9E,MAAMiF,IAEViH,MAAM7P,EAAoB,GAC1B,MAAM,YAAE+yB,GAAgBnzD,GAClB,WAAE+jC,GAAe3D,EAkCvB,GAhCAv3C,KAAKwqE,aACyC,iBAAnCjzB,EAAmBoH,YACpBpH,EAAmBoH,YACH,aAAhB2rB,EACI,IAAMpvB,EACU,gBAAhBovB,QAAiD1rE,IAAhB0rE,EAC7B,IAAMpvB,EACU,aAAhBovB,EACI,KAAOpvB,EAKuE,IAA3El9C,KAAKkK,IAAI,EAAGlK,KAAK0S,IAAI,IAAK1S,KAAK+sC,MAAOu/B,EAAcpvB,EAAc,OAAgBA,EAC3Gl7C,KAAKyqE,oBAAsBlzB,EAEgB,uBAAvC4O,EAA8B7pD,MAC9B0D,KAAK0qE,gBAAkBnzB,EAAmBI,aAC1C33C,KAAK47D,sBAAwBrkB,EAAmB2K,mBAChDliD,KAAK0qE,gBAAgBx1B,KAAKz5C,MAAQ,MAClCuE,KAAK47D,sBAAsBrmD,QAAQvV,KAAK0qE,iBAAiBn1D,QAAQgiC,EAAmB1wC,aACpF7G,KAAK47D,sBAAsBzgD,UAG3Bnb,KAAK0qE,gBAAkB,KACvB1qE,KAAK47D,sBAAwB,MAEjC57D,KAAK2qE,OAAS,KAKmB,YAA7BpzB,EAAmB7tC,MAAqB,CACxC1J,KAAK2qE,OAAS,YACd,MAAMC,EAAc,KACI,cAAhB5qE,KAAK2qE,SACL3qE,KAAK2qE,OAAS,MAElBpzB,EAAmB9/B,oBAAoB,cAAemzD,IAE1DrzB,EAAmB//B,iBAAiB,cAAeozD,IAG3D,kBACI,OAAO5qE,KAAKwqE,aAEhB,YACI,OAAuB,OAAhBxqE,KAAK2qE,OAAkB3qE,KAAK2qE,OAAS3qE,KAAKyqE,oBAAoB/gE,MAEzE,QAEI,MAAmB,WAAf1J,KAAK0J,MACE1J,KAAKyqE,oBAAoBhpD,QAAQxG,MAAK,KACzC,MAAM2hC,QAIM,cAAhB58C,KAAK2qE,SACL3qE,KAAK2qE,OAAS,MAEX3qE,KAAKyqE,oBAAoBhpD,QAAQxG,MAAK,KACZ,OAAzBjb,KAAK0qE,iBAA2D,OAA/B1qE,KAAK47D,wBACtC57D,KAAK47D,sBAAsBxjB,OAC3Bp4C,KAAK0qE,gBAAgBzzB,aACrBj3C,KAAK47D,sBAAsB3kB,cAE/BvB,EAAqB11C,UAG7B,yBAAyB0oE,GACrB,OAAO,IAAIJ,EAAuCtoE,KAAM,CAAE0oE,iBAE9D,+BACI,OAAO,IAAIG,EAA2C7oE,MAE1D,wBAAwBupE,GACpB,OAAO,IAAIH,EAAsCppE,KAAM,CAAEupE,gBAE7D,6BAA6BW,GACzB,OAAO,IAAIH,EAA2C/pE,KAAM,CAAEkqE,qBAElE,SACI,MAAoB,cAAhBlqE,KAAK2qE,OACE,IAAI1kE,SAAQ,CAACC,EAASC,KACzB,MAAM0kE,EAAiB,KACnB7qE,KAAKyqE,oBAAoBhzD,oBAAoB,cAAeozD,GACrB,YAAnC7qE,KAAKyqE,oBAAoB/gE,MACzBxD,IAGAlG,KAAKumC,SAAStrB,KAAK/U,EAASC,IAGpCnG,KAAKyqE,oBAAoBjzD,iBAAiB,cAAeqzD,MAG1D7qE,KAAKyqE,oBAAoBlkC,SAASsX,OAAOniD,IAG5C,QAAYkD,IAARlD,GAAkC,KAAbA,EAAImmB,KACzB,MAAM+6B,IAEV,MAAMlhD,KAGd,UACI,OAAOsE,KAAKyqE,oBAAoBK,UAAUjtB,OAAOniD,IAE7C,QAAYkD,IAARlD,EACA,MAAMkhD,IAEV,MAAMlhD,O7GiLUqvE,CAA8BxD,GAA6B3qB,GAAyBuD,GAAyBgB,GAAoBmnB,GAAwCO,GAA4CO,GAAuCW,GAA4C5jB,IAElU6kB,G+G3T8C,CAACzQ,GACzClnB,IACJ,MAAM43B,EAA8B1Q,EAAgCv8C,IAAIq1B,GACxE,QAAoCz0C,IAAhCqsE,EACA,MAAM,IAAIzqE,MAAM,gDAEpB,OAAOyqE,G/GqTwBC,CAAqC3Q,IACtE4Q,GgH5T6C,CAACH,GACzC,CAAC33B,EAAe2zB,KACnBgE,EAA+B33B,GAAe9tC,IAAIyhE,IhH0TpBoE,CAAoCJ,IACpEK,GiH5TsC,CAAC53B,GAClC,CAAC4I,EAAkBx1C,EAAairC,EAAS,EAAGlO,EAAQ,KACvD,MAAM0Y,EAAkBD,EAAiBvK,GACzC,QAAwBlzC,IAApB09C,EACA,MAAM7I,IAEV,OAAIiF,GAAkB7xC,GACXy1C,EAAgB/mC,QAAQ1O,EAAa,EAAG+8B,GAE5C0Y,EAAgB/mC,QAAQ1O,EAAa,IjHmTrBykE,CAA6B73B,GACtD83B,GkH9TgD,CAACP,GAC5C,CAAC33B,EAAe2zB,KACnBgE,EAA+B33B,GAAe1B,OAAOq1B,IlH4TpBwE,CAAuCR,IAC1ES,GxCvTyC,CAACh4B,GACrC,CAAC4I,EAAkBtD,EAAiCjH,EAAoBlO,EAAQ,SACvDhlC,IAAxBm6C,EACOsD,EAAiBz2C,SAAS02C,GAAoBA,EAAgBrF,eAEtC,iBAAxB8B,EACAqD,GAA0B3I,EAAsB4I,EAAkBtD,GAAqB9B,aAE9FyB,GAAkBK,QACHn6C,IAAXkzC,EACOuK,EAAiBz2C,SAAS02C,GAAoBA,EAAgBrF,WAAW8B,UAEtEn6C,IAAVglC,EACOwY,GAA0B3I,EAAsB4I,EAAkBvK,GAAQmF,WAAW8B,EAAqB,GAE9GqD,GAA0B3I,EAAsB4I,EAAkBvK,GAAQmF,WAAW8B,EAAqB,EAAGnV,QAEzGhlC,IAAXkzC,EACOuK,EAAiBz2C,SAAS02C,GAAoBA,EAAgBrF,WAAW8B,KAE7EqD,GAA0B3I,EAAsB4I,EAAkBvK,GAAQmF,WAAW8B,EAAqB,GwCmSvF2yB,CAAgCj4B,GAC5Dk4B,GAAoC,IAAI77B,QACxC87B,GmHjU+C,EAACD,EAAmCp6B,IAC7E+J,GAA2B/J,EAAeo6B,EAAmCrwB,GnHgUjDuwB,CAAsCF,GAAmCp6B,GAC3Gu6B,GoH3TkD,EAACT,EAAwB53B,EAAsBmJ,EAAyB8U,EAA+B1S,EAAiCiU,EAAgCtT,EAAsBO,EAAiCC,EAAyBsrB,EAA2B5wB,EAAkC+wB,EAAiCza,IACnY,CAAC9d,EAAesL,EAAa/D,EAAsBzjC,KACtD,GAA+B,IAA3BA,EAAQwiC,gBAAoD,IAA5BxiC,EAAQyiC,gBACxC,MAAMuG,IAEV,MAAMxF,EAAqBhhD,MAAMC,QAAQud,EAAQwjC,oBAC3CxjC,EAAQwjC,mBACRhhD,MAAM4C,KAAK4a,EAAQwjC,oBAEzB,GAAIA,EAAmBxC,MAAMvF,GAAiBA,EAAe,IACzD,MAAMuN,IAEV,GAAIxF,EAAmBnhD,SAAW2d,EAAQyiC,gBACtC,MAAMnG,IAGV,GAAiC,aAA7Bt8B,EAAQ07B,iBACR,MAAMsN,IAEV,MAAMrF,EAAwB3jC,EAAQy7B,aAAez7B,EAAQwiC,eACvDoB,EAAyBJ,EAAmBxuC,QAAO,CAAC6uC,EAAKv/C,IAAUu/C,EAAMv/C,GAAO,GAChFswE,OAAmEntE,IAA9Cg8C,EAAqB3J,qBAAqC,EAAI2J,EAAqB3J,qBAAqBz3C,OAEnI,GAAIshD,EAAwBixB,EAAqB,GAAKhxB,EAAyB,EAC3E,MAAMoF,IAEV,MAAM6rB,EAAiB,IAAIlrC,eACrBmrC,EAAY,GACZC,EAA4B,GAClC,IAAK,IAAIzyE,EAAI,EAAGA,EAAI0d,EAAQwiC,eAAgBlgD,GAAK,EAC7CwyE,EAAUzwE,KAAKmkD,EAAqBtM,EAAe,CAC/CT,aAAcz7B,EAAQy7B,aACtBC,iBAAkB17B,EAAQ07B,iBAC1BC,sBAAuB37B,EAAQ27B,sBAC/BoC,KAAM,KAEVg3B,EAA0B1wE,KAAKwjD,EAAgC3L,EAAe,CAC1ET,aAAcz7B,EAAQy7B,aACtBC,iBAAkB,WAClBC,sBAAuB,WACvB8G,gBAAiBziC,EAAQy7B,gBAGjC,MAAMu5B,EAAsB,GAC5B,QAAkDvtE,IAA9Cg8C,EAAqB3J,qBACrB,IAAK,MAAM,aAAEtyC,EAAY,SAAE6oD,EAAQ,SAAEyF,EAAQ,KAAE3wD,KAAUs+C,EAAqB3J,qBAAsB,CAChG,MAAM6oB,EAAqB7G,EAA+B5f,EAAe,CACrET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBsC,YAAwCx2C,IAAhCuY,EAAQ0iC,cAAcv9C,GACxB6a,EAAQ0iC,cAAcv9C,QACLsC,IAAjBD,EACI,EACAA,IAEdpE,OAAOioD,iBAAiBsX,EAAmB1kB,OAAQ,CAC/Cz2C,aAAc,CACVqf,IAAK,SAAwBpf,IAAjBD,EAA6B,EAAIA,GAEjD6oD,SAAU,CACNxpC,IAAK,SAAoBpf,IAAb4oD,EAAyBxT,EAA6BwT,GAEtEyF,SAAU,CACNjvC,IAAK,SAAoBpf,IAAbquD,EAAyBlZ,EAA6BkZ,KAG1Ekf,EAAoB3wE,KAAKs+D,GAGjC,MAAMsS,EAAyB1a,EAA8Bre,EAAe,CACxET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB6G,eAAgB37C,KAAKkK,IAAI,EAAG4yC,EAAwBixB,KAElDhlE,EAAa23C,GAAkBC,EAAatL,EAAc6H,YAC1Doc,EAAsBpX,EAAgC7M,EAAetsC,EAAY+zC,EAAwBixB,EAE/G/tE,KAAKkK,IAAI,EAAG6yC,IACNsxB,EAA4BrtB,EAAgC3L,EAAe,CAC7ET,aAAc50C,KAAKkK,IAAI,EAAG6yC,GAC1BlI,iBAAkB,WAClBC,sBAAuB,WACvB8G,gBAAiB57C,KAAKkK,IAAI,EAAG6yC,KAE3BuxB,EAA2B,GACjC,IAAK,IAAI7yE,EAAI,EAAGA,EAAI0d,EAAQyiC,gBAAiBngD,GAAK,EAC9C6yE,EAAyB9wE,KAAKk2D,EAA8Bre,EAAe,CACvET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB6G,eAAgBgB,EAAmBlhD,MAG3C,IAAK,IAAIA,EAAI,EAAGA,EAAI0d,EAAQwiC,eAAgBlgD,GAAK,EAAG,CAChDwyE,EAAUxyE,GAAG8b,QAAQ22D,EAA0BzyE,IAC/C,IAAK,IAAIypC,EAAI,EAAGA,EAAI/rB,EAAQy7B,aAAc1P,GAAK,EAC3CgpC,EAA0BzyE,GAAG8b,QAAQ62D,EAAwBlpC,EAAGzpC,EAAI0d,EAAQy7B,aAAe1P,GAGnG,MAAMqpC,EAAe,IAAI/yB,QAA0D56C,IAA9Cg8C,EAAqB3J,qBACpD,GACA2J,EAAqB3J,qBAAqBhhC,KAAI,EAAG3T,QAAQoC,KACvD,MAAMo7D,EAAqBqS,EAAoBztE,GAG/C,OAFAo7D,EAAmBvkD,QAAQ62D,EAAwB,EAAGtxB,EAAwBp8C,GAC9Eo7D,EAAmB3+C,MAAM,GAClB,CAAC7e,EAAMw9D,EAAmB1kB,YAEzCg3B,EAAuB72D,QAAQ+hD,GAC/B,IAAIxkB,EAAwB37B,EAAQ27B,sBAChCq0B,EAAmB,KAEvB,MAAM9qB,EAA+C,IAA5BllC,EAAQyiC,gBAAwB,CAAC0d,GAAuBgV,EAC3EE,EAA8B,CAChC,iBACI,OAAOzlE,GAEX,mBACI,OAAOoQ,EAAQy7B,cAEnB,iBAAiBlH,GAEb,MAAMkR,KAEV,uBACI,OAAOzlC,EAAQ07B,kBAEnB,qBAAqBnH,GAEjB,MAAMkR,KAEV,4BACI,OAAO9J,GAEX,0BAA0Br3C,GACtB,IAAK,MAAMo0D,KAAYoc,EACnBpc,EAAS/c,sBAAwBr3C,EAErCq3C,EAAwBr3C,GAE5B,cACI,OAAO67D,EAAoB3sD,SAE/B,aACI,OAAOshE,GAEX,qBACI,OAAO90D,EAAQwiC,gBAEnB,sBACI,OAAOxiC,EAAQyiC,iBAEnB,uBACI,OAAOutB,GAEX,qBAAqB1rE,GACe,mBAArB0rE,GACPqF,EAA4B/0D,oBAAoB,iBAAkB0vD,GAEtEA,EAAoC,mBAAV1rE,EAAuBA,EAAQ,KACzB,mBAArB0rE,GACPqF,EAA4Bh1D,iBAAiB,iBAAkB2vD,IAGvE,iBACI,OAAOoF,GAEX,WACI,OAAOP,EAAe/pC,OAE1BzqB,iBAAgB,IAAInD,IACTijD,EAAoB9/C,iBAAiBnD,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEvEkB,QAAS81D,EAAuBxgE,KAAK,KAAMwxC,GAC3CpF,WAAYw0B,EAA0B5gE,KAAK,KAAMwxC,GACjDR,cAAa,IAAIxnC,IACNijD,EAAoBzb,cAAcxnC,EAAK,IAElDoD,oBAAmB,IAAIpD,IACZijD,EAAoB7/C,oBAAoBpD,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAGxEo4D,EAAwB,IAAIl/C,IACM,IAAE/V,EAwBGC,EAxB7Cu0D,EAAehqC,MAAMxqB,kBAAqBA,EAuBvCw0D,EAAehqC,MAAMxqB,iBAtBb,IAAInD,KACP,GAAgB,YAAZA,EAAK,GAAkB,CACvB,MAAMq4D,EAA4C,mBAAZr4D,EAAK,GACrCA,EAAK,GACc,iBAAZA,EAAK,IAA+B,OAAZA,EAAK,IAA8C,mBAAxBA,EAAK,GAAGquC,YAC9DruC,EAAK,GAAGquC,YACR,KACV,GAA+B,OAA3BgqB,EAAiC,CACjC,MAAMC,EAAuBF,EAAsBzuD,IAAI3J,EAAK,SAC/BzV,IAAzB+tE,EACAt4D,EAAK,GAAKs4D,GAGVt4D,EAAK,GAAMwtB,IACPgZ,EAAiCxH,EAAcma,YAAana,EAAc6H,YAAY,IAAMwxB,EAAuB7qC,MAEvH4qC,EAAsB/+C,IAAIg/C,EAAwBr4D,EAAK,MAInE,OAAOmD,EAAiBnc,KAAK2wE,EAAehqC,MAAO3tB,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAGlF23D,EAAehqC,MAAMvqB,qBAAwBA,EAW1Cu0D,EAAehqC,MAAMvqB,oBAVb,IAAIpD,KACP,GAAgB,YAAZA,EAAK,GAAkB,CACvB,MAAMs4D,EAAuBF,EAAsBzuD,IAAI3J,EAAK,SAC/BzV,IAAzB+tE,IACAF,EAAsB96B,OAAOt9B,EAAK,IAClCA,EAAK,GAAKs4D,GAGlB,OAAOl1D,EAAoBpc,KAAK2wE,EAAehqC,MAAO3tB,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAGrF,IAAI6N,EAAY,KAChB3nB,OAAOC,eAAewxE,EAAehqC,MAAO,YAAa,CACrDhkB,IAAK,IAAMkE,EACXwL,IAAMjyB,IACuB,mBAAdymB,GACP8pD,EAAehqC,MAAMvqB,oBAAoB,UAAWyK,GAExDA,EAA6B,mBAAVzmB,EAAuBA,EAAQ,KACzB,mBAAdymB,IACP8pD,EAAehqC,MAAMxqB,iBAAiB,UAAW0K,GACjD8pD,EAAehqC,MAAM7mB,YAIjCy/B,EAAqBhgD,UAAUssE,KAAO8E,EAAehqC,MACrD,IAAIoZ,EAAwB,KChPO,EAAC/H,EAAeiI,EAAwBV,EAAsBgyB,KACrG,IAAIvxB,EAAqB/K,EAAuBtyB,IAAIq1B,QACzBz0C,IAAvBy8C,IACAA,EAAqB,IAAIvL,QACzBQ,EAAuB5iB,IAAI2lB,EAAegI,IAE9C,MAAMwxB,ECPwCzjE,OAAOwxC,EAAsBgyB,IAEpE,IAAIhyB,OCH6B,CAACgyB,GAClC,IAAI3mE,SAAQ,CAACC,EAASC,KACzB,MAAM,MAAE67B,EAAK,MAAEC,GAAU,IAAInB,eAC7BkB,EAAM9f,UAAY,EAAGrB,WACjBmhB,EAAMvgB,QACNwgB,EAAMxgB,QACNvb,EAAQ2a,IAEZmhB,EAAM8qC,eAAiB,EAAGjsD,WACtBmhB,EAAMvgB,QACNwgB,EAAMxgB,QACNtb,EAAO0a,IAGXohB,EAAMhB,YAAY2rC,MDZsBG,CAA6BH,IDMpCI,CAAmCpyB,EAAsBgyB,GAE9F,OADAvxB,EAAmB3tB,IAAI4tB,EAAwBuxB,GACxCA,GDyOkCI,CAA4B55B,EAAem5B,EAA6B5xB,EAAsBzjC,GACtG8D,MAAMiyD,GAAkB9xB,EAAwB8xB,IAC7E,MAAMv2B,EAAS0D,GAAmBljC,EAAQwiC,eAAgBxiC,EAAQy7B,cAC5D4I,EAAUnB,GAAmBljC,EAAQyiC,gBAAiBe,GACtD7F,OAA2Dl2C,IAA9Cg8C,EAAqB3J,qBAClC,GACA2J,EAAqB3J,qBAAqB9kC,QAAO,CAACsvC,GAAUn/C,WAAW,IAAMm/C,EAAQ,CAACn/C,GAAO,IAAIsE,aAAa,QAAS,IAC7H,IAAIw4C,GAAW,EACf,MAAM+zB,EAAyB,KACvBh2D,EAAQyiC,gBAAkB,GAC1B0d,EAAoBrgB,WAAWo1B,GAEnC,IAAK,IAAI5yE,EAAI,EAAGmiD,EAAkC,EAAGniD,EAAI0d,EAAQyiC,gBAAiBngD,GAAK,EAAG,CACtF,MAAM2zE,EAA0Bd,EAAyB7yE,GACzD,IAAK,IAAIypC,EAAI,EAAGA,EAAIyX,EAAmBlhD,GAAIypC,GAAK,EAC5CmpC,EAA0Bp1B,WAAWm2B,EAAyBxxB,EAAkC1Y,EAAGA,GAEvG0Y,GAAmCjB,EAAmBlhD,KAGxD4zE,EAAqB,IAAI9/C,IAE/B+pC,EAAoBtf,eAAiB,EAAGE,cAAayf,mBACjD,GAA8B,OAA1Bvc,EAAgC,CAChC,MAAM3I,EAAem5B,EAAgCY,GACrD,IAAK,IAAI/yE,EAAI,EAAGA,EAAIsN,EAAYtN,GAAK,IAAK,CACtC,IAAK,IAAIypC,EAAI,EAAGA,EAAI/rB,EAAQwiC,eAAgBzW,GAAK,EAC7C,IAAK,IAAIE,EAAI,EAAGA,EAAIjsB,EAAQy7B,aAAcxP,GAAK,EAC3C2W,GAAgB7B,EAAavB,EAAOzT,GAAIE,EAAGA,EAAG3pC,QAGJmF,IAA9Cg8C,EAAqB3J,sBACrB2J,EAAqB3J,qBAAqBrrC,SAAQ,EAAGtJ,QAAQoC,KACzDq7C,GAAgB7B,EAAapD,EAAYx4C,EAAMw+C,EAAwBp8C,EAAOjF,MAGtF,IAAK,IAAIypC,EAAI,EAAGA,EAAI/rB,EAAQwiC,eAAgBzW,GAAK,EAC7C,IAAK,IAAIE,EAAI,EAAGA,EAAIuX,EAAmBzX,GAAIE,GAAK,EAEX,IAA7BoY,EAAQtY,GAAGE,GAAG8W,aACdsB,EAAQtY,GAAGE,GAAK,IAAIxiC,aAAa,MAI7C,IACI,MAAM86C,EAAyB/E,EAAO1mC,KAAI,CAAC2zB,EAAOllC,KAE9C,GADoB+zC,EAAa/zC,GACjBgkC,KAAO,EAEnB,OADA2qC,EAAmB3/C,IAAIhvB,EAAOqI,EAAa,KACpC68B,EAEX,MAAMp1B,EAAQ6+D,EAAmBrvD,IAAItf,GACrC,YAAcE,IAAV4P,EACO,IAEPo1B,EAAMz0B,OAAO2oC,GAAgBA,EAAY3oC,OAAOqC,GAAsB,IAAXA,QAC7C,IAAVhD,EACA6+D,EAAmB17B,OAAOjzC,GAG1B2uE,EAAmB3/C,IAAIhvB,EAAO8P,EAAQ,IAGvCo1B,MAEL+X,EAAmBd,EAAiCxH,EAAcma,YAAc/zD,EAAI45C,EAAc6H,WAAY7H,EAAc6H,YAAY,IAAME,EAAsBva,QAAQ6a,EAAwBF,EAAS1G,KACnNsE,EAAWuC,EACX,IAAK,IAAIzY,EAAI,EAAG0Y,EAAkC,EAAG1Y,EAAI/rB,EAAQyiC,gBAAiB1W,GAAK,EAAG,CACtF,IAAK,IAAIE,EAAI,EAAGA,EAAIuX,EAAmBzX,GAAIE,GAAK,EAC5CoQ,GAAcmkB,EAAcnc,EAAQtY,GAAIE,EAAGwY,EAAkCxY,EAAG3pC,GAEpFmiD,GAAmCjB,EAAmBzX,IAG9D,MAAO3gC,GACH62C,GAAW,EACXozB,EAA4B3wB,cAAc,IAAIC,WAAW,iBAAkB,CACvEC,MAAOx5C,EAAMw5C,MACbC,SAAUz5C,EAAMy5C,SAChBC,OAAQ15C,EAAM05C,OACd57B,QAAS9d,EAAM8d,WAGvB,IAAK+4B,EAAU,CACX,IAAK,IAAIlW,EAAI,EAAGA,EAAI/rB,EAAQwiC,eAAgBzW,GAAK,EAAG,CAChD+oC,EAAU/oC,GAAG+T,WAAWi1B,EAA0BhpC,IAClD,IAAK,IAAIE,EAAI,EAAGA,EAAIjsB,EAAQy7B,aAAcxP,GAAK,EAC3C8oC,EAA0BzyE,GAAGw9C,WAAWm1B,EAAwBhpC,EAAGF,EAAI/rB,EAAQy7B,aAAexP,GAGtG,QAAkDxkC,IAA9Cg8C,EAAqB3J,qBAAoC,CACzD,MAAMz3C,EAASohD,EAAqB3J,qBAAqBz3C,OACzD,IAAK,IAAI0pC,EAAI,EAAGA,EAAI1pC,EAAQ0pC,GAAK,EAAG,CAChC,MAAM42B,EAAqBqS,EAAoBjpC,GAC/C42B,EAAmB7iB,WAAWm1B,EAAwB,EAAGtxB,EAAwB5X,GACjF42B,EAAmB1hB,QAG3Bg0B,EAAuBn1B,WAAWqgB,GAClCA,EAAoBtf,eAAiB,KACjC0kB,EACAyQ,IAGAG,IAEJ,UAKhB,IAAI5Q,GAAc,EAElB,MAAM9c,EAAiBD,EAAqBtM,EAAe,CACvDT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBoC,KAAM,IAEJq4B,EAAmB,IAAMjW,EAAoB/hD,QAAQqqC,GAAgBrqC,QAAQ89B,EAAcxsC,aAC3FymE,EAAsB,KACxBhW,EAAoBrgB,WAAW2I,GAC/BA,EAAe3I,cA0BnB,OADAs2B,IACOpc,EAAmBqb,GAxBJ,KAClB,GAAIpzB,EAAU,CACVk0B,IACIn2D,EAAQyiC,gBAAkB,GAC1B0d,EAAoB/hD,QAAQ82D,GAEhC,IAAK,IAAI5yE,EAAI,EAAGmiD,EAAkC,EAAGniD,EAAI0d,EAAQyiC,gBAAiBngD,GAAK,EAAG,CACtF,MAAM2zE,EAA0Bd,EAAyB7yE,GACzD,IAAK,IAAIypC,EAAI,EAAGA,EAAIyX,EAAmBlhD,GAAIypC,GAAK,EAC5CmpC,EAA0B92D,QAAQ63D,EAAyBxxB,EAAkC1Y,EAAGA,GAEpG0Y,GAAmCjB,EAAmBlhD,IAG9DijE,GAAc,KAEO,KACjBtjB,IACAm0B,IACAJ,KAEJzQ,GAAc,MpHlEgB8Q,CAAyCnC,GAAwB53B,EAAsBmJ,GAAyB8U,GAA+B1S,GAAiCiU,GAAgCtT,GAAsBO,GAAiCC,GAAyBsrB,GAA2B5wB,GAAkC+wB,GAAiCza,IAClasc,GwHlU6C,EAAC7wB,EAAyBkvB,EAAmCnsB,EAAsBQ,EAAyBgR,IACpJ,CAAC9d,EAAesL,EAAaylB,EAAmC9nE,EAAMs+C,EAAsBzjC,KAC/F,GAA0C,OAAtCitD,EACA,IACI,MAAM9oB,EAAyB,IAAI8oB,EAAkC/wB,EAAe/2C,EAAM6a,GACpFs1D,EAAwB,IAAIl/C,IAClC,IAAI45C,EAAmB,KAqFvB,GApFA5sE,OAAOioD,iBAAiBlH,EAAwB,CAK5C1I,aAAc,CACV50B,IAAK,IAAM7G,EAAQy7B,aACnBllB,IAAK,KACD,MAAMkvB,MAGd/J,iBAAkB,CACd70B,IAAK,IAAM,WACX0P,IAAK,KACD,MAAMkvB,MAIduqB,iBAAkB,CACdnpD,IAAK,IAAMmpD,EACXz5C,IAAMjyB,IAC8B,mBAArB0rE,GACP7rB,EAAuB7jC,oBAAoB,iBAAkB0vD,GAEjEA,EAAoC,mBAAV1rE,EAAuBA,EAAQ,KACzB,mBAArB0rE,GACP7rB,EAAuB9jC,iBAAiB,iBAAkB2vD,OAK1E7rB,EAAuB9jC,kBAAqBA,EAkCzC8jC,EAAuB9jC,iBAjCf,IAAInD,KACP,GAAgB,mBAAZA,EAAK,GAAyB,CAC9B,MAAMq4D,EAA4C,mBAAZr4D,EAAK,GACrCA,EAAK,GACc,iBAAZA,EAAK,IAA+B,OAAZA,EAAK,IAA8C,mBAAxBA,EAAK,GAAGquC,YAC9DruC,EAAK,GAAGquC,YACR,KACV,GAA+B,OAA3BgqB,EAAiC,CACjC,MAAMC,EAAuBF,EAAsBzuD,IAAI3J,EAAK,SAC/BzV,IAAzB+tE,EACAt4D,EAAK,GAAKs4D,GAGVt4D,EAAK,GAAMwtB,IAEY,UAAfA,EAAMzkC,MACN7C,OAAOioD,iBAAiB3gB,EAAO,CAC3BzkC,KAAM,CAAE3B,MAAO,oBAEnBixE,EAAuB7qC,IAGvB6qC,EAAuB,IAAI5wB,WAAWznC,EAAK,GAAI,IAAKwtB,MAG5D4qC,EAAsB/+C,IAAIg/C,EAAwBr4D,EAAK,MAMnE,OADAmD,EAAiBnc,KAAKigD,EAAwB,QAASjnC,EAAK,GAAIA,EAAK,IAC9DmD,EAAiBnc,KAAKigD,KAA2BjnC,KAGhEinC,EAAuB7jC,qBAAwBA,EAa5C6jC,EAAuB7jC,oBAZf,IAAIpD,KACP,GAAgB,mBAAZA,EAAK,GAAyB,CAC9B,MAAMs4D,EAAuBF,EAAsBzuD,IAAI3J,EAAK,SAC/BzV,IAAzB+tE,IACAF,EAAsB96B,OAAOt9B,EAAK,IAClCA,EAAK,GAAKs4D,GAKlB,OADAl1D,EAAoBpc,KAAKigD,EAAwB,QAASjnC,EAAK,GAAIA,EAAK,IACjEoD,EAAoBpc,KAAKigD,EAAwBjnC,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAOvD,IAA5B8C,EAAQyiC,gBAAuB,CAC/B,MAAMgG,EAAiBD,EAAqBtM,EAAe,CACvDT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBoC,KAAM,IAMV,OAJAoG,EAAuB/lC,QAAQqqC,GAAgBrqC,QAAQ89B,EAAcxsC,aAI9DsqD,EAAmB7V,GAHJ,IAAMsE,EAAe3I,eAClB,IAAM2I,EAAerqC,QAAQ89B,EAAcxsC,eAIxE,OAAOy0C,EAEX,MAAO5/C,GAEH,GAAiB,KAAbA,EAAImmB,KACJ,MAAMs+B,IAEV,MAAMzkD,EAtCuC,IAAE+b,EAnCHD,EA6EpD,QAA6B5Y,IAAzBg8C,EACA,MAAMuF,IAGV,MCxHgD,CAACysB,IACrD,MAAM,MAAE5qC,GAAU,IAAIlB,eACtB,IAEIkB,EAAMf,YAAY2rC,GAEtB,QACI5qC,EAAMvgB,UDgHNisD,CAAyCv2D,GAClC20D,EAAkCz4B,EAAesL,EAAa/D,EAAsBzjC,IxH2M9Dw2D,CAAoC/wB,GAAyBkvB,GAAmCnsB,GAAsBQ,GAAyBgR,IAC9Kyc,GhDxP+C,EAACziB,EAAmBkgB,EAAwBhgB,EAAmCqG,EAA+B1S,EAAiCiU,EAAgCtT,EAAsB4rB,EAAkCE,EAA2B5wB,EAAkC3D,EAAoBktB,EAAmC9e,EAAsC2G,EAAkB3H,EAAyByT,IACtd,CAACz7D,EAAM6a,EAASyjC,KACnB,MAAMyX,EAA2B,IAAIviB,QACrC,IAAI+9B,EAAyB,KAoJ7B,MAAO,CACH,OAAOrzB,EAAOE,EAA2BhG,GACrC62B,EAAiC7wB,EAA2BF,GAC5D,MAAMszB,EAA2Czb,EAAyBr0C,IAAI08B,GAC9E,YAAiD97C,IAA7CkvE,EACO7nE,QAAQC,QAAQ4nE,GAxJX1kE,OAAOoxC,EAAOE,EAA2BhG,KAC7D,IAAI4G,EAAyBpE,EAAmBsD,GAC5CuzB,EAAoB,KACxB,MAAMC,EAAyC76B,EAAiBmI,EAAwBZ,GAClFC,EAAqBhhD,MAAMC,QAAQud,EAAQwjC,oBAC3CxjC,EAAQwjC,mBACRhhD,MAAM4C,KAAK4a,EAAQwjC,oBAEzB,GAA0C,OAAtCypB,EAA4C,CAC5C,MAAMrpB,EAAyBJ,EAAmBxuC,QAAO,CAAC6uC,EAAKv/C,IAAUu/C,EAAMv/C,GAAO,GAChF4wE,EAA4BrtB,EAAgCtE,EAA2B,CACzF9H,aAAc50C,KAAKkK,IAAI,EAAG6yC,GAC1BlI,iBAAkB,WAClBC,sBAAuB,WACvB8G,gBAAiB57C,KAAKkK,IAAI,EAAG6yC,KAE3BuxB,EAA2B,GACjC,IAAK,IAAI7yE,EAAI,EAAGA,EAAI+gD,EAAMZ,gBAAiBngD,GAAK,EAC5C6yE,EAAyB9wE,KAAKk2D,EAA8BhX,EAA2B,CACnF9H,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB6G,eAAgBgB,EAAmBlhD,MAG3C,MAAM8iE,EAAiB5c,EAAqBjF,EAA2B,CACnE9H,aAAcz7B,EAAQy7B,aACtBC,iBAAkB17B,EAAQ07B,iBAC1BC,sBAAuB37B,EAAQ27B,sBAC/BoC,KAAM,IAEVqnB,EAAehnD,QAAU81D,EAAuBxgE,KAAK,KAAMyhE,GAC3D/P,EAAetlB,WAAaw0B,EAA0B5gE,KAAK,KAAMyhE,GACjEyB,EAAoB,CAAC1B,EAA2BC,EAA0B/P,QAEpEyR,IACN1yB,EAAyB,IAAI8oB,EAAkC1pB,EAA2Bp+C,IAG9F,GADA+1D,EAAyB3kC,IAAIgtB,EAAiD,OAAtBqzB,EAA6BzyB,EAAyByyB,EAAkB,IACtG,OAAtBA,EAA4B,CAC5B,GAA+B,OAA3BF,EAAiC,CACjC,QAA6BjvE,IAAzBg8C,EACA,MAAM,IAAIp6C,MAAM,sCAEpB,GAA6C,OAAzC8kD,EACA,MAAM,IAAI9kD,MAAM,uDAGpB,MAAMs6C,EAAwBN,EAAM5H,aAAe4H,EAAMb,eACnDoyB,OAAmEntE,IAA9Cg8C,EAAqB3J,qBAAqC,EAAI2J,EAAqB3J,qBAAqBz3C,OAC7Hs6C,EAAmBgH,EAAwBixB,EAC3CkC,EAAe7kE,UACjB,MAAMuvD,EAA6B,IAAIrT,EAAqCxR,EAGpC,IAAxC91C,KAAK4B,KAAK46C,EAAM7vC,QAAQnR,OAAS,KAAYkhD,EAA0BQ,YACjE+wB,EAAY,GACZC,EAA4B,GAClC,IAAK,IAAIzyE,EAAI,EAAGA,EAAI0d,EAAQwiC,eAAgBlgD,GAAK,EAC7CwyE,EAAUzwE,KAAKmkD,EAAqBgZ,EAA4B,CAC5D/lB,aAAcz7B,EAAQy7B,aACtBC,iBAAkB17B,EAAQ07B,iBAC1BC,sBAAuB37B,EAAQ27B,sBAC/BoC,KAAM,KAEVg3B,EAA0B1wE,KAAKwjD,EAAgC2Z,EAA4B,CACvF/lB,aAAcz7B,EAAQy7B,aACtBC,iBAAkB,WAClBC,sBAAuB,WACvB8G,gBAAiBziC,EAAQy7B,gBAGjC,MAAMu5B,QAA4BlmE,QAAQu+C,IAAI7qD,MAAM4C,KAAKi+C,EAAM1F,WAAWr3C,UAAUwS,KAAI7G,MAAOorC,IAC3F,MAAMslB,EAAqB7G,EAA+B0F,EAA4B,CAClF/lB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBsC,OAAQZ,EAAW/4C,QAGvB,aADMwwD,EAAiB0M,EAA4BnkB,EAAYslB,EAAmB1kB,OAAQV,GACnFolB,MAELsS,EAAyB1a,EAA8BiH,EAA4B,CACrF/lB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB6G,eAAgB37C,KAAKkK,IAAI,EAAG4yC,EAAwBixB,KAExD,IAAK,IAAItyE,EAAI,EAAGA,EAAI0d,EAAQwiC,eAAgBlgD,GAAK,EAAG,CAChDwyE,EAAUxyE,GAAG8b,QAAQ22D,EAA0BzyE,IAC/C,IAAK,IAAIypC,EAAI,EAAGA,EAAI/rB,EAAQy7B,aAAc1P,GAAK,EAC3CgpC,EAA0BzyE,GAAG8b,QAAQ62D,EAAwBlpC,EAAGzpC,EAAI0d,EAAQy7B,aAAe1P,GAGnG,IAAK,MAAOxkC,EAAOo7D,KAAuBqS,EAAoBzyB,UAC1DogB,EAAmBvkD,QAAQ62D,EAAwB,EAAGtxB,EAAwBp8C,GAC9Eo7D,EAAmB3+C,MAAM,GAI7B,OAFAixD,EAAuB72D,QAAQojD,EAA2B9xD,mBACpDZ,QAAQu+C,IAAIynB,EAAUh8D,KAAK4/C,GAAavL,EAAwB9J,EAAOme,EAA4B9I,EAAUnb,MAC5GqjB,EAAgCY,IAE3CkV,EAAyBtzB,GAAcC,EAA4B,IAArB1G,EAAyB,WAAam6B,IAAgBvzB,EAA2BvjC,EAASwjC,EAAoBC,EAAsBC,GAEtL,MAAMI,QAAwB4yB,EACxB7b,EAAwB3G,EAAkC3Q,EAA2B,CACvF5sC,OAAQ,KACR8kC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBoB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,KAEXg4B,EAA2BC,EAA0B/P,GAAkBwR,EACtD,OAApB9yB,IACA+W,EAAsBlkD,OAASmtC,EAC/B+W,EAAsB72C,MAAM,IAEhC62C,EAAsBz8C,QAAQ82D,GAC9B,IAAK,IAAI5yE,EAAI,EAAGmiD,EAAkC,EAAGniD,EAAI+gD,EAAMZ,gBAAiBngD,GAAK,EAAG,CACpF,MAAM2zE,EAA0Bd,EAAyB7yE,GACzD,IAAK,IAAIypC,EAAI,EAAGA,EAAIyX,EAAmBlhD,GAAIypC,GAAK,EAC5CmpC,EAA0B92D,QAAQ63D,EAAyBxxB,EAAkC1Y,EAAGA,GAEpG0Y,GAAmCjB,EAAmBlhD,GAE1D,OAAO8iE,EAEX,GAAKyR,EAQD,IAAK,MAAOE,EAAI15B,KAAegG,EAAM1F,WAAW4E,gBACtCyR,EAAkBzQ,EAA2BlG,EAEnD8G,EAAuBxG,WAAW92B,IAAIkwD,GAAKx5B,QAV/C,IAAK,MAAOw5B,EAAI15B,KAAegG,EAAM1F,WAAW4E,gBACtCuS,EAAiBvR,EAA2BlG,EAElD8G,EAAuBxG,WAAW92B,IAAIkwD,GAAKx5B,GAWnD,aADM4P,EAAwB9J,EAAOE,EAA2BY,EAAwB5G,GACjF4G,GASIgX,CAAgB9X,EAAOE,EAA2BhG,MgD0FlCy5B,CAAsChjB,GAAmBkgB,GAAwBhgB,GAAmCqG,GAA+B1S,GAAiCiU,GAAgCtT,GAAsB4rB,GAAkCE,GAA2B5wB,GAAkC3D,GAAoBktB,GAAmC9e,GAAsC2G,GAAkB3H,GAAyByT,IAClfqW,G0HrU4C,CAACpK,GACvC3wB,GACG2wB,EAA+BhmD,IAAIq1B,G1HmUbg7B,CAAmCrK,IAClEsK,G2HtU+C,CAAC3C,GAC3C,CAACrwB,EAAwB7I,KAC5Bk5B,EAAkCj+C,IAAI4tB,EAAwB7I,I3HoU9B87B,CAAsC5C,IAExE6C,GAA8B5K,GpD5Ta,EAACuH,EAA+BrkB,EAAsB8F,EAAkBghB,EAAgCH,EAA8Bn5B,EAAyB85B,EAA8BhpB,EAAkBM,EAA6B0e,EAAmCqK,EAAiCH,EAAiC/rB,IACvX,cAA+BuE,EAClC,YAAYn8C,EAASrO,EAAM6a,GACvB,IAAI6a,EACJ,MAAMqhB,EAAgB+R,EAAiBz6C,GACjCuuC,EAAYwM,EAA4BrS,GACxCgW,EgLlB6B,CAAClyC,IACrC,IACAA,EACHwjC,wBAAmD/7C,IAA/BuY,EAAQwjC,mBACtBxjC,EAAQwjC,mBACmB,IAA3BxjC,EAAQwiC,gBAAoD,IAA5BxiC,EAAQyiC,gBAMlC,CAACziC,EAAQy7B,cACXj5C,MAAM4C,KAAK,CAAE/C,OAAQ2d,EAAQyiC,kBAAmB,IAAM,MhLMtC60B,CAAgC,IAAK,MAAoBt3D,IACzE6uD,EAAoC31B,EAAwCryB,IAAIq1B,GAChFuH,EAAuBorB,aAA6F,EAASA,EAAkChoD,IAAI1hB,GAEnKoyE,EAA2Cx1B,GAAqC,WAAxB7F,EAAc3pC,MACtE2pC,EACuD,QAAtDrhB,EAAKo8C,EAA6B/6B,UAAmC,IAAPrhB,EAAgBA,EAAKqhB,EACpFiI,EAAyBmyB,EAA6BiB,EAA0Cx1B,EAAY,KAAOvuC,EAAQg0C,YAAaylB,EAAmC9nE,EAAMs+C,EAAsByO,GAM7MjC,MAAMz8C,GAAS,EAAM2wC,EALcpC,EAAY00B,EAA+BtxE,EAAM+sD,EAAezO,GAAwB,MAM3H,MAAM9F,EAAa,GACnBwG,EAAuBxG,WAAWlvC,SAAQ,CAAC2hD,EAAkB2mB,KACzD,MAAM15B,EAAaoY,EAAiB5sD,KAAMk5C,EAAWqO,GACrDzS,EAAWt5C,KAAK,CAAC0yE,EAAI15B,OAEzBx0C,KAAK2uE,wBAA0BrzB,EAC/Bt7C,KAAK4uE,kBAAoB,KACzB5uE,KAAK6uE,YAAc,IAAIr1B,GAAY1E,GAK/BoE,GACAiyB,EAA8B93B,EAAerzC,MAEjD,MAAM,aAAEyyC,GAAiB6B,EAAwBt0C,MACjDsuE,EAAgChzB,EAAwB7I,GAE5D,uBACI,OAAOzyC,KAAK4uE,kBAEhB,qBAAqBnzE,GACjB,MAAMozD,EAAmC,mBAAVpzD,EAAuB8mD,EAAkBviD,KAAMvE,GAAS,KACvFuE,KAAK2uE,wBAAwBxH,iBAAmBtY,EAChD,MAAMigB,EAAyB9uE,KAAK2uE,wBAAwBxH,iBAC5DnnE,KAAK4uE,kBAC0B,OAA3BE,GAAmCA,IAA2BjgB,EACxDpzD,EACAqzE,EAEd,iBACI,OAAyB,OAArB9uE,KAAK6uE,YAEE7uE,KAAK2uE,wBAAwB75B,WAEjC90C,KAAK6uE,YAEhB,WACI,OAAO7uE,KAAK2uE,wBAAwBzH,OoDmQ1C6H,CAAkC5D,GAA+BrkB,GAAsB8F,GAAkBghB,GAAgCH,GAA8Bn5B,EAAyB85B,GAA8BhpB,GAAkBM,GAA6B0e,G4HzUpO,E5HyUwSkK,GAAiC/rB,SAClX3jD,EAiBAowE,G6H3V+C,EAAC7uB,EAAyBmF,IACpE,CAACxR,EAAkBt6C,EAAQ0hD,KAC9B,GAA6C,OAAzCoK,EACA,MAAM,IAAI9kD,MAAM,uDAEpB,IACI,OAAO,IAAI8kD,EAAqCxR,EAAkBt6C,EAAQ0hD,GAE9E,MAAOx/C,GAEH,GAAiB,gBAAbA,EAAIY,KACJ,MAAM6jD,IAEV,MAAMzkD,I7H8UsBuzE,CAAsC9uB,GAAyBmF,IACjG6S,G8H3V8B,EAACxO,EAAkBvG,EAAiBe,EAAsB6mB,EAAgCjT,EAAiCzkB,EAAqD2W,EAAmCO,KACnP,MAAM9V,EAAQ,GACd,MAAO,CAAC7tC,EAAa6zC,IAA8ByJ,EAAqBt9C,GACnE89C,OAAO99C,EAAa6zC,EAA2BhG,GAK/Cz5B,MAAK,IAAMhV,QAAQu+C,IAAI7qD,MAAM4C,KAAKyuE,EAA+BtwB,IAA4BzqC,KAAK+2D,GAAqB7iB,EAAqB6iB,GAAkBriB,OAAOqiB,EAAkBtsB,EAA2BhG,QAClNz5B,MAAK,IAAM88C,EAAgCrd,KAC3Cz/B,MAAM24B,IAGoC,mBAAhCA,EAAYmG,iBACnBkQ,EAAkCrW,GAClCD,EAAoCC,IAG9BwP,EAAgB9P,GAAqD,IAAMA,EAAoDM,MACrI4W,EAA6C5W,GAEjD+V,EAAiBpkD,IAAIquC,GACdA,M9HqUQs7B,CAAqBvlB,GAAkBvG,GAAiBe,GAAsB6mB,GAAgCjT,GAAiCzkB,EAAqD2W,GAAmCO,IAGxP2kB,Gf1V8C,EAAC5H,EAA6BnkB,EAAiBxG,EAAyBoyB,EAAiC7W,IAClJ,cAAkCoP,EACrC,YAAYj1C,EAAGC,EAAGwF,GACd,IAAI5gB,EACJ,GAAiB,iBAANmb,QAAwB1zB,IAAN2zB,QAAyB3zB,IAANm5B,EAC5C5gB,EAAU,CAAE3d,OAAQ+4B,EAAGuhB,iBAAkBxhB,EAAG4oB,WAAYnjB,OAEvD,IAAiB,iBAANzF,EAIZ,MAAM,IAAI9xB,MAAM,uCAHhB2W,EAAUmb,EAKd,MAAM,OAAE94B,EAAM,iBAAEs6C,EAAgB,WAAEoH,GAAe,IAAK,MAAoB/jC,GACpEujC,EAA4Bs0B,EAAgCl7B,EAAkBt6C,EAAQ0hD,GAEvFkI,EAAgB3F,IAAoB,IAAMA,GAAmB/C,MAC9DA,EAA0BljC,iBAAiB,cAAe,MACtD,IAAI/d,EAAI,EACR,MAAM21E,EAAyBvtC,IACP,YAAhB7hC,KAAK2qE,SACDlxE,EAAI,GACJihD,EAA0BjjC,oBAAoB,cAAe23D,GAC7DvtC,EAAMwtC,2BACNrvE,KAAKsvE,2BAA2BztC,IAGhCpoC,GAAK,IAIjB,OAAO21E,GAd+C,IAiB9DhoB,MAAM1M,EAA2B5G,GACjC9zC,KAAKuvE,QAAU/1E,EACfwG,KAAKwvE,2BAA6B90B,EAClC16C,KAAK2qE,OAAS,KAElB,aAEI,YAA+C/rE,IAA3CoB,KAAKwvE,2BAA2Bh2E,OACzBwG,KAAKuvE,QAETvvE,KAAKwvE,2BAA2Bh2E,OAE3C,YACI,OAAuB,OAAhBwG,KAAK2qE,OAAkB3qE,KAAKwvE,2BAA2B9lE,MAAQ1J,KAAK2qE,OAE/E,iBAKI,MAAoB,YAAhB3qE,KAAK2qE,OACE1kE,QAAQE,OAAOy2C,MAE1B58C,KAAK2qE,OAAS,UACPxS,EAAen4D,KAAK6G,YAAa7G,KAAKwvE,4BAA4BjK,SAAQ,KAC7EvlE,KAAK2qE,OAAS,KACdj1B,EAAqB11C,UAG7B,2BAA2B6hC,GACH,OAAhB7hC,KAAK2qE,OACL3qE,KAAKwvE,2BAA2B3zB,cAAcha,GAG9C3mB,YAAW,IAAMlb,KAAKsvE,2BAA2BztC,OesR1B4tC,CAAqClI,GAA6BnkB,GAAiBxG,GAAyBoyB,GAAiC7W,IAOvKuX,G+HtW0B,EAACrqB,EAAckB,IAC1CZ,IACJ,MAAMtS,EAAgBgS,EAAarnC,IAAI2nC,GACvC,OAAOY,EAAqBlT,IAAkBkT,EAAqBZ,I/HmW1CgqB,CAAwBz/B,EAAeqW,IAC3DqpB,GgIvWuB,EAACC,EAAgBn3B,IACzCiN,GAAakqB,EAAe7kD,IAAI26B,IAAajN,EAAkBiN,GhIsW7CmqB,CAAqB//B,EAAkB,IACxDggC,GiIxWwB,EAACjjB,EAAiBnG,IAC3ChB,GAAamH,EAAgB9hC,IAAI26B,IAAagB,EAAmBhB,GjIuW9CqqB,CAAsB//B,EAAmB0W,IAC3DspB,GkIzWiC,EAAC5qB,EAAcK,IACjDC,IACJ,MAAMtS,EAAgBgS,EAAarnC,IAAI2nC,GACvC,OAAOD,EAA4BrS,IAAkBqS,EAA4BC,IlIsWjDuqB,CAA+BhgC,EAAewV,IgFtWzC,IAAC6X,GmDEvC,SAAS,GAAO4S,EAAW5tE,GAC9B,IAAK4tE,EACD,MAAM,IAAI3vE,MAAM+B,GAMjB,SAAS,GAAY9G,EAAO20E,EAAKC,EAAMC,KAC1C,KAAMF,GAAO30E,GAASA,GAAS40E,GAC3B,MAAM,IAAI7xB,WAAW,yBAAyB4xB,MAAQC,YAAc50E,KAMrE,SAAS80E,GAAqB5lE,GAE5BA,EAAQuuC,WAA+B,YAAlBvuC,EAAQjB,OAC9B,GAAK,+FAMb,IAAI8mE,GAAgBt3E,QAgBb,SAAS,MAAQmb,GACpBm8D,GAAcr3E,QAAQkb,GC5CnB,SAAS,GAAQU,GACpB,YAAsB,IAARA,EAKX,SAAS,GAAUA,GACtB,OAAQ,GAAQA,GAWb,SAAS,GAASA,GACrB,MAAuB,iBAARA,EAKZ,SAAS,GAASA,GACrB,MAAgD,oBAAxCxa,OAAOK,UAAUuB,SAASd,KAAK0Z,IAA8BA,EAAI1Y,cAAgB9B,OAWtF,SAAS,GAAQwa,GACpB,OAAQpb,MAAMC,QAAQmb,GAKnB,SAAS,GAASA,GACrB,MAAuB,iBAARA,EAMZ,SAAS07D,GAAO17D,GACnB,OAAO,GAASA,IAAQ,sCAAsCvY,KAAKuY,GClChE,MAAM,GAA4B,iBAATH,KAAoBA,KAAO,KAK9C87D,GAAkB,KAC1B,GAAU5yD,eAAe,iBAAmB,GAAUA,eAAe,uBC6BnE,SAAS6yD,GAAWC,EAAY32E,EAAQQ,EAAKo2E,GAChD,IAA2HC,EAAvH/4C,EAAI5tB,UAAU3Q,OAAQovC,EAAI7Q,EAAI,EAAI99B,EAAkB,OAAT42E,EAAgBA,EAAOt2E,OAAOsnD,yBAAyB5nD,EAAQQ,GAAOo2E,EACrH,GAAuB,iBAAZE,SAAoD,mBAArBA,QAAQC,SAAyBpoC,EAAImoC,QAAQC,SAASJ,EAAY32E,EAAQQ,EAAKo2E,QACpH,IAAK,IAAIp3E,EAAIm3E,EAAWp3E,OAAS,EAAGC,GAAK,EAAGA,KAASq3E,EAAIF,EAAWn3E,MAAImvC,GAAK7Q,EAAI,EAAI+4C,EAAEloC,GAAK7Q,EAAI,EAAI+4C,EAAE72E,EAAQQ,EAAKmuC,GAAKkoC,EAAE72E,EAAQQ,KAASmuC,GAChJ,OAAO7Q,EAAI,GAAK6Q,GAAKruC,OAAOC,eAAeP,EAAQQ,EAAKmuC,GAAIA,EAWzD,SAAS,GAAUplB,EAASytD,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIjrE,WAAU,SAAUC,EAASC,GAC/C,SAASirE,EAAU31E,GAAS,IAAM41E,EAAKF,EAAU71E,KAAKG,IAAW,MAAOoB,GAAKsJ,EAAOtJ,IACpF,SAASy0E,EAAS71E,GAAS,IAAM41E,EAAKF,EAAiB,MAAE11E,IAAW,MAAOoB,GAAKsJ,EAAOtJ,IACvF,SAASw0E,EAAKh7D,GAJlB,IAAe5a,EAIa4a,EAAO9a,KAAO2K,EAAQmQ,EAAO5a,QAJ1CA,EAIyD4a,EAAO5a,MAJhDA,aAAiBy1E,EAAIz1E,EAAQ,IAAIy1E,GAAE,SAAUhrE,GAAWA,EAAQzK,OAITwf,KAAKm2D,EAAWE,GAClGD,GAAMF,EAAYA,EAAUz8D,MAAM8O,EAASytD,GAAc,KAAK31E,WAgCzCf,OAAOkM,OAkGXlM,OAAOkM,OCzMzB,MAAM8qE,GACT,YAAY9tD,EAAUrmB,EAAMo0E,GACxBxxE,KAAKyxE,UAAYhuD,EACjBzjB,KAAK0xE,MAAQt0E,EACb4C,KAAK2xE,gBAAkBH,EAEvBxxE,KAAK4xE,eAKT,gBACI,MAAMzM,EAAO,IAAIC,KAAK,CACD,kEAEmB,IAAvBplE,KAAK2xE,iBAAwBE,QAAQ,sXAcnD,CAAEz0E,KAAM,oBACL00E,EAAU/gC,IAAIs0B,gBAAgBF,GAC9B4M,EAAS,IAAIC,OAAOF,GAC1BC,EAAO7vD,UAAYliB,KAAKyxE,UAAU5mE,KAAK7K,MACvCA,KAAKiyE,QAAUF,EAKnB,iBACI/xE,KAAKkyE,SAAWh3D,YAAW,KACvBlb,KAAKmyE,iBACLnyE,KAAKyxE,cACiB,IAAvBzxE,KAAK2xE,iBAKZ,eACI,GAAmB,WAAf3xE,KAAK0xE,MACL,IACI1xE,KAAKoyE,gBAET,MAAOv1E,GAEHmD,KAAK0xE,MAAQ,UACb1xE,KAAK4xE,mBAGW,YAAf5xE,KAAK0xE,OACV1xE,KAAKmyE,iBAMb,gBACQnyE,KAAKkyE,WACLxyC,aAAa1/B,KAAKkyE,UAClBlyE,KAAKkyE,SAAW,GAEhBlyE,KAAKiyE,UACLjyE,KAAKiyE,QAAQI,YACbryE,KAAKiyE,QAAQ/vD,UAAY,MAMjC,qBACI,OAAOliB,KAAK2xE,gBAEhB,mBAAmB1kE,GACfjN,KAAK2xE,gBAAkB3zE,KAAKkK,IAAI+E,EAAU,IAAM,OAC7B,WAAfjN,KAAK0xE,OACL1xE,KAAKiyE,QAAQhxC,YAAYjjC,KAAKkK,IAAe,IAAX+E,EAAiB,IAM3D,WACI,OAAOjN,KAAK0xE,MAEhB,SAASt0E,GACL4C,KAAKsyE,gBACLtyE,KAAK0xE,MAAQt0E,EACb4C,KAAK4xE,eAKT,UACI5xE,KAAKsyE,iBCtGN,SAASC,GAAax9D,GACzB,OAAOg7D,GAAgBh7D,GAKpB,SAAS,GAAYA,GACxB,OAAO66D,GAAe76D,GAKnB,SAASy9D,GAAsBz9D,GAClC,OAAOk7D,GAAyBl7D,GAK7B,SAAS09D,GAAe19D,GAC3B,OAAO26D,GAAkB36D,GAKtB,SAAS29D,GAAc39D,GAC1B,OAAOA,aAAe80C,YCxB1B,SAAS8oB,GAAOl4E,EAAKsa,GACjB,MAAe,UAARta,GAAmB83E,GAAax9D,IAAQ,GAAYA,IAAQ29D,GAAc39D,GAE9E,SAAS,GAAU9a,KAAWuc,GACjC,IAAKA,EAAQhd,OACT,OAAOS,EAEX,MAAMkL,EAASqR,EAAQvB,QACvB,GAAI,GAAShb,IAAW,GAASkL,GAC7B,IAAK,MAAM1K,KAAO0K,EACVwtE,GAAOl4E,EAAK0K,EAAO1K,IACnBR,EAAOQ,GAAO0K,EAAO1K,GAEhB,GAAS0K,EAAO1K,KAChBR,EAAOQ,IACRF,OAAOqmB,OAAO3mB,EAAQ,CAAE,CAACQ,GAAM,KAEnC,GAAUR,EAAOQ,GAAM0K,EAAO1K,KAG9BF,OAAOqmB,OAAO3mB,EAAQ,CAAE,CAACQ,GAAM0K,EAAO1K,KAKlD,OAAO,GAAUR,KAAWuc,GAWzB,SAAS,GAAqBo8D,EAAUC,EAAW/3D,EAAO,GAAIg4D,GACjE,MAAMC,EAAO,GACP1+D,EAAO1a,MAAM4C,KAAKs2E,GAcxB,GAZI,GAASx+D,EAAK,KAAOy+D,IAAW/B,QAAQ/lD,IAAI3W,EAAK,GAAIy+D,KAE9Bv4E,OAAOugB,KAAKzG,EAAK,IAAI8jC,MAAK19C,GAAOs2E,QAAQ/lD,IAAI4nD,EAAUn4E,OAG1E,GAAUs4E,EAAM,CAAE,CAACD,GAASz+D,EAAK,KAEjCyG,EAAK9Z,OAAO8Z,EAAK7Q,QAAQ6oE,GAAS,GAElCz+D,EAAKY,UAGO,IAAhBZ,EAAK7a,QAAgB,GAAS6a,EAAK,IACnC,GAAU0+D,EAAM1+D,EAAK,SAGrB,IAAK,IAAI5a,EAAI,EAAGA,EAAIqhB,EAAKthB,OAAQC,IACzB,GAAU4a,EAAK5a,MACfs5E,EAAKj4D,EAAKrhB,IAAM4a,EAAK5a,IAIjC,OAAO,GAAUm5E,EAAUG,GAYxB,SAAS,GAAWC,EAAOC,GAC9B,OAAI,GAAQD,GACDC,EAGAD,EAMR,SAAS,GAAel6E,EAAKo6E,GAMhC,OALAA,EAAKttE,SAAQiY,IACLkzD,QAAQ/lD,IAAIlyB,EAAK+kB,WACV/kB,EAAI+kB,MAGZ/kB,EClFJ,MAAMq6E,GACT,cAOInzE,KAAKozE,OAAQ,EAObpzE,KAAKqzE,cAAe,EAKxB,qBACI,MAAO,GAcX,OAAOh/D,IAGCrU,KAAKozE,OAAU,IAAapzE,KAAK7D,aAAe,sBPZrD,YAAgBkY,GACnBm8D,GAAc5lC,OAAOv2B,GOYbu2B,CAAI5qC,QAASqU,GAMrB,UAEI,OADArU,KAAKqzE,cAAe,EACbrzE,KAOX,eACI,OAAOA,KAAKqzE,aAQhB,WACI,OAAOrzE,KAAK1D,MAMpB62E,GAAKG,QCpFkB,UCIvB,MAAMC,GAAU,KAIT,SAASC,GAAGlhD,EAAGC,GAClB,OAAOD,EAAIC,EAAIghD,GAKZ,SAASE,GAAInhD,EAAGC,GACnB,OAAOihD,GAAGlhD,EAAGC,IAAMmhD,GAAGphD,EAAGC,GAKtB,SAASohD,GAAGrhD,EAAGC,GAClB,OAAOD,EAAIihD,GAAUhhD,EAKlB,SAASmhD,GAAGphD,EAAGC,GAClB,OAAOv0B,KAAKyc,IAAI6X,EAAIC,GAAKghD,GCjBtB,MAAMK,WAAiBT,GAC1B,cACI/rB,QACApnD,KAAK1D,KAAO,WAIZ0D,KAAK6zE,UAAY,GACjB,MAAM18D,EAAU,GAAqBy8D,GAASE,cAAe3pE,UAAW,CAAC,WACzEnK,KAAK+zE,OAAS58D,EAAQ48D,OACtB/zE,KAAKg0E,WAAa78D,EAAQ68D,WAE9B,qBACI,MAAO,CACHD,OAAQzD,IACR0D,YAAY,GAMpB,aACI,OAAOh0E,KAAK6zE,UAAUr6E,OAM1B,IAAIqoC,GAIA,GAFA,GAAOkvC,QAAQ/lD,IAAI6W,EAAO,QAAS,+CACnCA,EAAMjkC,KAAOikC,EAAMjkC,KAAKq2E,UACpBj0E,KAAKg0E,YAAch0E,KAAKxG,OAAQ,CAChC,MAAMsvB,EAAY9oB,KAAK6zE,UAAU7zE,KAAKxG,OAAS,GAC/C,GAAOi6E,GAAI5xC,EAAMjkC,KAAMkrB,EAAUlrB,MAAO,qEACxCoC,KAAK6zE,UAAUr4E,KAAKqmC,OAEnB,CACD,MAAMnjC,EAAQsB,KAAKk0E,QAAQryC,EAAMjkC,MACjCoC,KAAK6zE,UAAU7yE,OAAOtC,EAAQ,EAAG,EAAGmjC,GAGxC,GAAI7hC,KAAKxG,OAASwG,KAAK+zE,OAAQ,CAC3B,MAAMI,EAAOn0E,KAAKxG,OAASwG,KAAK+zE,OAChC/zE,KAAK6zE,UAAU7yE,OAAO,EAAGmzE,GAE7B,OAAOn0E,KAOX,OAAO6hC,GACH,MAAMnjC,EAAQsB,KAAK6zE,UAAU5pE,QAAQ43B,GAIrC,OAHe,IAAXnjC,GACAsB,KAAK6zE,UAAU7yE,OAAOtC,EAAO,GAE1BsB,KAMX,IAAIpC,EAAMw2E,EAAQ,QACd,MAAM11E,EAAQsB,KAAKk0E,QAAQt2E,EAAMw2E,GACjC,OAAe,IAAX11E,EACOsB,KAAK6zE,UAAUn1E,GAGf,KAOf,OACI,OAAOsB,KAAK6zE,UAAU,GAK1B,QACI,OAAO7zE,KAAK6zE,UAAU5+D,QAM1B,SAASrX,EAAMw2E,EAAQ,QACnB,MAAM11E,EAAQsB,KAAKk0E,QAAQt2E,EAAMw2E,GACjC,OAAI11E,EAAQ,EAAIsB,KAAK6zE,UAAUr6E,OACpBwG,KAAK6zE,UAAUn1E,EAAQ,GAGvB,KAOf,UAAUd,GACN,MAAMrE,EAAMyG,KAAK6zE,UAAUr6E,OAE3B,GAAID,EAAM,GAAKyG,KAAK6zE,UAAUt6E,EAAM,GAAGqE,KAAOA,EAC1C,OAAOoC,KAAK6zE,UAAUt6E,EAAM,GAEhC,MAAMmF,EAAQsB,KAAKk0E,QAAQt2E,GAC3B,OAAIc,EAAQ,GAAK,EACNsB,KAAK6zE,UAAUn1E,EAAQ,GAGvB,KAOf,OAAO21E,GACH,GAAIr0E,KAAK6zE,UAAUr6E,OAAS,EAAG,CAC3B,IAAIkF,EAAQsB,KAAKk0E,QAAQG,GACzB,GAAI31E,GAAS,EACT,GAAIg1E,GAAG1zE,KAAK6zE,UAAUn1E,GAAOd,KAAMy2E,GAAQ,CAEvC,IAAK,IAAI56E,EAAIiF,EAAOjF,GAAK,GACjBi6E,GAAG1zE,KAAK6zE,UAAUp6E,GAAGmE,KAAMy2E,GADP56E,IAEpBiF,EAAQjF,EAMhBuG,KAAK6zE,UAAY7zE,KAAK6zE,UAAUz3E,MAAM,EAAGsC,QAGzCsB,KAAK6zE,UAAY7zE,KAAK6zE,UAAUz3E,MAAM,EAAGsC,EAAQ,QAIrDsB,KAAK6zE,UAAY,QAGU,IAA1B7zE,KAAK6zE,UAAUr6E,QAEhBi6E,GAAIzzE,KAAK6zE,UAAU,GAAGj2E,KAAMy2E,KAC5Br0E,KAAK6zE,UAAY,IAGzB,OAAO7zE,KAMX,aAAapC,GACT,MAAMc,EAAQsB,KAAKk0E,QAAQt2E,GAI3B,OAHIc,GAAS,IACTsB,KAAK6zE,UAAY7zE,KAAK6zE,UAAUz3E,MAAMsC,EAAQ,IAE3CsB,KAOX,cAAc6hC,GACV,MAAMnjC,EAAQsB,KAAK6zE,UAAU5pE,QAAQ43B,GACrC,OAAInjC,EAAQ,EACDsB,KAAK6zE,UAAUn1E,EAAQ,GAGvB,KASf,QAAQd,EAAMw2E,EAAQ,QAClB,GAA8B,IAA1Bp0E,KAAK6zE,UAAUr6E,OACf,OAAQ,EAEZ,IAAI86E,EAAY,EAChB,MAAM/6E,EAAMyG,KAAK6zE,UAAUr6E,OAC3B,IAAI+6E,EAAMh7E,EACV,GAAIA,EAAM,GAAKyG,KAAK6zE,UAAUt6E,EAAM,GAAG66E,IAAUx2E,EAC7C,OAAOrE,EAAM,EAEjB,KAAO+6E,EAAYC,GAAK,CAEpB,IAAIC,EAAWx2E,KAAK0B,MAAM40E,GAAaC,EAAMD,GAAa,GAC1D,MAAMzyC,EAAQ7hC,KAAK6zE,UAAUW,GACvBC,EAAYz0E,KAAK6zE,UAAUW,EAAW,GAC5C,GAAId,GAAG7xC,EAAMuyC,GAAQx2E,GAAO,CAExB,IAAK,IAAInE,EAAI+6E,EAAU/6E,EAAIuG,KAAK6zE,UAAUr6E,QAElCk6E,GADc1zE,KAAK6zE,UAAUp6E,GAChB26E,GAAQx2E,GAFqBnE,IAG1C+6E,EAAW/6E,EAMnB,OAAO+6E,EAEN,GAAIb,GAAG9xC,EAAMuyC,GAAQx2E,IAAS41E,GAAGiB,EAAUL,GAAQx2E,GACpD,OAAO42E,EAEFhB,GAAG3xC,EAAMuyC,GAAQx2E,GAEtB22E,EAAMC,EAINF,EAAYE,EAAW,EAG/B,OAAQ,EAMZ,SAAS/wD,EAAUixD,EAAa,EAAGC,EAAa30E,KAAK6zE,UAAUr6E,OAAS,GACpEwG,KAAK6zE,UAAUz3E,MAAMs4E,EAAYC,EAAa,GAAG/uE,QAAQ6d,GAM7D,QAAQA,GAEJ,OADAzjB,KAAK40E,SAASnxD,GACPzjB,KAOX,cAAcpC,EAAM6lB,GAEhB,MAAMkxD,EAAa30E,KAAKk0E,QAAQt2E,GAIhC,OAHoB,IAAhB+2E,GACA30E,KAAK40E,SAASnxD,EAAU,EAAGkxD,GAExB30E,KAOX,aAAapC,EAAM6lB,GAEf,MAAMixD,EAAa10E,KAAKk0E,QAAQt2E,GAEhC,OADAoC,KAAK40E,SAASnxD,EAAUixD,EAAa,GAC9B10E,KAUX,eAAezC,EAAWL,EAASumB,GAC/B,IAAIixD,EAAa10E,KAAKk0E,QAAQ32E,GAC1Bo3E,EAAa30E,KAAKk0E,QAAQh3E,GAc9B,OAboB,IAAhBw3E,IAAqC,IAAhBC,GACjB30E,KAAK6zE,UAAUa,GAAY92E,OAASL,IACpCm3E,GAAc,GAGd10E,KAAK6zE,UAAUc,GAAY/2E,OAASV,IACpCy3E,GAAc,GAElB30E,KAAK40E,SAASnxD,EAAUixD,EAAYC,KAEf,IAAhBD,GACL10E,KAAK40E,SAASnxD,EAAU,EAAGkxD,GAExB30E,KAQX,YAAYpC,EAAM6lB,GAEd,IAAIixD,EAAa10E,KAAKk0E,QAAQt2E,GAE9B,KAAO82E,GAAc,GAAK10E,KAAK6zE,UAAUa,GAAY92E,MAAQA,GACzD82E,IAGJ,OADA10E,KAAK40E,SAASnxD,EAAUixD,EAAa,GAC9B10E,KAOX,cAAcpC,EAAM6lB,GAEhB,MAAMkxD,EAAa30E,KAAKk0E,QAAQt2E,GAChC,IAAoB,IAAhB+2E,GAAqBjB,GAAG1zE,KAAK6zE,UAAUc,GAAY/2E,KAAMA,GAAO,CAChE,IAAI82E,EAAaC,EACjB,IAAK,IAAIl7E,EAAIk7E,EAAYl7E,GAAK,GACtBi6E,GAAG1zE,KAAK6zE,UAAUp6E,GAAGmE,KAAMA,GADFnE,IAEzBi7E,EAAaj7E,EAMrBuG,KAAK40E,UAAS/yC,IACVpe,EAASoe,KACV6yC,EAAYC,GAEnB,OAAO30E,KAKX,UAGI,OAFAonD,MAAMytB,UACN70E,KAAK6zE,UAAY,GACV7zE,MCrVf,MAAM80E,GAAmB,GAIlB,SAASC,GAAcp1C,GAC1Bm1C,GAAiBt5E,KAAKmkC,GAY1B,MAAMq1C,GAAqB,GAIpB,SAASC,GAAet1C,GAC3Bq1C,GAAmBx5E,KAAKmkC,GCnBrB,MAAMu1C,WAAgB/B,GACzB,cACI/rB,SAASj9C,WACTnK,KAAK1D,KAAO,UAOhB,GAAGulC,EAAOpe,GAYN,OAVeoe,EAAMszC,MAAM,OACpBvvE,SAAQsR,IACP,GAAQlX,KAAKoH,WACbpH,KAAKoH,QAAU,IAEdpH,KAAKoH,QAAQ0W,eAAe5G,KAC7BlX,KAAKoH,QAAQ8P,GAAa,IAE9BlX,KAAKoH,QAAQ8P,GAAW1b,KAAKioB,MAE1BzjB,KAOX,KAAK6hC,EAAOpe,GACR,MAAM2xD,EAAgB,IAAI/gE,KAEtBoP,KAAYpP,GAEZrU,KAAK4X,IAAIiqB,EAAOuzC,IAGpB,OADAp1E,KAAK2X,GAAGkqB,EAAOuzC,GACRp1E,KAQX,IAAI6hC,EAAOpe,GAoBP,OAnBeoe,EAAMszC,MAAM,OACpBvvE,SAAQsR,IAIX,GAHI,GAAQlX,KAAKoH,WACbpH,KAAKoH,QAAU,IAEfpH,KAAKoH,QAAQ0W,eAAe+jB,GAC5B,GAAI,GAAQpe,GACRzjB,KAAKoH,QAAQy6B,GAAS,OAErB,CACD,MAAMwzC,EAAYr1E,KAAKoH,QAAQy6B,GAC/B,IAAK,IAAIpoC,EAAI47E,EAAU77E,OAAS,EAAGC,GAAK,EAAGA,IACnC47E,EAAU57E,KAAOgqB,GACjB4xD,EAAUr0E,OAAOvH,EAAG,OAMjCuG,KAQX,KAAK6hC,KAAUxtB,GACX,GAAIrU,KAAKoH,SACDpH,KAAKoH,QAAQ0W,eAAe+jB,GAAQ,CACpC,MAAMwzC,EAAYr1E,KAAKoH,QAAQy6B,GAAOzlC,MAAM,GAC5C,IAAK,IAAI3C,EAAI,EAAGF,EAAM87E,EAAU77E,OAAQC,EAAIF,EAAKE,IAC7C47E,EAAU57E,GAAGib,MAAM1U,KAAMqU,GAIrC,OAAOrU,KAKX,aAAas1E,GAET,CAAC,KAAM,OAAQ,MAAO,QAAQ1vE,SAAQtJ,IAClC,MAAMmlD,EAAWlnD,OAAOsnD,yBAAyBqzB,GAAQt6E,UAAW0B,GACpE/B,OAAOC,eAAe86E,EAAO16E,UAAW0B,EAAMmlD,MAMtD,UAGI,OAFA2F,MAAMytB,UACN70E,KAAKoH,aAAUxI,EACRoB,MC5GR,MAAMu1E,WAAoBL,GAC7B,cACI9tB,SAASj9C,WACTnK,KAAKk5C,WAAY,EAOrB,SACI,MAAO,ICER,MAAMryB,WAAgB0uD,GACzB,cACInuB,QACApnD,KAAK1D,KAAO,UAIZ0D,KAAKw1E,WAAa,IAAIjoD,IAItBvtB,KAAKy1E,UAAY,IAAI7B,GAIrB5zE,KAAK01E,YAAc,EAInB11E,KAAK21E,cAAe,EAIpB31E,KAAKk5C,WAAY,EAOjBl5C,KAAK41E,gBAAkB,IAAIroD,IAC3B,MAAMpW,EAAU,GAAqB0P,GAAQitD,cAAe3pE,UAAW,CACnE,YAEAgN,EAAQxM,QACR3K,KAAK8K,SAAWqM,EAAQxM,QAGxB3K,KAAK8K,SZ9CV,SAA4BqM,GAC/B,OAAO,IAAI,GAAgBA,GY6CH0+D,CAAmB,CAC/BvL,YAAanzD,EAAQmzD,cAG7BtqE,KAAK81E,QAAU,IAAIvE,GAAOvxE,KAAKoyB,KAAKvnB,KAAK7K,KAAM,QAASmX,EAAQ4+D,YAAa5+D,EAAQq6D,gBACrFxxE,KAAK2X,GAAG,OAAQ3X,KAAKg2E,aAAanrE,KAAK7K,OAEvCA,KAAK8K,SAAS+vD,cAAgB,KAC1B76D,KAAKoyB,KAAK,cAAepyB,KAAK0J,QAElC1J,KAAKi2E,gBAAgB9+D,EAAQmzD,aAC7BtqE,KAAKk2E,UAAY/+D,EAAQ++D,UAE7B,qBACI,MAAO,CACHH,YAAa,SACbzL,YAAa,cACb4L,UAAW,GACX1E,eAAgB,KAMxB,aH5DG,IAA2B2E,EGkE1B,OALKn2E,KAAK21E,eH7DgBQ,EG+DJn2E,KH7D1B80E,GAAiBlvE,SAAQ+5B,GAAMA,EAAGw2C,KG8D1Bn2E,KAAK21E,cAAe,GAEjB31E,KAKX,iBACI,OAAOA,KAAK8K,SAAS+4C,iBAEzB,mBACI,OAAO7jD,KAAK8K,SAASo3C,mBAEzB,qBACI,OAAOliD,KAAK8K,SAASitC,qBAEzB,qBACI,OAAO/3C,KAAK8K,SAASi0C,qBAEzB,aAAajL,EAAkBt6C,EAAQ0hD,GACnC,OAAOl7C,KAAK8K,SAAS+sC,aAAa/D,EAAkBt6C,EAAQ0hD,GAEhE,oBAAoBvB,GAChB,OAAO35C,KAAK8K,SAAS+mD,oBAAoBlY,GAE7C,sBAAsBC,GAClB,OAAO55C,KAAK8K,SAASo0C,sBAAsBtF,GAE/C,uBACI,OAAO55C,KAAK8K,SAASooD,uBAEzB,kBACI,OAAOlzD,KAAK8K,SAASopD,kBAEzB,YAAY/X,GACR,OAAOn8C,KAAK8K,SAAS40C,YAAYvD,GAErC,2BACI,OAAOn8C,KAAK8K,SAAS0qD,2BAEzB,aACI,OAAOx1D,KAAK8K,SAAS6sC,aAEzB,gBAAgBy+B,EAAar5B,GAEzB,OAAO/8C,KAAK8K,SAAS4tD,gBAAgB0d,EAAar5B,GAEtD,eACI,OAAO/8C,KAAK8K,SAAS2yD,eAEzB,mBAAmBsC,EAAMD,EAAM2H,GAC3B,OAAOznE,KAAK8K,SAASs1D,mBAAmBL,EAAMD,EAAM2H,GAExD,qBACI,OAAOznE,KAAK8K,SAAS01D,qBAEzB,mBACI,OAAOxgE,KAAK8K,SAASqxD,mBAEzB,wBAAwB+M,GAGpB,OAFA,GAAOuJ,GAAezyE,KAAK8K,UAAW,wCACtB9K,KAAK8K,SACN6+D,wBAAwBT,GAE3C,yBAAyB17C,GAGrB,OAFA,GAAOilD,GAAezyE,KAAK8K,UAAW,wCACtB9K,KAAK8K,SACN29D,yBAAyBj7C,GAE5C,+BAGI,OAFA,GAAOilD,GAAezyE,KAAK8K,UAAW,wCACtB9K,KAAK8K,SACNk+D,+BAEnB,gBAAgBtB,GACZ,OAAO1nE,KAAK8K,SAAS8yC,gBAAgB8pB,GAKzC,kBACI,OAAO1nE,KAAK8K,SAAS0iD,YAKzB,YACI,OAAOxtD,KAAK8K,SAASpB,MAKzB,iBACI,OAAO1J,KAAK8K,SAASowC,WAKzB,eAEI,OADAl7C,KAAKq2E,aACEr2E,KAAK26D,UAEhB,aAAa2b,GACT,IAAQt2E,KAAK21E,aAAc,oDAC3B31E,KAAK26D,UAAY2b,EAKrB,gBAEI,OADAt2E,KAAKq2E,aACEr2E,KAAKu2E,WAEhB,cAAcC,GACV,IAAQx2E,KAAK21E,aAAc,qDAC3B31E,KAAKu2E,WAAaC,EAKtB,WAEI,OADAx2E,KAAKq2E,aACEr2E,KAAKy2E,MAEhB,SAAS3F,GACL,IAAQ9wE,KAAK21E,aAAc,4CAC3B31E,KAAKy2E,MAAQ3F,EAKjB,kBAEI,OADA9wE,KAAKq2E,aACEr2E,KAAK06D,aAEhB,gBAAgBoW,GACZ,IAAQ9wE,KAAK21E,aAAc,uDAC3B31E,KAAK06D,aAAeoW,EAMxB,uBAAuBx0E,EAAM6a,GACzB,OZtMD,SAAgCxM,EAASrO,EAAM6a,GAGlD,OAFA,GAAO,GAAU,IAAsB,iEAEhC,IAAI,GAAoBxM,EAASrO,EAAM6a,GYmMnCu/D,CAAuB12E,KAAK22E,WAAYr6E,EAAM6a,GAOzD,sBAAsBoF,EAAKjgB,GACvB,OAAO,GAAU0D,UAAM,OAAQ,GAAQ,YACnC,GAAO,GAAUA,KAAK22E,WAAW5R,cAAe,+EAC3C/kE,KAAK41E,gBAAgB5qD,IAAI1uB,IAC1B0D,KAAK41E,gBAAgBloD,IAAIpxB,EAAM0D,KAAK22E,WAAW5R,aAAaO,UAAU/oD,UAEpEvc,KAAK41E,gBAAgB53D,IAAI1hB,MAMvC,mBACI,OAAO,GAAU0D,UAAM,OAAQ,GAAQ,YACnC,MAAM42E,EAAW,GACjB52E,KAAK41E,gBAAgBhwE,SAASoV,GAAY47D,EAASp7E,KAAKwf,WAClD/U,QAAQu+C,IAAIoyB,MAY1B,qBACI,OAAO52E,KAAK81E,QAAQtE,eAExB,mBAAmBvkE,GACfjN,KAAK81E,QAAQtE,eAAiBvkE,EAMlC,kBACI,OAAOjN,KAAK81E,QAAQ14E,KAExB,gBAAgBA,GACZ4C,KAAK81E,QAAQ14E,KAAOA,EAiBxB,kBACI,OAAO4C,KAAK62E,aAKhB,gBAAgBC,GACZ,IAAIC,EAAiB,EAErB,GADA/2E,KAAK62E,aAAeC,EAChB,GAASA,GACT,OAAQA,GACJ,IAAK,cACDC,EAAiB,GACjB,MACJ,IAAK,WACDA,EAAiB,GACjB,MACJ,IAAK,WACDA,EAAiB,IAI7B/2E,KAAKk2E,UAAYa,EACjB/2E,KAAKwxE,eAAiBuF,EAAiB,EAK3C,iBACI,OAAO/2E,KAAK8K,SAKhB,MACI,OAAO9K,KAAK8K,SAAS0iD,YAAcxtD,KAAKk2E,UAS5C,YACI,OAAOl2E,KAAK8K,SAAS0iD,YAMzB,SACI,OAAIilB,GAAezyE,KAAK8K,UACb9K,KAAK8K,SAASy7B,SAGdtgC,QAAQC,UAOvB,QACI,OAAO,GAAUlG,UAAM,OAAQ,GAAQ,YHpUxC,IAAsBm2E,EGqUb1D,GAAezyE,KAAK8K,kBACd9K,KAAK8K,SAAS2W,SAEpBzhB,KAAK21E,eHxUQQ,EGyUAn2E,KHvUzBg1E,GAAmBpvE,SAAQ+5B,GAAMA,EAAGw2C,SG8UpC,YAAY5yC,GACR,GAAIvjC,KAAKw1E,WAAWxqD,IAAIuY,GACpB,OAAOvjC,KAAKw1E,WAAWx3D,IAAIulB,GAE1B,CACD,MAAMz1B,EAAS9N,KAAK8K,SAAS+sC,aAAa,EAAG,IAAK73C,KAAK8K,SAASowC,YAC1D5hD,EAAMwU,EAAO+lC,eAAe,GAClC,IAAK,IAAIp6C,EAAI,EAAGA,EAAIH,EAAIE,OAAQC,IAC5BH,EAAIG,GAAK8pC,EAEb,MAAMyzC,EAAWh3E,KAAK8K,SAASitC,qBAO/B,OANAi/B,EAASpkC,aAAe,EACxBokC,EAASnkC,iBAAmB,WAC5BmkC,EAASlpE,OAASA,EAClBkpE,EAAS9iC,MAAO,EAChB8iC,EAAS77D,MAAM,GACfnb,KAAKw1E,WAAW9nD,IAAI6V,EAAKyzC,GAClBA,GAMf,UAKI,OAJA5vB,MAAMytB,UACN70E,KAAK81E,QAAQjB,UACb70E,KAAKy1E,UAAUZ,UACft6E,OAAOugB,KAAK9a,KAAKw1E,YAAYvlE,KAAKszB,GAAQvjC,KAAKw1E,WAAWjyC,GAAK0T,eACxDj3C,KASX,eACI,MAAMuH,EAAMvH,KAAKuH,MACjB,IAAI0vE,EAAaj3E,KAAKy1E,UAAUyB,OAChC,KAAOl3E,KAAKy1E,UAAUj8E,QAAUy9E,GAAcA,EAAWr5E,MAAQ2J,GAE7D0vE,EAAWxzD,WAEXzjB,KAAKy1E,UAAUxgE,QAEfgiE,EAAaj3E,KAAKy1E,UAAUyB,OAUpC,WAAWhsE,EAAI6H,GACX/S,KAAK01E,cACL,MAAMnuE,EAAMvH,KAAKuH,MAMjB,OALAvH,KAAKy1E,UAAUlwE,IAAI,CACfke,SAAUvY,EACV6uB,GAAI/5B,KAAK01E,YACT93E,KAAM2J,EAAMwL,IAET/S,KAAK01E,YAMhB,aAAa37C,GAMT,OALA/5B,KAAKy1E,UAAU7vE,SAASi8B,IAChBA,EAAM9H,KAAOA,GACb/5B,KAAKy1E,UAAUlqE,OAAOs2B,MAGvB7hC,KAKX,cAAc+5B,GACV,OAAO/5B,KAAK0/B,aAAa3F,GAK7B,YAAY7uB,EAAI+B,GACZ,MAAM8sB,IAAO/5B,KAAK01E,YACZyB,EAAa,KACf,MAAM5vE,EAAMvH,KAAKuH,MACjBvH,KAAKy1E,UAAUlwE,IAAI,CACfke,SAAU,KAENvY,IAEAisE,KAEJp9C,KACAn8B,KAAM2J,EAAM0F,KAKpB,OADAkqE,IACOp9C,GCldR,SAAS,GAAS9/B,EAAQwnD,GACzB,GAAQA,GACRA,EAAS77C,SAAQsU,GAAO,GAASjgB,EAAQigB,KAGzC3f,OAAOC,eAAeP,EAAQwnD,EAAU,CACpCrnD,YAAY,EACZE,UAAU,IAOf,SAAS,GAASL,EAAQwnD,GACzB,GAAQA,GACRA,EAAS77C,SAAQsU,GAAO,GAASjgB,EAAQigB,KAGzC3f,OAAOC,eAAeP,EAAQwnD,EAAU,CACpCnnD,UAAU,IAIf,MAAM,GAAO,OCVb,MAAM,WAAwB64E,GACjC,cACI/rB,QACApnD,KAAK1D,KAAO,kBAIZ0D,KAAKwmE,OAAS,GACd,MAAMrvD,EAAU,GAAqB,GAAgB28D,cAAe3pE,UAAW,CAAC,MAAO,SAAU,YACjGnK,KAAKo3E,QAAUjgE,EAAQigE,QACvBp3E,KAAKwmE,OAASrvD,EAAQqvD,OAClBrvD,EAAQoF,KAAOm2D,GAAcv7D,EAAQoF,MAAQpF,EAAQoF,eAAe,GACpEvc,KAAK0tB,IAAIvW,EAAQoF,KAEZ,GAASpF,EAAQoF,MAEtBvc,KAAKq3E,KAAKlgE,EAAQoF,KAAKshC,MAAM1mC,EAAQyI,SAG7C,qBACI,MAAO,CACHA,QAAS,GACT4mD,OAAQ,GACR4Q,SAAS,GAMjB,iBACI,OAAIp3E,KAAKs3E,QACEt3E,KAAKs3E,QAAQp8B,WAGb,KAAaA,WAM5B,IAAIptC,GAqBA,OApBIA,aAAkB,GAEdA,EAAOypE,OACPv3E,KAAKs3E,QAAUxpE,EAAOkQ,MAItBlQ,EAAO04D,OAAS,KACZxmE,KAAK0tB,IAAI5f,GACT9N,KAAKwmE,OAAOxmE,OAKpBA,KAAKs3E,QAAUxpE,EAGf9N,KAAKw3E,WACLx3E,KAAKy3E,WAEFz3E,KAKX,MACI,OAAOA,KAAKs3E,QAQhB,KAAK/6D,GACD,OAAO,GAAUvc,UAAM,OAAQ,GAAQ,YACnC,MAAM03E,EAAc,GAAgBL,KAAK96D,GAAKtB,MAAK24B,IAC/C5zC,KAAK0tB,IAAIkmB,GAET5zC,KAAKwmE,OAAOxmE,SAEhB,GAAgB23E,UAAUn8E,KAAKk8E,GAC/B,UACUA,EAEV,QAEI,MAAMh5E,EAAQ,GAAgBi5E,UAAU1tE,QAAQytE,GAChD,GAAgBC,UAAU32E,OAAOtC,EAAO,GAE5C,OAAOsB,QAMf,UAGI,OAFAonD,MAAMytB,UACN70E,KAAKs3E,aAAU14E,EACRoB,KAOX,UAAU+T,GACN,MAAM6jE,EAAqB,GAAQ7jE,IAAUA,EAAM,GAAGva,OAAS,EACzDq+E,EAAWD,EAAqB7jE,EAAMva,OAAS,EAC/CD,EAAMq+E,EAAqB7jE,EAAM,GAAGva,OAASua,EAAMva,OACnDmR,EAAU,KACVmD,EAASnD,EAAQktC,aAAaggC,EAAUt+E,EAAKoR,EAAQuwC,YACrD48B,EAAqBF,GAAmC,IAAbC,EACnC9jE,EAAV,CAACA,GACL,IAAK,IAAIgkB,EAAI,EAAGA,EAAI8/C,EAAU9/C,IAC1BjqB,EAAO0lC,cAAcskC,EAAkB//C,GAAIA,GAG/C,OADA/3B,KAAKs3E,QAAUxpE,EACR9N,KAMX,OAAO+3E,GACH,GAAI,GAASA,GACT/3E,KAAKg4E,UAAUh4E,KAAKkT,QAAQ6kE,QAE3B,CACD,IAAIE,EAAc,IAAIr3E,aAAaZ,KAAKxG,QACxC,MAAM0+E,EAAcl4E,KAAK8zC,iBACzB,IAAK,IAAI/R,EAAU,EAAGA,EAAUm2C,EAAan2C,IAAW,CACpD,MAAMo2C,EAAen4E,KAAKkT,QAAQ6uB,GAClC,IAAK,IAAItoC,EAAI,EAAGA,EAAI0+E,EAAa3+E,OAAQC,IACrCw+E,EAAYx+E,IAAM0+E,EAAa1+E,GAIvCw+E,EAAcA,EAAYhoE,KAAIuB,GAAUA,EAAS0mE,IACjDl4E,KAAKg4E,UAAUC,GAEnB,OAAOj4E,KAOX,QAAQ+hC,GACJ,GAAI,GAASA,GACT,OAAO/hC,KAAK6zC,eAAe9R,GAE1B,GAA8B,IAA1B/hC,KAAK8zC,iBACV,OAAO9zC,KAAKkT,QAAQ,GAEnB,CACD,MAAMklE,EAAM,GACZ,IAAK,IAAIrgD,EAAI,EAAGA,EAAI/3B,KAAK8zC,iBAAkB/b,IACvCqgD,EAAIrgD,GAAK/3B,KAAK6zC,eAAe9b,GAEjC,OAAOqgD,GAQf,eAAer2C,GACX,OAAI/hC,KAAKs3E,QACEt3E,KAAKs3E,QAAQzjC,eAAe9R,GAG5B,IAAInhC,aAAa,GAShC,MAAMua,EAAOo5D,EAAMv0E,KAAKtC,UACpB,MAAM26E,EAAer6E,KAAK0B,MAAMyb,EAAQnb,KAAKk7C,YACvCo9B,EAAat6E,KAAK0B,MAAM60E,EAAMv0E,KAAKk7C,YACzC,GAAOm9B,EAAeC,EAAY,iDAClC,MAAM9+E,EAAS8+E,EAAaD,EACtBE,EAAY,KAAa1gC,aAAa73C,KAAK8zC,iBAAkBt6C,EAAQwG,KAAKk7C,YAChF,IAAK,IAAInZ,EAAU,EAAGA,EAAU/hC,KAAK8zC,iBAAkB/R,IACnDw2C,EAAU/kC,cAAcxzC,KAAK6zC,eAAe9R,GAASy2C,SAASH,EAAcC,GAAav2C,GAE7F,OAAO,IAAI,GAAgBw2C,GAK/B,WACI,GAAIv4E,KAAKu3E,OACL,IAAK,IAAI99E,EAAI,EAAGA,EAAIuG,KAAK8zC,iBAAkBr6C,IACvCuG,KAAK6zC,eAAep6C,GAAG29E,UAG/B,OAAOp3E,KAKX,aACI,OAAOA,KAAKxG,OAAS,EAKzB,eACI,OAAIwG,KAAKs3E,QACEt3E,KAAKs3E,QAAQ55E,SAGb,EAMf,aACI,OAAIsC,KAAKs3E,QACEt3E,KAAKs3E,QAAQ99E,OAGb,EAMf,uBACI,OAAIwG,KAAKs3E,QACEt3E,KAAKs3E,QAAQxjC,iBAGb,EAMf,cACI,OAAO9zC,KAAKw3E,UAEhB,YAAYiB,GACJz4E,KAAKw3E,YAAciB,IACnBz4E,KAAKw3E,UAAYiB,EACjBz4E,KAAKy3E,YASb,iBAAiB1jE,GACb,OAAO,IAAK,IAAmBikE,UAAUjkE,GAO7C,eAAewI,GACX,OAAO,GAAUvc,UAAM,OAAQ,GAAQ,YACnC,MAAM8N,EAAS,IAAI,GACnB,aAAaA,EAAOupE,KAAK96D,MAMjC,YAAYA,GACR,OAAO,GAAUvc,UAAM,OAAQ,GAAQ,YAEnC,MAAM04E,EAAUn8D,EAAIq0B,MAAM,uBAC1B,GAAI8nC,EAAS,CACT,MAAMC,EAAaD,EAAQ,GAAGvD,MAAM,KACpC,IAAIyD,EAAYD,EAAW,GAC3B,IAAK,MAAME,KAAOF,EACd,GAAI,GAAgBG,aAAaD,GAAM,CACnCD,EAAYC,EACZ,MAGRt8D,EAAMA,EAAIwwB,QAAQ2rC,EAAQ,GAAIE,GAGlC,MAAMG,EAAsC,KAA5B,GAAgBA,SAAkB,GAAgBA,QAAQC,SAAS,KAAO,GAAgBD,QAAU,GAAgBA,QAAU,IACxIt6D,QAAiBioD,MAAMqS,EAAUx8D,GACvC,IAAKkC,EAASkoD,GACV,MAAM,IAAInmE,MAAM,uBAAuB+b,KAE3C,MAAM2rD,QAAoBzpD,EAASypD,cAEnC,aAD0B,KAAatqB,gBAAgBsqB,MAa/D,oBAAoB3rD,GAChB,MAAMo8D,EAAap8D,EAAI44D,MAAM,KACvByD,EAAYD,EAAWA,EAAWn/E,OAAS,GAEjD,MAAoB,KADHunC,SAASC,cAAc,SAASi4C,YAAY,SAAWL,GAM5E,gBACI,OAAO,GAAU54E,UAAM,OAAQ,GAAQ,YAGnC,UADMiG,QAAQC,UACP,GAAgByxE,UAAUn+E,cACvB,GAAgBm+E,UAAU,OAWhD,GAAgBoB,QAAU,GAI1B,GAAgBpB,UAAY,GCzVrB,MAAM,WAAuB9wD,GAChC,cfLG,IAAmCgxD,EAAUr+E,EAAQ0hD,EeMpDkM,MAAM,CACF2uB,YAAa,UACbprE,QAAS6nE,GAAsBroE,UAAU,IACrCA,UAAU,IfTgB0tE,EeSe1tE,UAAU,GfTf3Q,EeSmB2Q,UAAU,GAAKA,UAAU,GfTpC+wC,EeSwC/wC,UAAU,GfRnG,IAAI,GAAuB0tE,EAAUr+E,EAAQ0hD,IeS5Cg7B,UAAW,EACX1E,eAAgBgB,GAAsBroE,UAAU,IAC5C,IAAMA,UAAU,GAAG+wC,WAAa,IAAM/wC,UAAU,KAExDnK,KAAK1D,KAAO,iBAIZ0D,KAAKk5E,aAAe,EACpBl5E,KAAKk5C,WAAY,EACjBl5C,KAAKm5E,UAAY3G,GAAsBroE,UAAU,IAC7CA,UAAU,GAAG3Q,OAAS2Q,UAAU,GAAG+wC,WAAa/wC,UAAU,GAKlE,MACI,OAAOnK,KAAKk5E,aAKhB,kBACI,OAAOl5E,KAAKk5E,aAKhB,aAAaE,GACT,OAAO,GAAUp5E,UAAM,OAAQ,GAAQ,YACnC,IAAItB,EAAQ,EACZ,KAAOsB,KAAKm5E,UAAYn5E,KAAKk5E,cAAgB,GAAG,CAE5Cl5E,KAAKoyB,KAAK,QAEVpyB,KAAKk5E,cAAgB,IAAMl5E,KAAKk7C,WAEhCx8C,IACA,MAAM26E,EAAar7E,KAAK0B,MAAMM,KAAKk7C,WAAa,KAC5Ck+B,GAAgB16E,EAAQ26E,GAAe,UACjC,IAAIpzE,SAAQ1K,GAAQ2f,WAAW3f,EAAM,UAS3D,OAAO69E,GAAe,GAClB,OAAO,GAAUp5E,UAAM,OAAQ,GAAQ,kBAC7BA,KAAKs5E,yBACLt5E,KAAKu5E,aAAaH,GACxB,MAAMtrE,QAAe9N,KAAK8K,SAASqtD,iBACnC,OAAO,IAAI,GAAgBrqD,MAMnC,QACI,OAAO7H,QAAQC,WC1EvB,MAAMszE,GAAe,ICPd,cAA2BjE,GAC9B,cACInuB,SAASj9C,WACTnK,KAAKk2E,UAAY,EACjBl2E,KAAKsqE,YAAc,EACnBtqE,KAAKk5C,WAAY,EAKrB,iBACI,MAAO,GAEX,mBACI,MAAO,GAEX,qBACI,MAAO,GAEX,qBACI,MAAO,GAEX,aAAaugC,EAAmBlK,EAASmK,GACrC,MAAO,GAEX,oBAAoBC,GAChB,MAAO,GAEX,sBAAsBC,GAClB,MAAO,GAEX,uBACI,MAAO,GAEX,kBACI,MAAO,GAEX,YAAYC,GACR,MAAO,GAEX,2BACI,MAAO,GAEX,aACI,MAAO,GAEX,gBAAgBC,EAAcC,GAC1B,MAAO,GAEX,eACI,MAAO,GAEX,mBAAmBC,EAAOC,EAAOC,GAC7B,MAAO,GAEX,qBACI,MAAO,GAEX,mBACI,MAAO,GAEX,wBAAwBC,GACpB,MAAO,GAEX,yBAAyBC,GACrB,MAAO,GAEX,+BACI,MAAO,GAEX,gBAAgBC,GACZ,OAAOp0E,QAAQC,QAAQ,IAK3B,uBAAuBo0E,EAAOC,GAC1B,MAAO,GAEX,iBACI,MAAO,GAEX,sBAAsBC,EAAMF,GACxB,OAAO,GAAUt6E,UAAM,OAAQ,GAAQ,YACnC,OAAOiG,QAAQC,aAGvB,SACI,OAAOD,QAAQC,UAEnB,WAAWu0E,EAAKvI,GACZ,OAAO,EAEX,aAAawI,GACT,OAAO16E,KAEX,YAAYy6E,EAAKE,GACb,OAAO,EAEX,cAAcD,GACV,OAAO16E,KAEX,YAAY46E,GACR,MAAO,GAEX,kBACI,OAAO,EAEX,YACI,MAAO,GAEX,iBACI,OAAO,EAEX,eACI,MAAO,GAEX,gBACI,MAAO,GAEX,WACI,MAAO,GAEX,SAASx/E,IACT,kBACI,MAAO,GAEX,gBAAgBA,IAChB,MACI,OAAO,EAEX,YACI,OAAO,IDxHf,IAAIy/E,GAAgBrB,GAKb,SAAS,KAIZ,OAHIqB,KAAkBrB,IAAgB9I,KASf/lE,EARR,IAAIkc,GAUfg0D,GADApI,GAAe9nE,GACC,IAAIkc,GAAQlc,GAEvB6nE,GAAsB7nE,GACX,IAAI,GAAeA,GAGnBA,GAdbkwE,GAMJ,IAAoBlwE,EA8B3B,GAAI,KAAc,wBAAgC,CAK9C,MAAMmwE,EAAc,cAJP,gBAMb5hF,QAAQ0xC,IAAI,KAAKkwC,IAAe,iCEtC7B,SAAS,GAAyB7tE,GACrC,OAAOjP,KAAKqB,IAAI,EAAI4N,EAAW,IAMnC,IAAI8tE,GAAK,IAaF,SAASC,GAAKxsC,GACjB,OAAOxwC,KAAK+sC,MAAMkwC,GAAMzsC,IAKrB,SAASysC,GAAMzsC,GAClB,OAAO,GAAK,GAAKxwC,KAAK4gD,KAAKpQ,EAAYusC,IASpC,SAASG,GAAKC,GACjB,OAAOJ,GAAK/8E,KAAKqB,IAAI,GAAI87E,EAAO,IAAM,IC5DnC,MAAMC,WAAsBjI,GAO/B,YAAYxoE,EAASlP,EAAO4/E,GACxBj0B,QAIApnD,KAAKs7E,aAAe,IACpBt7E,KAAK46E,KAAOn/E,EACZuE,KAAKu7E,OAASF,EACdr7E,KAAK2K,QAAUA,EACf3K,KAAKw7E,aAAex7E,KAAKy7E,kBAK7B,kBACI,MAAO,CACHC,GAAI,CACAh/D,OAASjhB,GACEuE,KAAK27E,kBAAkBn4C,WAAW/nC,IAE7CmgF,OAAQ,wBAEZniF,EAAG,CACCijB,OAASjhB,GACEuE,KAAK67E,cAAcC,SAASrgF,EAAO,KAE9CmgF,OAAQ,aAEZG,EAAG,CACCr/D,OAASjhB,GACEuE,KAAKg8E,cAAcF,SAASrgF,EAAO,IAAMuE,KAAKi8E,qBAEzDL,OAAQ,aAEZ1/E,EAAG,CACCwgB,OAAQ,CAACjhB,EAAOygF,KACZ,MAAMC,EAAeL,SAASrgF,EAAO,IAC/B2gF,EAAiB,MAARF,EAAc,IAAM,EACnC,OAAqB,IAAjBC,EACOn8E,KAAKg8E,cAAch8E,KAAKi8E,qBAAuBG,EAG/Cp8E,KAAKg8E,cAAc,EAAIG,GAAgBC,GAGtDR,OAAQ,kBAEZS,OAAQ,CACJ3/D,OAASjhB,GACEuE,KAAKw7E,aAAax7E,KAAKs7E,cAAc5+D,OAAOrhB,KAAK2E,KAAMvE,GAElEmgF,OAAQ,qBAEZrtC,EAAG,CACC7xB,OAASjhB,GACEuE,KAAKs8E,gBAAgB94C,WAAW/nC,IAE3CmgF,OAAQ,sBAEZW,QAAS,CACL7/D,OAASjhB,GACEqgF,SAASrgF,EAAO,IAAMuE,KAAK2K,QAAQuwC,WAE9C0gC,OAAQ,kBAEZpF,EAAG,CACC95D,OAASjhB,IACL,MAAM0gF,EAAeL,SAASrgF,EAAO,IACrC,OAAOuE,KAAKg8E,cAAc,GAAgC,EAA3Bh+E,KAAK0B,MAAMy8E,MAE9CP,OAAQ,aAEZY,GAAI,CACA9/D,OAAQ,CAACq/D,EAAGU,EAAGluC,KACX,IAAIz3B,EAAQ,EAUZ,OATIilE,GAAW,MAANA,IACLjlE,GAAS9W,KAAKg8E,cAAch8E,KAAKi8E,oBAAsBz4C,WAAWu4C,KAElEU,GAAW,MAANA,IACL3lE,GAAS9W,KAAKg8E,cAAcx4C,WAAWi5C,KAEvCluC,GAAW,MAANA,IACLz3B,GAAS9W,KAAKg8E,cAAcx4C,WAAW+K,GAAK,IAEzCz3B,GAEX8kE,OAAQ,wDAUpB,UAII,GAHI57E,KAAK46E,gBAAgBQ,IACrBp7E,KAAK08E,SAAS18E,KAAK46E,MAEnB,GAAQ56E,KAAK46E,MACb,OAAO56E,KAAK28E,SAEX,GAAI,GAAS38E,KAAK46E,OAAS,GAAQ56E,KAAKu7E,SACzC,IAAK,MAAMF,KAASr7E,KAAKw7E,aACrB,GAAIx7E,KAAKw7E,aAAaH,GAAOO,OAAOp/E,KAAKwD,KAAK46E,KAAK7U,QAAS,CACxD/lE,KAAKu7E,OAASF,EACd,YAIP,GAAI,GAASr7E,KAAK46E,MAAO,CAC1B,IAAI9jE,EAAQ,EACZ,IAAK,MAAM8lE,KAAY58E,KAAK46E,KACxB,GAAI,GAAU56E,KAAK46E,KAAKgC,IAAY,CAChC,MAAMC,EAAW78E,KAAK46E,KAAKgC,GAG3B9lE,GADa,IAAK9W,KAAK3D,YAAY2D,KAAK2K,QAASiyE,GAAW3I,UAAY4I,EAIhF,OAAO/lE,EAEX,GAAI,GAAU9W,KAAKu7E,QAAS,CACxB,MAAMuB,EAAO98E,KAAKw7E,aAAax7E,KAAKu7E,QAC9BwB,EAAW/8E,KAAK46E,KAAKz+E,WAAW4pE,OAAOn1B,MAAMksC,EAAKlB,QACxD,OAAImB,EACOD,EAAKpgE,OAAOhI,MAAM1U,KAAM+8E,EAAS3gF,MAAM,IAGvC0gF,EAAKpgE,OAAOrhB,KAAK2E,KAAMA,KAAK46E,MAGtC,OAAI,GAAS56E,KAAK46E,MACZp3C,WAAWxjC,KAAK46E,MAGhB56E,KAAK46E,KASpB,kBAAkBoC,GACd,OAAO,EAAIA,EAKf,cAAcC,GACV,OAAQ,GAAKj9E,KAAKk9E,UAAaD,EAKnC,gBAAgBE,GACZ,OAAOA,EAKX,cAAcC,GACV,OAAQA,EAASp9E,KAAKg8E,cAAc,GAAMh8E,KAAKq9E,UAKnD,SACI,OAAOr9E,KAAKs9E,OAQhB,UACI,OAAOt9E,KAAK2K,QAAQ4yE,UAAUC,IAAI/hF,MAKtC,oBACI,OAAOuE,KAAK2K,QAAQ4yE,UAAUE,cAKlC,UACI,OAAOz9E,KAAK2K,QAAQ4yE,UAAUG,IASlC,SAAStgF,GAEL,OADA4C,KAAKu7E,YAAS38E,EACNoB,KAAKs7E,cACT,IAAK,IACDt7E,KAAK46E,KAAOx9E,EAAKugF,YACjB,MACJ,IAAK,IACD39E,KAAK46E,KAAOx9E,EAAKwgF,UACjB,MACJ,IAAK,KACD59E,KAAK46E,KAAOx9E,EAAKygF,cACjB,MACJ,IAAK,OACD79E,KAAK46E,KAAOx9E,EAAK0gF,SAGzB,OAAO99E,KAKX,cACI,OAAO,EAAIA,KAAK29E,YAKpB,YACI,OAAO39E,KAAK29E,YAAc39E,KAAK2K,QAAQuwC,WAK3C,iBACI,OAA0B,IAAnBl7C,KAAK29E,aC3Ob,MAAMI,WAAkB3C,GAC3B,cACIh0B,SAASj9C,WACTnK,KAAK1D,KAAO,YAEhB,kBACI,OAAO/B,OAAOqmB,OAAOwmC,MAAMq0B,kBAAmB,CAC1Cl0E,IAAK,CACDmV,OAASshE,GACEh+E,KAAKs9E,OAAS,IAAIt9E,KAAK3D,YAAY2D,KAAK2K,QAASqzE,GAAS/J,UAErE2H,OAAQ,WAEZqC,SAAU,CACNvhE,OAASshE,IACL,MAAME,EAAU,IAAIH,GAAU/9E,KAAK2K,QAASqzE,GAAS/J,UACrD,OAAOj0E,KAAKs8E,gBAAgBt8E,KAAK2K,QAAQ4yE,UAAUY,gBAAgBD,KAEvEtC,OAAQ,YAcpB,SAASwC,EAAQC,EAAU,GACvB,MAAMC,EAAc,IAAIt+E,KAAK3D,YAAY2D,KAAK2K,QAASyzE,GAAQnK,UACzDx4E,EAAQuE,KAAKi0E,UAInB,OAAOx4E,GAHUuC,KAAK+sC,MAAMtvC,EAAQ6iF,GACXA,EACJ7iF,GACC4iF,EAa1B,aACI,MAAMzgF,EAAOoC,KAAK29E,YACZY,EAAgB,CAAC,MACvB,IAAK,IAAIC,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACpC,MAAMJ,EAASpgF,KAAKqB,IAAI,EAAGm/E,GAC3BD,EAAc/iF,KAAK4iF,EAAS,MAC5BG,EAAc/iF,KAAK4iF,EAAS,KAC5BG,EAAc/iF,KAAK4iF,EAAS,KAEhCG,EAAc/iF,KAAK,KAEnB,IAAIijF,EAAUF,EAAc,GACxBG,EAAiB,IAAIX,GAAU/9E,KAAK2K,QAAS4zE,EAAc,IAAIZ,YAQnE,OAPAY,EAAc34E,SAAQ+4E,IAClB,MAAMC,EAAkB,IAAIb,GAAU/9E,KAAK2K,QAASg0E,GAAUhB,YAC1D3/E,KAAKyc,IAAImkE,EAAkBhhF,GAAQI,KAAKyc,IAAIikE,EAAiB9gF,KAC7D6gF,EAAUE,EACVD,EAAiBE,MAGlBH,EAKX,wBACI,MAAMI,EAAc7+E,KAAKg8E,cAAc,GACvC,IAAI8C,EAAW9+E,KAAKi0E,UAAY4K,EAChCC,EAAWt7C,WAAWs7C,EAASjN,QAAQ,IACvC,MAAMkN,EAAW/gF,KAAK0B,MAAMo/E,EAAW9+E,KAAKi8E,qBAC5C,IAAI+C,EAAcF,EAAW,EAAK,EAClCA,EAAW9gF,KAAK0B,MAAMo/E,GAAY9+E,KAAKi8E,oBACvC,MAAMgD,EAAkBD,EAAW7iF,WAMnC,OALI8iF,EAAgBzlF,OAAS,IAEzBwlF,EAAax7C,WAAWA,WAAWy7C,GAAiBpN,QAAQ,KAE/C,CAACkN,EAAUD,EAAUE,GACtB7/D,KAAK,KAKzB,UACI,MAAM0/D,EAAc7+E,KAAKg8E,cAAc,GACjC8C,EAAW9+E,KAAKi0E,UAAY4K,EAClC,OAAO7gF,KAAK+sC,MAAM+zC,EAAW9+E,KAAKq9E,WAKtC,YACI,OAAOr9E,KAAKi0E,UAKhB,SACI,OAAO+G,GAAKh7E,KAAK69E,eAErB,OACI,OAAO79E,KAAK2K,QAAQpD,OC/GrB,MAAM23E,WAAuBnB,GAChC,cACI32B,SAASj9C,WACTnK,KAAK1D,KAAO,YACZ0D,KAAKs7E,aAAe,KAMxB,gBACI,OHaGP,GGXP,cAAciC,IHaX,SAAeA,GAClBjC,GAAKiC,EGbDmC,CAAMnC,GAKV,kBACI,OAAOziF,OAAOqmB,OAAO,GAAIwmC,MAAMq0B,kBAAmB,CAC9CN,KAAM,CACFS,OAAQ,uBACR,OAAOngF,GACH,MAA0B,SAAtBuE,KAAKs7E,aACE7/E,EAGAyjF,GAAehE,KAAKz/E,KAIvC2jF,KAAM,CACFxD,OAAQ,sCACR,OAAOyD,EAAOC,GACV,MACMC,EADQC,GAAiBH,EAAMI,eACmB,IAA5B3D,SAASwD,EAAQ,IAAM,GACnD,MAA0B,SAAtBt/E,KAAKs7E,aACEiE,EAGAL,GAAehE,KAAKqE,KAIvC/C,GAAI,CACAZ,OAAQ,qDACR,OAAOG,EAAGU,EAAGluC,GACT,IAAIz3B,EAAQ,EAUZ,OATIilE,GAAW,MAANA,IACLjlE,GAAS9W,KAAKg8E,cAAch8E,KAAKi8E,oBAAsBz4C,WAAWu4C,KAElEU,GAAW,MAANA,IACL3lE,GAAS9W,KAAKg8E,cAAcx4C,WAAWi5C,KAEvCluC,GAAW,MAANA,IACLz3B,GAAS9W,KAAKg8E,cAAcx4C,WAAW+K,GAAK,IAEzCz3B,MAcvB,UAAU7J,GACN,OAAO,IAAIiyE,GAAel/E,KAAK2K,QAAS3K,KAAKi0E,UAAY,GAAyBhnE,IAStF,UAAUyyE,GACN,OAAOA,EAAUzvE,KAAIhD,GACVjN,KAAK2/E,UAAU1yE,KAW9B,SACI,OAAO+tE,GAAKh7E,KAAKi0E,WAOrB,SACI,MAAM+I,EAAOh9E,KAAK69E,cACZjzC,EAAM5sC,KAAK4gD,KAAKo+B,EAAOkC,GAAenE,IAC5C,IAAIwE,EAAavhF,KAAK+sC,MAAM,GAAKH,GAAO,GACxC,MAAM00C,EAASthF,KAAK0B,MAAM6/E,EAAa,IAKvC,OAJID,EAAS,IACTC,IAAe,GAAKD,GAEPM,GAAiBL,EAAa,IAC7BD,EAAOnjF,WAK7B,YACI,OAAO,EAAIirD,MAAMu2B,YAKrB,UACI,MAAMkB,EAAc7+E,KAAKg8E,cAAc,GACjC8C,EAAW9+E,KAAKi0E,UAAY4K,EAClC,OAAO7gF,KAAK0B,MAAMo/E,EAAW9+E,KAAKq9E,WAQtC,SACI,OAAO,EAKX,kBAAkBL,GACd,OAAOA,EAKX,cAAcI,GACV,OAAO,GAAc,GAARA,GAAep9E,KAAKk9E,UAAYl9E,KAAKq9E,YAKtD,cAAcJ,GACV,OAAO,EAAI71B,MAAM40B,cAAciB,GAKnC,gBAAgBE,GACZ,OAAO,EAAIA,EAOf,YAAYhC,GACR,OAAOD,GAAKC,GAMhB,YAAY3sC,GACR,OAAOwsC,GAAKxsC,IAUpB,MAAMgxC,GAAmB,CACrBK,KAAM,EAAGlgD,IAAK,EAAG5H,EAAG,EAAG,KAAM,EAAG+nD,GAAI,EACpCC,IAAK,EAAGC,GAAI,EAAGlP,EAAG,EAAG,KAAM,EAAGmP,GAAI,EAClCC,IAAK,EAAGC,GAAI,EAAGtjF,EAAG,EAAG,KAAM,EAAGujF,GAAI,EAClCC,IAAK,EAAGC,GAAI,EAAG93C,EAAG,EAAG,KAAM,EAAG+3C,GAAI,EAClCC,IAAK,EAAGC,GAAI,EAAGx8C,EAAG,EAAG,KAAM,EAAGy8C,GAAI,EAClCC,IAAK,EAAGC,GAAI,EAAGtuD,EAAG,EAAG,KAAM,GAAIuuD,GAAI,GACnCC,IAAK,EAAGC,GAAI,GAAIxuD,EAAG,GAAI,KAAM,GAAIyuD,GAAI,IAMnCpB,GAAmB,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KCzM/E,MAAM,WAA2B7B,GACpC,cACI32B,SAASj9C,WACTnK,KAAK1D,KAAO,gBAKhB,OACI,OAAO0D,KAAK2K,QAAQ4yE,UAAUJ,SCR/B,MAAM,WAAwBhK,GACjC,cACI/rB,QACA,MAAMjwC,EAAU,GAAqB,GAAgB28D,cAAe3pE,UAAW,CAAC,YAC5EnK,KAAKihF,eACLjhF,KAAK2K,QAAU3K,KAAKihF,eAGpBjhF,KAAK2K,QAAUwM,EAAQxM,QAG/B,qBACI,MAAO,CACHA,QAAS,MAUjB,MACI,OAAO3K,KAAK2K,QAAQ6iD,YAAcxtD,KAAK2K,QAAQurE,UASnD,YACI,OAAOl2E,KAAK2K,QAAQ6iD,YAOxB,iBACI,OAAO,EAAIxtD,KAAK2K,QAAQuwC,WAO5B,gBACI,OAAO,IAAMl7C,KAAK2K,QAAQuwC,WAW9B,UAAUt9C,GACN,OAAO,IAAImgF,GAAU/9E,KAAK2K,QAAS/M,GAAM+/E,YAQ7C,YAAYX,GACR,OAAO,IAAIkC,GAAel/E,KAAK2K,QAASqyE,GAAMa,cAQlD,QAAQjgF,GACJ,OAAO,IAAI,GAAmBoC,KAAK2K,QAAS/M,GAAMggF,UAQtD,sBAAsB1jF,GAClB,MAAMid,EAAUnX,KAAKge,MAOrB,OALAzjB,OAAOugB,KAAK3D,GAASvR,SAAQtJ,IACrB,GAAQpC,EAAMoC,YACP6a,EAAQ7a,MAGhB6a,EAQX,MACI,MAAMy7D,EAAmC5yE,KnB1C7B3D,YAAYy3E,cmB8DxB,OAnBAv5E,OAAOugB,KAAK83D,GAAUhtE,SAAQs7E,IAC1B,GAAInQ,QAAQ/lD,IAAIhrB,KAAMkhF,GAAY,CAC9B,MAAMC,EAASnhF,KAAKkhF,GAChB,GAAUC,IAAW,GAAUA,EAAO1lF,QAAU,GAAU0lF,EAAOp/B,gBACjE6wB,EAASsO,GAAaC,EAAO1lF,MAExB0lF,aAAkB,GACvBvO,EAASsO,GAAaC,EAAOC,sBAAsBxO,EAASsO,IAGvD,GAAQC,IAAW,GAASA,IAAW,GAASA,IxB5F9C,kBwB4FmEA,EAC1EvO,EAASsO,GAAaC,SAIfvO,EAASsO,OAIrBtO,EAcX,IAAI14E,GAiBA,OAhBAK,OAAOugB,KAAK5gB,GAAO0L,SAAQs7E,IACnBnQ,QAAQ/lD,IAAIhrB,KAAMkhF,IAAc,GAAUlhF,KAAKkhF,MAC3ClhF,KAAKkhF,IAAc,GAAUlhF,KAAKkhF,GAAWzlF,QAAU,GAAUuE,KAAKkhF,GAAWn/B,gBAE7E/hD,KAAKkhF,GAAWzlF,QAAUvB,EAAMgnF,KAChClhF,KAAKkhF,GAAWzlF,MAAQvB,EAAMgnF,IAG7BlhF,KAAKkhF,aAAsB,GAChClhF,KAAKkhF,GAAWxzD,IAAIxzB,EAAMgnF,IAG1BlhF,KAAKkhF,GAAahnF,EAAMgnF,OAI7BlhF,MChKR,MAAM,WAAsB4zE,GAC/B,YAAYyN,EAAU,WAClBj6B,QACApnD,KAAK1D,KAAO,gBACZ0D,KAAKshF,SAAWD,EAChBrhF,KAAKuhF,eAAevhF,KAAKshF,SAAU,GAQvC,eAAe1jF,GACX,MAAMikC,EAAQ7hC,KAAKge,IAAIpgB,GACvB,OAAc,OAAVikC,EACOA,EAAMn4B,MAGN1J,KAAKshF,SASpB,eAAe53E,EAAO9L,EAAMuZ,GAMxB,OALA,GAAYvZ,EAAM,GAClBoC,KAAKuF,IAAIhL,OAAOqmB,OAAO,GAAIzJ,EAAS,CAChCzN,QACA9L,UAEGoC,KAQX,aAAa0J,EAAO9L,GAGhB,IAAK,IAAInE,EADKuG,KAAKk0E,QAAQt2E,GACPnE,GAAK,EAAGA,IAAK,CAC7B,MAAMooC,EAAQ7hC,KAAK6zE,UAAUp6E,GAC7B,GAAIooC,EAAMn4B,QAAUA,EAChB,OAAOm4B,GAUnB,aAAan4B,EAAO9L,GAEhB,MAAMc,EAAQsB,KAAKk0E,QAAQt2E,GAC3B,IAAe,IAAXc,EACA,IAAK,IAAIjF,EAAIiF,EAAOjF,EAAIuG,KAAK6zE,UAAUr6E,OAAQC,IAAK,CAChD,MAAMooC,EAAQ7hC,KAAK6zE,UAAUp6E,GAC7B,GAAIooC,EAAMn4B,QAAUA,EAChB,OAAOm4B,ICxDpB,MAAM,WAAc,GACvB,cACIulB,MAAM,GAAqB,GAAM0sB,cAAe3pE,UAAW,CAAC,QAAS,QAAS,aAC9EnK,KAAK1D,KAAO,QACZ0D,KAAKwhF,YAAa,EAIlBxhF,KAAKyhF,WAAa,KAClB,MAAMtqE,EAAU,GAAqB,GAAM28D,cAAe3pE,UAAW,CAAC,QAAS,QAAS,YAGxF,IAFA,GAAO,GAAUgN,EAAQi9D,SACpB7B,GAAap7D,EAAQi9D,QAAUj9D,EAAQi9D,iBAAiB,IAAQ,gCAC7D7B,GAAap7D,EAAQi9D,QACzBj9D,EAAQi9D,MAAQj9D,EAAQi9D,MAAMsN,OAElC1hF,KAAK2hF,aAAa,GAAUxqE,EAAQyqE,YAAazqE,EAAQyqE,UACrD5hF,KAAK2hF,YACL3hF,KAAK4jC,MAAQ5jC,KAAK2K,QAAQgtC,aAE1B33C,KAAK0hF,OAASvqE,EAAQi9D,MACtBp0E,KAAK4jC,MAAMruB,QAAQvV,KAAK0hF,SAGxB1hF,KAAK0hF,OAAS1hF,KAAK4jC,MAAQzsB,EAAQi9D,MAEvCp0E,KAAKoH,QAAU,IAAIwsE,GAAS,KAC5B5zE,KAAK6hF,cAAgB7hF,KAAK0hF,OAAO/iF,aACjCqB,KAAKq7E,MAAQlkE,EAAQkkE,MACrBr7E,KAAK8hF,QAAU3qE,EAAQ2qE,QACvB9hF,KAAK+hF,UAAY5qE,EAAQ81C,SACzBjtD,KAAKgiF,UAAY7qE,EAAQqwC,SAErB,GAAUrwC,EAAQ1b,QAAU0b,EAAQ1b,QAAUuE,KAAKiiF,QAAQjiF,KAAK6hF,gBAChE7hF,KAAK+hD,eAAe5qC,EAAQ1b,MAAO,GAG3C,qBACI,OAAOlB,OAAOqmB,OAAO,iBAA+B,CAChDkhE,SAAS,EACTzG,MAAO,WAGf,YACI,MAAM9zE,EAAMvH,KAAKuH,MACjB,OAAOvH,KAAKkiF,eAAe36E,GAE/B,UAAU9L,GACNuE,KAAK4tD,sBAAsB5tD,KAAKuH,OAChCvH,KAAK+hD,eAAetmD,EAAOuE,KAAKuH,OAEpC,eAEI,OAAI,GAAUvH,KAAK+hF,WACR/hF,KAAK+hF,UAEQ,SAAf/hF,KAAKq7E,OAAmC,cAAfr7E,KAAKq7E,OACpB,gBAAfr7E,KAAKq7E,OAA0C,aAAfr7E,KAAKq7E,OACtB,kBAAfr7E,KAAKq7E,OAA4C,UAAfr7E,KAAKq7E,OACxB,QAAfr7E,KAAKq7E,OAAkC,UAAfr7E,KAAKq7E,OAAoC,YAAfr7E,KAAKq7E,MAChD,EAEa,eAAfr7E,KAAKq7E,OACF,EAEY,aAAfr7E,KAAKq7E,OACH,IAGAr7E,KAAK0hF,OAAOz0B,SAG3B,eACI,OAAI,GAAUjtD,KAAKgiF,WACRhiF,KAAKgiF,UAEQ,gBAAfhiF,KAAKq7E,OACK,eAAfr7E,KAAKq7E,MACE,EAGAr7E,KAAK0hF,OAAOl6B,SAM3B,IAAIzyC,EAAK3X,GACL,OAAO4C,KAAKq7E,QAAUj+E,EAK1B,aAAa3B,GAIT,OAHI,GAAUuE,KAAKwnD,WAAa,GAAUxnD,KAAKitD,WAC3C,GAAYxxD,EAAOuE,KAAKmiF,UAAUniF,KAAKitD,UAAWjtD,KAAKmiF,UAAUniF,KAAKwnD,WAEnE/rD,EAMX,UAAU8nC,GACN,OAAIvjC,KAAK8hF,UAAY9hF,KAAKwhF,WAClBxhF,KAAKoiF,IAAI7+C,EAAK,QACPvjC,KAAK29E,UAAUp6C,GAEjBvjC,KAAKoiF,IAAI7+C,EAAK,aP/GVy8C,EOgHOz8C,EP/GrBvlC,KAAKqB,IAAI,GAAI2gF,EAAK,KOiHRhgF,KAAKoiF,IAAI7+C,EAAK,aACZvjC,KAAK69E,YAAYt6C,GAGjBA,EAGNvjC,KAAKwhF,WAEH,EAGAj+C,EP9HZ,IAAkBy8C,EOoIrB,QAAQz8C,GACJ,OAAIvjC,KAAK8hF,SAA0B,aAAf9hF,KAAKq7E,OP/HRnmC,EOgIG3R,EP/HXvlC,KAAK4sC,IAAIsK,GAAQl3C,KAAKqkF,KAA5B,IOkIQ9+C,EPnIZ,IAAkB2R,EO0IrB,eAAez5C,EAAOmC,GAClB,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAC9Bu+E,EAAen8E,KAAKmiF,UAAU1mF,GAUpC,OATA,GAAO6e,SAAS6hE,IAAiB7hE,SAASgoE,GAAe,0CAA0CljE,KAAKC,UAAU5jB,OAAW2jB,KAAKC,UAAUzhB,MAC5IoC,KAAKuiF,aAAapG,GAClBn8E,KAAK4qC,IAAI5qC,KAAKq7E,MAAO,iBAAkB5/E,EAAO6mF,GAC9CtiF,KAAKoH,QAAQ7B,IAAI,CACb3H,KAAM0kF,EACNllF,KAAM,iBACN3B,MAAO0gF,IAEXn8E,KAAK0hF,OAAO3/B,eAAeo6B,EAAcmG,GAClCtiF,KAEX,eAAepC,GACX,MAAM0kF,EAAetkF,KAAKkK,IAAIlI,KAAK29E,UAAU//E,GAAO,GAC9Cy2E,EAAQr0E,KAAKoH,QAAQo7E,SAASF,GAC9BG,EAASziF,KAAKoH,QAAQ4W,IAAIskE,GAChC,IAAI7mF,EAAQuE,KAAK6hF,cAEjB,GAAe,OAAXY,EACAhnF,EAAQuE,KAAK6hF,mBAEZ,GAAoB,oBAAhBY,EAAOrlF,MAAyC,OAAVi3E,GAAiC,mBAAfA,EAAMj3E,KAalE,GAAc,OAAVi3E,EACL54E,EAAQgnF,EAAOhnF,WAEd,GAAmB,4BAAf44E,EAAMj3E,MAAqD,iCAAfi3E,EAAMj3E,KAAyC,CAChG,IAAIslF,EAAcD,EAAOhnF,MACzB,GAAoB,oBAAhBgnF,EAAOrlF,KAA4B,CACnC,MAAMulF,EAAW3iF,KAAKoH,QAAQw7E,UAAUH,EAAO7kF,MAE3C8kF,EADa,OAAbC,EACc3iF,KAAK6hF,cAGLc,EAASlnF,MAI3BA,EADe,4BAAf44E,EAAMj3E,KACE4C,KAAK6iF,mBAAmBJ,EAAO7kF,KAAM8kF,EAAarO,EAAMz2E,KAAMy2E,EAAM54E,MAAO6mF,GAG3EtiF,KAAK8iF,wBAAwBL,EAAO7kF,KAAM8kF,EAAarO,EAAMz2E,KAAMy2E,EAAM54E,MAAO6mF,QAI5F7mF,EAAQgnF,EAAOhnF,UAnCgF,CAC/F,MAAMknF,EAAW3iF,KAAKoH,QAAQw7E,UAAUH,EAAO7kF,MAC/C,IAAImlF,EAEAA,EADa,OAAbJ,EACc3iF,KAAK6hF,cAGLc,EAASlnF,MAEP,oBAAhBgnF,EAAOrlF,OACP3B,EAAQuE,KAAKgjF,qBAAqBP,EAAO7kF,KAAMmlF,EAAaN,EAAOhnF,MAAOgnF,EAAOzL,SAAUsL,IA2BnG,OAAOtiF,KAAKiiF,QAAQxmF,GAExB,aAAamC,GACTA,EAAOoC,KAAK29E,UAAU//E,GACtB,IAAIqlF,EAAajjF,KAAKkiF,eAAetkF,GAMrC,OALAoC,KAAKytD,oBAAoB7vD,GACU,IAA/BoC,KAAKmiF,UAAUc,KACfA,EAAajjF,KAAKiiF,QAAQjiF,KAAKyhF,aAEnCzhF,KAAK+hD,eAAekhC,EAAYrlF,GACzBoC,KAEX,wBAAwBvE,EAAOyB,GAC3B,MAAMi/E,EAAen8E,KAAKmiF,UAAU1mF,GAC9B6mF,EAAetiF,KAAK29E,UAAUzgF,GAUpC,OATA,GAAOod,SAAS6hE,IAAiB7hE,SAASgoE,GAAe,mDAAmDljE,KAAKC,UAAU5jB,OAAW2jB,KAAKC,UAAUniB,MACrJ8C,KAAKuiF,aAAapG,GAClBn8E,KAAKoH,QAAQ7B,IAAI,CACb3H,KAAM0kF,EACNllF,KAAM,0BACN3B,MAAO0gF,IAEXn8E,KAAK4qC,IAAI5qC,KAAKq7E,MAAO,0BAA2B5/E,EAAO6mF,GACvDtiF,KAAK0hF,OAAOr0B,wBAAwB8uB,EAAcmG,GAC3CtiF,KAEX,6BAA6BvE,EAAOyB,GAChC,IAAIi/E,EAAen8E,KAAKmiF,UAAU1mF,GAElC0gF,EAAezI,GAAGyI,EAAc,GAAKn8E,KAAKyhF,WAAatF,EACvDn8E,KAAKuiF,aAAapG,GAClB,MAAMmG,EAAetiF,KAAK29E,UAAUzgF,GAUpC,OATA,GAAOod,SAAS6hE,IAAiB7hE,SAASgoE,GAAe,wDAAwDljE,KAAKC,UAAU5jB,OAAW2jB,KAAKC,UAAUniB,MAE1J8C,KAAKoH,QAAQ7B,IAAI,CACb3H,KAAM0kF,EACNllF,KAAM,+BACN3B,MAAO0gF,IAEXn8E,KAAK4qC,IAAI5qC,KAAKq7E,MAAO,+BAAgC5/E,EAAO6mF,GAC5DtiF,KAAK0hF,OAAOt0B,6BAA6B+uB,EAAcmG,GAChDtiF,KAEX,kBAAkBvE,EAAOynF,EAAU3lF,GAI/B,OAHAA,EAAYyC,KAAK29E,UAAUpgF,GAC3ByC,KAAKmjF,aAAa5lF,GAClByC,KAAKotD,6BAA6B3xD,EAAO8B,EAAYyC,KAAK29E,UAAUuF,IAC7DljF,KAEX,aAAavE,EAAOynF,EAAU3lF,GAI1B,OAHAA,EAAYyC,KAAK29E,UAAUpgF,GAC3ByC,KAAKmjF,aAAa5lF,GAClByC,KAAKqtD,wBAAwB5xD,EAAO8B,EAAYyC,KAAK29E,UAAUuF,IACxDljF,KAEX,aAAavE,EAAOynF,EAAU3lF,GAI1B,OAHAA,EAAYyC,KAAK29E,UAAUpgF,GAC3ByC,KAAKmjF,aAAa5lF,GAClByC,KAAKojF,+BAA+B3nF,EAAO8B,EAAW2lF,GAC/CljF,KAEX,+BAA+BvE,EAAOmC,EAAMslF,GACxCtlF,EAAOoC,KAAK29E,UAAU//E,GACtBslF,EAAWljF,KAAK29E,UAAUuF,GAC1B,MAAMnlF,EAAeC,KAAK4sC,IAAIs4C,EAAW,GAAKllF,KAAK4sC,IAAI,KAKvD,OAJA5qC,KAAKstD,gBAAgB7xD,EAAOmC,EAAMG,GAElCiC,KAAKytD,oBAAoB7vD,EAAkB,GAAXslF,GAChCljF,KAAKqtD,wBAAwB5xD,EAAOmC,EAAOslF,GACpCljF,KAEX,gBAAgBvE,EAAO8B,EAAWQ,GAC9B,MAAMo+E,EAAen8E,KAAKmiF,UAAU1mF,GAEpC,GAAO6e,SAASvc,IAAiBA,EAAe,EAAG,gDACnD,MAAMukF,EAAetiF,KAAK29E,UAAUpgF,GAWpC,OAVAyC,KAAKuiF,aAAapG,GAClB,GAAO7hE,SAAS6hE,IAAiB7hE,SAASgoE,GAAe,2CAA2CljE,KAAKC,UAAU5jB,OAAW2jB,KAAKC,UAAU9hB,MAC7IyC,KAAKoH,QAAQ7B,IAAI,CACbyxE,SAAUj5E,EACVH,KAAM0kF,EACNllF,KAAM,kBACN3B,MAAO0gF,IAEXn8E,KAAK4qC,IAAI5qC,KAAKq7E,MAAO,kBAAmB5/E,EAAO6mF,EAAcvkF,GAC7DiC,KAAK0hF,OAAOp0B,gBAAgB6uB,EAAcmG,EAAcvkF,GACjDiC,KAEX,oBAAoBvC,EAAQF,EAAWG,EAAU2lF,EAAU,GACvD3lF,EAAWsC,KAAK29E,UAAUjgF,GAC1BH,EAAYyC,KAAK29E,UAAUpgF,GAC3B,MAAM+lF,EAAgBtjF,KAAKmiF,UAAU1kF,EAAO,IAAM4lF,EAClDrjF,KAAK+hD,eAAe/hD,KAAKiiF,QAAQqB,GAAgB/lF,GACjD,MAAMgmF,EAAU7lF,GAAYD,EAAOjE,OAAS,GAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAIgE,EAAOjE,OAAQC,IAAK,CACpC,MAAM0iF,EAAen8E,KAAKmiF,UAAU1kF,EAAOhE,IAAM4pF,EACjDrjF,KAAKqtD,wBAAwBrtD,KAAKiiF,QAAQ9F,GAAe5+E,EAAY9D,EAAI8pF,GAE7E,OAAOvjF,KAEX,sBAAsBpC,GAClB,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAKpC,OAJA,GAAO0c,SAASgoE,GAAe,8CAA8CljE,KAAKC,UAAUzhB,MAC5FoC,KAAKoH,QAAQo8E,OAAOlB,GACpBtiF,KAAK0hF,OAAO9zB,sBAAsB00B,GAClCtiF,KAAK4qC,IAAI5qC,KAAKq7E,MAAO,wBAAyBiH,GACvCtiF,KAEX,oBAAoBpC,GAChB,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAC9B6lF,EAAczjF,KAAKmiF,UAAUniF,KAAKkiF,eAAeI,IAEvD,GAAOhoE,SAASgoE,GAAe,4CAA4CljE,KAAKC,UAAUzhB,MAC1FoC,KAAK4qC,IAAI5qC,KAAKq7E,MAAO,sBAAuBiH,EAAc,SAAWmB,GAGrE,MAAMhB,EAASziF,KAAKoH,QAAQ4W,IAAIskE,GAC1BjO,EAAQr0E,KAAKoH,QAAQo7E,SAASF,GA8BpC,OA7BIG,GAAU/O,GAAG+O,EAAO7kF,KAAM0kF,GAEtBjO,GACAr0E,KAAK0hF,OAAO9zB,sBAAsBymB,EAAMz2E,MACxCoC,KAAKoH,QAAQo8E,OAAOnP,EAAMz2E,QAG1BoC,KAAK0hF,OAAOj0B,oBAAoB60B,GAChCtiF,KAAKoH,QAAQo8E,OAAOlB,EAAetiF,KAAKyR,aAGvC4iE,IACLr0E,KAAK0hF,OAAO9zB,sBAAsBymB,EAAMz2E,MAExCoC,KAAKoH,QAAQo8E,OAAOnP,EAAMz2E,MACP,4BAAfy2E,EAAMj3E,KACN4C,KAAKqtD,wBAAwBrtD,KAAKiiF,QAAQwB,GAAcnB,GAEpC,iCAAfjO,EAAMj3E,MACX4C,KAAKotD,6BAA6BptD,KAAKiiF,QAAQwB,GAAcnB,IAIrEtiF,KAAKoH,QAAQ7B,IAAI,CACb3H,KAAM0kF,EACNllF,KAAM,iBACN3B,MAAOgoF,IAEXzjF,KAAK0hF,OAAO3/B,eAAe0hC,EAAanB,GACjCtiF,KAEX,OAAOvE,EAAOynF,EAAW,GAAK3lF,GAO1B,MANmB,cAAfyC,KAAKq7E,OAAwC,QAAfr7E,KAAKq7E,OAAkC,aAAfr7E,KAAKq7E,MAC3Dr7E,KAAK0jF,kBAAkBjoF,EAAOynF,EAAU3lF,GAGxCyC,KAAK2jF,aAAaloF,EAAOynF,EAAU3lF,GAEhCyC,KAOX,MAAMo0E,GACF,MAAM7sE,EAAMvH,KAAK2K,QAAQ6iD,YAEzB4mB,EAAMryB,eAAe/hD,KAAKkiF,eAAe36E,GAAMA,GAE/C,MAAMq8E,EAAgB5jF,KAAKoH,QAAQ4W,IAAIzW,GACvC,GAAIq8E,GAAwC,oBAAvBA,EAAcxmF,KAA4B,CAE3D,MAAMq3E,EAAYz0E,KAAKoH,QAAQo7E,SAASoB,EAAchmF,MAEhDV,EAAUu3E,EAAYA,EAAU72E,KAAO2J,EAAM,EAC7Cs8E,GAAgB3mF,EAAUqK,GAAO,GACvC,IAAK,IAAI9N,EAAI8N,EAAK9N,EAAIyD,EAASzD,GAAKoqF,EAChCzP,EAAM/mB,wBAAwBrtD,KAAKkiF,eAAezoF,GAAIA,GAc9D,OAXAuG,KAAKoH,QAAQ08E,aAAa9jF,KAAK2K,QAAQ6iD,aAAa3rB,IAC7B,0BAAfA,EAAMzkC,KACNg3E,EAAMxmB,sBAAsB/rB,EAAMjkC,MAEd,oBAAfikC,EAAMzkC,KACXg3E,EAAM9mB,gBAAgBzrB,EAAMpmC,MAAOomC,EAAMjkC,KAAMikC,EAAMm1C,UAGrD5C,EAAMvyC,EAAMzkC,MAAMykC,EAAMpmC,MAAOomC,EAAMjkC,SAGtCoC,KAMX,SAASo0E,GACL,GAAOp0E,KAAK2hF,WAAY,gEACxB,MAAM/9C,EAAQ5jC,KAAK4jC,MAKnB,OAJAA,EAAMqT,WAAWj3C,KAAK0hF,QACtB1hF,KAAK0U,MAAM0/D,GACXp0E,KAAK0hF,OAAStN,EACdxwC,EAAMruB,QAAQvV,KAAK0hF,QACZ1hF,KAEX,UAGI,OAFAonD,MAAMytB,UACN70E,KAAKoH,QAAQytE,UACN70E,KAEX,mBACI,OAAOA,KAAKiiF,QAAQjiF,KAAK0hF,OAAO/iF,cAOpC,qBAAqBolF,EAAIC,EAAIC,EAAIlmF,EAAcy4E,GAC3C,OAAOyN,GAAMD,EAAKC,GAAMjmF,KAAKC,MAAMu4E,EAAIuN,GAAMhmF,GAGjD,mBAAmBgmF,EAAIC,EAAIE,EAAID,EAAIzN,GAC/B,OAAOwN,GAAmBxN,EAAIuN,IAAOG,EAAKH,IAA7BE,EAAKD,GAGtB,wBAAwBD,EAAIC,EAAIE,EAAID,EAAIzN,GACpC,OAAOwN,EAAKhmF,KAAKqB,IAAI4kF,EAAKD,GAAKxN,EAAIuN,IAAOG,EAAKH,KClbhD,MAAM,WAAsB,GAC/B,cACI38B,SAASj9C,WAITnK,KAAK1D,KAAO,gBAIZ0D,KAAKmkF,kBAAoB,GAS7B,qBACI,OAAI,GAAUnkF,KAAK4jC,OACX2uC,GAAavyE,KAAK4jC,QAAU5jC,KAAK4jC,iBAAiB,GAC3C,EAGA5jC,KAAK4jC,MAAM+V,eAIf,EASf,sBACI,OAAI,GAAU35C,KAAK8xC,QACR9xC,KAAK8xC,OAAO8H,gBAGZ,EASf,aAAawqC,GACT,OAAO,GAAUA,KAAUA,aAAgB,IAAiB,GAAYA,IAM5E,oBACI,MAAMC,EAAWrkF,KAAKmkF,kBAAkB/nF,MAAM,GAS9C,OARI4D,KAAKskF,aAAatkF,KAAK4jC,QACvBygD,EAAS7oF,KAAKwE,KAAK4jC,OAEnB5jC,KAAKskF,aAAatkF,KAAK8xC,SACnB9xC,KAAK4jC,QAAU5jC,KAAK8xC,QACpBuyC,EAAS7oF,KAAKwE,KAAK8xC,QAGpBuyC,EAOX,sBAAsBltE,GACDnX,KAAKukF,oBACb3+E,SAAQw+E,IACbA,EAAKxxC,aAAez7B,EAAQy7B,aAC5BwxC,EAAKvxC,iBAAmB17B,EAAQ07B,iBAChCuxC,EAAKtxC,sBAAwB37B,EAAQ27B,yBAO7C,wBACI,MAAMuxC,EAAWrkF,KAAKukF,oBACtB,GAAOF,EAAS7qF,OAAS,EAAG,kDAG5B,MAAM4qF,EAAOC,EAAS,GACtB,MAAO,CACHzxC,aAAcwxC,EAAKxxC,aACnBC,iBAAkBuxC,EAAKvxC,iBACvBC,sBAAuBsxC,EAAKtxC,uBAQpC,mBACI,OAAO9yC,KAAKwkF,wBAAwB5xC,aAExC,iBAAiBA,GACb,MAAM14C,EAAQ8F,KAAKwkF,wBAEnBxkF,KAAKykF,sBAAsBlqF,OAAOqmB,OAAO1mB,EAAO,CAAE04C,kBAUtD,uBACI,OAAO5yC,KAAKwkF,wBAAwB3xC,iBAExC,qBAAqBA,GACjB,MAAM34C,EAAQ8F,KAAKwkF,wBAEnBxkF,KAAKykF,sBAAsBlqF,OAAOqmB,OAAO1mB,EAAO,CAAE24C,sBAOtD,4BACI,OAAO7yC,KAAKwkF,wBAAwB1xC,sBAExC,0BAA0BA,GACtB,MAAM54C,EAAQ8F,KAAKwkF,wBAEnBxkF,KAAKykF,sBAAsBlqF,OAAOqmB,OAAO1mB,EAAO,CAAE44C,2BAWtD,QAAQjsC,EAAa69E,EAAY,EAAGC,EAAW,GAE3C,OADA,GAAQ3kF,KAAM6G,EAAa69E,EAAWC,GAC/B3kF,KAQX,gBAEI,OADAA,KAAKuV,QAAQvV,KAAK2K,QAAQ9D,aACnB7G,KAOX,WAEI,OADA,GAAK,+CACEA,KAAK4kF,gBAKhB,WAAW/9E,EAAa69E,EAAY,EAAGC,EAAW,GAE9C,OAmHD,SAAoBE,EAASC,EAASC,EAAe,EAAGC,EAAc,GAEzE,GAAI,GAAUF,GACV,KAAOA,aAAmB,IACtBA,EAAUA,EAAQlhD,MAI1B,MAAS,GAAYihD,IACb,GAAUA,EAAQ/yC,UAClB+yC,EAAUA,EAAQ/yC,QAGtBygC,GAAauS,GACbD,EAAQ5tC,WAAW6tC,EAASC,GAEvB,GAAYD,GACjBD,EAAQ5tC,WAAW6tC,EAASC,EAAcC,GAG1CH,EAAQ5tC,aAxIR,CAAWj3C,KAAM6G,EAAa69E,EAAWC,GAClC3kF,KAYX,SAASilF,GAEL,OADA,GAAcjlF,QAASilF,GAChBjlF,KAYX,OAAOilF,GAEH,OADAA,EAAMr/E,SAAQw+E,GAAQpkF,KAAKuV,QAAQ6uE,KAC5BpkF,KAKX,UAmBI,OAlBAonD,MAAMytB,UACF,GAAU70E,KAAK4jC,SACX5jC,KAAK4jC,iBAAiB,GACtB5jC,KAAK4jC,MAAMixC,UAEN,GAAY70E,KAAK4jC,QACtB5jC,KAAK4jC,MAAMqT,cAGf,GAAUj3C,KAAK8xC,UACX9xC,KAAK8xC,kBAAkB,GACvB9xC,KAAK8xC,OAAO+iC,UAEP,GAAY70E,KAAK8xC,SACtB9xC,KAAK8xC,OAAOmF,cAGpBj3C,KAAKmkF,kBAAoB,GAClBnkF,MAUR,SAAS,MAAiBilF,GAC7B,MAAMv1E,EAAQu1E,EAAMhwE,QACpBgwE,EAAM94E,QAAO,CAAC4jB,EAAMm1D,KACZn1D,aAAgB,GAChBA,EAAKxa,QAAQ2vE,GAER,GAAYn1D,IACjB,GAAQA,EAAMm1D,GAEXA,IACRx1E,GAUA,SAAS,GAAQm1E,EAASC,EAASC,EAAe,EAAGC,EAAc,GAQtE,IAPA,GAAO,GAAUH,GAAU,sCAC3B,GAAO,GAAUC,GAAU,qCACvBA,aAAmB,IAAiB,GAAYA,KAChD,GAAOA,EAAQnrC,eAAiB,EAAG,yCAEvC,GAAOkrC,EAAQjrC,gBAAkB,EAAG,4CAE5BkrC,aAAmB,IAAiBA,aAAmB,IACvD,GAAUA,EAAQlhD,SAClBkhD,EAAUA,EAAQlhD,OAG1B,KAAOihD,aAAmB,IAClB,GAAUA,EAAQ/yC,UAClB+yC,EAAUA,EAAQ/yC,QAItBygC,GAAauS,GACbD,EAAQtvE,QAAQuvE,EAASC,GAGzBF,EAAQtvE,QAAQuvE,EAASC,EAAcC,GCnRxC,MAAM,WAAa,GACtB,cACI59B,MAAM,GAAqB,GAAK0sB,cAAe3pE,UAAW,CAAC,OAAQ,WACnEnK,KAAK1D,KAAO,OAIZ0D,KAAKmlF,UAAYnlF,KAAK2K,QAAQgtC,aAE9B33C,KAAK4jC,MAAQ5jC,KAAKmlF,UAClBnlF,KAAK8xC,OAAS9xC,KAAKmlF,UACnB,MAAMhuE,EAAU,GAAqB,GAAK28D,cAAe3pE,UAAW,CAAC,OAAQ,UAC7EnK,KAAKk1C,KAAO,IAAI,GAAM,CAClBvqC,QAAS3K,KAAK2K,QACdm3E,QAAS3qE,EAAQ2qE,QACjB1N,MAAOp0E,KAAKmlF,UAAUjwC,KACtBmmC,MAAOlkE,EAAQkkE,MACf5/E,MAAO0b,EAAQ+9B,KACf+X,SAAU91C,EAAQ81C,SAClBzF,SAAUrwC,EAAQqwC,WAEtB,GAASxnD,KAAM,QAEnB,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA6B,CAC9CkhE,SAAS,EACT5sC,KAAM,EACNmmC,MAAO,SAMf,UAII,OAHAj0B,MAAMytB,UACN70E,KAAKmlF,UAAUluC,aACfj3C,KAAKk1C,KAAK2/B,UACH70E,MC/CR,MAAMolF,WAAsB,GAC/B,YAAYjuE,GACRiwC,MAAMjwC,GAKNnX,KAAK8uD,QAAU,GAIf9uD,KAAK0B,YAAc,EAInB1B,KAAKqlF,WAAa,EAIlBrlF,KAAKkyE,UAAY,EAIjBlyE,KAAK8xC,OAAS,IAAI,GAAK,CACnBnnC,QAAS3K,KAAK2K,QACduqC,KAAM,IAKVl1C,KAAKmlF,UAAYnlF,KAAK8xC,OAItB9xC,KAAKslF,eAAiB,SAAU1nF,GAC5B,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GACpC,OAAyB,IAArBoC,KAAK0B,YACL4gF,GAAgBtiF,KAAK0B,cACA,IAApB1B,KAAKqlF,WAAoB/C,GAAgBtiF,KAAKqlF,WACxC,UAGA,WAGfrlF,KAAKulF,QAAUpuE,EAAQquE,OACvBxlF,KAAKylF,SAAWtuE,EAAQuuE,QACxB1lF,KAAK2lF,OAASxuE,EAAQiqC,MACtBphD,KAAK8uD,QAAU33C,EAAQ23C,QAE3B,qBACI,OAAOv0D,OAAOqmB,OAAO,iBAA6B,CAC9CwgC,MAAO,SACPokC,OAAQ,EACRE,QAAS,EACT52B,QAAS,KAOjB,WAAWlxD,EAAMs3C,EAAO,GACpB,IAA4B,IAArBl1C,KAAK0B,WAAmB,2CAE/B,MAAMkkF,EAAa5lF,KAAK29E,UAAU39E,KAAKulF,SAiBvC,OAfAvlF,KAAK0B,WAAa9D,EAAOgoF,EACzB5lF,KAAK0B,WAAa1D,KAAKkK,IAAIlI,KAAK0B,WAAY1B,KAAK2K,QAAQ6iD,aAErDo4B,EAAa,GACb5lF,KAAKmlF,UAAUjwC,KAAK6M,eAAe,EAAGnkD,GAClB,WAAhBoC,KAAK2lF,OACL3lF,KAAKmlF,UAAUjwC,KAAKmY,wBAAwBnY,EAAMt3C,EAAOgoF,GAGzD5lF,KAAKmlF,UAAUjwC,KAAKkuC,+BAA+BluC,EAAMt3C,EAAMgoF,IAInE5lF,KAAKmlF,UAAUjwC,KAAK6M,eAAe7M,EAAMt3C,GAEtCoC,KAMX,KAAKpC,GAGD,OAFAoC,KAAK4qC,IAAI,OAAQhtC,GACjBoC,KAAK6lF,UAAU7lF,KAAK29E,UAAU//E,IACvBoC,KAMX,UAAUpC,GACN,IAA4B,IAArBoC,KAAK0B,WAAmB,wCAE/B1B,KAAK8lF,aAEL,MAAMC,EAAc/lF,KAAK29E,UAAU39E,KAAKylF,UAyBxC,OAvBAzlF,KAAKqlF,UAAYrlF,KAAK29E,UAAU//E,GAAQmoF,EACxC/lF,KAAKqlF,UAAYrnF,KAAKkK,IAAIlI,KAAKqlF,UAAWrlF,KAAK2K,QAAQ6iD,aACnDu4B,EAAc,EAEM,WAAhB/lF,KAAK2lF,OACL3lF,KAAKmlF,UAAUjwC,KAAKyuC,aAAa,EAAGoC,EAAanoF,GAGjDoC,KAAKmlF,UAAUjwC,KAAK8wC,aAAa,EAAGD,EAAanoF,IAKrDoC,KAAKmlF,UAAUjwC,KAAKuY,oBAAoB7vD,GACxCoC,KAAKmlF,UAAUjwC,KAAK6M,eAAe,EAAGnkD,IAE1CoC,KAAK2K,QAAQ+0B,aAAa1/B,KAAKkyE,UAC/BlyE,KAAKkyE,SAAWlyE,KAAK2K,QAAQuQ,YAAW,KAEpC,MAAM+qE,EAAiC,gBAAhBjmF,KAAK2lF,OAAyC,EAAdI,EAAkB,EACzE/lF,KAAKkmF,YAAYlmF,KAAKuH,MAAQ0+E,GAC9BjmF,KAAK2uD,aACN3uD,KAAKqlF,UAAYrlF,KAAK2K,QAAQ6iD,aAC1BxtD,KAKX,WACI,GAAIA,KAAK8uD,UAAY,KACjB9uD,KAAK8uD,QAAQ9uD,MAEbA,KAAK8uD,QAAU,IAEV9uD,KAAK2K,QAAQuuC,WAAW,CACzB,MAAMitC,EAAkB,IAAMnmF,KAAK60E,eAEO,IAA/B1hE,OAAOizE,oBAEdjzE,OAAOizE,oBAAoBD,GAG3BjrE,WAAWirE,EAAiB,MAQ5C,YACI,OAAOnmF,KAAKslF,eAAetlF,KAAKuH,OAKpC,aAOI,OANAvH,KAAK4qC,IAAI,cACT,IAA4B,IAArB5qC,KAAK0B,WAAmB,yBAE/B1B,KAAKmlF,UAAUjwC,KAAK0Y,sBAAsB5tD,KAAK0B,WAAa1B,KAAKyR,YACjEzR,KAAK2K,QAAQ+0B,aAAa1/B,KAAKkyE,UAC/BlyE,KAAKqlF,WAAa,EACXrlF,KAEX,UAGI,OAFAonD,MAAMytB,UACN70E,KAAKmlF,UAAUluC,aACRj3C,MC1KR,MAAM,WAA2BolF,GACpC,cACIh+B,MAAM,GAAqB,GAAmB0sB,cAAe3pE,UAAW,CAAC,YACzEnK,KAAK1D,KAAO,qBAIZ0D,KAAKqmF,QAAUrmF,KAAK2K,QAAQuoD,uBAC5B,MAAM/7C,EAAU,GAAqB,GAAmB28D,cAAe3pE,UAAW,CAAC,WACnF,GAAQnK,KAAKqmF,QAASrmF,KAAKmlF,WAC3BnlF,KAAKo1C,OAAS,IAAI,GAAM,CACpBzqC,QAAS3K,KAAK2K,QACdm3E,QAAS3qE,EAAQ2qE,QACjB1N,MAAOp0E,KAAKqmF,QAAQjxC,OACpBimC,MAAOlkE,EAAQkkE,MACf5/E,MAAO0b,EAAQi+B,OACf6X,SAAU91C,EAAQ81C,SAClBzF,SAAUrwC,EAAQqwC,WAG1B,qBACI,OAAOjtD,OAAOqmB,OAAOwkE,GAActR,cAAe,CAC9CgO,SAAS,EACT1sC,OAAQ,EACRimC,MAAO,WAOf,MAAMz9E,GACF,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAIpC,OAHAoC,KAAK4qC,IAAI,QAAS03C,GAClBtiF,KAAKsmF,WAAWhE,GAChBtiF,KAAKqmF,QAAQlrE,MAAMmnE,GACZtiF,KAEX,YAAYpC,GACRoC,KAAKqmF,QAAQjuC,KAAKx6C,GAEtB,UAOI,OANAwpD,MAAMytB,UACa,YAAf70E,KAAK0J,OACL1J,KAAKo4C,OAETp4C,KAAKqmF,QAAQpvC,aACbj3C,KAAKo1C,OAAOy/B,UACL70E,MChCR,MAAM,WAAe,GACxB,cACIonD,MAAM,GAAqB,GAAO0sB,cAAe3pE,UAAW,CAAC,QAAS,WACtEnK,KAAK1D,KAAO,SAIZ0D,KAAKumF,UAAW,EAChB,MAAMpvE,EAAU,GAAqB,GAAO28D,cAAe3pE,UAAW,CAAC,QAAS,UAChFnK,KAAK8xC,OAAS9xC,KAAKwmF,gBAAkB,IAAI,GAAmB,CACxD77E,QAAS3K,KAAK2K,QACdm3E,QAAS3qE,EAAQ2qE,QACjB1sC,OAAQj+B,EAAQ1b,MAChB4/E,MAAOlkE,EAAQkkE,MACfpuB,SAAU91C,EAAQ81C,SAClBzF,SAAUrwC,EAAQqwC,WAEtBxnD,KAAKwmF,gBAAgBrrE,MAAM,GAC3Bnb,KAAK4jC,MAAQ5jC,KAAK0hF,OAAS1hF,KAAKwmF,gBAAgBpxC,OAEpD,qBACI,OAAO76C,OAAOqmB,OAAO,iBAA6B,CAC9CkhE,SAAS,EACTzG,MAAO,SACP5/E,MAAO,IAGf,QAAQoL,EAAa69E,EAAY,EAAGC,EAAW,GAG3C,OADA,GAAc3kF,KAAM6G,EAAa69E,EAAWC,GACrC3kF,KAEX,UAII,OAHAonD,MAAMytB,UACN70E,KAAK0hF,OAAO7M,UACZ70E,KAAKwmF,gBAAgB3R,UACd70E,KAOX,eAAevE,EAAOmC,GAElB,OADAoC,KAAK0hF,OAAO3/B,eAAetmD,EAAOmC,GAC3BoC,KAEX,eAAepC,GACX,OAAOoC,KAAK0hF,OAAOQ,eAAetkF,GAEtC,aAAaA,GAET,OADAoC,KAAK0hF,OAAOyB,aAAavlF,GAClBoC,KAEX,wBAAwBvE,EAAOmC,GAE3B,OADAoC,KAAK0hF,OAAOr0B,wBAAwB5xD,EAAOmC,GACpCoC,KAEX,6BAA6BvE,EAAOmC,GAEhC,OADAoC,KAAK0hF,OAAOt0B,6BAA6B3xD,EAAOmC,GACzCoC,KAEX,kBAAkBvE,EAAOynF,EAAU3lF,GAE/B,OADAyC,KAAK0hF,OAAOgC,kBAAkBjoF,EAAOynF,EAAU3lF,GACxCyC,KAEX,aAAavE,EAAOynF,EAAU3lF,GAE1B,OADAyC,KAAK0hF,OAAOiC,aAAaloF,EAAOynF,EAAU3lF,GACnCyC,KAEX,aAAavE,EAAOynF,EAAU3lF,GAE1B,OADAyC,KAAK0hF,OAAOsE,aAAavqF,EAAOynF,EAAU3lF,GACnCyC,KAEX,+BAA+BvE,EAAOmC,EAAMslF,GAExC,OADAljF,KAAK0hF,OAAO0B,+BAA+B3nF,EAAOmC,EAAMslF,GACjDljF,KAEX,gBAAgBvE,EAAO8B,EAAWQ,GAE9B,OADAiC,KAAK0hF,OAAOp0B,gBAAgB7xD,EAAO8B,EAAWQ,GACvCiC,KAEX,oBAAoBvC,EAAQF,EAAWG,EAAU2lF,GAE7C,OADArjF,KAAK0hF,OAAOn0B,oBAAoB9vD,EAAQF,EAAWG,EAAU2lF,GACtDrjF,KAEX,sBAAsBpC,GAElB,OADAoC,KAAK0hF,OAAO9zB,sBAAsBhwD,GAC3BoC,KAEX,oBAAoBpC,GAEhB,OADAoC,KAAK0hF,OAAOj0B,oBAAoB7vD,GACzBoC,KAEX,OAAOvE,EAAOynF,EAAU3lF,GAEpB,OADAyC,KAAK0hF,OAAO+E,OAAOhrF,EAAOynF,EAAU3lF,GAC7ByC,KAEX,YACI,OAAOA,KAAK0hF,OAAOjmF,MAEvB,UAAUA,GACNuE,KAAK0hF,OAAOjmF,MAAQA,EAExB,cACI,OAAOuE,KAAK0hF,OAAOI,QAEvB,YAAYA,GACR9hF,KAAK0hF,OAAOI,QAAUA,EAE1B,YACI,OAAO9hF,KAAK0hF,OAAOrG,MAEvB,iBACI,OAAOr7E,KAAK0hF,OAAOF,WAEvB,eAAeA,GACXxhF,KAAK0hF,OAAOF,WAAaA,EAE7B,eACI,OAAOxhF,KAAK0hF,OAAOl6B,SAEvB,eACI,OAAOxnD,KAAK0hF,OAAOz0B,SAKvB,MAAMmnB,GAEF,OADAp0E,KAAK0hF,OAAOhtE,MAAM0/D,GACXp0E,MAaR,SAAS,GAAc0mF,EAAQ7/E,EAAa69E,EAAWC,IACtD99E,aAAuB,IAAS0rE,GAAa1rE,IAC5CA,aAAuB,IAAUA,EAAY0/E,YAE9C1/E,EAAY+mD,sBAAsB,GAElC/mD,EAAYk7C,eAAe,EAAG,GAE1Bl7C,aAAuB,KACvBA,EAAY26E,YAAa,IAGjC,GAAQkF,EAAQ7/E,EAAa69E,EAAWC,GC3KrC,MAAMgC,WAAkB,GAC3B,cACIv/B,MAAM,GAAqBu/B,GAAU7S,cAAe3pE,UAAW,CAAC,WAChEnK,KAAK1D,KAAO,YAIZ0D,KAAKoH,QAAU,IAAIwsE,GAAStD,KAI5BtwE,KAAK4mF,YAAc,EACnB,MAAMzvE,EAAU,GAAqBwvE,GAAU7S,cAAe3pE,UAAW,CAAC,UAE1EnK,KAAK4mF,YAAczvE,EAAQ0vE,WAE3B7mF,KAAKoH,QAAQo8E,OAAO,GAEpBxjF,KAAKoH,QAAQ7B,IAAI,CACb63E,MAAO,EACPx/E,KAAM,EACNR,KAAM,iBACN3B,MAAOuE,KAAKmiF,UAAUhrE,EAAQ1b,SAElCuE,KAAK+hD,eAAe5qC,EAAQ1b,MAAO,GAEvC,qBACI,OAAOlB,OAAOqmB,OAAO,iBAAqB,CACtCimE,WAAY,EACZxL,MAAO,QACP5/E,MAAO,IAGf,gBAAgBA,EAAOmC,EAAMo5E,GAEzBp5E,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAKmjF,aAAavlF,GAClB,MAAMkpF,EAAgB9mF,KAAKmiF,UAAU1mF,GAE/BsrF,EAAY/mF,KAAKoH,QAAQ4W,IAAIpgB,GAC7BopF,EAAWhpF,KAAK+sC,MAAM/sC,KAAKkK,IAAI,EAAI8uE,EAAU,IACnD,IAAK,IAAIv9E,EAAI,EAAGA,GAAKutF,EAAUvtF,IAAK,CAChC,MAAM8pF,EAAUvM,EAAWv9E,EAAImE,EACzBqpF,EAAUjnF,KAAKgjF,qBAAqB+D,EAAUnpF,KAAMmpF,EAAUtrF,MAAOqrF,EAAe9P,EAAUuM,GACpGvjF,KAAKqtD,wBAAwBrtD,KAAKiiF,QAAQgF,GAAU1D,GAExD,OAAOvjF,KAEX,eAAevE,EAAOmC,GAClB,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GACpCwpD,MAAMrF,eAAetmD,EAAOmC,GAC5B,MAAMikC,EAAQ7hC,KAAKoH,QAAQ4W,IAAIskE,GACzBsB,EAAgB5jF,KAAKoH,QAAQw8E,cAAc/hD,GAC3CqlD,EAAiBlnF,KAAKmnF,oBAAoBvD,EAAetB,GAE/D,OADAzgD,EAAMu7C,MAAQp/E,KAAKkK,IAAIg/E,EAAgB,GAChClnF,KAEX,wBAAwBvE,EAAOmC,GAC3B,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GACpCwpD,MAAMiG,wBAAwB5xD,EAAOmC,GACrC,MAAMikC,EAAQ7hC,KAAKoH,QAAQ4W,IAAIskE,GACzBsB,EAAgB5jF,KAAKoH,QAAQw8E,cAAc/hD,GAC3CqlD,EAAiBlnF,KAAKmnF,oBAAoBvD,EAAetB,GAE/D,OADAzgD,EAAMu7C,MAAQp/E,KAAKkK,IAAIg/E,EAAgB,GAChClnF,KAEX,6BAA6BvE,EAAOmC,GAEhCA,EAAOoC,KAAK29E,UAAU//E,GACtB,MAAMwpF,EAAcpnF,KAAKmiF,UAAU1mF,GAE7BsrF,EAAY/mF,KAAKoH,QAAQ4W,IAAIpgB,GAE7BopF,EAAWhpF,KAAK+sC,MAAM/sC,KAAKkK,IAA8B,IAAzBtK,EAAOmpF,EAAUnpF,MAAY,IAC7DypF,GAAezpF,EAAOmpF,EAAUnpF,MAAQopF,EAC9C,IAAK,IAAIvtF,EAAI,EAAGA,GAAKutF,EAAUvtF,IAAK,CAChC,MAAM8pF,EAAU8D,EAAa5tF,EAAIstF,EAAUnpF,KACrCqpF,EAAUjnF,KAAK8iF,wBAAwBiE,EAAUnpF,KAAMmpF,EAAUtrF,MAAOmC,EAAMwpF,EAAa7D,GACjGvjF,KAAKqtD,wBAAwBrtD,KAAKiiF,QAAQgF,GAAU1D,GAExD,OAAOvjF,KAQX,oBAAoB6hC,EAAOjkC,GACvB,GAAc,OAAVikC,EACAA,EAAQ,CACJu7C,MAAO,EACPx/E,KAAM,EACNR,KAAM,iBACN3B,MAAO,QAGV,GAAI,GAAQomC,EAAMu7C,OAAQ,CAC3B,MAAMwG,EAAgB5jF,KAAKoH,QAAQw8E,cAAc/hD,GACjDA,EAAMu7C,MAAQp9E,KAAKmnF,oBAAoBvD,EAAe/hD,EAAMjkC,MAEhE,MAAM0pF,EAAOtnF,KAAKmiF,UAAUniF,KAAKkiF,eAAergD,EAAMjkC,OACtD,IAAI2pF,EAAOvnF,KAAKmiF,UAAUniF,KAAKkiF,eAAetkF,IAE9C,MAAM4pF,EAAiBxnF,KAAKoH,QAAQ4W,IAAIpgB,GAIxC,OAHI4pF,GAAkBA,EAAe5pF,OAASA,GAAgC,mBAAxB4pF,EAAepqF,OACjEmqF,EAAOvnF,KAAKmiF,UAAUniF,KAAKkiF,eAAetkF,EAAOoC,KAAKyR,cAEnD,IAAO7T,EAAOikC,EAAMjkC,OAAS0pF,EAAOC,GAAQ1lD,EAAMu7C,MAQ7D,eAAex/E,GACX,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAC9BikC,EAAQ7hC,KAAKoH,QAAQ4W,IAAIskE,GAC/B,OAAOtkF,KAAKkK,IAAIlI,KAAKmnF,oBAAoBtlD,EAAOygD,GAAe,GAQnE,mBAAmBlF,EAAOx/E,GACtB,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAC9B6pF,EAAcznF,KAAK0nF,eAAe9pF,GACxC,OAAOoC,KAAK2nF,cAAcF,EAAcrK,GAASkF,EAMrD,cAAcsF,GACV,MAAMnF,EAASziF,KAAKoH,QAAQ4W,IAAI4pE,EAAM,SAChCvT,EAAQr0E,KAAKoH,QAAQo7E,SAASoF,EAAM,SAC1C,GAAInF,GAAUA,EAAOrF,QAAUwK,EAC3B,OAAOnF,EAAO7kF,KAEb,GAAI6kF,GAAUpO,GACA,4BAAfA,EAAMj3E,MACNqlF,EAAOhnF,QAAU44E,EAAM54E,MAAO,CAC9B,MAAM6rF,EAAOtnF,KAAKmiF,UAAUniF,KAAKkiF,eAAeO,EAAO7kF,OAEjDiqF,GADO7nF,KAAKmiF,UAAUniF,KAAKkiF,eAAe7N,EAAMz2E,OAChC0pF,IAASjT,EAAMz2E,KAAO6kF,EAAO7kF,MAC7CwlC,EAAIplC,KAAK+qC,KAAK/qC,KAAKqB,IAAIioF,EAAM,GAAK,EAAIO,GAASpF,EAAOrF,MAAQwK,IAC9DE,IAASR,EAAOlkD,GAAKykD,EACrBE,IAAST,EAAOlkD,GAAKykD,EAC3B,OAAQC,EAAO,EAAIA,EAAOC,GAAQtF,EAAO7kF,KAExC,OAAI6kF,EACgB,IAAjBA,EAAOhnF,MACA60E,IAGAmS,EAAO7kF,MAAQgqF,EAAOnF,EAAOrF,OAASqF,EAAOhnF,MAIjDmsF,EAAO5nF,KAAK6hF,cAU3B,YAAYzE,EAAO7+B,GACf,OAAOv+C,KAAKgoF,mBAAmB5K,EAAO7+B,GAU1C,YAAY7gD,EAAU6gD,GAClB,MAAM+jC,EAAetiF,KAAK29E,UAAUp/B,GAC9B0pC,EAAmBjoF,KAAK29E,UAAUjgF,GAClCwqF,EAAaloF,KAAK0nF,eAAepF,GAEvC,OADiBtiF,KAAK0nF,eAAepF,EAAe2F,GAClCC,EAKtB,UAAU3kD,GACN,MAAmB,QAAfvjC,KAAKq7E,OAAmBr7E,KAAK6mF,WACtB,GAAK,GAAKtjD,EAAMvjC,KAAK6mF,YAGrBz/B,MAAM+6B,UAAU5+C,GAM/B,QAAQA,GACJ,MAAmB,QAAfvjC,KAAKq7E,OAAmBr7E,KAAK6mF,WACrBtjD,EAAMvjC,KAAK6mF,WAAc,GAG1Bz/B,MAAM66B,QAAQ1+C,GAM7B,iBACI,OAAOvjC,KAAK4mF,YAEhB,eAAe7K,GAGX,MAAMkH,EAAajjF,KAAKvE,MACxBuE,KAAK4mF,YAAc7K,EACnB/7E,KAAK4tD,sBAAsB,GAC3B5tD,KAAK+hD,eAAekhC,EAAY,IC7NjC,MAAMkF,WAAmB,GAC5B,cACI/gC,MAAM,GAAqB+gC,GAAWrU,cAAe3pE,UAAW,CAAC,WACjEnK,KAAK1D,KAAO,aACZ,MAAM6a,EAAU,GAAqBgxE,GAAWrU,cAAe3pE,UAAW,CAAC,UAC3EnK,KAAK4jC,MAAQ5jC,KAAK0hF,OAAS,IAAIiF,GAAU,CACrCh8E,QAAS3K,KAAK2K,QACdm3E,QAAS3qE,EAAQ2qE,QACjB+E,WAAY1vE,EAAQ0vE,WACpBzS,MAAOp0E,KAAKwmF,gBAAgBpxC,OAC5BimC,MAAOlkE,EAAQkkE,MACf5/E,MAAO0b,EAAQ1b,QAGvB,qBACI,OAAOlB,OAAOqmB,OAAO,iBAAsB,CACvCimE,WAAY,EACZxL,MAAO,QACP5/E,MAAO,IAGf,YAAY2hF,EAAO7+B,GACf,OAAOv+C,KAAK0hF,OAAO0G,YAAYhL,EAAO7+B,GAE1C,YAAY7gD,EAAU6gD,GAClB,OAAOv+C,KAAK0hF,OAAO2G,YAAY3qF,EAAU6gD,GAE7C,cAAcqpC,GACV,OAAO5nF,KAAK0hF,OAAOiG,cAAcC,GAErC,mBAAmBxK,EAAOx/E,GACtB,OAAOoC,KAAK0hF,OAAOsG,mBAAmB5K,EAAOx/E,GAEjD,eAAeA,GACX,OAAOoC,KAAK0hF,OAAOgG,eAAe9pF,GAKtC,iBACI,OAAOoC,KAAK0hF,OAAOmF,WAEvB,eAAe9K,GACX/7E,KAAK0hF,OAAOmF,WAAa9K,EAE7B,UAGI,OAFA30B,MAAMytB,UACN70E,KAAK0hF,OAAO7M,UACL70E,MCjDR,MAAMsoF,WAAmB,GAC5B,cACIlhC,MAAM,GAAqBkhC,GAAWxU,cAAe3pE,UAAW,CAAC,eACjEnK,KAAK1D,KAAO,aAIZ0D,KAAK2qE,OAAS,IAAI,GAIlB3qE,KAAKuoF,YAAc,IAAI3U,GACvB,MAAMz8D,EAAU,GAAqBmxE,GAAWxU,cAAe3pE,UAAW,CAAC,cAC3EnK,KAAKwuC,UAAY,IAAI25C,GAAW,CAC5Bx9E,QAAS3K,KAAK2K,QACd0wE,MAAOlkE,EAAQkkE,MACf5/E,MAAO0b,EAAQq3B,YAEnB,GAASxuC,KAAM,aAEfA,KAAK2qE,OAAO4W,eAAe,UAAW,GAEtCvhF,KAAKwoF,eAAe,EAAG,GAE3B,qBACI,OAAOjuF,OAAOqmB,OAAO,CACjB4tB,UAAW,EACX6sC,MAAO,SACR,kBAKP,YACI,OAAOr7E,KAAKslF,eAAetlF,KAAKuH,OAQpC,MAAM3J,EAAMw3C,GACR,MAAMktC,EAAetiF,KAAK29E,UAAU//E,GAOpC,MANiD,YAA7CoC,KAAK2qE,OAAOuX,eAAeI,KAC3BtiF,KAAK2qE,OAAO4W,eAAe,UAAWe,GAClC,GAAUltC,IACVp1C,KAAKwoF,eAAepzC,EAAQktC,IAG7BtiF,KAMX,KAAKpC,GACD,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAEpC,GAAiD,YAA7CoC,KAAK2qE,OAAOuX,eAAeI,GAA6B,CACxD,MAAMzgD,EAAQ7hC,KAAK2qE,OAAO3sD,IAAIskE,GAC1BzgD,GAASA,EAAMjkC,KAAO,IACtBoC,KAAKuoF,YAAY/E,OAAO3hD,EAAMjkC,MAC9BoC,KAAK2qE,OAAO6Y,OAAO3hD,EAAMjkC,OAMjC,OAHAoC,KAAK2qE,OAAO6Y,OAAOlB,GACnBtiF,KAAK2qE,OAAO4W,eAAe,UAAWe,GACtCtiF,KAAKwoF,eAAe,EAAGlG,GAChBtiF,KAMX,MAAMpC,GACF,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAIpC,MAHiD,YAA7CoC,KAAK2qE,OAAOuX,eAAeI,IAC3BtiF,KAAK2qE,OAAO4W,eAAe,SAAUe,GAElCtiF,KAMX,OAAOpC,GAIH,OAHAA,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAK2qE,OAAO6Y,OAAO5lF,GACnBoC,KAAKuoF,YAAY/E,OAAO5lF,GACjBoC,KAOX,eAAepC,GACX,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAC9B6qF,EAAYzoF,KAAK2qE,OAAO+d,aAAa,UAAWpG,GAEhDqG,EAAW,CAAEj/E,MAAO,SAAU9L,KAAM0kF,GAC1CtiF,KAAK2qE,OAAOplE,IAAIojF,GAEhB,IAAIC,EAAYH,EACZI,EAAe,EAkBnB,OAhBA7oF,KAAK2qE,OAAOme,eAAeL,EAAU7qF,KAAM0kF,EAAetiF,KAAKyR,YAAY5U,IACvE,IAAIksF,EAAkBH,EAAUhrF,KAEhC,MAAMorF,EAAchpF,KAAKuoF,YAAYvqE,IAAInhB,EAAEe,MACvCorF,GAAeA,EAAYprF,MAAQgrF,EAAUhrF,OAC7CirF,EAAeG,EAAY5L,MAC3B2L,EAAkBC,EAAYprF,MAEV,YAApBgrF,EAAUl/E,OAAmC,YAAZ7M,EAAE6M,QACnCm/E,GAAgB7oF,KAAKwuC,UAAUk5C,eAAe7qF,EAAEe,MAAQoC,KAAKwuC,UAAUk5C,eAAeqB,IAE1FH,EAAY/rF,KAGhBmD,KAAK2qE,OAAOp/D,OAAOo9E,GAEZE,EAMX,YACI,OAAO7oF,KAAK0nF,eAAe1nF,KAAKuH,OAEpC,UAAUivE,GACNx2E,KAAKwoF,eAAehS,EAAGx2E,KAAKuH,OAMhC,cACI,OAAOvH,KAAKipF,iBAAiBjpF,KAAKuH,OAEtC,YAAYgnC,GACR,MAAMhnC,EAAMvH,KAAKuH,MACX61E,EAAQp9E,KAAKwuC,UAAU65C,YAAY95C,EAAGhnC,GAC5CvH,KAAKwoF,eAAepL,EAAO71E,GAO/B,iBAAiB3J,GACbA,EAAOoC,KAAK29E,UAAU//E,GACtB,MAAM6qF,EAAYzoF,KAAK2qE,OAAO+d,aAAa,UAAW9qF,GAEhD+qF,EAAW,CAAEj/E,MAAO,SAAU9L,QACpCoC,KAAK2qE,OAAOplE,IAAIojF,GAEhB,IAAIC,EAAYH,EACZS,EAAiB,EAkBrB,OAhBAlpF,KAAK2qE,OAAOme,eAAeL,EAAU7qF,KAAMA,EAAOoC,KAAKyR,YAAY5U,IAC/D,IAAIksF,EAAkBH,EAAUhrF,KAEhC,MAAMorF,EAAchpF,KAAKuoF,YAAYvqE,IAAInhB,EAAEe,MACvCorF,GAAeA,EAAYprF,MAAQgrF,EAAUhrF,OAC7CsrF,EAAiBF,EAAY7L,QAC7B4L,EAAkBC,EAAYprF,MAEV,YAApBgrF,EAAUl/E,OAAmC,YAAZ7M,EAAE6M,QACnCw/E,GAAkBrsF,EAAEe,KAAOmrF,GAE/BH,EAAY/rF,KAGhBmD,KAAK2qE,OAAOp/D,OAAOo9E,GAEZO,EAOX,eAAe9L,EAAOx/E,GAQlB,OAPAA,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAKuoF,YAAY/E,OAAO5lF,GACxBoC,KAAKuoF,YAAYhjF,IAAI,CACjB43E,QAASn9E,KAAKwuC,UAAUw5C,mBAAmB5K,EAAOx/E,GAClDw/E,QACAx/E,SAEGoC,KAMX,eAAepC,GAEX,OADAA,EAAOoC,KAAK29E,UAAU//E,GACfoC,KAAK2qE,OAAOuX,eAAetkF,GAUtC,cAAcgqF,EAAMnF,EAASziF,KAAKuH,OAC9B,MAAM6tC,EAASp1C,KAAKuoF,YAAYvqE,IAAIykE,GAC9B5gD,EAAQ7hC,KAAK2qE,OAAO3sD,IAAIykE,GACxBllF,EAAYS,KAAKkK,IAAIktC,EAAOx3C,KAAMikC,EAAMjkC,MACxCurF,EAAgBnpF,KAAKwuC,UAAUk5C,eAAenqF,GAAaqqF,EAAOxyC,EAAOgoC,MAC/E,OAAOp9E,KAAKwuC,UAAUm5C,cAAcwB,GASxC,mBAAmB5rF,EAAWL,EAASumB,GAEnC,IAAI2lE,EAAiBppF,KAAK2qE,OAAO3sD,IAAIzgB,GACrCyC,KAAK2qE,OAAOme,eAAevrF,EAAWL,GAAS2kC,IACvCunD,GAA2C,YAAzBA,EAAe1/E,OAAuC,YAAhBm4B,EAAMn4B,OAC9D1J,KAAKqpF,mBAAmBrrF,KAAKkK,IAAIkhF,EAAexrF,KAAML,GAAYskC,EAAMjkC,KAAOoC,KAAKyR,WAAYgS,GAEpG2lE,EAAiBvnD,KAErB,IAAIt/B,EAAQ,KACZ,GAAI6mF,GAA2C,YAAzBA,EAAe1/E,MAAqB,CACtD,MAAM4/E,EAAetrF,KAAKkK,IAAIkhF,EAAexrF,KAAML,GAE7C2qF,EAAaloF,KAAKwuC,UAAUk5C,eAAe4B,GAE3CnV,EAAO+T,EADQloF,KAAKwuC,UAAUk5C,eAAe0B,EAAexrF,MAElE,IAAIw3C,EAASp3C,KAAK4B,KAAKu0E,GAAQA,EAE/B/+B,EAASs+B,GAAGt+B,EAAQ,GAAK,EAAIA,EAC7B,IAAIm0C,EAAevpF,KAAKwuC,UAAUm5C,cAAcO,EAAa9yC,GAC7D,KAAOm0C,EAAersF,GAAS,CAC3B,IACIumB,EAAS8lE,EAAcvrF,KAAK+sC,MAAM/qC,KAAK0nF,eAAe6B,KAE1D,MAAO1sF,GACH0F,EAAQ1F,EACR,MAEJ0sF,GAAgBvpF,KAAKwuC,UAAUw5C,mBAAmB,EAAGuB,IAG7D,GAAIhnF,EACA,MAAMA,EAEV,OAAOvC,KAKX,UAKI,OAJAonD,MAAMytB,UACN70E,KAAK2qE,OAAOkK,UACZ70E,KAAKuoF,YAAY1T,UACjB70E,KAAKwuC,UAAUqmC,UACR70E,MClQR,MAAM,WAAc,GACvB,cACIonD,MAAM,GAAqB,GAAM0sB,cAAe3pE,UAAW,CAAC,WAAY,eACxEnK,KAAK1D,KAAO,QAIZ0D,KAAKyjB,SAAW,GAIhBzjB,KAAKwpF,YAAc,EAInBxpF,KAAK2qE,OAAS,IAAI,GAAc,WAKhC3qE,KAAKypF,WAAazpF,KAAK0pF,MAAM7+E,KAAK7K,MAClC,MAAMmX,EAAU,GAAqB,GAAM28D,cAAe3pE,UAAW,CAAC,WAAY,cAClFnK,KAAKyjB,SAAWtM,EAAQsM,SACxBzjB,KAAK2pF,YAAc,IAAIrB,GAAW,CAC9B39E,QAAS3K,KAAK2K,QACd6jC,UAAWr3B,EAAQq3B,UACnB6sC,MAAOlkE,EAAQkkE,QAEnBr7E,KAAKwpF,YAAc,EACnBxpF,KAAKwuC,UAAYxuC,KAAK2pF,YAAYn7C,UAClC,GAASxuC,KAAM,aAEfA,KAAK2qE,OAAO4W,eAAe,UAAW,GAEtCvhF,KAAK2K,QAAQgN,GAAG,OAAQ3X,KAAKypF,YAEjC,qBACI,OAAOlvF,OAAOqmB,OAAO,iBAA+B,CAChD6C,SAAU,GACV+qB,UAAW,EACX6sC,MAAO,UAMf,YACI,OAAOr7E,KAAK2qE,OAAOuX,eAAeliF,KAAKuH,OAQ3C,MAAM3J,EAAMw3C,GAERm7B,GAAqBvwE,KAAK2K,SAE1B,MAAM23E,EAAetiF,KAAK29E,UAAU//E,GASpC,OARAoC,KAAK4qC,IAAI,QAAS03C,GAC+B,YAA7CtiF,KAAK2qE,OAAOuX,eAAeI,KAC3BtiF,KAAK2qE,OAAO4W,eAAe,UAAWe,GACtCtiF,KAAK2pF,YAAYxuE,MAAMmnE,EAAcltC,GACjCktC,EAAetiF,KAAKwpF,aACpBxpF,KAAKoyB,KAAK,QAASkwD,EAAcltC,IAGlCp1C,KAaX,KAAKpC,GACD,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAQpC,OAPAoC,KAAK4qC,IAAI,OAAQ03C,GACjBtiF,KAAK2qE,OAAO6Y,OAAOlB,GACnBtiF,KAAK2qE,OAAO4W,eAAe,UAAWe,GACtCtiF,KAAK2pF,YAAYvxC,KAAKkqC,GAClBA,EAAetiF,KAAKwpF,aACpBxpF,KAAKoyB,KAAK,OAAQkwD,GAEftiF,KAMX,MAAMpC,GACF,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAQpC,MAPiD,YAA7CoC,KAAK2qE,OAAOuX,eAAeI,KAC3BtiF,KAAK2qE,OAAO4W,eAAe,SAAUe,GACrCtiF,KAAK2pF,YAAYrjD,MAAMg8C,GACnBA,EAAetiF,KAAKwpF,aACpBxpF,KAAKoyB,KAAK,QAASkwD,IAGpBtiF,KAMX,YACI,OAAOhC,KAAK4B,KAAKI,KAAK0nF,eAAe1nF,KAAKuH,QAE9C,UAAUivE,GACNx2E,KAAK2pF,YAAYvM,MAAQ5G,EAK7B,cACI,OAAOx2E,KAAK2pF,YAAYxM,QAE5B,YAAY5uC,GACRvuC,KAAK2pF,YAAYxM,QAAU5uC,EAO/B,iBAAiB3wC,GACb,OAAOoC,KAAK2pF,YAAYV,iBAAiBrrF,GAO7C,eAAew/E,EAAOx/E,GAElB,OADAoC,KAAK2pF,YAAYnB,eAAepL,EAAOx/E,GAChCoC,KAUX,cAAc4nF,EAAMnF,EAASziF,KAAKuH,OAC9B,OAAOvH,KAAK2pF,YAAYhC,cAAcC,EAAMnF,GAOhD,eAAe7kF,GACX,OAAOoC,KAAK2pF,YAAYjC,eAAe9pF,GAM3C,aAAaw3C,EAAQmJ,GACjB,MAAM+jC,EAAetiF,KAAK29E,UAAUp/B,GAC9BkpC,EAAcznF,KAAK0nF,eAAepF,GACxC,OAAOtiF,KAAK2pF,YAAYhC,cAAcF,EAAcryC,EAAQktC,GAKhE,QACI,MAAM/kF,EAAYyC,KAAKwpF,YACjBtsF,EAAU8C,KAAKuH,MACrBvH,KAAKwpF,YAActsF,EACnB8C,KAAK4qC,IAAI,OAAQrtC,EAAWL,GACxBK,IAAcL,IAEd8C,KAAK2qE,OAAOme,eAAevrF,EAAWL,GAASL,IAC3C,OAAQA,EAAE6M,OACN,IAAK,UACD,MAAM0rC,EAASp1C,KAAK2pF,YAAYjC,eAAe7qF,EAAEe,MACjDoC,KAAKoyB,KAAK,QAASv1B,EAAEe,KAAMw3C,GAC3B,MACJ,IAAK,UACc,IAAXv4C,EAAEe,MACFoC,KAAKoyB,KAAK,OAAQv1B,EAAEe,MAExB,MACJ,IAAK,SACDoC,KAAKoyB,KAAK,QAASv1B,EAAEe,UAKjCoC,KAAK2pF,YAAYN,mBAAmB9rF,EAAWL,GAAS,CAACU,EAAMw/E,KAC3Dp9E,KAAKyjB,SAAS7lB,EAAMw/E,OAahC,eAAex/E,GACX,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GACpC,OAAOoC,KAAK2qE,OAAOuX,eAAeI,GAKtC,UAKI,OAJAl7B,MAAMytB,UACN70E,KAAK2K,QAAQiN,IAAI,OAAQ5X,KAAKypF,YAC9BzpF,KAAK2pF,YAAY9U,UACjB70E,KAAK2qE,OAAOkK,UACL70E,MAGfk1E,GAAQ0U,MAAM,IC1NP,MAAM,WAAyBzW,GAClC,cACI/rB,QACApnD,KAAK1D,KAAO,mBAIZ0D,KAAK6pF,SAAW,IAAIt8D,IAIpBvtB,KAAK8pF,cAAgB,EACrB,MAAM3yE,EAAU,GAAqB,GAAiB28D,cAAe3pE,UAAW,CAAC,OAAQ,SAAU,WAAY,QAC/GnK,KAAK+4E,QAAU5hE,EAAQ4hE,QAEvBx+E,OAAOugB,KAAK3D,EAAQ4yE,MAAMnkF,SAAQtJ,IAC9B0D,KAAK8pF,gBACL,MAAMvtE,EAAMpF,EAAQ4yE,KAAKztF,GACzB0D,KAAKuF,IAAIjJ,EAAMigB,EAAKvc,KAAKgqF,cAAcn/E,KAAK7K,KAAMmX,EAAQqvD,QAASrvD,EAAQyI,YAGnF,qBACI,MAAO,CACHm5D,QAAS,GACTn5D,QAAS,GACT4mD,OAAQ,GACRujB,KAAM,IAOd,IAAIztF,GACA,OAAO0D,KAAK6pF,SAAS7+D,IAAI1uB,EAAKH,YAOlC,IAAIG,GAEA,OADA,GAAO0D,KAAKgrB,IAAI1uB,GAAO,yCAAyCA,KACzD0D,KAAK6pF,SAAS7rE,IAAI1hB,EAAKH,YAKlC,cAAcsnB,GACVzjB,KAAK8pF,gBACsB,IAAvB9pF,KAAK8pF,eAAuBrmE,GAC5BA,IAMR,aACI,OAAO9pB,MAAM4C,KAAKyD,KAAK6pF,UAAU16E,OAAM,EAAEu8B,EAAG59B,KAAYA,EAAOypE,SASnE,IAAIj7E,EAAMigB,EAAKkH,EAAW,GAAM7D,EAAU,IAOtC,OANI,GAASrD,GACTvc,KAAK6pF,SAASn8D,IAAIpxB,EAAKH,WAAY,IAAI,GAAgB6D,KAAK+4E,QAAUx8D,EAAKkH,EAAU7D,IAGrF5f,KAAK6pF,SAASn8D,IAAIpxB,EAAKH,WAAY,IAAI,GAAgBogB,EAAKkH,EAAU7D,IAEnE5f,KAEX,UAII,OAHAonD,MAAMytB,UACN70E,KAAK6pF,SAASjkF,SAAQkI,GAAUA,EAAO+mE,YACvC70E,KAAK6pF,SAASh/D,QACP7qB,MCtGR,MAAMiqF,WAAkB/K,GAC3B,cACI93B,SAASj9C,WACTnK,KAAK1D,KAAO,YACZ0D,KAAKs7E,aAAe,OAKxB,kBAAkB0B,GACd,OAAOhC,GAAK5zB,MAAMu0B,kBAAkBqB,IAKxC,cAAcI,GACV,OAAOpC,GAAK5zB,MAAMy0B,cAAcuB,IAKpC,cAAcH,GACV,OAAOjC,GAAK5zB,MAAM40B,cAAciB,IAKpC,gBAAgBE,GACZ,OAAOnC,GAAK5zB,MAAMk1B,gBAAgBa,IAOtC,SACI,OAAOn9E,KAAKi0E,UAOhB,cACI,OAAOiH,GAAKl7E,KAAK89E,UAQrB,UAAU7wE,GACN,OAAO,IAAIg9E,GAAUjqF,KAAK2K,QAAS3K,KAAK89E,SAAW7wE,ICpDpD,MAAM,WAAmB,GAC5B,cACIm6C,SAASj9C,WACTnK,KAAK1D,KAAO,QACZ0D,KAAKs7E,aAAe,IAKxB,OACI,OAAOt7E,KAAK2K,QAAQ4yE,UAAUH,MAKlC,cAAcH,GACV,OAAOj9E,KAAKq9E,UAAYJ,EAK5B,gBAAgBE,GACZ,OAAOn/E,KAAK0B,MAAMy9E,GAAW,GAAKn9E,KAAKk9E,WAAal9E,KAAKq9E,WAK7D,cAAcD,GACV,OAAOA,EAKX,UACI,OAAOp9E,KAAKi0E,UAKhB,YACI,OAAQj0E,KAAKi0E,UAAYj0E,KAAKq9E,WAAc,GAAKr9E,KAAKk9E,YC7BvD,MAAMgN,WAAa,GACtB,cACI9iC,SAASj9C,WACTnK,KAAK1D,KAAO,OAIZ0D,KAAKmqF,WAAa,IAMlBnqF,KAAKoqF,aAAe,KAIpBpqF,KAAKoH,QAAU,IAAIwsE,GAInB5zE,KAAKqqF,eAAiBrqF,KAAKsqF,UAAUz/E,KAAK7K,MAI1CA,KAAKuqF,iBAAmB,EAa5B,SAAS9mE,EAAU7lB,GASf,OARAoC,KAAKoH,QAAQ7B,IAAI,CACbke,WACA7lB,KAAMoC,KAAK29E,UAAU//E,KAGG,IAAxBoC,KAAKoH,QAAQ5N,SACbwG,KAAKuqF,gBAAkBpwD,sBAAsBn6B,KAAKqqF,iBAE/CrqF,KAMX,OAAOq0E,GAEH,OADAr0E,KAAKoH,QAAQo8E,OAAOxjF,KAAK29E,UAAUtJ,IAC5Br0E,KAKX,YACI,MAAMuH,EAAMvH,KAAK2K,QAAQ6iD,YACzB,KAAOxtD,KAAKoH,QAAQ5N,QAAUwG,KAAKoH,QAAQ8vE,OAAOt5E,KAAOoC,KAAKoqF,cAAgB7iF,GAAK,CAC/E,MAAMs6B,EAAQ7hC,KAAKoH,QAAQ6N,QACvB4sB,GAASt6B,EAAMs6B,EAAMjkC,MAAQoC,KAAKmqF,YAClCtoD,EAAMpe,WAGVzjB,KAAKoH,QAAQ5N,OAAS,IACtBwG,KAAKuqF,gBAAkBpwD,sBAAsBn6B,KAAKqqF,iBAG1D,UAII,OAHAjjC,MAAMytB,UACN70E,KAAKoH,QAAQytE,UACbv6C,qBAAqBt6B,KAAKuqF,iBACnBvqF,MAMf+0E,IAAcpqE,IACVA,EAAQ6/E,KAAO,IAAIN,GAAK,CAAEv/E,eAE9BsqE,IAAetqE,IACXA,EAAQ6/E,KAAK3V,aChGV,MAAM4V,WAAyBtX,GAClC,cACI/rB,SAASj9C,WACTnK,KAAK1D,KAAO,mBAIZ0D,KAAKkkC,MAAQ,KAIblkC,KAAKuvE,QAAU,EAOnB,IAAI1tC,GACA,GAAO,GAAUA,EAAMjkC,MAAO,oCAC9B,GAAO,GAAUikC,EAAMnkC,UAAW,yCAClCmkC,EAAMjkC,KAAOikC,EAAMjkC,KAAKq2E,UACxB,IAAImQ,EAAO,IAAIsG,GAAa7oD,EAAMjkC,KAAMikC,EAAMjkC,KAAOikC,EAAMnkC,SAAUmkC,GASrE,IARmB,OAAf7hC,KAAKkkC,MACLlkC,KAAKkkC,MAAQkgD,EAGbpkF,KAAKkkC,MAAMymD,OAAOvG,GAEtBpkF,KAAKuvE,UAEW,OAAT6U,GACHA,EAAKwG,eACLxG,EAAKyG,YACL7qF,KAAK8qF,WAAW1G,GAChBA,EAAOA,EAAKlhF,OAEhB,OAAOlD,KAMX,OAAO6hC,GACH,GAAmB,OAAf7hC,KAAKkkC,MAAgB,CACrB,MAAM6mD,EAAU,GAChB/qF,KAAKkkC,MAAMqL,OAAO1N,EAAMjkC,KAAMmtF,GAC9B,IAAK,MAAM3G,KAAQ2G,EACf,GAAI3G,EAAKviD,QAAUA,EAAO,CACtB7hC,KAAKgrF,YAAY5G,GACjBpkF,KAAKuvE,UACL,OAIZ,OAAOvvE,KAMX,aACI,OAAOA,KAAKuvE,QAMhB,OAAO8E,GAEH,OADAr0E,KAAKirF,YAAY5W,GAAOxyC,GAAS7hC,KAAKuL,OAAOs2B,KACtC7hC,KAKX,SAASokF,GACLpkF,KAAKkkC,MAAQkgD,EACM,OAAfpkF,KAAKkkC,QACLlkC,KAAKkkC,MAAMhhC,OAAS,MAO5B,qBAAqBkhF,EAAM8G,GACH,OAAhB9G,EAAKlhF,QACDkhF,EAAK+G,cACL/G,EAAKlhF,OAAO2mC,KAAOqhD,EAGnB9G,EAAKlhF,OAAO4mC,MAAQohD,EAExBlrF,KAAK8qF,WAAW1G,EAAKlhF,SAGrBlD,KAAKorF,SAASF,GAOtB,YAAY9G,GACR,GAAkB,OAAdA,EAAKv6C,MAAgC,OAAfu6C,EAAKt6C,MAC3B9pC,KAAKqrF,qBAAqBjH,EAAM,WAE/B,GAAmB,OAAfA,EAAKt6C,MACV9pC,KAAKqrF,qBAAqBjH,EAAMA,EAAKv6C,WAEpC,GAAkB,OAAdu6C,EAAKv6C,KACV7pC,KAAKqrF,qBAAqBjH,EAAMA,EAAKt6C,WAEpC,CAED,IAAIohD,EACAI,EAAO,KACX,GAHgBlH,EAAKmH,aAGP,EACV,GAAwB,OAApBnH,EAAKv6C,KAAKC,MACVohD,EAAc9G,EAAKv6C,KACnBqhD,EAAYphD,MAAQs6C,EAAKt6C,MACzBwhD,EAAOJ,MAEN,CAED,IADAA,EAAc9G,EAAKv6C,KAAKC,MACK,OAAtBohD,EAAYphD,OACfohD,EAAcA,EAAYphD,MAE1BohD,EAAYhoF,SACZgoF,EAAYhoF,OAAO4mC,MAAQohD,EAAYrhD,KACvCyhD,EAAOJ,EAAYhoF,OACnBgoF,EAAYrhD,KAAOu6C,EAAKv6C,KACxBqhD,EAAYphD,MAAQs6C,EAAKt6C,YAIhC,GAAwB,OAApBs6C,EAAKt6C,MAAMD,KAChBqhD,EAAc9G,EAAKt6C,MACnBohD,EAAYrhD,KAAOu6C,EAAKv6C,KACxByhD,EAAOJ,MAEN,CAED,IADAA,EAAc9G,EAAKt6C,MAAMD,KACG,OAArBqhD,EAAYrhD,MACfqhD,EAAcA,EAAYrhD,KAE1BqhD,EAAYhoF,SACZgoF,EAAYhoF,OAAO2mC,KAAOqhD,EAAYphD,MACtCwhD,EAAOJ,EAAYhoF,OACnBgoF,EAAYrhD,KAAOu6C,EAAKv6C,KACxBqhD,EAAYphD,MAAQs6C,EAAKt6C,OAGb,OAAhBs6C,EAAKlhF,OACDkhF,EAAK+G,cACL/G,EAAKlhF,OAAO2mC,KAAOqhD,EAGnB9G,EAAKlhF,OAAO4mC,MAAQohD,EAIxBlrF,KAAKorF,SAASF,GAEdI,GACAtrF,KAAK8qF,WAAWQ,GAGxBlH,EAAKvP,UAKT,YAAYuP,GACR,MAAMlhF,EAASkhF,EAAKlhF,OACdioF,EAAc/G,EAAK+G,cAEnBK,EAAYpH,EAAKt6C,MACnB0hD,IACApH,EAAKt6C,MAAQ0hD,EAAU3hD,KACvB2hD,EAAU3hD,KAAOu6C,GAEN,OAAXlhF,EACIioF,EACAjoF,EAAO2mC,KAAO2hD,EAGdtoF,EAAO4mC,MAAQ0hD,EAInBxrF,KAAKorF,SAASI,GAMtB,aAAapH,GACT,MAAMlhF,EAASkhF,EAAKlhF,OACdioF,EAAc/G,EAAK+G,cAEnBK,EAAYpH,EAAKv6C,KACnB2hD,IACApH,EAAKv6C,KAAO2hD,EAAU1hD,MACtB0hD,EAAU1hD,MAAQs6C,GAEP,OAAXlhF,EACIioF,EACAjoF,EAAO2mC,KAAO2hD,EAGdtoF,EAAO4mC,MAAQ0hD,EAInBxrF,KAAKorF,SAASI,GAMtB,WAAWpH,GACP,MAAMqH,EAAUrH,EAAKmH,aACjBE,EAAU,GAAKrH,EAAKv6C,KAChBu6C,EAAKv6C,KAAK0hD,aAAe,EACzBvrF,KAAK0rF,YAAYtH,EAAKv6C,MAGtB7pC,KAAK2rF,aAAavH,GAGjBqH,GAAW,GAAKrH,EAAKt6C,QACtBs6C,EAAKt6C,MAAMyhD,aAAe,EAC1BvrF,KAAK2rF,aAAavH,EAAKt6C,OAGvB9pC,KAAK0rF,YAAYtH,IAS7B,IAAIxmF,GACA,GAAmB,OAAfoC,KAAKkkC,MAAgB,CACrB,MAAM6mD,EAAU,GAEhB,GADA/qF,KAAKkkC,MAAMqL,OAAO3xC,EAAMmtF,GACpBA,EAAQvxF,OAAS,EAAG,CACpB,IAAI0O,EAAM6iF,EAAQ,GAClB,IAAK,IAAItxF,EAAI,EAAGA,EAAIsxF,EAAQvxF,OAAQC,IAC5BsxF,EAAQtxF,GAAGmyF,IAAM1jF,EAAI0jF,MACrB1jF,EAAM6iF,EAAQtxF,IAGtB,OAAOyO,EAAI25B,OAGnB,OAAO,KAMX,QAAQpe,GACJ,GAAmB,OAAfzjB,KAAKkkC,MAAgB,CACrB,MAAM2nD,EAAW,GACjB7rF,KAAKkkC,MAAM4nD,UAAS1H,GAAQyH,EAASrwF,KAAK4oF,KAC1CyH,EAASjmF,SAAQw+E,IACTA,EAAKviD,OACLpe,EAAS2gE,EAAKviD,UAI1B,OAAO7hC,KAQX,cAAcpC,EAAM6lB,GAChB,GAAmB,OAAfzjB,KAAKkkC,MAAgB,CACrB,MAAM6mD,EAAU,GAChB/qF,KAAKkkC,MAAMqL,OAAO3xC,EAAMmtF,GACxBA,EAAQnlF,SAAQw+E,IACRA,EAAKviD,OACLpe,EAAS2gE,EAAKviD,UAI1B,OAAO7hC,KAQX,YAAYpC,EAAM6lB,GACd,GAAmB,OAAfzjB,KAAKkkC,MAAgB,CACrB,MAAM6mD,EAAU,GAChB/qF,KAAKkkC,MAAM6nD,YAAYnuF,EAAMmtF,GAC7BA,EAAQnlF,SAAQw+E,IACRA,EAAKviD,OACLpe,EAAS2gE,EAAKviD,UAI1B,OAAO7hC,KAKX,UAMI,OALAonD,MAAMytB,UACa,OAAf70E,KAAKkkC,OACLlkC,KAAKkkC,MAAM4nD,UAAS1H,GAAQA,EAAKvP,YAErC70E,KAAKkkC,MAAQ,KACNlkC,MAgBf,MAAM0qF,GACF,YAAYkB,EAAKI,EAAMnqD,GAEnB7hC,KAAKisF,MAAQ,KAEbjsF,KAAKksF,OAAS,KAEdlsF,KAAKkD,OAAS,KAEdlD,KAAKmsF,OAAS,EACdnsF,KAAK6hC,MAAQA,EAEb7hC,KAAK4rF,IAAMA,EAEX5rF,KAAKgsF,KAAOA,EAEZhsF,KAAKkI,IAAMlI,KAAKgsF,KAKpB,OAAO5H,GACCA,EAAKwH,KAAO5rF,KAAK4rF,IACC,OAAd5rF,KAAK6pC,KACL7pC,KAAK6pC,KAAOu6C,EAGZpkF,KAAK6pC,KAAK8gD,OAAOvG,GAGD,OAAfpkF,KAAK8pC,MACV9pC,KAAK8pC,MAAQs6C,EAGbpkF,KAAK8pC,MAAM6gD,OAAOvG,GAS1B,OAAOgI,EAAOrB,GAGNqB,EAAQpsF,KAAKkI,MAIC,OAAdlI,KAAK6pC,MACL7pC,KAAK6pC,KAAK0F,OAAO68C,EAAOrB,GAGxB/qF,KAAK4rF,KAAOQ,GAASpsF,KAAKgsF,KAAOI,GACjCrB,EAAQvvF,KAAKwE,MAIbA,KAAK4rF,IAAMQ,GAII,OAAfpsF,KAAK8pC,OACL9pC,KAAK8pC,MAAMyF,OAAO68C,EAAOrB,IASjC,YAAYqB,EAAOrB,GAEX/qF,KAAK4rF,KAAOQ,IACZrB,EAAQvvF,KAAKwE,MACK,OAAdA,KAAK6pC,MACL7pC,KAAK6pC,KAAKkiD,YAAYK,EAAOrB,IAIlB,OAAf/qF,KAAK8pC,OACL9pC,KAAK8pC,MAAMiiD,YAAYK,EAAOrB,GAOtC,SAAStnE,GACLA,EAASzjB,MACS,OAAdA,KAAK6pC,MACL7pC,KAAK6pC,KAAKiiD,SAASroE,GAEJ,OAAfzjB,KAAK8pC,OACL9pC,KAAK8pC,MAAMgiD,SAASroE,GAM5B,eACsB,OAAdzjB,KAAK6pC,MAAgC,OAAf7pC,KAAK8pC,MAC3B9pC,KAAKmsF,OAASnuF,KAAKkK,IAAIlI,KAAK6pC,KAAKsiD,OAAQnsF,KAAK8pC,MAAMqiD,QAAU,EAE1C,OAAfnsF,KAAK8pC,MACV9pC,KAAKmsF,OAASnsF,KAAK8pC,MAAMqiD,OAAS,EAEf,OAAdnsF,KAAK6pC,KACV7pC,KAAKmsF,OAASnsF,KAAK6pC,KAAKsiD,OAAS,EAGjCnsF,KAAKmsF,OAAS,EAMtB,YACInsF,KAAKkI,IAAMlI,KAAKgsF,KACE,OAAdhsF,KAAK6pC,OACL7pC,KAAKkI,IAAMlK,KAAKkK,IAAIlI,KAAKkI,IAAKlI,KAAK6pC,KAAK3hC,MAEzB,OAAflI,KAAK8pC,QACL9pC,KAAKkI,IAAMlK,KAAKkK,IAAIlI,KAAKkI,IAAKlI,KAAK8pC,MAAM5hC,MAOjD,aACI,IAAIujF,EAAU,EAUd,OATkB,OAAdzrF,KAAK6pC,MAAgC,OAAf7pC,KAAK8pC,MAC3B2hD,EAAUzrF,KAAK6pC,KAAKsiD,OAASnsF,KAAK8pC,MAAMqiD,OAErB,OAAdnsF,KAAK6pC,KACV4hD,EAAUzrF,KAAK6pC,KAAKsiD,OAAS,EAET,OAAfnsF,KAAK8pC,QACV2hD,IAAYzrF,KAAK8pC,MAAMqiD,OAAS,IAE7BV,EAKX,cACI,OAAuB,OAAhBzrF,KAAKkD,QAAmBlD,KAAKkD,OAAO2mC,OAAS7pC,KAKxD,WACI,OAAOA,KAAKisF,MAEhB,SAAS7H,GACLpkF,KAAKisF,MAAQ7H,EACA,OAATA,IACAA,EAAKlhF,OAASlD,MAElBA,KAAK4qF,eACL5qF,KAAK6qF,YAKT,YACI,OAAO7qF,KAAKksF,OAEhB,UAAU9H,GACNpkF,KAAKksF,OAAS9H,EACD,OAATA,IACAA,EAAKlhF,OAASlD,MAElBA,KAAK4qF,eACL5qF,KAAK6qF,YAKT,UACI7qF,KAAKkD,OAAS,KACdlD,KAAKisF,MAAQ,KACbjsF,KAAKksF,OAAS,KACdlsF,KAAK6hC,MAAQ,MC3gBd,MAAM,WAAe,GACxB,cACIulB,MAAM,GAAqB,GAAO0sB,cAAe3pE,UAAW,CAAC,YAC7DnK,KAAK1D,KAAO,SACZ,MAAM6a,EAAU,GAAqB,GAAO28D,cAAe3pE,UAAW,CAAC,WACvEnK,KAAK4jC,MAAQ5jC,KAAK8xC,OAAS,IAAI,GAAK,CAChCnnC,QAAS3K,KAAK2K,QACduqC,KAAM/9B,EAAQk1E,OACdhR,MAAO,aAEXr7E,KAAKqsF,OAASrsF,KAAK8xC,OAAOoD,KAC1B,GAASl1C,KAAM,UACfA,KAAKssF,eAAiBn1E,EAAQk1E,OAE9BrsF,KAAKusF,KAAOp1E,EAAQo1E,KAExB,qBACI,OAAOhyF,OAAOqmB,OAAO,iBAA6B,CAC9C2rE,MAAM,EACNF,OAAQ,IAWhB,WACI,OAAOrsF,KAAKqsF,OAAO5wF,SAAU,IAEjC,SAAS8wF,IACAvsF,KAAKusF,MAAQA,GACdvsF,KAAKssF,eAAiBtsF,KAAKqsF,OAAO5wF,MAElCuE,KAAKqsF,OAAO5wF,OAAQ,KAEfuE,KAAKusF,OAASA,IACnBvsF,KAAKqsF,OAAO5wF,MAAQuE,KAAKssF,gBAMjC,UAII,OAHAllC,MAAMytB,UACN70E,KAAK4jC,MAAMixC,UACX70E,KAAKqsF,OAAOxX,UACL70E,MC1CR,MAAMwsF,WAAoB,GAC7B,cACIplC,MAAM,GAAqBolC,GAAY1Y,cAAe3pE,YACtDnK,KAAK1D,KAAO,cACZ0D,KAAK4jC,MAAQ,IAAI,GAAO,CAAEj5B,QAAS3K,KAAK2K,UACxC3K,KAAK8xC,OAAS,IAAI,GAAK,CAAEnnC,QAAS3K,KAAK2K,UASvC3K,KAAKqsF,OAASrsF,KAAK4jC,MAAMyoD,OACzB,MAAMl1E,EAAU,GAAqBq1E,GAAY1Y,cAAe3pE,WAChE,GAAcnK,KAAK4jC,MAAO5jC,KAAK8xC,OAAQ9xC,KAAK2K,QAAQgsE,WAAW9vE,aAC/D7G,KAAKusF,KAAOp1E,EAAQo1E,KACpBvsF,KAAKmkF,kBAAoB,CAACnkF,KAAK4jC,MAAO5jC,KAAK2K,QAAQgsE,WAAW9vE,YAAa7G,KAAK8xC,QAEpF,qBACI,OAAOv3C,OAAOqmB,OAAO,iBAA6B,CAC9C2rE,MAAM,EACNF,OAAQ,IAYhB,WACI,OAAOrsF,KAAK4jC,MAAM2oD,KAEtB,SAASA,GACLvsF,KAAK4jC,MAAM2oD,KAAOA,EAYtB,SAASl4E,GAKL,OAJArU,KAAK4jC,MAAMqT,aACX5iC,EAAKlT,QAAQnB,KAAK4jC,OAClBvvB,EAAK7Y,KAAKwE,KAAK8xC,QACf,MAAiBz9B,GACVrU,KAOX,sBACI,OAAOA,KAAK2K,QAAQgsE,WAAW9vE,YAAY6oD,gBAK/C,UAGI,OAFAtI,MAAMytB,UACN70E,KAAKqsF,OAAOxX,UACL70E,MAMf+0E,IAAcpqE,IACVA,EAAQ9D,YAAc,IAAI2lF,GAAY,CAAE7hF,eAE5CsqE,IAAetqE,IACXA,EAAQ9D,YAAYguE,aCjGjB,MAAM4X,WAAsBtZ,GAI/B,YAAYuZ,GACRtlC,QACApnD,KAAK1D,KAAO,gBAIZ0D,KAAK6zE,UAAY,IAAID,GAAS,CAAEG,OAAQ,KACxC/zE,KAAK6hF,cAAgB6K,EAKzB,IAAIjxF,EAAOmC,GAIP,OAHAoC,KAAK6zE,UAAUtuE,IAAI,CACf9J,QAAOmC,SAEJoC,KAKX,IAAIpC,GACA,MAAMikC,EAAQ7hC,KAAK6zE,UAAU71D,IAAIpgB,GACjC,OAAIikC,EACOA,EAAMpmC,MAGNuE,KAAK6hF,eC9BjB,MAAM8K,GAIT,YAAYpP,EAAWxK,GAInB/yE,KAAK+5B,GAAK4yD,GAAeC,WACzB,MAAMz1E,EAAU5c,OAAOqmB,OAAO+rE,GAAe7Y,cAAef,GAC5D/yE,KAAKu9E,UAAYA,EACjBv9E,KAAKyjB,SAAWtM,EAAQsM,SACxBzjB,KAAK6sF,MAAQ11E,EAAQ21E,KACrB9sF,KAAKpC,KAAOuZ,EAAQvZ,KAExB,qBACI,MAAO,CACH6lB,SAAU,GACVqpE,MAAM,EACNlvF,KAAM,GAOd,OAAOA,GACCoC,KAAKyjB,WACLzjB,KAAKyjB,SAAS7lB,GACVoC,KAAK6sF,OACL7sF,KAAKu9E,UAAU1yD,MAAM7qB,KAAK+5B,KAOtC,UAEI,OADA/5B,KAAKyjB,cAAW7kB,EACToB,MAMf2sF,GAAeC,SAAW,EC7CnB,MAAMG,WAA6BJ,GAItC,YAAYpP,EAAWxK,GACnB3rB,MAAMm2B,EAAWxK,GAIjB/yE,KAAKgtF,YAAc,EAInBhtF,KAAKitF,SAAW,EAIhBjtF,KAAKktF,UAAYltF,KAAKpC,KAItBoC,KAAKmtF,cAAgBntF,KAAKotF,SAASviF,KAAK7K,MACxC,MAAMmX,EAAU5c,OAAOqmB,OAAOmsE,GAAqBjZ,cAAef,GAClE/yE,KAAKtC,SAAW,IAAI,GAAW6/E,EAAU5yE,QAASwM,EAAQzZ,UAAUu2E,UACpEj0E,KAAK26E,UAAY,IAAI,GAAW4C,EAAU5yE,QAASwM,EAAQlK,UAAUgnE,UACrEj0E,KAAKktF,UAAY/1E,EAAQvZ,KACzBoC,KAAKu9E,UAAU5lE,GAAG,QAAS3X,KAAKmtF,eAChCntF,KAAKu9E,UAAU5lE,GAAG,YAAa3X,KAAKmtF,eACpCntF,KAAK2K,QAAU3K,KAAKu9E,UAAU5yE,QAC9B3K,KAAKotF,WAET,qBACI,OAAO7yF,OAAOqmB,OAAO,GAAI+rE,GAAe7Y,cAAe,CACnDp2E,SAAU4yE,IACVrjE,SAAU,EACV6/E,MAAM,IAQd,OAAOlvF,GAEHoC,KAAKqtF,cAAczvF,GAEnBwpD,MAAMkmC,OAAO1vF,GAKjB,cAAcA,GAEV,MAAMw/E,EAAQp9E,KAAKu9E,UAAUmK,eAAe9pF,GACxCw/E,GAASp9E,KAAKpC,MAAQw/E,GAASp9E,KAAKktF,WAAaltF,KAAKktF,UAAYltF,KAAK26E,UAAY36E,KAAKpC,KAAOoC,KAAKtC,WACpGsC,KAAKktF,WAAaltF,KAAK26E,UACvB36E,KAAKgtF,WAAahtF,KAAKitF,QACvBjtF,KAAKitF,QAAUjtF,KAAKu9E,UAAUgQ,aAAavtF,KAAKstF,OAAOziF,KAAK7K,MAAO,IAAI,GAAWA,KAAK2K,QAAS3K,KAAKktF,WAAWvP,cAMxH,SAAS//E,GACLoC,KAAKu9E,UAAU1yD,MAAM7qB,KAAKgtF,YAC1BhtF,KAAKu9E,UAAU1yD,MAAM7qB,KAAKitF,SAC1BjtF,KAAKktF,UAAYltF,KAAKpC,KACtB,MAAMw/E,EAAQp9E,KAAKu9E,UAAUmK,eAAe9pF,GACxCw/E,EAAQp9E,KAAKpC,OACboC,KAAKktF,UAAYltF,KAAKpC,KAAOI,KAAK4B,MAAMw9E,EAAQp9E,KAAKpC,MAAQoC,KAAK26E,WAAa36E,KAAK26E,WAExF36E,KAAKgtF,WAAahtF,KAAKu9E,UAAUgQ,aAAavtF,KAAKstF,OAAOziF,KAAK7K,MAAO,IAAI,GAAWA,KAAK2K,QAAS3K,KAAKktF,WAAWvP,aACnH39E,KAAKktF,WAAaltF,KAAK26E,UACvB36E,KAAKitF,QAAUjtF,KAAKu9E,UAAUgQ,aAAavtF,KAAKstF,OAAOziF,KAAK7K,MAAO,IAAI,GAAWA,KAAK2K,QAAS3K,KAAKktF,WAAWvP,aAKpH,UAMI,OALAv2B,MAAMytB,UACN70E,KAAKu9E,UAAU1yD,MAAM7qB,KAAKgtF,YAC1BhtF,KAAKu9E,UAAU1yD,MAAM7qB,KAAKitF,SAC1BjtF,KAAKu9E,UAAU3lE,IAAI,QAAS5X,KAAKmtF,eACjCntF,KAAKu9E,UAAU3lE,IAAI,YAAa5X,KAAKmtF,eAC9BntF,MCrDR,MAAMwtF,WAAkB,GAC3B,cACIpmC,MAAM,GAAqBomC,GAAU1Z,cAAe3pE,YACpDnK,KAAK1D,KAAO,YAOZ0D,KAAK0pF,MAAQ,IAAI+C,IAAc,GAI/BzsF,KAAKytF,WAAa,EAIlBztF,KAAK0tF,SAAW,EAOhB1tF,KAAK2tF,iBAAmB,GAIxB3tF,KAAK6zE,UAAY,IAAID,GAIrB5zE,KAAK4tF,gBAAkB,IAAInD,GAI3BzqF,KAAK6tF,eAAiB,GAItB7tF,KAAK8tF,aAAe,EACpB,MAAM32E,EAAU,GAAqBq2E,GAAU1Z,cAAe3pE,WAE9DnK,KAAK+tF,KAAO52E,EAAQ62E,IACpBhuF,KAAKiuF,OAAS,IAAI,GAAM,CACpBxqE,SAAUzjB,KAAKkuF,aAAarjF,KAAK7K,MACjC2K,QAAS3K,KAAK2K,QACd6jC,UAAW,EACX6sC,MAAO,QAEXr7E,KAAKmuF,mBACLnuF,KAAKw9E,IAAMx9E,KAAKiuF,OAAOz/C,UACvBxuC,KAAKiuF,OAAOz/C,UAAUq4C,WAAa1vE,EAAQ62E,IAC3ChuF,KAAKw9E,IAAIz7B,eAAe5qC,EAAQqmE,IAAK,GACrC,GAASx9E,KAAM,OACfA,KAAKouF,eAAiBj3E,EAAQsmE,cAE9Bz9E,KAAKquF,YAAcl3E,EAAQ62E,IAAM,EAErC,qBACI,OAAOzzF,OAAOqmB,OAAO,iBAA+B,CAChD48D,IAAK,IACLrpC,QAAS,KACTC,UAAW,EACX45C,IAAK,IACLM,MAAO,EACPC,iBAAkB,KAClB9Q,cAAe,IAUvB,aAAa+Q,EAAUpR,GAYnB,GAVIp9E,KAAK0pF,MAAM1rE,IAAIwwE,IACXpR,GAASp9E,KAAK0tF,WACd1tF,KAAKoyB,KAAK,UAAWo8D,GACrBxuF,KAAKiuF,OAAOzF,eAAexoF,KAAKytF,WAAYe,GAC5CpR,EAAQp9E,KAAKytF,WACbztF,KAAKoyB,KAAK,YAAao8D,EAAUxuF,KAAKiuF,OAAOhF,iBAAiBuF,IAC9DxuF,KAAKoyB,KAAK,OAAQo8D,IAItBxuF,KAAK8tF,aAAe,GACpB1Q,EAAQp9E,KAAK+tF,MAAS,GACtB3Q,GAA4B,EAAnBp9E,KAAKquF,cAAqB,EAAG,CAEtC,MAAMI,EAAYrR,GAA4B,EAAnBp9E,KAAKquF,cAAwC,EAAnBruF,KAAKquF,aACpDK,EAAS1wF,KAAKorC,IAAI,EAAaprC,KAAKgoC,IAAMhmC,KAAK8tF,aACrDU,GAAY,IAAI,GAAWxuF,KAAK2K,QAA4B,EAAnB3K,KAAKquF,YAAkB,GAAG1Q,YAAc+Q,EAGrF1uF,KAAK6zE,UAAU8a,cAAcvR,GAAOv7C,GAASA,EAAMyrD,OAAOkB,KAiB9D,SAAS/qE,EAAU7lB,GACf,MAAMikC,EAAQ,IAAI8qD,GAAe3sF,KAAM,CACnCyjB,WACA7lB,KAAM,IAAI,GAAmBoC,KAAK2K,QAAS/M,GAAMggF,YAErD,OAAO59E,KAAK4uF,UAAU/sD,EAAO7hC,KAAK6zE,WAkBtC,eAAepwD,EAAUxW,EAAU1P,EAAWG,EAAW4yE,KACrD,MAAMzuC,EAAQ,IAAIkrD,GAAqB/sF,KAAM,CACzCyjB,WACA/lB,SAAU,IAAIqgF,GAAU/9E,KAAK2K,QAASjN,GAAUkgF,UAChD3wE,SAAU,IAAI8wE,GAAU/9E,KAAK2K,QAASsC,GAAU2wE,UAChDhgF,KAAM,IAAI,GAAmBoC,KAAK2K,QAASpN,GAAWqgF,YAI1D,OAAO59E,KAAK4uF,UAAU/sD,EAAO7hC,KAAK4tF,iBAQtC,aAAanqE,EAAU7lB,GACnB,MAAMikC,EAAQ,IAAI8qD,GAAe3sF,KAAM,CACnCyjB,WACAqpE,MAAM,EACNlvF,KAAM,IAAI,GAAmBoC,KAAK2K,QAAS/M,GAAMggF,YAErD,OAAO59E,KAAK4uF,UAAU/sD,EAAO7hC,KAAK6zE,WAMtC,MAAMgb,GACF,GAAI7uF,KAAK2tF,iBAAiB7vE,eAAe+wE,GAAU,CAC/C,MAAMz3D,EAAOp3B,KAAK2tF,iBAAiBkB,EAAQ1yF,YAC3Ci7B,EAAK03D,SAASvjF,OAAO6rB,EAAKyK,OAC1BzK,EAAKyK,MAAMgzC,iBACJ70E,KAAK2tF,iBAAiBkB,EAAQ1yF,YAEzC,OAAO6D,KAOX,UAAU6hC,EAAOitD,GAMb,OALA9uF,KAAK2tF,iBAAiB9rD,EAAM9H,GAAG59B,YAAc,CACzC0lC,QACAitD,YAEJA,EAASvpF,IAAIs8B,GACNA,EAAM9H,GAQjB,OAAOs6C,EAAQ,GACX,MAAM0a,EAAgB/uF,KAAK49E,QAAQvJ,GAGnC,OAFAr0E,KAAK6zE,UAAUoX,YAAY8D,GAAeltD,GAAS7hC,KAAK6qB,MAAMgX,EAAM9H,MACpE/5B,KAAK4tF,gBAAgB3C,YAAY8D,GAAeltD,GAAS7hC,KAAK6qB,MAAMgX,EAAM9H,MACnE/5B,KAQX,mBACIA,KAAKiuF,OAAOt2E,GAAG,SAAS,CAAC/Z,EAAMw3C,KAC3BA,EAAS,IAAI,GAAWp1C,KAAK2K,QAASyqC,GAAQuoC,YAC9C39E,KAAKoyB,KAAK,QAASx0B,EAAMw3C,MAE7Bp1C,KAAKiuF,OAAOt2E,GAAG,QAAS/Z,IACpBoC,KAAKoyB,KAAK,OAAQx0B,MAEtBoC,KAAKiuF,OAAOt2E,GAAG,SAAU/Z,IACrBoC,KAAKoyB,KAAK,QAASx0B,MAM3B,YACI,OAAOoC,KAAKiuF,OAAO3I,eAAetlF,KAAKuH,OAU3C,MAAM3J,EAAMw3C,GACR,IAAI45C,EAMJ,OALI,GAAU55C,KACV45C,EAAchvF,KAAK49E,QAAQxoC,IAG/Bp1C,KAAKiuF,OAAO9yE,MAAMvd,EAAMoxF,GACjBhvF,KAQX,KAAKpC,GAED,OADAoC,KAAKiuF,OAAO71C,KAAKx6C,GACVoC,KAKX,MAAMpC,GAEF,OADAoC,KAAKiuF,OAAO3nD,MAAM1oC,GACXoC,KAOX,OAAOpC,GAQH,OAPAA,EAAOoC,KAAK29E,UAAU//E,GACmB,YAArCoC,KAAKiuF,OAAO3I,eAAe1nF,GAC3BoC,KAAKmb,MAAMvd,GAGXoC,KAAKo4C,KAAKx6C,GAEPoC,KAgBX,oBACI,OAAOA,KAAKouF,eAEhB,kBAAkBa,GACV,GAAQA,KACRA,EAAWA,EAAQ,GAAKA,EAAQ,GAAM,GAE1CjvF,KAAKouF,eAAiBa,EAK1B,gBACI,OAAO,IAAIlR,GAAU/9E,KAAK2K,QAAS3K,KAAKytF,WAAY,KAAK9P,YAE7D,cAAcuR,GACVlvF,KAAKytF,WAAaztF,KAAK49E,QAAQsR,GAKnC,cACI,OAAO,IAAInR,GAAU/9E,KAAK2K,QAAS3K,KAAK0tF,SAAU,KAAK/P,YAE3D,YAAYwR,GACRnvF,KAAK0tF,SAAW1tF,KAAK49E,QAAQuR,GAKjC,WACI,OAAOnvF,KAAK0pF,MAAM1rE,IAAIhe,KAAKuH,OAE/B,SAAS2sC,GACLl0C,KAAK0pF,MAAMh8D,IAAIwmB,EAAMl0C,KAAKuH,OAS9B,cAAc2nF,EAAeC,GAGzB,OAFAnvF,KAAKo0C,UAAY86C,EACjBlvF,KAAKm0C,QAAUg7C,EACRnvF,KAKX,YACI,OAAOA,KAAK8tF,aAEhB,UAAUY,GAEN1uF,KAAK8tF,aAAeY,EAOxB,uBACI,OAAO,IAAI,GAAW1uF,KAAK2K,QAAS3K,KAAKquF,aAAae,aAE1D,qBAAqB9Q,GACjBt+E,KAAKquF,YAAcruF,KAAK49E,QAAQU,GAMpC,eACI,MAAM/2E,EAAMvH,KAAKuH,MACX61E,EAAQp9E,KAAKiuF,OAAOvG,eAAengF,GACzC,OAAO,IAAI,GAAWvH,KAAK2K,QAASyyE,GAAOiS,wBAE/C,aAAaZ,GACT,MAAMrR,EAAQp9E,KAAK49E,QAAQ6Q,GAC3BzuF,KAAKo9E,MAAQA,EAMjB,cACI,OAAOp9E,KAAKiuF,OAAO9Q,QAEvB,YAAY5uC,GACR,MAAMhnC,EAAMvH,KAAKuH,MACX61E,EAAQp9E,KAAKiuF,OAAOz/C,UAAU65C,YAAY95C,EAAGhnC,GACnDvH,KAAKo9E,MAAQA,EAMjB,eACI,GAAIp9E,KAAKk0C,KAAM,CACX,MAAM3sC,EAAMvH,KAAKuH,MAEjB,OADcvH,KAAKiuF,OAAOvG,eAAengF,GACzBvH,KAAKytF,aAAeztF,KAAK0tF,SAAW1tF,KAAKytF,YAGzD,OAAO,EAMf,YACI,OAAOztF,KAAKiuF,OAAO7Q,MAEvB,UAAU5G,GACN,GAAIx2E,KAAKiuF,OAAO7Q,QAAU5G,EAAG,CACzB,MAAMjvE,EAAMvH,KAAKuH,MAEjB,GAAmB,YAAfvH,KAAK0J,MAAqB,CAC1B,MAAM0zE,EAAQp9E,KAAKiuF,OAAOvG,eAAengF,GAGnC3J,EAAO2J,EADSvH,KAAKiuF,OAAOz/C,UAAUw5C,mBAAmBhqF,KAAK4B,KAAKw9E,GAASA,EAAO71E,GAEzFvH,KAAKoyB,KAAK,OAAQx0B,GAClBoC,KAAKiuF,OAAOzF,eAAehS,EAAG54E,GAE9BoC,KAAKoyB,KAAK,QAASx0B,EAAMoC,KAAKiuF,OAAOhF,iBAAiBrrF,SAGtDoC,KAAKiuF,OAAOzF,eAAehS,EAAGjvE,IAS1C,eAAe3J,GACX,OAAOI,KAAK+sC,MAAM/qC,KAAKiuF,OAAOvG,eAAe9pF,IAOjD,iBAAiBA,GACb,OAAOoC,KAAKiuF,OAAOhF,iBAAiBrrF,GAQxC,UACI,OAAOoC,KAAKiuF,OAAOz/C,UAAUq4C,WAEjC,QAAQmH,GACJhuF,KAAKiuF,OAAOz/C,UAAUq4C,WAAamH,EAiBvC,gBAAgB1P,GAEZ,GADAA,EAAct+E,KAAK49E,QAAQU,GACR,YAAft+E,KAAK0J,MAEL,OAAO,EAEN,CACD,MAAMnC,EAAMvH,KAAKuH,MAGX+nF,EAAiBhR,EADFt+E,KAAK0nF,eAAengF,GACW+2E,EACpD,OAAOt+E,KAAKiuF,OAAO1E,aAAa+F,EAAgB/nF,IAYxD,WAAWm/E,EAAQjqC,GACf,IAAKA,EAAO,CAER,MAAMl1C,EAAMvH,KAAKuH,MACjB,GAAmC,IAA/Bm/E,EAAOxE,eAAe36E,GAAY,CAClC,MACMgoF,EAAe,GAAK,GADdvvF,KAAKw9E,IAAI0E,eAAe36E,GACCvH,KAAK09E,KAC1CjhC,EAAQiqC,EAAOxE,eAAe36E,GAAOgoF,OAGrC9yC,EAAQ,EAGhB,MAAM+yC,EAAc,IAAI,GAAK/yC,GAW7B,OATAz8C,KAAKw9E,IAAIjoE,QAAQi6E,GAEjBA,EAAYj6E,QAAQmxE,EAAOhF,QAC3B1hF,KAAK6tF,eAAeryF,KAAK,CACrB6lF,QAASqF,EAAOjrF,MAChBghD,MAAO+yC,EACP9I,WAEJA,EAAOjrF,MAAQ,EACRuE,KAMX,aAAa0mF,GACT,IAAK,IAAIjtF,EAAIuG,KAAK6tF,eAAer0F,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACtD,MAAMg2F,EAAezvF,KAAK6tF,eAAep0F,GACrCg2F,EAAa/I,SAAWA,IACxB+I,EAAahzC,MAAMo4B,UACnB4a,EAAa/I,OAAOjrF,MAAQg0F,EAAapO,QACzCrhF,KAAK6tF,eAAe7sF,OAAOvH,EAAG,IAGtC,OAAOuG,KAKX,UAMI,OALAonD,MAAMytB,UACN70E,KAAKiuF,OAAOpZ,UACZ,GAAS70E,KAAM,OACfA,KAAK6zE,UAAUgB,UACf70E,KAAK4tF,gBAAgB/Y,UACd70E,MAGfk1E,GAAQ0U,MAAM4D,IAIdzY,IAAcpqE,IACVA,EAAQ4yE,UAAY,IAAIiQ,GAAU,CAAE7iF,eAExCsqE,IAAetqE,IACXA,EAAQ4yE,UAAU1I,aChjBf,MAAM,WAAe,GACxB,YAAY19D,GACRiwC,MAAMjwC,GAINnX,KAAK4jC,WAAQhlC,EAIboB,KAAK2qE,OAAS,IAAI,GAAc,WAIhC3qE,KAAK0vF,SAAU,EAIf1vF,KAAK2vF,WAAa,GAIlB3vF,KAAK4vF,aAAe,GACpB5vF,KAAK6vF,YAAc,GACnB7vF,KAAK2qE,OAAOoJ,OAAS,IACrB/zE,KAAK2qE,OAAOqJ,YAAa,EACzBh0E,KAAK8vF,QAAU9vF,KAAK8xC,OAAS,IAAI,GAAO,CACpCnnC,QAAS3K,KAAK2K,QACd4hF,KAAMp1E,EAAQo1E,KACdF,OAAQl1E,EAAQk1E,SAEpBrsF,KAAKqsF,OAASrsF,KAAK8vF,QAAQzD,OAC3B,GAASrsF,KAAM,UACfA,KAAK+vF,OAAS54E,EAAQ44E,OAE1B,qBACI,OAAOx1F,OAAOqmB,OAAO,iBAA6B,CAC9C2rE,MAAM,EACNwD,OAAQ,GACR1D,OAAQ,IAWhB,YACI,OAAIrsF,KAAK0vF,QACgC,YAAjC1vF,KAAK2K,QAAQ4yE,UAAU7zE,MAChB1J,KAAK2qE,OAAOuX,eAAeliF,KAAK2K,QAAQ4yE,UAAUJ,SAGlD,UAIJn9E,KAAK2qE,OAAOuX,eAAeliF,KAAKuH,OAU/C,WACI,OAAOvH,KAAK8vF,QAAQvD,KAExB,SAASA,GACLvsF,KAAK8vF,QAAQvD,KAAOA,EAMxB,oBAAoB3uF,GAChB,OAAIoC,KAAK0vF,QACE9xF,EAGAI,KAAKkK,IAAItK,EAAMoC,KAAK2K,QAAQ6iD,aAW3C,MAAM5vD,EAAMw3C,EAAQ13C,GAChB,IAAI4kF,EAAe,GAAQ1kF,IAASoC,KAAK0vF,QAAU1vF,KAAK2K,QAAQ4yE,UAAUJ,QAAUn9E,KAAK29E,UAAU//E,GAGnG,GAFA0kF,EAAetiF,KAAKgwF,oBAAoB1N,GAEnCtiF,KAAK0vF,SAAwD,YAA7C1vF,KAAK2qE,OAAOuX,eAAeI,GAW5C,GAFAtiF,KAAK4qC,IAAI,QAAS03C,GAClBtiF,KAAK2qE,OAAO4W,eAAe,UAAWe,GAClCtiF,KAAK0vF,QAAS,CAEd,MAAM7tD,EAAQ7hC,KAAK2qE,OAAO3sD,IAAIskE,GAC1BzgD,IACAA,EAAMuT,OAASp1C,KAAK29E,UAAU,GAAWvoC,EAAQ,IACjDvT,EAAMnkC,SAAWA,EAAWsC,KAAK29E,UAAUjgF,QAAYkB,GAE3D,MAAMqxF,EAAQjwF,KAAK2K,QAAQ4yE,UAAUh0E,UAASitE,IAC1Cx2E,KAAKkwF,OAAO1Z,EAAGphC,EAAQ13C,KACxB4kF,GACHtiF,KAAK2vF,WAAWn0F,KAAKy0F,GAGgB,YAAjCjwF,KAAK2K,QAAQ4yE,UAAU7zE,OACvB1J,KAAK2K,QAAQ4yE,UAAU0L,iBAAiBjpF,KAAKmwF,aAAe7N,GAC5DtiF,KAAK4vF,aAAa5vF,KAAKuH,MAAOvH,KAAK2K,QAAQ4yE,UAAUJ,cAIzD5M,GAAqBvwE,KAAK2K,SAC1B3K,KAAKkwF,OAAO5N,EAAcltC,EAAQ13C,QA7BtC,GAAO81E,GAAG8O,EAActiF,KAAK2qE,OAAO3sD,IAAIskE,GAAc1kF,MAAO,gEAC7DoC,KAAK2qE,OAAO6Y,OAAOlB,GACnBtiF,KAAK2qE,OAAO4W,eAAe,UAAWe,GACtCtiF,KAAK4qC,IAAI,UAAW03C,GACpBtiF,KAAKowF,QAAQ9N,EAAcltC,EAAQ13C,GA4BvC,OAAOsC,KAWX,KAAKpC,GACD,IAAI0kF,EAAe,GAAQ1kF,IAASoC,KAAK0vF,QAAU1vF,KAAK2K,QAAQ4yE,UAAUJ,QAAUn9E,KAAK29E,UAAU//E,GAEnG,GADA0kF,EAAetiF,KAAKgwF,oBAAoB1N,GACS,YAA7CtiF,KAAK2qE,OAAOuX,eAAeI,IAA+B,GAAUtiF,KAAK2qE,OAAO0lB,aAAa,UAAW/N,IAAgB,CAExH,GADAtiF,KAAK4qC,IAAI,OAAQ03C,GACZtiF,KAAK0vF,QAGL,CACD,MAAMO,EAAQjwF,KAAK2K,QAAQ4yE,UAAUh0E,SAASvJ,KAAKswF,MAAMzlF,KAAK7K,MAAOsiF,GACrEtiF,KAAK2vF,WAAWn0F,KAAKy0F,QAJrBjwF,KAAKswF,MAAMhO,GAMftiF,KAAK2qE,OAAO6Y,OAAOlB,GACnBtiF,KAAK2qE,OAAO4W,eAAe,UAAWe,GAE1C,OAAOtiF,KAKX,QAAQpC,EAAMw3C,EAAQ13C,GAMlB,OALAE,EAAOoC,KAAK29E,UAAU//E,GACmB,YAArCoC,KAAK2qE,OAAOuX,eAAetkF,KAC3BoC,KAAK2qE,OAAO6Y,OAAO5lF,GACnBoC,KAAKotF,SAASxvF,EAAMw3C,EAAQ13C,IAEzBsC,KAiBX,OA+BI,OA9BKA,KAAK0vF,UACN1vF,KAAK0vF,SAAU,EACf1vF,KAAK4vF,aAAe,CAAChyF,EAAMw3C,KACvB,GAAIA,EAAS,EAAG,CAEZ,MAAMm7C,EAAavwF,KAAK2qE,OAAO3sD,IAAIo3B,GAEnC,GAAIm7C,GAAmC,YAArBA,EAAW7mF,OAAuB6mF,EAAW3yF,OAASw3C,EAAQ,CAE5E,MAAMo7C,EAAcp7C,EAASp1C,KAAK29E,UAAU4S,EAAW3yF,MACvD,IAAIF,EACA6yF,EAAW7yF,WACXA,EAAWsC,KAAK29E,UAAU4S,EAAW7yF,UAAY8yF,GAErDxwF,KAAKkwF,OAAOtyF,EAAMoC,KAAK29E,UAAU4S,EAAWn7C,QAAUo7C,EAAa9yF,MAI/EsC,KAAK6vF,YAAcjyF,IACf,MAAMu/E,EAAUn9E,KAAK2K,QAAQ4yE,UAAU0L,iBAAiBjrF,KAAKkK,IAAItK,EAAOoC,KAAKyR,WAAY,IAC7C,YAAxCzR,KAAK2qE,OAAOuX,eAAe/E,IAC3Bn9E,KAAKswF,MAAM1yF,IAGnBoC,KAAK2K,QAAQ4yE,UAAU5lE,GAAG,QAAS3X,KAAK4vF,cACxC5vF,KAAK2K,QAAQ4yE,UAAU5lE,GAAG,YAAa3X,KAAK4vF,cAC5C5vF,KAAK2K,QAAQ4yE,UAAU5lE,GAAG,OAAQ3X,KAAK6vF,aACvC7vF,KAAK2K,QAAQ4yE,UAAU5lE,GAAG,QAAS3X,KAAK6vF,aACxC7vF,KAAK2K,QAAQ4yE,UAAU5lE,GAAG,UAAW3X,KAAK6vF,cAEvC7vF,KAKX,SAeI,OAdIA,KAAK0vF,UACL1vF,KAAK2K,QAAQ4yE,UAAU3lE,IAAI,OAAQ5X,KAAK6vF,aACxC7vF,KAAK2K,QAAQ4yE,UAAU3lE,IAAI,QAAS5X,KAAK6vF,aACzC7vF,KAAK2K,QAAQ4yE,UAAU3lE,IAAI,UAAW5X,KAAK6vF,aAC3C7vF,KAAK2K,QAAQ4yE,UAAU3lE,IAAI,QAAS5X,KAAK4vF,cACzC5vF,KAAK2K,QAAQ4yE,UAAU3lE,IAAI,YAAa5X,KAAK4vF,eAEjD5vF,KAAK0vF,SAAU,EAEf1vF,KAAK2vF,WAAW/pF,SAAQm0B,GAAM/5B,KAAK2K,QAAQ4yE,UAAU1yD,MAAMkP,KAC3D/5B,KAAK2vF,WAAa,GAClB3vF,KAAK2qE,OAAO6Y,OAAO,GAEnBxjF,KAAKswF,MAAM,GACJtwF,KAKX,UAMI,OALAonD,MAAMytB,UACN70E,KAAK+vF,OAAS,GACd/vF,KAAKywF,SACLzwF,KAAK8vF,QAAQjb,UACb70E,KAAK2qE,OAAOkK,UACL70E,MCxQR,MAAM,WAAyBolF,GAClC,cACIh+B,MAAM,GAAqB,GAAiB0sB,cAAe3pE,UAAW,CAAC,MAAO,YAC9EnK,KAAK1D,KAAO,mBAIZ0D,KAAKqmF,QAAUrmF,KAAK2K,QAAQotC,qBAC5B/3C,KAAKmkF,kBAAoB,CAACnkF,KAAKqmF,SAI/BrmF,KAAK0wF,gBAAiB,EACtB1wF,KAAK2wF,gBAAiB,EACtB,MAAMx5E,EAAU,GAAqB,GAAiB28D,cAAe3pE,UAAW,CAAC,MAAO,WACxF,GAAQnK,KAAKqmF,QAASrmF,KAAKmlF,WAC3BnlF,KAAKqmF,QAAQv3B,QAAU,IAAM9uD,KAAKkmF,cAIlClmF,KAAKq0C,aAAe,IAAI,GAAM,CAC1B1pC,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAKqmF,QAAQhyC,aACpBgnC,MAAO,WACP5/E,MAAO0b,EAAQk9B,eAGnBr0C,KAAKk0C,KAAO/8B,EAAQ+8B,KACpBl0C,KAAKo0C,UAAYj9B,EAAQi9B,UACzBp0C,KAAKm0C,QAAUh9B,EAAQg9B,QACvBn0C,KAAKs3E,QAAU,IAAI,GAAgBngE,EAAQoF,IAAKpF,EAAQqvD,OAAQrvD,EAAQyI,SACxE5f,KAAKmkF,kBAAkB3oF,KAAKwE,KAAKqmF,SAErC,qBACI,OAAO9rF,OAAOqmB,OAAOwkE,GAActR,cAAe,CAC9Cv3D,IAAK,IAAI,GACT23B,MAAM,EACNC,QAAS,EACTC,UAAW,EACXoyB,OAAQ,GACR5mD,QAAS,GACTy0B,aAAc,IAMtB,aACI,OAAOr0C,KAAKulF,QAEhB,WAAW/O,GACPx2E,KAAKulF,QAAU/O,EAKnB,cACI,OAAOx2E,KAAKylF,SAEhB,YAAYjP,GACRx2E,KAAKylF,SAAWjP,EAKpB,YACI,OAAOx2E,KAAK2lF,OAEhB,UAAUnP,GACNx2E,KAAK2lF,OAASnP,EASlB,MAAM54E,EAAMw3C,EAAQ13C,EAAUw3C,EAAO,GACjC,GAAOl1C,KAAK8N,OAAOypE,OAAQ,0CAC3B,MAAM+K,EAAetiF,KAAK29E,UAAU//E,GAEpCoC,KAAKsmF,WAAWhE,EAAcptC,GAG1BE,EADAp1C,KAAKk0C,KACI,GAAWkB,EAAQp1C,KAAKo0C,WAIxB,GAAWgB,EAAQ,GAGhC,IAAIw7C,EAAiB5yF,KAAKkK,IAAIlI,KAAK29E,UAAUvoC,GAAS,GAEtD,GAAIp1C,KAAKk0C,KAAM,CAEX,MAAMC,EAAUn0C,KAAK29E,UAAU39E,KAAKm0C,UAAYn0C,KAAK8N,OAAOpQ,SACtD02C,EAAYp0C,KAAK29E,UAAU39E,KAAKo0C,WAChCy8C,EAAe18C,EAAUC,EAE3Bq/B,GAAImd,EAAgBz8C,KACpBy8C,GAAmBA,EAAiBx8C,GAAay8C,EAAgBz8C,GAGjEs/B,GAAGkd,EAAgB5wF,KAAK8N,OAAOpQ,YAC/BkzF,EAAiB,GAWzB,GAPA5wF,KAAKqmF,QAAQv4E,OAAS9N,KAAK8N,OAAOkQ,MAClChe,KAAKqmF,QAAQlyC,QAAUn0C,KAAK29E,UAAU39E,KAAKm0C,UAAYn0C,KAAK8N,OAAOpQ,SAC/Di2E,GAAGid,EAAgB5wF,KAAK8N,OAAOpQ,YAC/BsC,KAAK0wF,gBAAiB,EACtB1wF,KAAKqmF,QAAQlrE,MAAMmnE,EAAcsO,IAGjC,GAAUlzF,GAAW,CACrB,IAAIozF,EAAc9wF,KAAK29E,UAAUjgF,GAEjCozF,EAAc9yF,KAAKkK,IAAI4oF,EAAa,GACpC9wF,KAAKo4C,KAAKkqC,EAAewO,GAE7B,OAAO9wF,KAEX,YAAYpC,IACHoC,KAAK2wF,gBAAkB3wF,KAAK0wF,iBAC7B1wF,KAAK2wF,gBAAiB,EACtB3wF,KAAKqmF,QAAQjuC,KAAKp4C,KAAK29E,UAAU//E,IACjCoC,KAAK2uD,YAMb,gBACI,OAAO3uD,KAAKqmF,QAAQjyC,UAExB,cAAcA,GACVp0C,KAAKqmF,QAAQjyC,UAAYp0C,KAAK29E,UAAUvpC,GAK5C,cACI,OAAOp0C,KAAKqmF,QAAQlyC,QAExB,YAAYA,GACRn0C,KAAKqmF,QAAQlyC,QAAUn0C,KAAK29E,UAAUxpC,GAK1C,aACI,OAAOn0C,KAAKs3E,QAEhB,WAAWxpE,GACP9N,KAAKs3E,QAAQ5pD,IAAI5f,GAKrB,WACI,OAAO9N,KAAKqmF,QAAQnyC,KAExB,SAASA,GACLl0C,KAAKqmF,QAAQnyC,KAAOA,EAChBl0C,KAAK0wF,gBACL1wF,KAAK8lF,aAMb,UAMI,OALA1+B,MAAMytB,UACN70E,KAAKqmF,QAAQv3B,QAAU,KACvB9uD,KAAKqmF,QAAQpvC,aACbj3C,KAAKs3E,QAAQzC,UACb70E,KAAKq0C,aAAawgC,UACX70E,MC3LR,SAAS+wF,GAAiBl3F,EAAUL,GACvC,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,MAAMtC,EAAWlE,EAASK,EAAS8Q,QAAQuwC,WACrCvwC,EAAU,IAAI,GAAe,EAAGjN,EAAU7D,EAAS8Q,QAAQuwC,YAUjE,OATc,IAAIrhD,EAASwC,YAAY9B,OAAOqmB,OAAO/mB,EAASmkB,MAAO,CAEjEwwB,UAAW,EAAI9wC,EAEfu3C,OAAQ,EACRtqC,aACAi6E,gBACEzpE,MAAM,UACSxQ,EAAQg6C,UACf9Q,eAAe,MCP9B,MAAM,WAA2BuxC,GACpC,cACIh+B,MAAM,GAAqB,GAAmB0sB,cAAe3pE,UAAW,CAAC,YAAa,UACtFnK,KAAK1D,KAAO,qBAIZ0D,KAAKgxF,YAAchxF,KAAK2K,QAAQu3C,mBAChCliD,KAAKmkF,kBAAoB,CAACnkF,KAAKgxF,aAC/B,MAAM75E,EAAU,GAAqB,GAAmB28D,cAAe3pE,UAAW,CAAC,YAAa,SAChG,GAAQnK,KAAKgxF,YAAahxF,KAAKmlF,WAC/BnlF,KAAK5C,KAAO+Z,EAAQ/Z,KACpB4C,KAAKwuC,UAAY,IAAI,GAAM,CACvB7jC,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAKgxF,YAAYxiD,UACxB6sC,MAAO,YACP5/E,MAAO0b,EAAQq3B,YAEnBxuC,KAAKi1C,OAAS,IAAI,GAAM,CACpBtqC,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAKgxF,YAAY/7C,OACxBomC,MAAO,QACP5/E,MAAO0b,EAAQ89B,SAEnB,GAASj1C,KAAM,CAAC,YAAa,WAEjC,qBACI,OAAOzF,OAAOqmB,OAAOwkE,GAActR,cAAe,CAC9C7+B,OAAQ,EACRzG,UAAW,IACXpxC,KAAM,SAOd,MAAMQ,GACF,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAIpC,OAHAoC,KAAK4qC,IAAI,QAAS03C,GAClBtiF,KAAKsmF,WAAWhE,GAChBtiF,KAAKgxF,YAAY71E,MAAMmnE,GAChBtiF,KAEX,YAAYpC,GACRoC,KAAKgxF,YAAY54C,KAAKx6C,GAM1B,gBAAgBwiD,GAEZ,OADApgD,KAAKgxF,YAAY91B,gBAAgB9a,GAC1BpgD,KAKX,WACI,OAAOA,KAAKgxF,YAAY5zF,KAE5B,SAASA,GACL4C,KAAKgxF,YAAY5zF,KAAOA,EAK5B,UAQI,OAPAgqD,MAAMytB,UACa,YAAf70E,KAAK0J,OACL1J,KAAKo4C,OAETp4C,KAAKgxF,YAAY/5C,aACjBj3C,KAAKwuC,UAAUqmC,UACf70E,KAAKi1C,OAAO4/B,UACL70E,MClER,MAAM,WAAmB,GAC5B,cACIonD,MAAM,GAAqB,GAAW0sB,cAAe3pE,UAAW,CAAC,YAAa,UAC9EnK,KAAK1D,KAAO,aAIZ0D,KAAKgxF,YAAc,KACnB,MAAM75E,EAAU,GAAqB,GAAW28D,cAAe3pE,UAAW,CAAC,YAAa,SACxFnK,KAAKwuC,UAAY,IAAI,GAAO,CACxB7jC,QAAS3K,KAAK2K,QACd0wE,MAAO,YACP5/E,MAAO0b,EAAQq3B,YAEnB,GAASxuC,KAAM,aACfA,KAAKi1C,OAAS,IAAI,GAAO,CACrBtqC,QAAS3K,KAAK2K,QACd0wE,MAAO,QACP5/E,MAAO0b,EAAQ89B,SAEnB,GAASj1C,KAAM,UACfA,KAAKixF,UAAY95E,EAAQ+5E,SACzBlxF,KAAKmxF,cAAgBh6E,EAAQi6E,aAC7BpxF,KAAK0xE,MAAQv6D,EAAQ/Z,KACjB+Z,EAAQi6E,cAAiC,WAAjBj6E,EAAQ/Z,OAChC4C,KAAK0xE,MAAQ1xE,KAAKqxF,SAAWl6E,EAAQi6E,aAAaj1F,YAEtD6D,KAAKsxF,MAAQn6E,EAAQm6E,MAEzB,qBACI,OAAO/2F,OAAOqmB,OAAO,iBAAsB,CACvCq0B,OAAQ,EACRzG,UAAW,IACX4iD,aAAc,EACdF,SAAU,GACVI,MAAO,EACPl0F,KAAM,SAMd,OAAOQ,GACH,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAE9BqpE,EAAa,IAAI,GAAmB,CACtCt8D,QAAS3K,KAAK2K,QACdmkD,QAAS,IAAM9uD,KAAK+vF,OAAO/vF,QAE/BA,KAAKgxF,YAAc/pB,EACfjnE,KAAKuxF,MACLvxF,KAAKgxF,YAAY91B,gBAAgBl7D,KAAKuxF,OAGtCvxF,KAAKgxF,YAAY5zF,KAAO4C,KAAK0xE,MAGjC1xE,KAAKgxF,YAAYz7E,QAAQvV,KAAK8xC,QAC9B9xC,KAAKwuC,UAAUj5B,QAAQvV,KAAKgxF,YAAYxiD,WACxCxuC,KAAKi1C,OAAO1/B,QAAQvV,KAAKgxF,YAAY/7C,QAErCj1C,KAAKgxF,YAAY71E,MAAMmnE,GAK3B,MAAM1kF,GACF,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAChCoC,KAAKgxF,aACLhxF,KAAKgxF,YAAY54C,KAAKkqC,GAO9B,SAAS1kF,GACL,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAMpC,OALAoC,KAAK4qC,IAAI,UAAW03C,GAChBtiF,KAAKgxF,aACLhxF,KAAKgxF,YAAYlL,aAErB9lF,KAAK2qE,OAAO6Y,OAAOlB,GACZtiF,KAcX,gBAEI,OADAA,KAAK2K,QAAQ4yE,UAAUiU,WAAWxxF,KAAKwuC,WAChCxuC,KAMX,kBAEI,OADAA,KAAK2K,QAAQ4yE,UAAUkU,aAAazxF,KAAKwuC,WAClCxuC,KAOX,yBACI,GAAmB,WAAfA,KAAK0xE,MAKL,OAJiB,GAAWggB,mBAAmBjiF,MAAKkiF,IAChD,OAAOA,EAAYL,QAAUtxF,KAAK4xF,S9CtGvBC,E8CuGIF,EAAYT,S9CvGRY,E8CuGkB9xF,KAAKixF,U9CtG/CY,EAAOr4F,SAAWs4F,EAAOt4F,QAAUq4F,EAAO1iF,OAAM,CAACqe,EAAS9uB,IAAUozF,EAAOpzF,KAAW8uB,KAD1F,IAAoBqkE,EAAQC,K8C2GtB,CACD,MAAMC,EAAW,GAAWL,mBAAmBjiF,MAAKkiF,GACzCA,EAAYv0F,OAAS4C,KAAK0xE,OAC7BigB,EAAYL,QAAUtxF,KAAK4xF,SAGnC,OADA5xF,KAAKmxF,cAAgBY,EAAWA,EAASX,aAAepxF,KAAKmxF,cACtDY,GAGf,WACI,OAAO/xF,KAAK0xE,MAEhB,SAASt0E,GACL4C,KAAK0xE,MAAQt0E,EACb,MAAM40F,GAA4E,IAA9D,CAAC,OAAQ,SAAU,WAAY,YAAY/nF,QAAQ7M,GACvE,GAAoB,IAAhB4C,KAAK4xF,QAAgBI,EACrBhyF,KAAKuxF,WAAQ3yF,EACboB,KAAKmxF,cAAgB,EAEI,OAArBnxF,KAAKgxF,cAELhxF,KAAKgxF,YAAY5zF,KAAOA,OAG3B,CAED,MAAM60F,EAAQjyF,KAAKkyF,yBACnB,GAAI,GAAUD,GAAQ,CAClB,MAAM,SAAEf,EAAQ,KAAEiB,GAASF,EAC3BjyF,KAAKuxF,MAAQY,EACbnyF,KAAKixF,UAAYC,EACQ,OAArBlxF,KAAKgxF,aACLhxF,KAAKgxF,YAAY91B,gBAAgBl7D,KAAKuxF,WAGzC,CACD,MAAOxxB,EAAMD,GAAQ9/D,KAAKoyF,kBAAkBh1F,EAAM4C,KAAK4xF,QACjDxxC,EAAepgD,KAAK2K,QAAQy1D,mBAAmBL,EAAMD,GAC3D9/D,KAAKuxF,MAAQnxC,EACY,OAArBpgD,KAAKgxF,aACLhxF,KAAKgxF,YAAY91B,gBAAgBl7D,KAAKuxF,OAG1C,GAAWG,mBAAmBl2F,KAAK,CAC/BskE,OACAsxB,aAAcpxF,KAAKmxF,cACnBD,SAAUlxF,KAAKixF,UACfK,MAAOtxF,KAAK4xF,OACZ7xB,OACA3iE,KAAM4C,KAAK0xE,MACXygB,KAAMnyF,KAAKuxF,QAEX,GAAWG,mBAAmBl4F,OAAS,KACvC,GAAWk4F,mBAAmBz8E,UAK9C,eACI,OAAOjV,KAAK0xE,MAAM3kC,QAAQ/sC,KAAKoxF,aAAaj1F,WAAY,IAE5D,aAAak1F,GACLrxF,KAAKoxF,cAA+B,WAAfpxF,KAAK0xE,OAAmC,WAAb2f,EAChDrxF,KAAK5C,KAAOi0F,EAAWrxF,KAAKoxF,aAG5BpxF,KAAK5C,KAAOi0F,EAGpB,mBACI,OAAOrxF,KAAKmxF,cAEhB,iBAAiBhhE,GACb,GAAYA,EAAG,GACf,IAAI/yB,EAAO4C,KAAK0xE,MAChB,MAAM2gB,EAAU,yCAAyC3qD,KAAK1nC,KAAK0xE,OAInE,GAHI2gB,IACAj1F,EAAOi1F,EAAQ,IAEA,WAAfryF,KAAK0xE,MAED1xE,KAAK5C,KADC,IAAN+yB,EACY/yB,EAGAA,EAAO+yB,EAAEh0B,eAGxB,CAED,MAAMm2F,EAAe,IAAI1xF,aAAauvB,GAEtCnwB,KAAKixF,UAAUrrF,SAAQ,CAAC2sF,EAAG94F,IAAM64F,EAAa74F,GAAK84F,IACnDvyF,KAAKixF,UAAYt3F,MAAM4C,KAAK+1F,GAC5BtyF,KAAK5C,KAAO4C,KAAK0xE,OAQzB,kBAAkBt0E,EAAMk0F,GAEpB,IAAIkB,EAAmBz/C,KACvB,MAAMgtB,EAAO,IAAIn/D,aAAa4xF,GACxB1yB,EAAO,IAAIl/D,aAAa4xF,GAC9B,IAAIpB,EAAe,EACnB,GAAa,WAATh0F,GAKA,GAJAg0F,EAAepxF,KAAKixF,UAAUz3F,OAAS,EACvCwG,KAAKmxF,cAAgBnxF,KAAKixF,UAAUz3F,OACpCg5F,EAAmBpB,EAEW,IAA1BpxF,KAAKixF,UAAUz3F,OACf,MAAO,CAACumE,EAAMD,OAGjB,CACD,MAAMuyB,EAAU,yCAAyC3qD,KAAKtqC,GAC1Di1F,GACAjB,EAAetV,SAASuW,EAAQ,GAAI,IAAM,EAC1CryF,KAAKmxF,cAAgBrV,SAASuW,EAAQ,GAAI,IAC1Cj1F,EAAOi1F,EAAQ,GACfjB,EAAepzF,KAAKkK,IAAIkpF,EAAc,GACtCoB,EAAmBpB,GAGnBpxF,KAAKmxF,cAAgB,EAEzBnxF,KAAKixF,UAAY,GAErB,IAAK,IAAI/0F,EAAI,EAAGA,EAAIs2F,IAAoBt2F,EAAG,CACvC,MAAMu2F,EAAW,GAAKv2F,EAAI8B,KAAKgoC,IAC/B,IAAIzT,EACJ,OAAQn1B,GACJ,IAAK,OACDm1B,EAAKr2B,GAAKk1F,EAAgB,EAAI,EAC9BpxF,KAAKixF,UAAU/0F,EAAI,GAAKq2B,EACxB,MACJ,IAAK,SACDA,EAAS,EAAJr2B,EAAS,EAAIu2F,EAAW,EAC7BzyF,KAAKixF,UAAU/0F,EAAI,GAAKq2B,EACxB,MACJ,IAAK,WACDA,EAAIkgE,GAAiB,EAAJv2F,EAAS,GAAK,GAC/B8D,KAAKixF,UAAU/0F,EAAI,GAAKq2B,EACxB,MACJ,IAAK,WAEGA,EADI,EAAJr2B,EACSu2F,EAAWA,EAAhB,GAAgCv2F,EAAI,GAAM,EAAK,GAAM,EAAI,GAGzD,EAER8D,KAAKixF,UAAU/0F,EAAI,GAAKq2B,EACxB,MACJ,IAAK,SACDA,EAAIvyB,KAAKixF,UAAU/0F,EAAI,GACvB,MACJ,QACI,MAAM,IAAInC,UAAU,6BAA+BqD,GAEjD,IAANm1B,GACAwtC,EAAK7jE,IAAMq2B,EAAIv0B,KAAKorC,IAAIkoD,EAAQp1F,GAChC4jE,EAAK5jE,GAAKq2B,EAAIv0B,KAAKmrC,IAAImoD,EAAQp1F,KAG/B6jE,EAAK7jE,GAAK,EACV4jE,EAAK5jE,GAAK,GAGlB,MAAO,CAAC6jE,EAAMD,GAKlB,YAAYC,EAAMD,EAAMwxB,GACpB,IAAIt2C,EAAM,EACV,MAAMzhD,EAAMwmE,EAAKvmE,OACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKE,IACrBuhD,GAAO+kB,EAAKtmE,GAAKuE,KAAKmrC,IAAI1vC,EAAI63F,GAASxxB,EAAKrmE,GAAKuE,KAAKorC,IAAI3vC,EAAI63F,GAElE,OAAOt2C,EAMX,kBACI,MAAO+kB,EAAMD,GAAQ9/D,KAAKoyF,kBAAkBpyF,KAAK0xE,MAAO,GACxD,IAAIlqB,EAAW,EACf,MAAMkrC,EAAkB,EAAV10F,KAAKgoC,GAGnB,IAAK,IAAIvsC,EAAI,EAAGA,EAFM,GAEaA,IAC/B+tD,EAAWxpD,KAAKkK,IAAIlI,KAAK2yF,YAAY5yB,EAAMD,EAAOrmE,EAHhC,GAGqDi5F,GAAQlrC,GAEnF,O3ClTc/rD,G2CkTAuE,KAAK2yF,YAAY5yB,EAAMD,EAAM9/D,KAAK4xF,QAAUpqC,GAAW,EAAG,E3CjTrExpD,KAAKkK,IAAIlK,KAAK0S,IAAIjV,E2CiTmD,IAAJ,G3ClTrE,IAAeA,E2CoTlB,eACI,OAAOuE,KAAKixF,UAAU70F,MAAM,EAAG4D,KAAKoxF,cAExC,aAAaF,GACTlxF,KAAKixF,UAAYC,EACjBlxF,KAAKmxF,cAAgBnxF,KAAKixF,UAAUz3F,OAChC03F,EAAS13F,SACTwG,KAAK5C,KAAO,UAGpB,YACI,OAAO4C,KAAK4xF,QAAU,IAAM5zF,KAAKgoC,IAErC,UAAUsrD,GACNtxF,KAAK4xF,OAASN,EAAQtzF,KAAKgoC,GAAK,IAEhChmC,KAAK5C,KAAO4C,KAAK0xE,MAErB,QAAQl4E,EAAS,MACb,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,OAAO+wF,GAAiB/wF,KAAMxG,MAGtC,UAQI,OAPA4tD,MAAMytB,UACmB,OAArB70E,KAAKgxF,aACLhxF,KAAKgxF,YAAYnc,UAErB70E,KAAKuxF,WAAQ3yF,EACboB,KAAKwuC,UAAUqmC,UACf70E,KAAKi1C,OAAO4/B,UACL70E,MAMf,GAAW0xF,mBAAqB,GCnXzB,MAAM,WAAuB,GAChC,cACItqC,MAAM7sD,OAAOqmB,OAAO,GAAqB,GAAekzD,cAAe3pE,UAAW,CAAC,cAEvF,QAAQtD,EAAa69E,EAAY,EAAGC,EAAW,GAE3C,OADA,GAAc3kF,KAAM6G,EAAa69E,EAAWC,GACrC3kF,MCIR,MAAM,WAAmB,GAC5B,cACIonD,MAAM7sD,OAAOqmB,OAAO,GAAqB,GAAWkzD,cAAe3pE,UAAW,CAAC,UAAW,aAC1FnK,KAAK1D,KAAO,aAIZ0D,KAAK4yF,QAAU5yF,KAAK2K,QAAQwxD,mBAI5Bn8D,KAAK4jC,MAAQ5jC,KAAK4yF,QAIlB5yF,KAAK8xC,OAAS9xC,KAAK4yF,QACnB,MAAMz7E,EAAU,GAAqB,GAAW28D,cAAe3pE,UAAW,CAAC,UAAW,WAClF,GAAQgN,EAAQ07E,UAAY17E,EAAQ07E,mBAAmBjyF,aACvDZ,KAAKohD,MAAQxgD,aAAarE,KAAK4a,EAAQ07E,SrDlBzB,mBqDoBE17E,EAAQ07E,SACxB7yF,KAAK8yF,OAAO37E,EAAQ07E,QAAS17E,EAAQ3d,QAG7C,qBACI,OAAOe,OAAOqmB,OAAO,iBAAsB,CACvCpnB,OAAQ,OAehB,OAAOq5F,EAASr5F,EAAS,MACrB,MAAMua,EAAQ,IAAInT,aAAapH,GAC/B,IAAK,IAAIC,EAAI,EAAGF,EAAMC,EAAQC,EAAIF,EAAKE,IAAK,CACxC,MAAM2tC,EAAc3tC,GAAKF,EAAM,GAAM,EAAI,EACzCwa,EAAMta,GAAKo5F,EAAQzrD,EAAY3tC,GAGnC,OADAuG,KAAKohD,MAAQrtC,EACN/T,KAOX,YACI,OAAOA,KAAK4yF,QAAQxxC,MAExB,UAAUyxC,GACN7yF,KAAK4yF,QAAQxxC,MAAQyxC,EAMzB,iBACI,OAAO7yF,KAAK4yF,QAAQvxC,WAExB,eAAe0xC,GAEX,GADyB,CAAC,OAAQ,KAAM,MAAM56C,MAAKj+B,GAAOA,EAAIy6B,SAASo+C,KAC9C,qDACzB/yF,KAAK4yF,QAAQvxC,WAAa0xC,EAK9B,UAGI,OAFA3rC,MAAMytB,UACN70E,KAAK4yF,QAAQ37C,aACNj3C,MCxFR,MAAM,WAAoB,GAC7B,cACIonD,SAASj9C,WACTnK,KAAK1D,KAAO,cAIZ0D,KAAKgzF,MAAQ,IAAI,GAAW,CACxBroF,QAAS3K,KAAK2K,QACdkoF,QAASrsF,IAAMA,EAAI,GAAK,IAK5BxG,KAAK4jC,MAAQ5jC,KAAKgzF,MAIlBhzF,KAAK8xC,OAAS9xC,KAAKgzF,MAKvB,UAGI,OAFA5rC,MAAMytB,UACN70E,KAAKgzF,MAAMne,UACJ70E,MCXR,MAAM,WAAiB,GAC1B,cACIonD,MAAM7sD,OAAOqmB,OAAO,GAAqB,GAASkzD,cAAe3pE,UAAW,CAAC,YAC7EnK,KAAK1D,KAAO,WAIZ0D,KAAKumF,UAAW,EAChB,MAAMpvE,EAAU,GAAqB,GAAS28D,cAAe3pE,UAAW,CAAC,UACzEnK,KAAKizF,MAAQjzF,KAAK4jC,MAAQ5jC,KAAK8xC,OAAS,IAAI,GAAK,CAC7CnnC,QAAS3K,KAAK2K,QACdsiD,SAAU91C,EAAQ81C,SAClBzF,SAAUrwC,EAAQqwC,WAEtBxnD,KAAKkzF,OAASlzF,KAAK0hF,OAAS1hF,KAAKizF,MAAM/9C,KACvCl1C,KAAKkzF,OAAOnxC,eAAe5qC,EAAQ1b,MAAO,GAE9C,qBACI,OAAOlB,OAAOqmB,OAAO,iBAAsB,CACvCnlB,MAAO,IAGf,UAGI,OAFA2rD,MAAMytB,UACN70E,KAAKizF,MAAMpe,UACJ70E,MCnBR,MAAMmzF,WAAqB,GAC9B,cACI/rC,MAAM,GAAqB+rC,GAAarf,cAAe3pE,UAAW,CAAC,YAAa,OAAQ,oBACxFnK,KAAK1D,KAAO,eAIZ0D,KAAKozF,iBAAmB,IAAI,GAAY,CAAEzoF,QAAS3K,KAAK2K,UAIxD3K,KAAKqzF,gBAAkB,IAAI,GAAK,CAC5B1oF,QAAS3K,KAAK2K,UAElB,MAAMwM,EAAU,GAAqBg8E,GAAarf,cAAe3pE,UAAW,CAAC,YAAa,OAAQ,mBAClGnK,KAAKszF,SAAW,IAAI,GAAW,CAC3B3oF,QAAS3K,KAAK2K,QACdsqC,OAAQ99B,EAAQ89B,OAChBzG,UAAWr3B,EAAQq3B,UACnBuhD,OAAQ,IAAM/vF,KAAK+vF,OAAO/vF,MAC1BsxF,MAAOn6E,EAAQm6E,MACfl0F,KAAM+Z,EAAQ/Z,OAElB4C,KAAKwuC,UAAYxuC,KAAKszF,SAAS9kD,UAC3BxuC,KAAKi1C,OAASj1C,KAAKszF,SAASr+C,OAChCj1C,KAAKuzF,WAAa,IAAI,GAAW,CAC7B5oF,QAAS3K,KAAK2K,QACd2mF,MAAOn6E,EAAQm6E,MACfl0F,KAAM+Z,EAAQq8E,iBAElBxzF,KAAKyzF,YAAc,IAAI,GAAS,CAC5B9oF,QAAS3K,KAAK2K,QACd0wE,MAAO,WACP5/E,MAAO0b,EAAQs8E,cAGnBzzF,KAAKwuC,UAAUqa,MAAM7oD,KAAKyzF,YAAazzF,KAAKuzF,WAAW/kD,WACvDxuC,KAAKuzF,WAAW1qC,MAAM7oD,KAAKozF,iBAAkBpzF,KAAKqzF,gBAAgBn+C,MAClEl1C,KAAKszF,SAASzqC,MAAM7oD,KAAKqzF,gBAAiBrzF,KAAK8xC,QAC/C,GAAS9xC,KAAM,CAAC,YAAa,SAAU,gBAE3C,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA0B,CAC3C6yE,YAAa,EACbD,eAAgB,WAMxB,OAAO51F,GACHoC,KAAKuzF,WAAWp4E,MAAMvd,GACtBoC,KAAKszF,SAASn4E,MAAMvd,GAKxB,MAAMA,GACFoC,KAAKuzF,WAAWn7C,KAAKx6C,GACrBoC,KAAKszF,SAASl7C,KAAKx6C,GAEvB,SAASA,GACLoC,KAAKuzF,WAAWnD,QAAQxyF,GACxBoC,KAAKszF,SAASlD,QAAQxyF,GAK1B,WACI,OAAOoC,KAAKszF,SAASl2F,KAEzB,SAASA,GACL4C,KAAKszF,SAASl2F,KAAOA,EAEzB,eACI,OAAO4C,KAAKszF,SAASjC,SAEzB,aAAaA,GACTrxF,KAAKszF,SAASjC,SAAWA,EAE7B,mBACI,OAAOrxF,KAAKszF,SAASlC,aAEzB,iBAAiBA,GACbpxF,KAAKszF,SAASlC,aAAeA,EAKjC,qBACI,OAAOpxF,KAAKuzF,WAAWn2F,KAE3B,mBAAmBA,GACf4C,KAAKuzF,WAAWn2F,KAAOA,EAE3B,YACI,OAAO4C,KAAKszF,SAAShC,MAEzB,UAAUA,GACNtxF,KAAKszF,SAAShC,MAAQA,EACtBtxF,KAAKuzF,WAAWjC,MAAQA,EAE5B,eACI,OAAOtxF,KAAKszF,SAASpC,SAEzB,aAAaA,GACTlxF,KAAKszF,SAASpC,SAAWA,EAE7B,QAAQ13F,EAAS,MACb,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,OAAO+wF,GAAiB/wF,KAAMxG,MAMtC,UASI,OARA4tD,MAAMytB,UACN70E,KAAKwuC,UAAUqmC,UACf70E,KAAKi1C,OAAO4/B,UACZ70E,KAAKyzF,YAAY5e,UACjB70E,KAAKszF,SAASze,UACd70E,KAAKuzF,WAAW1e,UAChB70E,KAAKqzF,gBAAgBxe,UACrB70E,KAAKozF,iBAAiBve,UACf70E,MCtHR,MAAM,WAAqB,GAC9B,cACIonD,MAAM,GAAqB,GAAa0sB,cAAe3pE,UAAW,CAAC,YAAa,OAAQ,oBACxFnK,KAAK1D,KAAO,eAIZ0D,KAAKqzF,gBAAkB,IAAI,GAAK,CAC5B1oF,QAAS3K,KAAK2K,QACduqC,KAAM,IAEV,MAAM/9B,EAAU,GAAqB,GAAa28D,cAAe3pE,UAAW,CAAC,YAAa,OAAQ,mBAClGnK,KAAKszF,SAAW,IAAI,GAAW,CAC3B3oF,QAAS3K,KAAK2K,QACdsqC,OAAQ99B,EAAQ89B,OAChBzG,UAAW,EACXuhD,OAAQ,IAAM/vF,KAAK+vF,OAAO/vF,MAC1BsxF,MAAOn6E,EAAQm6E,MACfl0F,KAAM+Z,EAAQ/Z,OAElB4C,KAAKi1C,OAASj1C,KAAKszF,SAASr+C,OAC5Bj1C,KAAKwuC,UAAY,IAAI,GAAO,CACxB7jC,QAAS3K,KAAK2K,QACd0wE,MAAO,YACP5/E,MAAO0b,EAAQq3B,YAEnBxuC,KAAKuzF,WAAa,IAAI,GAAW,CAC7B5oF,QAAS3K,KAAK2K,QACd2mF,MAAOn6E,EAAQm6E,MACfl0F,KAAM+Z,EAAQq8E,iBAElBxzF,KAAKyzF,YAAc,IAAI,GAAS,CAC5B9oF,QAAS3K,KAAK2K,QACd0wE,MAAO,WACP5/E,MAAO0b,EAAQs8E,cAEnBzzF,KAAK0zF,gBAAkB,IAAI,GAAS,CAChC/oF,QAAS3K,KAAK2K,QACd0wE,MAAO,WACP5/E,MAAO0b,EAAQu8E,kBAGnB1zF,KAAKwuC,UAAUj5B,QAAQvV,KAAKszF,SAAS9kD,WACrCxuC,KAAKwuC,UAAUqa,MAAM7oD,KAAKyzF,YAAazzF,KAAKuzF,WAAW/kD,WACvDxuC,KAAKwuC,UAAUqa,MAAM7oD,KAAK0zF,gBAAiB1zF,KAAKqzF,iBAChDrzF,KAAKuzF,WAAWh+E,QAAQvV,KAAKqzF,gBAAgBn+C,MAC7Cl1C,KAAKqzF,gBAAgB99E,QAAQvV,KAAKszF,SAAS9kD,WAC3CxuC,KAAKszF,SAAS/9E,QAAQvV,KAAK8xC,QAC3B9xC,KAAKi1C,OAAO1/B,QAAQvV,KAAKuzF,WAAWt+C,QACpC,GAASj1C,KAAM,CAAC,kBAAmB,YAAa,SAAU,gBAE9D,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA0B,CAC3C6yE,YAAa,EACbC,gBAAiB,EACjBF,eAAgB,WAMxB,OAAO51F,GACHoC,KAAKuzF,WAAWp4E,MAAMvd,GACtBoC,KAAKszF,SAASn4E,MAAMvd,GAKxB,MAAMA,GACFoC,KAAKuzF,WAAWn7C,KAAKx6C,GACrBoC,KAAKszF,SAASl7C,KAAKx6C,GAEvB,SAASA,GAGL,OAFAoC,KAAKuzF,WAAWnD,QAAQxyF,GACxBoC,KAAKszF,SAASlD,QAAQxyF,GACfoC,KAEX,WACI,OAAOA,KAAKszF,SAASl2F,KAEzB,SAASA,GACL4C,KAAKszF,SAASl2F,KAAOA,EAEzB,eACI,OAAO4C,KAAKszF,SAASjC,SAEzB,aAAaA,GACTrxF,KAAKszF,SAASjC,SAAWA,EAE7B,mBACI,OAAOrxF,KAAKszF,SAASlC,aAEzB,iBAAiBA,GACbpxF,KAAKszF,SAASlC,aAAeA,EAKjC,qBACI,OAAOpxF,KAAKuzF,WAAWn2F,KAE3B,mBAAmBA,GACf4C,KAAKuzF,WAAWn2F,KAAOA,EAE3B,YACI,OAAO4C,KAAKszF,SAAShC,MAEzB,UAAUA,GACNtxF,KAAKszF,SAAShC,MAAQA,EACtBtxF,KAAKuzF,WAAWjC,MAAQA,EAE5B,eACI,OAAOtxF,KAAKszF,SAASpC,SAEzB,aAAaA,GACTlxF,KAAKszF,SAASpC,SAAWA,EAE7B,QAAQ13F,EAAS,MACb,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,OAAO+wF,GAAiB/wF,KAAMxG,MAMtC,UAQI,OAPA4tD,MAAMytB,UACN70E,KAAKwuC,UAAUqmC,UACf70E,KAAKyzF,YAAY5e,UACjB70E,KAAKszF,SAASze,UACd70E,KAAKuzF,WAAW1e,UAChB70E,KAAKqzF,gBAAgBxe,UACrB70E,KAAK0zF,gBAAgB7e,UACd70E,MC5HR,MAAM2zF,WAAwB,GACjC,cACIvsC,MAAM,GAAqBusC,GAAgB7f,cAAe3pE,UAAW,CAAC,YAAa,WACnFnK,KAAK1D,KAAO,kBAIZ0D,KAAK4zF,WAAa,IAAI,GAAK,CACvBjpF,QAAS3K,KAAK2K,QACduqC,KAAM,IAKVl1C,KAAK6zF,QAAU,IAAI,GAAW,CAC1BlpF,QAAS3K,KAAK2K,QACdkoF,QAAStvD,GAAOA,GAAO,GAAK,EAAI,IAEpC,MAAMpsB,EAAU,GAAqBw8E,GAAgB7f,cAAe3pE,UAAW,CAAC,YAAa,UAC7FnK,KAAK8zF,MAAQ,IAAI,GAAO,CACpBnpF,QAAS3K,KAAK2K,QACd0wE,MAAO,aACP5/E,MAAO0b,EAAQ28E,QAEnB9zF,KAAK+zF,UAAY,IAAI,GAAW,CAC5BppF,QAAS3K,KAAK2K,QACdsqC,OAAQ99B,EAAQ89B,OAChBzG,UAAWr3B,EAAQq3B,UACnBuhD,OAAQ,IAAM/vF,KAAK+vF,OAAO/vF,MAC1BsxF,MAAOn6E,EAAQm6E,MACfl0F,KAAM,aAEV4C,KAAKwuC,UAAYxuC,KAAK+zF,UAAUvlD,UAChCxuC,KAAKi1C,OAASj1C,KAAK+zF,UAAU9+C,OAE7Bj1C,KAAK+zF,UAAUlrC,MAAM7oD,KAAK6zF,QAAS7zF,KAAK8xC,QACxC9xC,KAAK8zF,MAAMjrC,MAAM7oD,KAAK4zF,WAAY5zF,KAAK6zF,SACvC,GAAS7zF,KAAM,CAAC,QAAS,YAAa,WAE1C,qBACI,OAAOzF,OAAOqmB,OAAO,iBAAsB,CACvCq0B,OAAQ,EACRzG,UAAW,IACX8iD,MAAO,EACPl0F,KAAM,QACN02F,MAAO,KAMf,OAAOl2F,GACHA,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAK+zF,UAAU54E,MAAMvd,GACrBoC,KAAK4zF,WAAW1+C,KAAK6M,eAAe,EAAGnkD,GAK3C,MAAMA,GACFA,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAK+zF,UAAU37C,KAAKx6C,GAGpBoC,KAAK4zF,WAAW1+C,KAAK0Y,sBAAsBhwD,GAC3CoC,KAAK4zF,WAAW1+C,KAAK6M,eAAe,EAAGnkD,GAE3C,SAASA,GACLoC,KAAK+zF,UAAU3D,QAAQxyF,GACvBoC,KAAK4zF,WAAW1+C,KAAK0Y,sBAAsBhwD,GAC3CoC,KAAK4zF,WAAW1+C,KAAK6M,eAAe,EAAGnkD,GAK3C,YACI,OAAOoC,KAAK+zF,UAAUzC,MAE1B,UAAUA,GACNtxF,KAAK+zF,UAAUzC,MAAQA,EAK3B,WACI,MAAO,QAKX,eACI,MAAO,QAKX,eACI,MAAO,GAKX,mBACI,OAAO,EAOX,gBAAgBl0F,GACZ4C,KAAK+zF,UAAU32F,KAAOA,EAE1B,QAAQ5D,EAAS,MACb,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,OAAO+wF,GAAiB/wF,KAAMxG,MAMtC,UAMI,OALA4tD,MAAMytB,UACN70E,KAAK+zF,UAAUlf,UACf70E,KAAK8zF,MAAMjf,UACX70E,KAAK4zF,WAAW/e,UAChB70E,KAAK6zF,QAAQhf,UACN70E,MC7JR,MAAMg0F,WAAsB,GAC/B,cACI5sC,MAAM,GAAqB4sC,GAAclgB,cAAe3pE,UAAW,CAAC,YAAa,OAAQ,YACzFnK,KAAK1D,KAAO,gBAIZ0D,KAAKi0F,aAAe,GACpB,MAAM98E,EAAU,GAAqB68E,GAAclgB,cAAe3pE,UAAW,CAAC,YAAa,OAAQ,WACnGnK,KAAKwuC,UAAY,IAAI,GAAO,CACxB7jC,QAAS3K,KAAK2K,QACd0wE,MAAO,YACP5/E,MAAO0b,EAAQq3B,YAEnBxuC,KAAKi1C,OAAS,IAAI,GAAO,CACrBtqC,QAAS3K,KAAK2K,QACd0wE,MAAO,QACP5/E,MAAO0b,EAAQ89B,SAEnBj1C,KAAKk0F,QAAU/8E,EAAQg9E,OACvBn0F,KAAK0xE,MAAQv6D,EAAQ/Z,KACrB4C,KAAK4xF,OAASz6E,EAAQm6E,MACtBtxF,KAAKixF,UAAY95E,EAAQ+5E,SACzBlxF,KAAKmxF,cAAgBh6E,EAAQi6E,aAE7BpxF,KAAKwO,MAAQ2I,EAAQ3I,MACrB,GAASxO,KAAM,CAAC,YAAa,WAEjC,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA0B,CAC3CpS,MAAO,EACP2lF,OAAQ,GACR/2F,KAAM,aAMd,OAAOQ,GACHA,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAKo0F,UAASC,GAAOA,EAAIl5E,MAAMvd,KAKnC,MAAMA,GACFA,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAKo0F,UAASC,GAAOA,EAAIj8C,KAAKx6C,KAElC,SAASA,GACLoC,KAAKo0F,UAASC,GAAOA,EAAIjE,QAAQxyF,KAKrC,SAAS7C,GACL,IAAK,IAAItB,EAAI,EAAGA,EAAIuG,KAAKi0F,aAAaz6F,OAAQC,IAC1CsB,EAASiF,KAAKi0F,aAAax6F,GAAIA,GAMvC,WACI,OAAOuG,KAAK0xE,MAEhB,SAASt0E,GACL4C,KAAK0xE,MAAQt0E,EACb4C,KAAKo0F,UAASC,GAAOA,EAAIj3F,KAAOA,IAWpC,aACI,OAAO4C,KAAKk0F,QAEhB,WAAWC,GAEP,GADAn0F,KAAKk0F,QAAUC,EACXn0F,KAAKi0F,aAAaz6F,OAAS,EAAG,CAC9B,MAAM2hB,GAASg5E,EAAS,EAClB9iB,EAAO8iB,GAAUn0F,KAAKi0F,aAAaz6F,OAAS,GAClDwG,KAAKo0F,UAAS,CAACC,EAAK56F,IAAM46F,EAAIp/C,OAAOx5C,MAAQ0f,EAAQk2D,EAAO53E,KAUpE,YACI,OAAOuG,KAAKi0F,aAAaz6F,OAE7B,UAAUgV,GAEN,GADA,GAAYA,EAAO,GACfxO,KAAKi0F,aAAaz6F,SAAWgV,EAAO,CAEpCxO,KAAKo0F,UAASC,GAAOA,EAAIxf,YACzB70E,KAAKi0F,aAAe,GACpB,IAAK,IAAIx6F,EAAI,EAAGA,EAAI+U,EAAO/U,IAAK,CAC5B,MAAM46F,EAAM,IAAI,GAAW,CACvB1pF,QAAS3K,KAAK2K,QACd0hF,QAAS,EAAY,IAAR79E,EACbpR,KAAM4C,KAAK0xE,MACX4f,MAAOtxF,KAAK4xF,OAAUn4F,EAAI+U,EAAS,IACnC4iF,aAAcpxF,KAAKmxF,cACnBpB,OAAc,IAANt2F,EAAU,IAAMuG,KAAK+vF,OAAO/vF,MAAQ,KAE9B,WAAdA,KAAK5C,OACLi3F,EAAInD,SAAWlxF,KAAKixF,WAExBjxF,KAAKwuC,UAAUj5B,QAAQ8+E,EAAI7lD,WAC3BxuC,KAAKi1C,OAAO1/B,QAAQ8+E,EAAIp/C,QACxBo/C,EAAIp/C,OAAOusC,YAAa,EACxB6S,EAAI9+E,QAAQvV,KAAK8xC,QACjB9xC,KAAKi0F,aAAax6F,GAAK46F,EAG3Br0F,KAAKm0F,OAASn0F,KAAKk0F,QACA,YAAfl0F,KAAK0J,OACL1J,KAAKo0F,UAASC,GAAOA,EAAIl5E,WAIrC,YACI,OAAOnb,KAAK4xF,OAEhB,UAAUN,GACNtxF,KAAK4xF,OAASN,EACdtxF,KAAKo0F,UAAS,CAACC,EAAK56F,IAAM46F,EAAI/C,MAAQtxF,KAAK4xF,OAAUn4F,EAAIuG,KAAKwO,MAAS,MAE3E,eACI,OAAOxO,KAAKi0F,aAAa,GAAG5C,SAEhC,aAAaA,GACTrxF,KAAKo0F,UAASC,GAAOA,EAAIhD,SAAWA,IACpCrxF,KAAK0xE,MAAQ1xE,KAAKi0F,aAAa,GAAG72F,KAEtC,eACI,OAAO4C,KAAKi0F,aAAa,GAAG/C,SAEhC,aAAaA,GACTlxF,KAAKixF,UAAYC,EACjBlxF,KAAKmxF,cAAgBnxF,KAAKixF,UAAUz3F,OAChC03F,EAAS13F,SACTwG,KAAK0xE,MAAQ,SACb1xE,KAAKo0F,UAASC,GAAOA,EAAInD,SAAWA,KAG5C,mBACI,OAAOlxF,KAAKi0F,aAAa,GAAG7C,aAEhC,iBAAiBA,GACbpxF,KAAKmxF,cAAgBC,EACrBpxF,KAAKo0F,UAASC,GAAOA,EAAIjD,aAAeA,IACxCpxF,KAAK0xE,MAAQ1xE,KAAKi0F,aAAa,GAAG72F,KAEtC,QAAQ5D,EAAS,MACb,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,OAAO+wF,GAAiB/wF,KAAMxG,MAMtC,UAKI,OAJA4tD,MAAMytB,UACN70E,KAAKwuC,UAAUqmC,UACf70E,KAAKi1C,OAAO4/B,UACZ70E,KAAKo0F,UAASC,GAAOA,EAAIxf,YAClB70E,MC5KR,MAAMs0F,WAAsB,GAC/B,cACIltC,MAAM,GAAqBktC,GAAcxgB,cAAe3pE,UAAW,CAAC,YAAa,yBACjFnK,KAAK1D,KAAO,gBACZ0D,KAAKu0F,WAAa,MAKlBv0F,KAAKw0F,OAAS,IAAI,GAAS,CACvB7pF,QAAS3K,KAAK2K,QACdlP,MAAO,IAEX,MAAM0b,EAAU,GAAqBm9E,GAAcxgB,cAAe3pE,UAAW,CAAC,YAAa,wBAC3FnK,KAAKy0F,OAAS,IAAId,GAAgB,CAC9BhpF,QAAS3K,KAAK2K,QACd6jC,UAAWr3B,EAAQu9E,sBAGvB10F,KAAKy0F,OAAOE,YAAc,OAC1B30F,KAAK00F,oBAAsB10F,KAAKy0F,OAAOjmD,UACvCxuC,KAAKuzF,WAAa,IAAI,GAAW,CAC7B5oF,QAAS3K,KAAK2K,QACdsqC,OAAQ99B,EAAQ89B,OAChBzG,UAAWr3B,EAAQq3B,UACnBuhD,OAAQ,IAAM/vF,KAAK+vF,OAAO/vF,MAC1BsxF,MAAOn6E,EAAQm6E,QAEnBtxF,KAAKwuC,UAAYxuC,KAAKuzF,WAAW/kD,UACjCxuC,KAAKi1C,OAASj1C,KAAKuzF,WAAWt+C,OAE9Bj1C,KAAKuzF,WAAW1qC,MAAM7oD,KAAKw0F,OAAQx0F,KAAKy0F,OAAOX,OAC/C9zF,KAAKy0F,OAAOl/E,QAAQvV,KAAK8xC,QACzB,GAAS9xC,KAAM,CAAC,sBAAuB,YAAa,WAExD,qBACI,OAAOzF,OAAOqmB,OAAO,iBAAsB,CACvCq0B,OAAQ,EACRzG,UAAW,IACXkmD,oBAAqB,GACrBpD,MAAO,EACPl0F,KAAM,QAMd,OAAOQ,GACHA,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAKuzF,WAAWp4E,MAAMvd,GACtBoC,KAAKy0F,OAAOt5E,MAAMvd,GAKtB,MAAMA,GACFA,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAKuzF,WAAWn7C,KAAKx6C,GACrBoC,KAAKy0F,OAAOr8C,KAAKx6C,GAKrB,SAASA,GACLoC,KAAKuzF,WAAWnD,QAAQxyF,GACxBoC,KAAKy0F,OAAOrE,QAAQxyF,GAKxB,WACI,MAAO,MAKX,eACI,MAAO,MAKX,eACI,MAAO,GAKX,mBACI,OAAO,EAKX,YACI,OAAOoC,KAAKuzF,WAAWjC,MAE3B,UAAUA,GACNtxF,KAAKuzF,WAAWjC,MAAQA,EAE5B,QAAQ93F,EAAS,MACb,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,OAAO+wF,GAAiB/wF,KAAMxG,MAMtC,UAKI,OAJA4tD,MAAMytB,UACN70E,KAAKy0F,OAAO5f,UACZ70E,KAAKw0F,OAAO3f,UACZ70E,KAAKuzF,WAAW1e,UACT70E,MCvHf,MAAM40F,GAA0B,CAC5BC,GAAI1B,GACJ2B,IAAKd,GACLe,GAAI,GACJ9tB,WAAY,GACZ+tB,MAAOrB,GACPsB,IAAKX,IAUF,MAAM,WAAuB,GAChC,cACIltC,MAAM,GAAqB,GAAe0sB,cAAe3pE,UAAW,CAAC,YAAa,UAClFnK,KAAK1D,KAAO,iBACZ,MAAM6a,EAAU,GAAqB,GAAe28D,cAAe3pE,UAAW,CAAC,YAAa,SAC5FnK,KAAKwuC,UAAY,IAAI,GAAO,CACxB7jC,QAAS3K,KAAK2K,QACd0wE,MAAO,YACP5/E,MAAO0b,EAAQq3B,YAEnBxuC,KAAKi1C,OAAS,IAAI,GAAO,CACrBtqC,QAAS3K,KAAK2K,QACd0wE,MAAO,QACP5/E,MAAO0b,EAAQ89B,SAEnB,GAASj1C,KAAM,CAAC,YAAa,WAE7BA,KAAK0tB,IAAIvW,GAEb,qBACI,OAAO5c,OAAOqmB,OAAO,iBAA0B,iBAA4BuyE,GAAarf,cAAekgB,GAAclgB,cAAe6f,GAAgB7f,cAAewgB,GAAcxgB,eAKrL,OAAOl2E,GACHoC,KAAKgxF,YAAY71E,MAAMvd,GAK3B,MAAMA,GACFoC,KAAKgxF,YAAY54C,KAAKx6C,GAE1B,SAASA,GAEL,OADAoC,KAAKgxF,YAAYZ,QAAQxyF,GAClBoC,KAeX,WACI,IAAIk1F,EAAS,GAIb,MAHI,CAAC,KAAM,KAAM,OAAO/8C,MAAKhoB,GAAKnwB,KAAKm1F,cAAgBhlE,MACnD+kE,EAASl1F,KAAKm1F,aAEXD,EAASl1F,KAAKgxF,YAAY5zF,KAErC,SAASA,GACqB,OAAtBA,EAAKg4F,OAAO,EAAG,IACfp1F,KAAKq1F,qBAAqB,MAC1Br1F,KAAKgxF,YAAchxF,KAAKgxF,YACxBhxF,KAAKgxF,YAAY5zF,KAAOA,EAAKg4F,OAAO,IAET,OAAtBh4F,EAAKg4F,OAAO,EAAG,IACpBp1F,KAAKq1F,qBAAqB,MAC1Br1F,KAAKgxF,YAAchxF,KAAKgxF,YACxBhxF,KAAKgxF,YAAY5zF,KAAOA,EAAKg4F,OAAO,IAET,QAAtBh4F,EAAKg4F,OAAO,EAAG,IACpBp1F,KAAKq1F,qBAAqB,OAC1Br1F,KAAKgxF,YAAchxF,KAAKgxF,YACxBhxF,KAAKgxF,YAAY5zF,KAAOA,EAAKg4F,OAAO,IAEtB,QAATh4F,GACL4C,KAAKq1F,qBAAqB,OAC1Br1F,KAAKgxF,YAAchxF,KAAKgxF,aAEV,UAAT5zF,EACL4C,KAAKq1F,qBAAqB,UAG1Br1F,KAAKq1F,qBAAqB,cAC1Br1F,KAAKgxF,YAAchxF,KAAKgxF,YACxBhxF,KAAKgxF,YAAY5zF,KAAOA,GAQhC,eACI,OAAO4C,KAAKgxF,YAAYE,SAE5B,aAAaA,GACJlxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,UAAahxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,SACpFhxF,KAAKgxF,YAAYE,SAAWA,GAGpC,mBACI,OAAOlxF,KAAKgxF,YAAYI,aAE5B,iBAAiBA,GACRpxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,UAAahxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,SACpFhxF,KAAKgxF,YAAYI,aAAeA,GAGxC,IAAIl3F,GAOA,OALI62E,QAAQ/lD,IAAI9wB,EAAO,SAAWA,EAAMkD,OACpC4C,KAAK5C,KAAOlD,EAAMkD,MAGtBgqD,MAAM15B,IAAIxzB,GACH8F,KAKX,qBAAqBu1F,GACjB,GAAIA,IAAYv1F,KAAKm1F,YAAa,CAC9Bn1F,KAAKm1F,YAAcI,EACnB,MAAMC,EAAiBZ,GAAwBW,GAEzChuF,EAAMvH,KAAKuH,MACjB,GAAIvH,KAAKgxF,YAAa,CAClB,MAAMyE,EAASz1F,KAAKgxF,YACpByE,EAAOr9C,KAAK7wC,GAEZvH,KAAK2K,QAAQuQ,YAAW,IAAMu6E,EAAO5gB,WAAW70E,KAAK01F,WAEzD11F,KAAKgxF,YAAc,IAAIwE,EAAe,CAClC7qF,QAAS3K,KAAK2K,UAElB3K,KAAKwuC,UAAUj5B,QAAQvV,KAAKgxF,YAAYxiD,WACxCxuC,KAAKi1C,OAAO1/B,QAAQvV,KAAKgxF,YAAY/7C,QACrCj1C,KAAKgxF,YAAYz7E,QAAQvV,KAAK8xC,QAC9B9xC,KAAKgxF,YAAYjB,OAAS,IAAM/vF,KAAK+vF,OAAO/vF,MACzB,YAAfA,KAAK0J,OACL1J,KAAKgxF,YAAY71E,MAAM5T,IAInC,YACI,OAAOvH,KAAKgxF,YAAYM,MAE5B,UAAUA,GACNtxF,KAAKgxF,YAAYM,MAAQA,EAQ7B,iBACI,OAAOtxF,KAAKm1F,YAEhB,eAAeQ,GAEX,IAAItE,EAAW,OACe,QAA1BrxF,KAAKgxF,YAAY5zF,MAA4C,UAA1B4C,KAAKgxF,YAAY5zF,OACpDi0F,EAAWrxF,KAAKgxF,YAAY5zF,MAGlB,OAAVu4F,EACA31F,KAAK5C,KAAO,KAAOi0F,EAEJ,OAAVsE,EACL31F,KAAK5C,KAAO,KAAOi0F,EAEJ,QAAVsE,EACL31F,KAAK5C,KAAO,MAAQi0F,EAEL,eAAVsE,EACL31F,KAAK5C,KAAOi0F,EAEG,UAAVsE,EACL31F,KAAK5C,KAAO,QAEG,QAAVu4F,IACL31F,KAAK5C,KAAO,OAGpB,YAAYi3F,EAAKE,GACb,OAAOF,aAAeO,GAAwBL,GAQlD,eACI,OAAOv0F,KAAKgxF,YAAYK,SAE5B,aAAaA,GACJrxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,UACnChxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,QACvB,UAAbK,GAAqC,QAAbA,IACxBrxF,KAAKgxF,YAAYK,SAAWA,GAOpC,YACI,OAAIrxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,SAC5BhxF,KAAKgxF,YAAY8C,WAGxB,EAOR,YACI,OAAI9zF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,OAC5BhxF,KAAKgxF,YAAYxiF,WAGxB,EAGR,UAAUA,GACFxO,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,QAAU,GAASxiF,KACtDxO,KAAKgxF,YAAYxiF,MAAQA,GAOjC,aACI,OAAIxO,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,OAC5BhxF,KAAKgxF,YAAYmD,YAGxB,EAGR,WAAWA,GACHn0F,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,QAAU,GAASmD,KACtDn0F,KAAKgxF,YAAYmD,OAASA,GAOlC,qBACI,OAAIn0F,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,OAAShxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,MACxEhxF,KAAKgxF,YAAYwC,oBAGxB,EAGR,mBAAmBoC,IACV51F,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,OAAShxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,QAAU,GAAS4E,KACnG51F,KAAKgxF,YAAYwC,eAAiBoC,GAO1C,sBACI,OAAI51F,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,MAC5BhxF,KAAKgxF,YAAY0C,qBAGxB,EAOR,kBACI,OAAI1zF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,OAAShxF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,MACxEhxF,KAAKgxF,YAAYyC,iBAGxB,EASR,0BACI,OAAIzzF,KAAKs1F,YAAYt1F,KAAKgxF,YAAa,OAC5BhxF,KAAKgxF,YAAY0D,yBAGxB,EAGR,QAAQl7F,EAAS,MACb,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,OAAO+wF,GAAiB/wF,KAAMxG,MAGtC,UAKI,OAJA4tD,MAAMytB,UACN70E,KAAKi1C,OAAO4/B,UACZ70E,KAAKwuC,UAAUqmC,UACf70E,KAAKgxF,YAAYnc,UACV70E,MCpVR,SAASuN,GAAMmD,EAAKxI,EAAMooE,KAC7B,MAAMulB,EAAW,IAAI/lD,QACrB,OAAO,SAAU71C,EAAQ67F,GACrB/kB,QAAQv2E,eAAeP,EAAQ67F,EAAa,CACxCz7F,cAAc,EACdD,YAAY,EACZ4jB,IAAK,WACD,OAAO63E,EAAS73E,IAAIhe,OAExB0tB,IAAK,SAAUqoE,GACX,GAAYA,EAAUrlF,EAAKxI,GAC3B2tF,EAASnoE,IAAI1tB,KAAM+1F,OAS5B,SAASC,GAAUtlF,EAAKxI,EAAMooE,KACjC,MAAMulB,EAAW,IAAI/lD,QACrB,OAAO,SAAU71C,EAAQ67F,GACrB/kB,QAAQv2E,eAAeP,EAAQ67F,EAAa,CACxCz7F,cAAc,EACdD,YAAY,EACZ4jB,IAAK,WACD,OAAO63E,EAAS73E,IAAIhe,OAExB0tB,IAAK,SAAUqoE,GACX,GAAY/1F,KAAK29E,UAAUoY,GAAWrlF,EAAKxI,GAC3C2tF,EAASnoE,IAAI1tB,KAAM+1F,OClB5B,MAAM,WAAe,GACxB,cACI3uC,MAAM,GAAqB,GAAO0sB,cAAe3pE,UAAW,CAAC,MAAO,YACpEnK,KAAK1D,KAAO,SAIZ0D,KAAKi2F,eAAiB,IAAIrrE,IAC1B,MAAMzT,EAAU,GAAqB,GAAO28D,cAAe3pE,UAAW,CAAC,MAAO,WAC9EnK,KAAKs3E,QAAU,IAAI,GAAgB,CAC/B9Q,OAAQxmE,KAAKk2F,QAAQrrF,KAAK7K,KAAMmX,EAAQqvD,QACxC5mD,QAASzI,EAAQyI,QACjBw3D,QAASjgE,EAAQigE,QACjB76D,IAAKpF,EAAQoF,MAEjBvc,KAAKm2F,UAAYh/E,EAAQg/E,UACzBn2F,KAAK0pF,MAAQvyE,EAAQ+8B,KACrBl0C,KAAKytF,WAAat2E,EAAQi9B,UAC1Bp0C,KAAK0tF,SAAWv2E,EAAQg9B,QACxBn0C,KAAK4uD,cAAgBz3C,EAAQk9B,aAC7Br0C,KAAKwlF,OAASruE,EAAQquE,OACtBxlF,KAAK0lF,QAAUvuE,EAAQuuE,QAE3B,qBACI,OAAOnrF,OAAOqmB,OAAO,iBAAsB,CACvCu1E,WAAW,EACX3Q,OAAQ,EACRE,QAAS,EACTxxC,MAAM,EACNC,QAAS,EACTC,UAAW,EACXoyB,OAAQ,GACR5mD,QAAS,GACTy0B,aAAc,EACd+iC,SAAS,IAYjB,KAAK76D,GACD,OAAO,GAAUvc,UAAM,OAAQ,GAAQ,YAGnC,aAFMA,KAAKs3E,QAAQD,KAAK96D,GACxBvc,KAAKk2F,UACEl2F,QAMf,QAAQyjB,EAAW,IACfA,IACIzjB,KAAKm2F,WACLn2F,KAAKmb,QAMb,aAAahW,GAETnF,KAAK+vF,OAAO/vF,MAEZA,KAAKi2F,eAAetkD,OAAOxsC,GACM,IAA7BnF,KAAKi2F,eAAevzD,MAAe1iC,KAAK0vF,SACG,YAA3C1vF,KAAK2qE,OAAOuX,eAAeliF,KAAKuH,SAEhCvH,KAAK2qE,OAAO6Y,OAAOxjF,KAAKuH,OACxBvH,KAAK2qE,OAAO4W,eAAe,UAAWvhF,KAAKuH,QAYnD,MAAM3J,EAAMw3C,EAAQ13C,GAEhB,OADA0pD,MAAMjsC,MAAMvd,EAAMw3C,EAAQ13C,GACnBsC,KAKX,OAAOzC,EAAW63C,EAAQ13C,GAGlB03C,EADAp1C,KAAK0pF,MACI,GAAWt0C,EAAQp1C,KAAKytF,YAIxB,GAAWr4C,EAAQ,GAGhC,MAAMw7C,EAAiB5wF,KAAK29E,UAAUvoC,GAEhCghD,EAAe14F,EACrBA,EAAW,GAAWA,EAAUM,KAAKkK,IAAIlI,KAAKs3E,QAAQ55E,SAAWkzF,EAAgB,IACjF,IAAI3I,EAAmBjoF,KAAK29E,UAAUjgF,GAEtCuqF,GAAsCjoF,KAAK4uD,cAE3CrxD,EAAYyC,KAAK29E,UAAUpgF,GAE3B,MAAM4H,EAAS,IAAI,GAAiB,CAChCoX,IAAKvc,KAAKs3E,QACV3sE,QAAS3K,KAAK2K,QACd66E,OAAQxlF,KAAKwlF,OACbE,QAAS1lF,KAAK0lF,QACdxxC,KAAMl0C,KAAK0pF,MACXv1C,QAASn0C,KAAK0tF,SACdt5C,UAAWp0C,KAAKytF,WAChB3+B,QAAS9uD,KAAKq2F,aAAaxrF,KAAK7K,MAChCq0C,aAAcr0C,KAAK4uD,gBACpBr5C,QAAQvV,KAAK8xC,QAEX9xC,KAAK0pF,OAAU1pF,KAAK0vF,UAErB1vF,KAAK2qE,OAAO6Y,OAAOjmF,EAAY0qF,GAE/BjoF,KAAK2qE,OAAO4W,eAAe,UAAWhkF,EAAY0qF,EAAkB,CAChEqO,aAAa,KAIrBt2F,KAAKi2F,eAAe1wF,IAAIJ,GAEpBnF,KAAK0pF,OAAS,GAAQ0M,GACtBjxF,EAAOgW,MAAM5d,EAAWqzF,GAIxBzrF,EAAOgW,MAAM5d,EAAWqzF,EAAgB3I,EAAmBjoF,KAAK29E,UAAU39E,KAAK0lF,UAMvF,MAAM9nF,GACF,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GACpCoC,KAAKi2F,eAAerwF,SAAQT,GAAUA,EAAOizC,KAAKkqC,KAStD,QAAQ1kF,EAAMw3C,EAAQ13C,GAElB,OADA0pD,MAAMgpC,QAAQxyF,EAAMw3C,EAAQ13C,GACrBsC,KAEX,SAASpC,EAAMw3C,EAAQ13C,GACnBsC,KAAKswF,MAAM1yF,GACXoC,KAAKkwF,OAAOtyF,EAAMw3C,EAAQ13C,GAc9B,KAAK03C,EAAQmJ,GACT,MAAM+jC,EAAetiF,KAAK29E,UAAUp/B,GACpC,GAAiD,YAA7Cv+C,KAAK2qE,OAAOuX,eAAeI,GAA6B,CACxD,MAAMsO,EAAiB5wF,KAAK29E,UAAUvoC,GAEtCp1C,KAAKswF,MAAMhO,GAEXtiF,KAAKkwF,OAAO5N,EAAcsO,GAE9B,OAAO5wF,KAaX,cAAco0C,EAAWD,GAGrB,OAFAn0C,KAAKo0C,UAAYA,EACjBp0C,KAAKm0C,QAAUA,EACRn0C,KAKX,gBACI,OAAOA,KAAKytF,WAEhB,cAAcr5C,GACVp0C,KAAKytF,WAAar5C,EACdp0C,KAAK8N,OAAOypE,QACZ,GAAYv3E,KAAK29E,UAAUvpC,GAAY,EAAGp0C,KAAK8N,OAAOpQ,UAG1DsC,KAAKi2F,eAAerwF,SAAQT,IACxBA,EAAOivC,UAAYA,KAM3B,cACI,OAAOp0C,KAAK0tF,SAEhB,YAAYv5C,GACRn0C,KAAK0tF,SAAWv5C,EACZn0C,KAAK8N,OAAOypE,QACZ,GAAYv3E,KAAK29E,UAAUxpC,GAAU,EAAGn0C,KAAK8N,OAAOpQ,UAGxDsC,KAAKi2F,eAAerwF,SAAQT,IACxBA,EAAOgvC,QAAUA,KAMzB,aACI,OAAOn0C,KAAKs3E,QAEhB,WAAWxpE,GACP9N,KAAKs3E,QAAQ5pD,IAAI5f,GASrB,WACI,OAAO9N,KAAK0pF,MAEhB,SAASx1C,GAEL,GAAIl0C,KAAK0pF,QAAUx1C,IAGnBl0C,KAAK0pF,MAAQx1C,EAEbl0C,KAAKi2F,eAAerwF,SAAQT,IACxBA,EAAO+uC,KAAOA,KAEdA,GAAM,CAEN,MAAMu0C,EAAYzoF,KAAK2qE,OAAO0lB,aAAa,UAAWrwF,KAAKuH,OACvDkhF,GACAzoF,KAAK2qE,OAAO6Y,OAAOiF,EAAU7qF,OAazC,mBACI,OAAOoC,KAAK4uD,cAEhB,iBAAiB2nC,GACbv2F,KAAK4uD,cAAgB2nC,EACrB,MAAMhvF,EAAMvH,KAAKuH,MAEXkhF,EAAYzoF,KAAK2qE,OAAO0lB,aAAa,UAAW9oF,GAClDkhF,GAAaA,EAAU6N,cACvBt2F,KAAK2qE,OAAO6Y,OAAOiF,EAAU7qF,MAC7BoC,KAAKi2F,eAAerwF,SAAQT,GAAUA,EAAO2gF,gBAGjD9lF,KAAKi2F,eAAerwF,SAAQT,IACxBA,EAAOkvC,aAAa0N,eAAew0C,EAAMhvF,MAUjD,cACI,OAAOvH,KAAKs3E,QAAQF,QAExB,YAAYqB,GACRz4E,KAAKs3E,QAAQF,QAAUqB,EAK3B,aACI,OAAOz4E,KAAKs3E,QAAQC,OAExB,UAMI,OALAnwB,MAAMytB,UAEN70E,KAAKi2F,eAAerwF,SAAQT,GAAUA,EAAO0vE,YAC7C70E,KAAKi2F,eAAeprE,QACpB7qB,KAAKs3E,QAAQzC,UACN70E,MAGf2wE,GAAW,CACPqlB,GAAU,IACX,GAAOp7F,UAAW,cAAU,GAC/B+1E,GAAW,CACPqlB,GAAU,IACX,GAAOp7F,UAAW,eAAW,GC3TzB,MAAM,WAAiB,GAC1B,cACIwsD,MAAM,GAAqB,GAAS0sB,cAAe3pE,UAAW,CAAC,SAAU,QAAS,UAAW,aAC7FnK,KAAK1D,KAAO,WAIZ0D,KAAKw2F,KAAO,IAAI,GAAO,CACnB7rF,QAAS3K,KAAK2K,QACdlP,MAAO,IAKXuE,KAAK8xC,OAAS9xC,KAAKw2F,KAInBx2F,KAAK4jC,WAAQhlC,EACb,MAAMuY,EAAU,GAAqB,GAAS28D,cAAe3pE,UAAW,CAAC,SAAU,QAAS,UAAW,YACvGnK,KAAKu8C,OAASplC,EAAQolC,OACtBv8C,KAAKy2F,MAAQt/E,EAAQs/E,MACrBz2F,KAAK02F,QAAUv/E,EAAQu/E,QACvB12F,KAAK08C,QAAUvlC,EAAQulC,QACvB18C,KAAK22F,YAAcx/E,EAAQw/E,YAC3B32F,KAAK42F,aAAez/E,EAAQy/E,aAC5B52F,KAAK62F,WAAa1/E,EAAQ0/E,WAE9B,qBACI,OAAOt8F,OAAOqmB,OAAO,iBAA6B,CAC9C27B,OAAQ,IACRo6C,YAAa,SACbF,MAAO,GACPI,WAAY,cACZn6C,QAAS,EACTk6C,aAAc,cACdF,QAAS,KAOjB,YACI,OAAO12F,KAAKkiF,eAAeliF,KAAKuH,OAQpC,UAAU65C,EAAO01C,GACb,GAAI,GAAS11C,GACT,OAAOA,EAEN,CAED,IAAI21C,EACJ,IAAKA,KAAaC,GACd,GAAIA,GAAeD,GAAWD,KAAe11C,EACzC,OAAO21C,EAIf,OAAO31C,GASf,UAAU9kD,EAAMw6F,EAAW11C,GAEvB,GAAI,GAASA,IAAU2vB,QAAQ/lD,IAAIgsE,GAAgB51C,GAAQ,CACvD,MAAM61C,EAAWD,GAAe51C,GAC5B,GAAS61C,GACI,gBAAT36F,IACA0D,KAAK1D,GAAQ26F,EAASH,IAI1B92F,KAAK1D,GAAQ26F,MAGhB,KAAI,GAAQ71C,IAAmB,gBAAT9kD,EAIvB,MAAM,IAAIkE,MAAM,4BAA8B4gD,GAH9CphD,KAAK1D,GAAQ8kD,GA2BrB,kBACI,OAAOphD,KAAKk3F,UAAUl3F,KAAKm3F,aAAc,MAE7C,gBAAgB/1C,GACZphD,KAAKo3F,UAAU,eAAgB,KAAMh2C,GAezC,mBACI,OAAOphD,KAAKk3F,UAAUl3F,KAAKq3F,cAAe,OAE9C,iBAAiBj2C,GACbphD,KAAKo3F,UAAU,gBAAiB,MAAOh2C,GAc3C,iBACI,OAAOphD,KAAKs3F,YAEhB,eAAel2C,GACX,GAAO,CAAC,SAAU,eAAejJ,MAAKpgB,GAAKA,IAAMqpB,IAAQ,2BAA2BA,KACpFphD,KAAKs3F,YAAcl2C,EAavB,cAAcxjD,EAAM25F,EAAW,GAC3Bv3F,KAAK4qC,IAAI,gBAAiBhtC,EAAM25F,GAChC35F,EAAOoC,KAAK29E,UAAU//E,GAEtB,IAAI2+C,EADmBv8C,KAAK29E,UAAU39E,KAAKu8C,QAE3C,MAAMk6C,EAAQz2F,KAAK29E,UAAU39E,KAAKy2F,OAE5Be,EAAex3F,KAAKkiF,eAAetkF,GASzC,GARI45F,EAAe,IAKfj7C,GAF0B,EAAIi7C,IADX,EAAIj7C,IAMvBA,EAASv8C,KAAKyR,WACdzR,KAAKw2F,KAAK5oC,sBAAsBhwD,GAEhCoC,KAAKw2F,KAAKz0C,eAAew1C,EAAU35F,QAElC,GAA0B,WAAtBoC,KAAKm3F,aACVn3F,KAAKw2F,KAAK7S,aAAa4T,EAAUh7C,EAAQ3+C,QAExC,GAA0B,gBAAtBoC,KAAKm3F,aACVn3F,KAAKw2F,KAAKxQ,aAAauR,EAAUh7C,EAAQ3+C,OAExC,CACDoC,KAAKw2F,KAAK/oC,oBAAoB7vD,GAC9B,IAAIwjD,EAAQphD,KAAKm3F,aAEjB,IAAK,IAAI19F,EAAI,EAAGA,EAAI2nD,EAAM5nD,OAAQC,IAE9B,GAAI2nD,EAAM3nD,EAAI,IAAM+9F,GAAgBA,GAAgBp2C,EAAM3nD,GAAI,CAC1D2nD,EAAQphD,KAAKm3F,aAAa/6F,MAAM3C,GAEhC2nD,EAAM,GAAKo2C,EACX,MAGRx3F,KAAKw2F,KAAKjpC,oBAAoBnM,EAAOxjD,EAAM2+C,EAAQg7C,GAGvD,GAAId,GAASz2F,KAAK02F,QAAU,EAAG,CAC3B,MAAMe,EAAaF,EAAWv3F,KAAK02F,QAC7BgB,EAAa95F,EAAO2+C,EAC1Bv8C,KAAK4qC,IAAI,QAAS8sD,GACO,WAArB13F,KAAKs3F,YACLt3F,KAAKw2F,KAAKnpC,wBAAwBoqC,EAAYhB,EAAQiB,GAGtD13F,KAAKw2F,KAAKpT,+BAA+BqU,EAAYC,EAAYjB,GAGzE,OAAOz2F,KAcX,eAAepC,GACXoC,KAAK4qC,IAAI,iBAAkBhtC,GAC3BA,EAAOoC,KAAK29E,UAAU//E,GACtB,MAAM45F,EAAex3F,KAAKkiF,eAAetkF,GACzC,GAAI45F,EAAe,EAAG,CAClB,MAAM96C,EAAU18C,KAAK29E,UAAU39E,KAAK08C,SAChCA,EAAU18C,KAAKyR,WACfzR,KAAKw2F,KAAKz0C,eAAe,EAAGnkD,GAEA,WAAvBoC,KAAKq3F,cACVr3F,KAAKw2F,KAAK7S,aAAa,EAAGjnC,EAAS9+C,GAEP,gBAAvBoC,KAAKq3F,cACVr3F,KAAKw2F,KAAKxQ,aAAa,EAAGtpC,EAAS9+C,IAGnC,GAAO,GAAQoC,KAAKq3F,eAAgB,mEACpCr3F,KAAKw2F,KAAK/oC,oBAAoB7vD,GAC9BoC,KAAKw2F,KAAKjpC,oBAAoBvtD,KAAKq3F,cAAez5F,EAAM8+C,EAAS86C,IAGzE,OAAOx3F,KAUX,eAAepC,GACX,OAAOoC,KAAKw2F,KAAKtU,eAAetkF,GAcpC,qBAAqBF,EAAUE,EAAM25F,EAAW,GAI5C,OAHA35F,EAAOoC,KAAK29E,UAAU//E,GACtBoC,KAAK23F,cAAc/5F,EAAM25F,GACzBv3F,KAAK43F,eAAeh6F,EAAOoC,KAAK29E,UAAUjgF,IACnCsC,KAKX,OAAOq0E,GAEH,OADAr0E,KAAKw2F,KAAK5oC,sBAAsB5tD,KAAK29E,UAAUtJ,IACxCr0E,KAKX,QAAQ6G,EAAak+E,EAAe,EAAGC,EAAc,GAEjD,OADA,GAAchlF,KAAM6G,EAAak+E,EAAcC,GACxChlF,KAOX,QAAQxG,EAAS,MACb,OAAO,GAAUwG,UAAM,OAAQ,GAAQ,YACnC,MAAMtC,EAAWlE,EAASwG,KAAK2K,QAAQuwC,WACjCvwC,EAAU,IAAI,GAAe,EAAGjN,EAAUsC,KAAK2K,QAAQuwC,YAEvD28C,EAAgB73F,KAAK29E,UAAU39E,KAAKu8C,QAAUv8C,KAAK29E,UAAU39E,KAAKy2F,OAClEqB,EAAmBD,EAAgB73F,KAAK29E,UAAU39E,KAAK08C,SACvDq7C,EAAiC,GAAnBD,EACdE,EAAgBF,EAAmBC,EAEnCE,EAAQ,IAAIj4F,KAAK3D,YAAY9B,OAAOqmB,OAAO5gB,KAAKge,MAAO,CACzDu+B,OAAQ7+C,EAAWsC,KAAK29E,UAAU39E,KAAKu8C,QAAUy7C,EACjDvB,MAAO/4F,EAAWsC,KAAK29E,UAAU39E,KAAKy2F,OAASuB,EAC/Ct7C,QAASh/C,EAAWsC,KAAK29E,UAAU39E,KAAK08C,SAAWs7C,EACnDrtF,aAKJ,OAHAstF,EAAMzB,KAAK5R,gBACXqT,EAAMC,qBAAqBx6F,GAAYm6F,EAAgBE,GAAeC,EAAe,UAChErtF,EAAQg6C,UACf9Q,eAAe,MAGrC,UAGI,OAFAuT,MAAMytB,UACN70E,KAAKw2F,KAAK3hB,UACH70E,MAGf2wE,GAAW,CACPqlB,GAAU,IACX,GAASp7F,UAAW,cAAU,GACjC+1E,GAAW,CACPqlB,GAAU,IACX,GAASp7F,UAAW,aAAS,GAChC+1E,GAAW,CACPpjE,GAAM,EAAG,IACV,GAAS3S,UAAW,eAAW,GAClC+1E,GAAW,CACPqlB,GAAU,IACX,GAASp7F,UAAW,eAAW,GAIlC,MAAMo8F,GAAiB,MACnB,MAAMmB,EAAW,IACjB,IAAI1+F,EACA2pC,EAEJ,MAAMg1D,EAAc,GACpB,IAAK3+F,EAAI,EAAGA,EAAI0+F,EAAU1+F,IACtB2+F,EAAY3+F,GAAKuE,KAAKorC,IAAK3vC,EAAI,KAAmBuE,KAAKgoC,GAAK,IAGhE,MAAMqyD,EAAc,GAEpB,IAAK5+F,EAAI,EAAGA,EAAI0+F,IAAc1+F,IAAK,CAC/B2pC,EAAK3pC,EAAI,IACT,MAAM6+F,EAAWt6F,KAAKorC,IAAIhG,GAAe,EAAVplC,KAAKgoC,IAHhB,IAG4ChoC,KAAKgoC,GAAK,GAAK,EAC/EqyD,EAAY5+F,GAAK6+F,EAAW,GAAS,IAAJl1D,EAErCi1D,EAAYF,KAAgB,EAE5B,MAAMI,EAAc,GAEpB,IAAK9+F,EAAI,EAAGA,EAAI0+F,EAAU1+F,IACtB8+F,EAAY9+F,GAAKuE,KAAK4B,KAAMnG,EAAI,IAFtB,KAKd,MAAM++F,EAAY,GAClB,IAAK/+F,EAAI,EAAGA,EAAI0+F,EAAU1+F,IACtB2pC,EAAI3pC,EAAI,IACR++F,EAAU/+F,GAAK,IAAO,EAAIuE,KAAKmrC,IAAInrC,KAAKgoC,GAAK5C,IAGjD,MAAMq1D,EAAc,GACpB,IAAKh/F,EAAI,EAAGA,EAAI0+F,EAAU1+F,IAAK,CAC3B2pC,EAAI3pC,EAAI,IACR,MAAMujF,EAAwB,EAAjBh/E,KAAKqB,IAAI+jC,EAAG,GAAS,GAC5BG,EAAMvlC,KAAKmrC,IAAI6zC,EAAOh/E,KAAKgoC,GAAK,EAAI5C,GAC1Cq1D,EAAYh/F,GAAKuE,KAAKyc,IAAI8oB,GAAO,EAAIH,IAKzC,SAASs1D,EAAYt3C,GACjB,MAAMu3C,EAAM,IAAIh/F,MAAMynD,EAAM5nD,QAC5B,IAAK,IAAI0pC,EAAI,EAAGA,EAAIke,EAAM5nD,OAAQ0pC,IAC9By1D,EAAIz1D,GAAK,EAAIke,EAAMle,GAEvB,OAAOy1D,EAWX,MAAO,CACHC,OAAQ,CACJC,GAAIH,EAAYD,GAChBK,IAAKL,GAETM,OAAQ,CACJF,GAAIT,EACJU,KAbc13C,EAaIg3C,EAZfh3C,EAAMhlD,MAAM,GAAGg7E,YActB4hB,YAAa,cACbC,OAAQ,SACRC,OAAQ,CACJL,GAAIR,EACJS,IAAKJ,EAAYL,IAErBc,KAAM,CACFN,GAAIL,EACJM,IAAKJ,EAAYF,IAErBnnB,KAAM,CACFwnB,GAAIN,EACJO,IAAKJ,EAAYH,KA3BzB,IAAsBn3C,GAnDH,GC5XhB,MAAM,WAAmB,GAC5B,cACIgG,MAAM,GAAqB,GAAW0sB,cAAe3pE,YAKrDnK,KAAK2tF,iBAAmB,GAIxB3tF,KAAK0vF,SAAU,EACf1vF,KAAKo5F,wBAA0Bp5F,KAAK23F,cACpC33F,KAAKq5F,yBAA2Br5F,KAAK43F,eACrC,MAAMzgF,EAAU,GAAqB,GAAW28D,cAAe3pE,WAC/DnK,KAAK8vF,QAAU9vF,KAAK8xC,OAAS,IAAI,GAAO,CACpCnnC,QAAS3K,KAAK2K,QACd0hF,OAAQl1E,EAAQk1E,SAEpBrsF,KAAKqsF,OAASrsF,KAAK8vF,QAAQzD,OAC3B,GAASrsF,KAAM,UAEnB,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA6B,CAC9CyrE,OAAQ,IAiBhB,OAKI,OAJIrsF,KAAKs5F,eACLt5F,KAAKu5F,YAAY,gBAAiB,GAClCv5F,KAAKu5F,YAAY,iBAAkB,IAEhCv5F,KAKX,aACI,IAAIw5F,GAAU,EAKd,OAJKx5F,KAAK0vF,UACN1vF,KAAK0vF,SAAU,EACf8J,GAAU,GAEPA,EAOX,YAAY98E,EAAQ+8E,GAChB,MAAMC,EAAiB15F,KAAK,aAAe0c,GAAU1c,KAAK0c,GAC1D1c,KAAK0c,GAAU,IAAIrI,KACf,MAAMzW,EAAOyW,EAAKolF,GACZ1/D,EAAK/5B,KAAK2K,QAAQ4yE,UAAUh0E,UAAUitE,IACxCniE,EAAKolF,GAAgBjjB,EACrBkjB,EAAehlF,MAAM1U,KAAMqU,KAC5BzW,GACHoC,KAAK2tF,iBAAiBnyF,KAAKu+B,IAMnC,SAQI,OAPA/5B,KAAK2tF,iBAAiB/nF,SAAQm0B,GAAM/5B,KAAK2K,QAAQ4yE,UAAU1yD,MAAMkP,KACjE/5B,KAAK2tF,iBAAmB,GACpB3tF,KAAK0vF,UACL1vF,KAAK0vF,SAAU,EACf1vF,KAAK23F,cAAgB33F,KAAKo5F,wBAC1Bp5F,KAAK43F,eAAiB53F,KAAKq5F,0BAExBr5F,KAcX,qBAAqBo/E,EAAM1hF,EAAUE,EAAM25F,GACvC,MAAMjV,EAAetiF,KAAK29E,UAAU//E,GAC9BqqF,EAAmBjoF,KAAK29E,UAAUjgF,GAGxC,OAFAsC,KAAK23F,cAAcvY,EAAMkD,EAAciV,GACvCv3F,KAAK43F,eAAetV,EAAe2F,GAC5BjoF,KAMX,UAKI,OAJAonD,MAAMytB,UACN70E,KAAK8vF,QAAQjb,UACb70E,KAAKywF,SACLzwF,KAAK2tF,iBAAmB,GACjB3tF,MClHR,MAAM,WAAmB,GAC5B,cACIonD,MAAM,GAAqB,GAAW0sB,cAAe3pE,YACrD,MAAMgN,EAAU,GAAqB,GAAW28D,cAAe3pE,WAC/DnK,KAAK25F,WAAaxiF,EAAQwiF,WAC1B35F,KAAK45F,UAAYziF,EAAQyiF,UAE7B,qBACI,OAAOr/F,OAAOqmB,OAAO,iBAA0B,CAC3Cq0B,OAAQ,EACR2kD,UAAW,GACXD,WAAY,IAapB,cAAcva,EAAMxhF,EAAM25F,EAAW,GACjCv3F,KAAK4qC,IAAI,gBAAiBw0C,EAAMxhF,EAAM25F,GACtC,MAAMpa,EAAUn9E,KAAK29E,UAAU//E,GAG/B,OAFAoC,KAAK65F,uBAAuB1c,EAASoa,GACrCv3F,KAAK85F,QAAQ1a,EAAMjC,GACZn9E,KAWX,eAAepC,GACXoC,KAAK4qC,IAAI,iBAAkBhtC,GAC3B,MAAMu/E,EAAUn9E,KAAK29E,UAAU//E,GAE/B,OADAoC,KAAK+5F,wBAAwB5c,GACtBn9E,KAaX,QAAQo/E,EAAMxhF,GACV,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAC9Bo8F,EAAoB5a,aAAgBF,GAAiBE,EAAKvB,cAAgBuB,EAChF,GAAIp/E,KAAK25F,WAAa,GAAK35F,KAAKi6F,eAAe3X,GAAgB,IAAM,CACjE,MAAM4X,EAAWl6F,KAAK29E,UAAU39E,KAAK25F,YACrC35F,KAAKwuC,UAAUk1C,kBAAkBsW,EAAmBE,EAAU5X,QAG9DtiF,KAAKwuC,UAAUuT,eAAei4C,EAAmB1X,GAErD,OAAOtiF,MAGf2wE,GAAW,CACPqlB,GAAU,IACX,GAAWp7F,UAAW,kBAAc,GCxDhC,MAAM,WAA0B,GACnC,cACIwsD,MAAM,GAAqB,GAAkB0sB,cAAe3pE,UAAW,CAAC,SAAU,QAAS,UAAW,aACtGnK,KAAK1D,KAAO,oBACZ0D,KAAKmlF,UAAY,IAAI,GAAK,CACtBx6E,QAAS3K,KAAK2K,QACduqC,KAAM,IAEVl1C,KAAK8xC,OAAS9xC,KAAKmlF,UACnBnlF,KAAK4jC,MAAQ5jC,KAAKmlF,UAClBnlF,KAAKw2F,KAAKjhF,QAAQvV,KAAKmlF,UAAUjwC,MACjCl1C,KAAK8xC,OAAS9xC,KAAKmlF,UACnBnlF,KAAK4jC,MAAQ5jC,KAAKmlF,UAKtB,UAGI,OAFA/9B,MAAMytB,UACN70E,KAAKmlF,UAAUtQ,UACR70E,MCzBR,MAAM,WAAc,GACvB,cACIonD,MAAM,GAAqB,GAAM0sB,cAAe3pE,YAChDnK,KAAK1D,KAAO,QACZ,MAAM6a,EAAU,GAAqB,GAAM28D,cAAe3pE,WAC1DnK,KAAKinE,WAAa,IAAI,GAAe1sE,OAAOqmB,OAAO,CAC/CjW,QAAS3K,KAAK2K,QACdsqC,OAAQ99B,EAAQ89B,OAChB86C,OAAQ,IAAM/vF,KAAK45F,UAAU55F,OAC9BmX,EAAQ8vD,aACXjnE,KAAKwuC,UAAYxuC,KAAKinE,WAAWz4B,UACjCxuC,KAAKi1C,OAASj1C,KAAKinE,WAAWhyB,OAC9Bj1C,KAAKm6F,SAAW,IAAI,GAAkB5/F,OAAOqmB,OAAO,CAChDjW,QAAS3K,KAAK2K,SACfwM,EAAQgjF,WAEXn6F,KAAKinE,WAAWpe,MAAM7oD,KAAKm6F,SAAUn6F,KAAK8xC,QAC1C,GAAS9xC,KAAM,CAAC,aAAc,YAAa,SAAU,aAEzD,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA0B,CAC3Cu5E,SAAU5/F,OAAOqmB,OAAO,GAAe,iBAAwBrmB,OAAOugB,KAAK,mBAA+B,CACtGyhC,OAAQ,KACRk6C,MAAO,GACP/5C,QAAS,EACTg6C,QAAS,KAEbzvB,WAAY1sE,OAAOqmB,OAAO,GAAe,iBAA8B,IAAIrmB,OAAOugB,KAAK,kBAAuB,YAAa,WAAY,CACnI1d,KAAM,eASlB,uBAAuBQ,EAAM25F,GAKzB,GAHAv3F,KAAKm6F,SAASxC,cAAc/5F,EAAM25F,GAClCv3F,KAAKinE,WAAW9rD,MAAMvd,GAEQ,IAA1BoC,KAAKm6F,SAASzD,QAAe,CAC7B,MAAM0D,EAAiBp6F,KAAK29E,UAAU39E,KAAKm6F,SAAS59C,QAC9C89C,EAAgBr6F,KAAK29E,UAAU39E,KAAKm6F,SAAS1D,OACnDz2F,KAAKinE,WAAW7uB,KAAKx6C,EAAOw8F,EAAiBC,IAOrD,wBAAwBz8F,GACpBoC,KAAKm6F,SAASvC,eAAeh6F,GAC7BoC,KAAKinE,WAAW7uB,KAAKx6C,EAAOoC,KAAK29E,UAAU39E,KAAKm6F,SAASz9C,UAE7D,eAAe9+C,GAEX,OADAA,EAAOoC,KAAK29E,UAAU//E,GACfoC,KAAKm6F,SAASjY,eAAetkF,GAKxC,UAII,OAHAwpD,MAAMytB,UACN70E,KAAKinE,WAAW4N,UAChB70E,KAAKm6F,SAAStlB,UACP70E,MCnER,MAAMs6F,WAAsB,GAC/B,cACIlzC,MAAM,GAAqBkzC,GAAcxmB,cAAe3pE,YACxDnK,KAAK1D,KAAO,gBAIZ0D,KAAK25F,WAAa,EAClB,MAAMxiF,EAAU,GAAqBmjF,GAAcxmB,cAAe3pE,WAClEnK,KAAKu6F,WAAapjF,EAAQojF,WAC1Bv6F,KAAKw6F,QAAUrjF,EAAQqjF,QACvB,GAASx6F,KAAM,CAAC,aAAc,aAElC,qBACI,OAAO,GAAU,iBAA0B,iBAAqB,CAC5Dm6F,SAAU,CACN59C,OAAQ,KACRo6C,YAAa,cACbF,MAAO,GACP/5C,QAAS,IACTg6C,QAAS,KAEb8D,QAAS,GACTvzB,WAAY,CACR7pE,KAAM,QAEVm9F,WAAY,MAGpB,QAAQnb,EAAMxhF,GACV,MAAMu/E,EAAUn9E,KAAK29E,UAAU//E,GACzB68F,EAAQz6F,KAAK69E,YAAYuB,aAAgBF,GAAiBE,EAAKvB,cAAgBuB,GAC/Esb,EAAUD,EAAQz6F,KAAKw6F,QAG7B,OAFAx6F,KAAKinE,WAAWz4B,UAAUuT,eAAe24C,EAASvd,GAClDn9E,KAAKinE,WAAWz4B,UAAU4e,6BAA6BqtC,EAAOtd,EAAUn9E,KAAK29E,UAAU39E,KAAKu6F,aACrFv6F,KAEX,UAEI,OADAonD,MAAMytB,UACC70E,MAGf2wE,GAAW,CACPpjE,GAAM,IACP+sF,GAAc1/F,UAAW,eAAW,GACvC+1E,GAAW,CACPqlB,GAAU,IACXsE,GAAc1/F,UAAW,kBAAc,GChE1C,MAAM+/F,GAAiB,IAAI/vE,IAIpB,SAASgwE,GAAaC,GACzBF,GAAep1F,IAAIs1F,GAKhB,SAASC,GAAkBx+F,EAAMy+F,GACpC,MAAMC,EAA6B,sBAAsB1+F,OAAUy+F,KACnEJ,GAAep1F,IAAIy1F,GCiBvBJ,GA/BmD,2vBCqEnDA,GApEgD,kmEC4ChDA,GA7CmC,ynCCkCnCE,GAhC2B,uBACiB,y0BCiBrC,MAAMG,WAAkB,GAC3B,cACI7zC,MAAM,GAAqB6zC,GAAUnnB,cAAe3pE,UAAW,CAAC,QAAS,aACzEnK,KAAK1D,KAAO,YAIZ0D,KAAKk7F,iBAAmB,GAIxBl7F,KAAKm7F,cAAgB,GAIrBn7F,KAAKo7F,QAAU,GAIfp7F,KAAKq7F,YAAc,EAInBr7F,KAAKs7F,qBAAuB,EAC5B,MAAMnkF,EAAU,GAAqB8jF,GAAUnnB,cAAe3pE,UAAW,CAAC,QAAS,YAEnF,IAAQ,GAASgN,EAAQokF,OAAQ,oEACjC,MAAM3oB,EAAWz7D,EAAQokF,MAAMznB,cAC/B9zE,KAAKmX,QAAU5c,OAAOqmB,OAAOgyD,EAAUz7D,EAAQA,SAC/CnX,KAAKu7F,MAAQpkF,EAAQokF,MACrBv7F,KAAKw7F,aAAerkF,EAAQqkF,aAE5Bx7F,KAAKy7F,YAAcz7F,KAAK07F,yBAExB,MAAMh9F,EAAQsB,KAAKo7F,QAAQnxF,QAAQjK,KAAKy7F,aACxCz7F,KAAKo7F,QAAQp6F,OAAOtC,EAAO,GAE3BsB,KAAKq7F,WAAar7F,KAAK2K,QAAQuwB,YAAYl7B,KAAK27F,gBAAgB9wF,KAAK7K,MAAO,GAEhF,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA0B,CAC3C46E,aAAc,GACdrkF,QAAS,GACTokF,MAAO,KAMf,mBACI,OAAOv7F,KAAKm7F,cAAc3hG,OAM9B,oBAAoB+hG,GAChBv7F,KAAKk7F,iBAAiB1/F,KAAK+/F,GAE3B,MAAMK,EAAmB57F,KAAKm7F,cAAc96F,WAAWxD,GAAMA,EAAE0+F,QAAUA,IACzEv7F,KAAKm7F,cAAcn6F,OAAO46F,EAAkB,GAOhD,yBAEI,GAAI57F,KAAKk7F,iBAAiB1hG,OACtB,OAAOwG,KAAKk7F,iBAAiBjmF,QAE5B,GAAIjV,KAAKo7F,QAAQ5hG,OAASwG,KAAKw7F,aAAc,CAE9C,MAAMD,EAAQ,IAAIv7F,KAAKu7F,MAAMhhG,OAAOqmB,OAAO5gB,KAAKmX,QAAS,CACrDxM,QAAS3K,KAAK2K,QACdivF,UAAW55F,KAAK67F,oBAAoBhxF,KAAK7K,SAI7C,OAFAu7F,EAAMhmF,QAAQvV,KAAK8xC,QACnB9xC,KAAKo7F,QAAQ5/F,KAAK+/F,GACXA,EAGP,GAAK,yCAMb,kBAEI,GADAv7F,KAAKs7F,qBAAuBt9F,KAAKkK,IAAgC,IAA5BlI,KAAKs7F,qBAA6Bt7F,KAAK87F,cACxE97F,KAAKk7F,iBAAiB1hG,QAAUwG,KAAKo7F,QAAQ5hG,OAASwE,KAAK4B,KAAKI,KAAKs7F,qBAAuB,GAAI,CAEhG,MAAMS,EAAa/7F,KAAKk7F,iBAAiBjmF,QACnCvW,EAAQsB,KAAKo7F,QAAQnxF,QAAQ8xF,GACnC/7F,KAAKo7F,QAAQp6F,OAAOtC,EAAO,GACtBsB,KAAK2K,QAAQuuC,WACd6iD,EAAWlnB,WAOvB,eAAemnB,EAAOp+F,EAAM25F,GACxByE,EAAMp2F,SAAQw5E,IACV,MAAM6c,EAAW,IAAIhS,GAAUjqF,KAAK2K,QAASy0E,GAAMtB,SAC7Cyd,EAAQv7F,KAAK07F,yBACfH,IACAA,EAAM5D,cAAcvY,EAAMxhF,EAAM25F,GAChCv3F,KAAKm7F,cAAc3/F,KAAK,CACpB2/E,KAAM8gB,EAAUV,QAAOW,UAAU,IAErCl8F,KAAK4qC,IAAI,gBAAiBw0C,EAAMxhF,OAO5C,gBAAgBo+F,EAAOp+F,GACnBo+F,EAAMp2F,SAAQw5E,IACV,MAAM6c,EAAW,IAAIhS,GAAUjqF,KAAK2K,QAASy0E,GAAMtB,SAC7Cj8C,EAAQ7hC,KAAKm7F,cAAc1rF,MAAK,EAAG0rE,OAAM+gB,cAAe/gB,IAAS8gB,IAAaC,IAChFr6D,IAEAA,EAAM05D,MAAM3D,eAAeh6F,GAE3BikC,EAAMq6D,UAAW,EACjBl8F,KAAK4qC,IAAI,iBAAkBw0C,EAAMxhF,OAQ7C,eAAeR,EAAM4+F,EAAOp+F,EAAM25F,GAC9B,IAAQv3F,KAAKm8F,SAAU,8BAEnBv+F,GAAQoC,KAAKuH,MAEA,WAATnK,EACA4C,KAAKo8F,eAAeJ,EAAOp+F,EAAM25F,GAGjCv3F,KAAKq8F,gBAAgBL,EAAOp+F,GAKhCoC,KAAK2K,QAAQuQ,YAAW,KACpBlb,KAAKs8F,eAAel/F,EAAM4+F,EAAOp+F,EAAM25F,KACxC35F,EAAOoC,KAAKuH,OAavB,cAAcy0F,EAAOp+F,EAAM25F,GAClB59F,MAAMC,QAAQoiG,KACfA,EAAQ,CAACA,IAEb,MAAM1Z,EAAetiF,KAAK29E,UAAU//E,GAEpC,OADAoC,KAAKs8F,eAAe,SAAUN,EAAO1Z,EAAciV,GAC5Cv3F,KAeX,eAAeg8F,EAAOp+F,GACbjE,MAAMC,QAAQoiG,KACfA,EAAQ,CAACA,IAEb,MAAM1Z,EAAetiF,KAAK29E,UAAU//E,GAEpC,OADAoC,KAAKs8F,eAAe,UAAWN,EAAO1Z,GAC/BtiF,KAaX,qBAAqBg8F,EAAOt+F,EAAUE,EAAM25F,GACxC,MAAMjV,EAAetiF,KAAK29E,UAAU//E,GAEpC,GADAoC,KAAK23F,cAAcqE,EAAO1Z,EAAciV,GACpC,GAAQ75F,GAAW,CACnB,GAAO,GAAQs+F,GAAQ,gEACvBA,EAAQA,EACR,IAAK,IAAIviG,EAAI,EAAGA,EAAIuiG,EAAMxiG,OAAQC,IAAK,CACnC,MAAMq3E,EAAIpzE,EAASM,KAAK0S,IAAIjX,EAAGiE,EAASlE,OAAS,IAC3C+iG,EAAkBv8F,KAAK29E,UAAU7M,GACvC,GAAOyrB,EAAkB,EAAG,uCAC5Bv8F,KAAK43F,eAAeoE,EAAMviG,GAAI6oF,EAAeia,QAGhD,CACD,MAAMA,EAAkBv8F,KAAK29E,UAAUjgF,GACvC,GAAO6+F,EAAkB,EAAG,uCAC5Bv8F,KAAK43F,eAAeoE,EAAO1Z,EAAeia,GAE9C,OAAOv8F,KAEX,OAKI,OAJIA,KAAKs5F,eACLt5F,KAAKu5F,YAAY,gBAAiB,GAClCv5F,KAAKu5F,YAAY,iBAAkB,IAEhCv5F,KAcX,IAAImX,GAEA,MAAMqlF,EAAmB,GAAerlF,EAAS,CAAC,YAAa,YAK/D,OAHAnX,KAAKmX,QAAU,GAAUnX,KAAKmX,QAASqlF,GACvCx8F,KAAKo7F,QAAQx1F,SAAQ21F,GAASA,EAAM7tE,IAAI8uE,KACxCx8F,KAAKy7F,YAAY/tE,IAAI8uE,GACdx8F,KAEX,MACI,OAAOA,KAAKy7F,YAAYz9E,MAM5B,WAAWpgB,GACP,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAIpC,OAHAoC,KAAKm7F,cAAcv1F,SAAQ,EAAG21F,YAC1BA,EAAM3D,eAAetV,MAElBtiF,KAEX,UAOI,OANAonD,MAAMytB,UACN70E,KAAKy7F,YAAY5mB,UACjB70E,KAAKo7F,QAAQx1F,SAAQ2sF,GAAKA,EAAE1d,YAC5B70E,KAAKm7F,cAAgB,GACrBn7F,KAAKk7F,iBAAmB,GACxBl7F,KAAK2K,QAAQwwB,cAAcn7B,KAAKq7F,YACzBr7F,MCxQR,MAAMy8F,WAAgB,GACzB,cACIr1C,MAAM,GAAqBq1C,GAAQ3oB,cAAe3pE,UAAW,CAAC,OAAQ,SAAU,WAAY,SAC5FnK,KAAK1D,KAAO,UAIZ0D,KAAKi2F,eAAiB,IAAI1oE,IAC1B,MAAMpW,EAAU,GAAqBslF,GAAQ3oB,cAAe3pE,UAAW,CAAC,OAAQ,SAAU,WAAY,QAChGuyF,EAAS,GACfniG,OAAOugB,KAAK3D,EAAQ4yE,MAAMnkF,SAASw5E,IAC/B,MAAMG,EAAazD,SAASsD,EAAM,IAGlC,GAFA,GAAO3O,GAAO2O,IACN,GAASG,IAAejlE,SAASilE,GAAc,4CAA4CH,KAC/F3O,GAAO2O,GAAO,CAEd,MAAMud,EAAM,IAAIzd,GAAel/E,KAAK2K,QAASy0E,GAAMtB,SACnD4e,EAAOC,GAAOxlF,EAAQ4yE,KAAK3K,QAEtB,GAASG,IAAejlE,SAASilE,KAEtCmd,EAAOnd,GAAcpoE,EAAQ4yE,KAAKxK,OAG1Cv/E,KAAK6pF,SAAW,IAAI,GAAiB,CACjCE,KAAM2S,EACNl2B,OAAQrvD,EAAQqvD,OAChBuS,QAAS5hE,EAAQ4hE,QACjBn5D,QAASzI,EAAQyI,UAErB5f,KAAKu8C,OAASplC,EAAQolC,OACtBv8C,KAAK08C,QAAUvlC,EAAQulC,QACvB18C,KAAKohD,MAAQjqC,EAAQiqC,MAEjBphD,KAAK6pF,SAAStS,QAEdtxE,QAAQC,UAAU+U,KAAK9D,EAAQqvD,QAGvC,qBACI,OAAOjsE,OAAOqmB,OAAO,iBAA0B,CAC3C27B,OAAQ,EACRw8B,QAAS,GACT33B,MAAO,cACPolB,OAAQ,GACR5mD,QAAS,GACT88B,QAAS,GACTqtC,KAAM,KAMd,aAAa5O,GAGT,IAAIluE,EAAW,EACf,KAAOA,EAFc,IAEW,CAE5B,GAAIjN,KAAK6pF,SAAS7+D,IAAImwD,EAAOluE,GACzB,OAAQA,EAEP,GAAIjN,KAAK6pF,SAAS7+D,IAAImwD,EAAOluE,GAC9B,OAAOA,EAEXA,IAEJ,MAAM,IAAIzM,MAAM,kCAAkC26E,KAOtD,cAAc6gB,EAAOp+F,EAAM25F,EAAW,GAwClC,OAvCAv3F,KAAK4qC,IAAI,gBAAiBoxD,EAAOp+F,EAAM25F,GAClC59F,MAAMC,QAAQoiG,KACfA,EAAQ,CAACA,IAEbA,EAAMp2F,SAAQw5E,IACV,MAAMwd,EAAY3hB,GAAM,IAAIiE,GAAel/E,KAAK2K,QAASy0E,GAAMvB,eACzD1C,EAAOn9E,KAAK+sC,MAAM6xD,GAClBC,EAAYD,EAAYzhB,EAExB2hB,EAAa98F,KAAK+8F,aAAa5hB,GAC/B6hB,EAAc7hB,EAAO2hB,EACrBhvF,EAAS9N,KAAK6pF,SAAS7rE,IAAIg/E,GAC3B3oD,EAAe,GAAyByoD,EAAaD,GAErD13F,EAAS,IAAI,GAAiB,CAChCoX,IAAKzO,EACLnD,QAAS3K,KAAK2K,QACdy2C,MAAOphD,KAAKohD,MACZokC,OAAQxlF,KAAKu8C,OACbmpC,QAAS1lF,KAAK08C,QACdrI,iBACD9+B,QAAQvV,KAAK8xC,QAChB3sC,EAAOgW,MAAMvd,EAAM,EAAGkQ,EAAOpQ,SAAW22C,EAAckjD,GAEjD,GAAQv3F,KAAKi2F,eAAej4E,IAAIm9D,KACjCn7E,KAAKi2F,eAAevoE,IAAIytD,EAAM,IAElCn7E,KAAKi2F,eAAej4E,IAAIm9D,GAAM3/E,KAAK2J,GAEnCA,EAAO2pD,QAAU,KACb,GAAI9uD,KAAKi2F,gBAAkBj2F,KAAKi2F,eAAejrE,IAAImwD,GAAO,CACtD,MAAM3kE,EAAUxW,KAAKi2F,eAAej4E,IAAIm9D,GAClCz8E,EAAQ8X,EAAQvM,QAAQ9E,IACf,IAAXzG,GACA8X,EAAQxV,OAAOtC,EAAO,QAK/BsB,KAMX,eAAeg8F,EAAOp+F,GAiBlB,OAhBAoC,KAAK4qC,IAAI,iBAAkBoxD,EAAOp+F,GAC7BjE,MAAMC,QAAQoiG,KACfA,EAAQ,CAACA,IAEbA,EAAMp2F,SAAQw5E,IACV,MAAMjE,EAAO,IAAI+D,GAAel/E,KAAK2K,QAASy0E,GAAMtB,SAEpD,GAAI99E,KAAKi2F,eAAejrE,IAAImwD,IAASn7E,KAAKi2F,eAAej4E,IAAIm9D,GAAM3hF,OAAQ,CACvE,MAAMgd,EAAUxW,KAAKi2F,eAAej4E,IAAIm9D,GACxCv9E,EAAOoC,KAAK29E,UAAU//E,GACtB4Y,EAAQ5Q,SAAQT,IACZA,EAAOizC,KAAKx6C,MAEhBoC,KAAKi2F,eAAevoE,IAAIytD,EAAM,QAG/Bn7E,KAMX,WAAWpC,GACP,MAAM0kF,EAAetiF,KAAK29E,UAAU//E,GAOpC,OANAoC,KAAKi2F,eAAerwF,SAAQ4Q,IACxB,KAAOA,EAAQhd,QACIgd,EAAQvB,QAChBmjC,KAAKkqC,MAGbtiF,KAEX,OAKI,OAJIA,KAAKs5F,eACLt5F,KAAKu5F,YAAY,gBAAiB,GAClCv5F,KAAKu5F,YAAY,iBAAkB,IAEhCv5F,KASX,qBAAqBg8F,EAAOt+F,EAAUE,EAAM25F,EAAW,GACnD,MAAMjV,EAAetiF,KAAK29E,UAAU//E,GAYpC,OAXAoC,KAAK23F,cAAcqE,EAAO1Z,EAAciV,GACpC,GAAQ75F,IACR,GAAO,GAAQs+F,GAAQ,iDACvBA,EAAMp2F,SAAQ,CAACw5E,EAAM1gF,KACjB,MAAMoyE,EAAIpzE,EAASM,KAAK0S,IAAIhS,EAAOhB,EAASlE,OAAS,IACrDwG,KAAK43F,eAAexY,EAAMkD,EAAetiF,KAAK29E,UAAU7M,QAI5D9wE,KAAK43F,eAAeoE,EAAO1Z,EAAetiF,KAAK29E,UAAUjgF,IAEtDsC,KAQX,IAAIo/E,EAAM7iE,EAAKkH,GAEX,GADA,GAAOgtD,GAAO2O,IAAS9kE,SAAS8kE,GAAO,iCAAiCA,KACpE3O,GAAO2O,GAAO,CAEd,MAAMud,EAAM,IAAIzd,GAAel/E,KAAK2K,QAASy0E,GAAMtB,SACnD99E,KAAK6pF,SAAStkF,IAAIo3F,EAAKpgF,EAAKkH,QAI5BzjB,KAAK6pF,SAAStkF,IAAI65E,EAAM7iE,EAAKkH,GAEjC,OAAOzjB,KAKX,aACI,OAAOA,KAAK6pF,SAAStS,OAKzB,UAOI,OANAnwB,MAAMytB,UACN70E,KAAK6pF,SAAShV,UACd70E,KAAKi2F,eAAerwF,SAAQ4Q,IACxBA,EAAQ5Q,SAAQT,GAAUA,EAAO0vE,eAErC70E,KAAKi2F,eAAeprE,QACb7qB,MAGf2wE,GAAW,CACPqlB,GAAU,IACXyG,GAAQ7hG,UAAW,cAAU,GAChC+1E,GAAW,CACPqlB,GAAU,IACXyG,GAAQ7hG,UAAW,eAAW,GClP1B,MAAM,WAAe,GACxB,cACIwsD,MAAM7sD,OAAOqmB,OAAO,GAAqB,GAAOkzD,cAAe3pE,UAAW,CAAC,UAC3EnK,KAAK1D,KAAO,SAIZ0D,KAAKi9F,QAAUj9F,KAAK2K,QAAQ61D,qBAC5BxgE,KAAK4jC,MAAQ5jC,KAAKi9F,QAClBj9F,KAAK8xC,OAAS9xC,KAAKi9F,QACnB,MAAM9lF,EAAU,GAAqB,GAAO28D,cAAe3pE,UAAW,CAAC,QACvEnK,KAAKw1C,IAAM,IAAI,GAAM,CACjB7qC,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAKi9F,QAAQznD,IACpB/5C,MAAO0b,EAAQq+B,IACfyX,UAAW,EACXzF,SAAU,IAKdxnD,KAAKi9F,QAAQrqD,aAAez7B,EAAQy7B,aACpC5yC,KAAKi9F,QAAQpqD,iBAAmB,WAEhC,GAAS7yC,KAAM,OAEnB,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA6B,CAC9C40B,IAAK,EACL5C,aAAc,IAGtB,UAII,OAHAwU,MAAMytB,UACN70E,KAAKi9F,QAAQhmD,aACbj3C,KAAKw1C,IAAIq/B,UACF70E,MC5Bf86F,GArB2B,cACuB,8cCY3C,MAAMoC,WAAa,GACtB,cACI91C,MAAM,GAAqB81C,GAAKppB,cAAe3pE,UAAW,CAAC,UAC3DnK,KAAK1D,KAAO,OACZ,MAAM6a,EAAU,GAAqB+lF,GAAKppB,cAAe3pE,UAAW,CAAC,SACrEnK,KAAK4jC,MAAQ5jC,KAAK8xC,OAAS,IAAI,GAAK,CAChCnnC,QAAS3K,KAAK2K,UAEbuyF,GAAKC,UAAUnyE,IAAIhrB,KAAK2K,UACzBuyF,GAAKC,UAAUzvE,IAAI1tB,KAAK2K,QAAS,IAAIigB,KAEzCsyE,GAAKC,UAAUn/E,IAAIhe,KAAK2K,SAASpF,IAAIvF,MAErCA,KAAKo9F,KAAOjmF,EAAQimF,KAExB,qBACI,OAAO7iG,OAAOqmB,OAAO,iBAA6B,CAC9Cw8E,MAAM,IAQd,WACI,OAAOp9F,KAAKq9F,YAEhB,SAASD,GACDA,EACAp9F,KAAKs9F,WAGLt9F,KAAKu9F,cAETL,GAAKC,UAAUn/E,IAAIhe,KAAK2K,SAAS/E,SAAQ/L,GAAYA,EAAS2jG,gBAKlE,YACI,OAAiC,IAA1Bx9F,KAAK4jC,MAAMsR,KAAKz5C,MAK3B,WACSyhG,GAAKO,QAAQzyE,IAAIhrB,KAAK2K,UACvBuyF,GAAKO,QAAQ/vE,IAAI1tB,KAAK2K,QAAS,IAAIigB,KAEvCsyE,GAAKO,QAAQz/E,IAAIhe,KAAK2K,SAASpF,IAAIvF,MAKvC,cACQk9F,GAAKO,QAAQzyE,IAAIhrB,KAAK2K,UACtBuyF,GAAKO,QAAQz/E,IAAIhe,KAAK2K,SAASgnC,OAAO3xC,MAM9C,YACI,OAAOk9F,GAAKO,QAAQzyE,IAAIhrB,KAAK2K,UAAYuyF,GAAKO,QAAQz/E,IAAIhe,KAAK2K,SAASqgB,IAAIhrB,MAKhF,WAEI,OAAQk9F,GAAKO,QAAQzyE,IAAIhrB,KAAK2K,UAEzBuyF,GAAKO,QAAQzyE,IAAIhrB,KAAK2K,UAAoD,IAAxCuyF,GAAKO,QAAQz/E,IAAIhe,KAAK2K,SAAS+3B,KAK1E,cACQ1iC,KAAKq9F,aAGAr9F,KAAK09F,WAFV19F,KAAK4jC,MAAMsR,KAAKz5C,MAAQ,EAOxBuE,KAAK4jC,MAAMsR,KAAKz5C,MAAQ,EAGhC,UAII,OAHA2rD,MAAMytB,UACNqoB,GAAKC,UAAUn/E,IAAIhe,KAAK2K,SAASgnC,OAAO3xC,MACxCA,KAAKu9F,cACEv9F,MAMfk9F,GAAKC,UAAY,IAAI5vE,IAIrB2vE,GAAKO,QAAU,IAAIlwE,IC1GZ,MAAMowE,WAAe,GACxB,cACIv2C,MAAM,GAAqBu2C,GAAO7pB,cAAe3pE,UAAW,CAAC,MAAO,YACpEnK,KAAK1D,KAAO,SACZ,MAAM6a,EAAU,GAAqBwmF,GAAO7pB,cAAe3pE,UAAW,CAAC,MAAO,WAC9EnK,KAAKi9F,QAAUj9F,KAAK4jC,MAAQ,IAAI,GAAO,CACnCj5B,QAAS3K,KAAK2K,QACd6qC,IAAKr+B,EAAQq+B,IACb5C,aAAcz7B,EAAQy7B,eAE1B5yC,KAAKw1C,IAAMx1C,KAAKi9F,QAAQznD,IACxBx1C,KAAK8vF,QAAU9vF,KAAK8xC,OAAS,IAAI,GAAO,CACpCnnC,QAAS3K,KAAK2K,QACd0hF,OAAQl1E,EAAQk1E,SAEpBrsF,KAAKqsF,OAASrsF,KAAK8vF,QAAQzD,OAE3BrsF,KAAKi9F,QAAQ1nF,QAAQvV,KAAK8vF,SAC1B9vF,KAAKusF,KAAOp1E,EAAQo1E,KACpB,GAASvsF,KAAM,CAAC,MAAO,WAE3B,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA6B,CAC9C2rE,MAAM,EACN/2C,IAAK,EACL62C,OAAQ,EACRz5C,aAAc,IAMtB,WACI,OAAO5yC,KAAK8vF,QAAQvD,KAExB,SAASA,GACLvsF,KAAK8vF,QAAQvD,KAAOA,EAExB,UAMI,OALAnlC,MAAMytB,UACN70E,KAAKi9F,QAAQpoB,UACb70E,KAAKw1C,IAAIq/B,UACT70E,KAAK8vF,QAAQjb,UACb70E,KAAKqsF,OAAOxX,UACL70E,MC3CR,MAAM49F,WAAgB,GACzB,cACIx2C,MAAM,GAAqBw2C,GAAQ9pB,cAAe3pE,UAAW,CAAC,SAAU,SACxEnK,KAAK1D,KAAO,UACZ,MAAM6a,EAAU,GAAqBymF,GAAQ9pB,cAAe3pE,UAAW,CAAC,SAAU,QAClFnK,KAAK69F,MAAQ79F,KAAK4jC,MAAQ,IAAIs5D,GAAK,CAC/BE,KAAMjmF,EAAQimF,KACdzyF,QAAS3K,KAAK2K,UAElB3K,KAAK89F,QAAU99F,KAAK8xC,OAAS,IAAI6rD,GAAO,CACpChzF,QAAS3K,KAAK2K,QACd6qC,IAAKr+B,EAAQq+B,IACb62C,OAAQl1E,EAAQk1E,OAChBE,KAAMp1E,EAAQo1E,KACd35C,aAAcz7B,EAAQy7B,eAE1B5yC,KAAKw1C,IAAMx1C,KAAK89F,QAAQtoD,IACxBx1C,KAAKqsF,OAASrsF,KAAK89F,QAAQzR,OAC3BrsF,KAAK69F,MAAMtoF,QAAQvV,KAAK89F,SACxB,GAAS99F,KAAM,CAAC,MAAO,WAE3B,qBACI,OAAOzF,OAAOqmB,OAAO,iBAA6B,CAC9C40B,IAAK,EACL62C,OAAQ,EACRE,MAAM,EACN6Q,MAAM,EACNxqD,aAAc,IAMtB,WACI,OAAO5yC,KAAK69F,MAAMT,KAEtB,SAASA,GACLp9F,KAAK69F,MAAMT,KAAOA,EAMtB,YACI,OAAOp9F,KAAK69F,MAAME,OAAS/9F,KAAKusF,KAKpC,WACI,OAAOvsF,KAAK89F,QAAQvR,KAExB,SAASA,GACLvsF,KAAK89F,QAAQvR,KAAOA,EAOxB,QAAQjwF,GAIJ,OAHKshG,GAAQI,MAAMhzE,IAAI1uB,IACnBshG,GAAQI,MAAMtwE,IAAIpxB,EAAM,IAAI,GAAK,CAAEqO,QAAS3K,KAAK2K,WAE9CizF,GAAQI,MAAMhgF,IAAI1hB,GAY7B,KAAKA,EAAM+vF,EAAS,GAChB,MAAM4R,EAAMj+F,KAAKk+F,QAAQ5hG,GACnB6hG,EAAW,IAAI,GAAK,CACtBxzF,QAAS3K,KAAK2K,QACd0wE,MAAO,WACPnmC,KAAMm3C,IAIV,OAFArsF,KAAKuV,QAAQ4oF,GACbA,EAAS5oF,QAAQ0oF,GACVE,EAMX,QAAQ7hG,GAGJ,OAFY0D,KAAKk+F,QAAQ5hG,GACrBiZ,QAAQvV,MACLA,KAEX,UAMI,OALAonD,MAAMytB,UACN70E,KAAK89F,QAAQjpB,UACb70E,KAAKw1C,IAAIq/B,UACT70E,KAAKqsF,OAAOxX,UACZ70E,KAAK69F,MAAMhpB,UACJ70E,MAMf49F,GAAQI,MAAQ,IAAIzwE,ICjHb,MAAM6wE,WAAiB,GAC1B,cACIh3C,SAASj9C,WACTnK,KAAK1D,KAAO,WACZ0D,KAAK8gD,UAAY,IAAI,GAAM,CACvBn2C,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAAS2H,YAE5C9gD,KAAK+gD,UAAY,IAAI,GAAM,CACvBp2C,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAAS4H,YAE5C/gD,KAAKghD,UAAY,IAAI,GAAM,CACvBr2C,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAAS6H,YAE5ChhD,KAAKu5D,SAAW,IAAI,GAAM,CACtB5uD,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAASogB,WAE5Cv5D,KAAKw5D,SAAW,IAAI,GAAM,CACtB7uD,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAASqgB,WAE5Cx5D,KAAKy5D,SAAW,IAAI,GAAM,CACtB9uD,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAASsgB,WAE5Cz5D,KAAK05D,IAAM,IAAI,GAAM,CACjB/uD,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAASugB,MAE5C15D,KAAK25D,IAAM,IAAI,GAAM,CACjBhvD,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAASwgB,MAE5C35D,KAAK45D,IAAM,IAAI,GAAM,CACjBjvD,QAAS3K,KAAK2K,QACdypE,MAAOp0E,KAAK2K,QAAQgsE,WAAWx9B,SAASygB,MAGhD,qBACI,OAAOr/D,OAAOqmB,OAAO,iBAA6B,CAC9CkgC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXuY,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,IAAK,EACLC,IAAK,EACLC,IAAK,IAGb,UAWI,OAVAxS,MAAMytB,UACN70E,KAAK8gD,UAAU+zB,UACf70E,KAAK+gD,UAAU8zB,UACf70E,KAAKghD,UAAU6zB,UACf70E,KAAKu5D,SAASsb,UACd70E,KAAKw5D,SAASqb,UACd70E,KAAKy5D,SAASob,UACd70E,KAAK05D,IAAImb,UACT70E,KAAK25D,IAAIkb,UACT70E,KAAK45D,IAAIib,UACF70E,MAMf+0E,IAAcpqE,IACVA,EAAQwuC,SAAW,IAAIilD,GAAS,CAAEzzF,eAEtCsqE,IAAetqE,IACXA,EAAQwuC,SAAS07B,aCxDI,KAAa0I,UAcX,KAAa12E,YAIlB,KAAaA,YAaX,KAAasyC,SAajB,KAAaqxC,KAcV,KCjFvB,IAAI6T,GAAS,KAEb,SAASC,KACP,OAAOD,KAAWA,IAAS,IAAIlrB,IAAiByR,iBAG3C,IAAM32C,GAAY,IAAIrrC,UAE7BqrC,GAAUnpC,WAAU,SAACwiC,GACnBg3D,KAAQjS,OAAO5wF,MAAQ,EACvB6iG,KAAQpG,qBAAqB5wD,EAAMkH,UAAWlH,EAAM5pC,cAAUkB,EAAW0oC,EAAMiwD,UAC/E+G,KAAQjS,OAAO5wF,MAAQ6rC,EAAM+kD,UAIxB,IAAM9kD,GAAe,SAAAH,GAC1B,IAAMS,EAAYT,EAAWS,UAAYD,eAEzC,MAAO,CACL4G,UAFgB+vD,IAAW12D,GAAUT,EAAWiE,KAGhDghD,OAA0B,GAAhBjlD,EAAWkE,GACrBisD,SAAU,EAAInwD,EAAWkE,GACzB5tC,SAAU0pC,EAAWkE,M,+LCLZkzD,EAAoB,YACjCC,EAAiC,OACjCC,EAAiC,U,wYCjBjC,IASMC,ECSC,SAAiBC,EAAat5D,GAGnC,IAAMu5D,EAAS,IAAI57F,kBAAgB,MAC7B67F,EAASD,EAAOtyF,cAAc+4B,GAAQ,SAACy5D,EAAOpwD,GAAR,MAAoB,CAACowD,QAAOpwD,YAClEgwD,EAAS,IAAI/7F,UA+EnB,SAASo8F,IACP,OAAOj+D,SAASiH,eAAe,kBAzBjC82D,EACGvyF,cAAcqyF,GAAa,SAACl1F,EAAOu1F,GAAR,MAAyB,CAACv1F,QAAOu1F,iBAC5Dn6F,WAAU,YAA8B,IAApB4E,EAAoB,EAApBA,MAAOu1F,EAAa,EAAbA,WACW,GAAtBv1F,EAAMilC,MAAMn1C,SACdylG,EAAWC,QAAQzvD,UAAY,IAEjC,IAAI0vD,EA1DnB,SAA4BD,GAC1B,IAAIC,EAASD,EAAQpzD,uBAAuB,QAAQ,GAMpD,OALKqzD,KACHA,EAAmBp+D,SAASC,cAAc,OACnCo+D,UAAY,OACnBF,EAAQ38D,YAAY48D,IAEfA,EAmDmBE,CAAmBJ,EAAWC,SAErCI,EAAgB/kG,OAAOkD,OAAOiM,EAAMilC,OAAO/S,MAAK,SAACtJ,EAAGC,GAAJ,OAAUA,EAAEtf,UAAYqf,EAAErf,aAC5EssF,EAAkB,KACtBD,EAAK15F,SAAQ,SAAA+oC,GACX,IACM6wD,EAtDvB,SAA8B7wD,EAAOwwD,EAAQI,GAC3C,IAmBsBjjG,EAAMmjG,EACtBC,EApBFF,EAAa,KACbG,EAAa5+D,SAAS4F,cAAT,qBAAqCgI,EAAMl0C,IAA3C,OAejB,OAdIklG,EACFH,EAAaG,EAAOC,SAAS,KAE7BD,EAAS5+D,SAASC,cAAc,OACzB4F,aAAa,WAAY+H,EAAMl0C,KACtC0kG,EAAOU,aAAaF,EAAQJ,GAE5BC,EAAaz+D,SAASC,cAAc,OACpC2+D,EAAOp9D,YAAYi9D,GASCljG,EAPLqyC,EAAMryC,KAOKmjG,EAPCE,GAQvBD,EAAa3+D,SAAS0L,gBAAgB,6BAA8B,QACnEqzD,eAAe,QAAS,QAAS,gCACxCJ,EAAO94D,aAAa,UAAW,OAC/B84D,EAAO94D,aAAa,IAAK,OACzB84D,EAAO94D,aAAa,IAAK,OACzB84D,EAAO94D,aAAa,QAAS,QAC7B84D,EAAO94D,aAAa,UAAW,eAC/B84D,EAAO94D,aAAa,oBAAqB,mBACzC84D,EAAOjwD,UAAP,4RAOmDnzC,EAPnD,0CAUAmjG,EAAOl9D,YAAYm9D,IAvBnBC,EAAOP,UAAYzwD,EAAMoxD,QAAU,QAAU,GACtCP,EAqC2BQ,CADAzlG,OAAOqmB,OAAO,GAAI+tB,EAAO,CAACoxD,QAASr2F,EAAMq1F,OAASpwD,GAASjlC,EAAMq1F,OAASpwD,EAAMl0C,MACxD0kG,EAAQI,EAAkBA,EAAgBhyD,WAAa,MAClG0xD,EAAWgB,WAAWtxD,EAAO6wD,GAC7BD,EAAmBC,QAIpCb,EACGpvF,QAAO,SAAA1S,GAAC,MAAc,SAAVA,EAAEP,QACd2T,KAAI,SAAApT,GAAC,OAAIA,EAAEpC,OACXqK,UAAU+5F,GAOb,IFtFK,EACLqB,EACAC,EACAC,EACAC,EAGMC,EACAC,EE8EAC,EAAW,kBAAMz/D,SAASiH,eAAe,WAEzCy4D,GFxFD,EEwFuB,CAE1BP,cAAetB,EAAYj+F,WAAWu+F,QAEtCiB,aAJ0B,SAIblmG,EAAQ4C,GACnB,IADsB,E,EAAA,E,+lBAAA,E,EACN+hG,EAAYj+F,WAAWu+F,QAAQwB,qBAAqB,M,uVAAOtpB,WADrD,IAEtB,2BAAsB,KAAXupB,EAAW,QACd/2D,EAAO+2D,EAAGf,SAAS,GAAGgB,iBAAiB,GAC7C,GAAIh3D,IAAQK,QAAoB,CAACzjC,EAAG3J,EAAEgkG,QAASz1E,EAAGvuB,EAAEikG,SAAUl3D,GAC5D,OAAO+2D,GALW,8BAQtB,OAAO,MAGTP,cAf0B,SAeZW,EAAKC,GAEjB,IADYA,EAAUx0D,aAAa,YAC1BoE,MAAM,aAAc,CAC3B,IAAMrE,EAASyyD,IACT7xD,EAASZ,EAAGa,wBAClB,IAAIzD,QAASo3D,EAAK5zD,GAAS,OAAOZ,EAGpC,IAAMZ,EAAS60D,IACf,OAAIv2D,QAAoB82D,EAAKp1D,EAAOyB,yBAAiCzB,EAE9D,MAGT00D,gBA7B0B,SA6BV9zD,GACd,IAAM3C,EAAmB2C,EAAGqzD,SAAS,GAAGA,SAAS,GAAGgB,iBAAiB,GAC/DK,EAAmBlgE,SAASC,cAAc,OAOhD,OANAigE,EAAQC,MAAMC,SAAW,QACzBF,EAAQC,MAAMn3D,IAAd,UAA4BH,EAAKG,IAAjC,MACAk3D,EAAQC,MAAMr3D,KAAd,UAA4BD,EAAKC,KAAjC,MACAo3D,EAAQC,MAAMpN,MAAd,UAA4BlqD,EAAKkqD,MAAjC,MACAmN,EAAQC,MAAM/U,OAAd,UAA4BviD,EAAKuiD,OAAjC,MACA8U,EAAQ1+D,YAAYgK,EAAGqzD,SAAS,GAAGA,SAAS,GAAGwB,WAAU,IAClDH,IF7HXf,EAGkB,EAHlBA,cACAC,EAEkB,EAFlBA,aACAC,EACkB,EADlBA,cACAC,EAAkB,EAAlBA,gBAGMC,EAAaj8F,EAAW,WAAXA,UAAqB08B,SAAU,WAC5Cw/D,EAAal8F,EAAW,WAAXA,UAAqB08B,SAAU,aAC/B18B,EAAW,WAAXA,UAAqB67F,EAAe,aAGpD3wF,QAAO,SAAA1S,GAAC,QAAMsjG,EAAatjG,EAAE5C,OAAQ4C,MACrCwT,UAAS,SAASxT,GACP,IAAM0vC,EAAkB4zD,EAAatjG,EAAE5C,OAAQ4C,GACzCse,EAAsBte,EAAEgkG,QAAxB1lF,EAAoCte,EAAEikG,QACtCO,GAAmB,IAAI13F,MAAQ09B,UAC/B45D,EAAkBZ,EAAgB9zD,GAClC+0D,EAAsB/0D,EAAGq0D,iBAAiB,GAAG/2D,KAA7Cy3D,EAAsD/0D,EAAGq0D,iBAAiB,GAAG72D,IAC3DhJ,SAAS2/D,qBAAqB,QAAQ,GAEzDn+D,YAAY0+D,GAOjB,IAAMM,EAAcl9F,kBACN,CAACxH,IACNqQ,MAAMqzF,GACZtwF,KAAI,SAACuxF,GACC,MAAO,CACLllG,KAAQmiG,EACRgD,KAAQrB,EAAc,CACpB55F,EAAGg7F,EAAIX,QACPz1E,EAAGo2E,EAAIV,SACNv0D,GACHm1D,IAAS,IAAI/3F,MAAQ09B,UAAYg6D,EACjCjsD,OAAQ,CAAC5uC,EAAGg7F,EAAIX,QAAU1lF,EAASiQ,EAAGo2E,EAAIV,QAAU3lF,GAC5CoxB,KACA00D,cAbC,IAgBd,SAAAnqE,GAAM,OArBWse,EAqBOte,EAAOse,OApBnC6rD,EAAQC,MAAMr3D,KAAd,UAAwBy3D,EAAoBlsD,EAAO5uC,EAAnD,WACAy6F,EAAQC,MAAMn3D,IAAd,UAAwBu3D,EAAoBlsD,EAAOhqB,EAAnD,OAFF,IAAuBgqB,KAsBpBrmC,sBAAqB,SAASujB,EAAGC,GACV,OAAOD,IAAMC,GACC,OAAND,GAAoB,OAANC,GAAcD,EAAE8iB,QAAU7iB,EAAE6iB,UAItEusD,EAAgBt9F,kBACd,CAAC,CAAC/H,KAAMoiG,KADM,IAEhB,kBAAMuC,EAAQ1zD,WAAWjL,YAAY2+D,MAE3C,OAAOM,EACJ7uF,UAAU4tF,GACVz0F,OAAO81F,GACPpuF,eAAeguF,GAAa,SAACzqE,EAAQ8qE,GACpB,OAAI9qE,EAAOx6B,OAASoiG,EAAwB5nE,EACrCv8B,OAAOqmB,OAAO,GAAIghF,EAAY9qE,MAEtD3kB,UAAU,CAAC7V,KAAMkiG,EAAmBjyD,GAAIA,OAEtD36B,SEoEH6uF,EACGlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQkiG,KAChC15F,WAAU,kBAAMk6F,IAAoB/2D,UAAU1iC,IAAI,kBAGrDk7F,EACGlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQoiG,KAChC55F,WAAU,kBAAMk6F,IAAoB/2D,UAAU18B,OAAO,kBAGxDk1F,EACGlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQmiG,KAChC35F,WAAU,SAASgyB,GACHA,EAAO2qE,MAAQzC,KACjBloE,EAAOmqE,QAAQC,MAAMW,WAAe,cACpC/qE,EAAOmqE,QAAQC,MAAMY,QAAe,GACpChrE,EAAOmqE,QAAQC,MAAf,UAAoC,iBAEpCpqE,EAAOmqE,QAAQC,MAAMY,QAAe,EACpChrE,EAAOmqE,QAAQC,MAAf,UAAoC,OAKrDT,EACGlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQmiG,KAChC35F,WAAU,SAAAgyB,GAAM,OAAIA,EAAOyV,GAAG20D,MAAMa,QAAWjrE,EAAO2qE,MAAQzC,IAAuB,OAAS,WAGjGyB,EACGlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQoiG,KAChCnvF,QAAO,SAAAunB,GAAM,OAAIA,EAAO2qE,MAAQzC,OAChC/uF,KAAI,SAAA6mB,GAAM,MAAK,CAACx6B,KAAM,SAAU7B,IAAKq8B,EAAOyV,GAAGC,aAAa,gBAC5D1nC,UAAU65F,GAGb8B,EAAMlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQmiG,KACnC35F,WAAU,SAAAgyB,GAAM,OAAI0pE,IAAWv4D,UAAU+5D,OAAO,cAAexB,KAAc1pE,EAAO2qE,SAEvFhB,EAAMlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQoiG,KACnC55F,WAAU,kBAAO07F,IAAWv4D,UAAU18B,OAAO,kBAGhDk1F,EACGlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQoiG,KAChCnvF,QAAO,SAAAunB,GAAM,OAAIA,EAAO2qE,MAAQjB,OAChCvwF,KAAI,SAAA6mB,GACE,MAAO,CACLx6B,KAAM,OACN7B,IAAMq8B,EAAOyV,GAAGC,aAAa,gBAGrC1nC,UAAU65F,GAGb,IAAMsD,EAAaxB,EAChBlxF,QAAO,SAAAunB,GAAM,OAAIA,EAAOx6B,MAAQoiG,KAChCnvF,QAAO,SAAAunB,GAAM,OAAIA,EAAO4qE,GAAK,OAC7BnyF,QAAO,SAAAunB,GAAM,OAAK94B,KAAKyc,IAAIqc,EAAOse,OAAO5uC,GAAKxI,KAAKyc,IAAIqc,EAAOse,OAAOhqB,GAAM,KAC3Enb,KAAI,SAAA6mB,GAAM,OAAIA,EAAOyV,MAaxB,OAXA01D,EACG1yF,QAAO,SAAAg9B,GAAE,OAAIA,EAAGtE,UAAUi6D,SAAS,YACnCjyF,KAAI,SAAAs8B,GAAE,OAAIA,EAAGC,aAAa,eAC1Bv8B,KAAI,SAAAxV,GAAG,MAAK,CAAC6B,KAAM,OAAQ7B,UAC3BqK,UAAU65F,GAEbsD,EACG1yF,QAAO,SAAAg9B,GAAE,OAAKA,EAAGtE,UAAUi6D,SAAS,YACpCjyF,KAAI,SAAAzJ,GAAC,MAAK,CAAClK,KAAM,QAAS7B,IAAK+L,EAAEgmC,aAAa,gBAC9C1nC,UAAU65F,GAENA,EDvNMwD,CALS,IAAIl/F,kBAAgB,CAC1Ci8F,QAAYn+D,SAASiH,eAAe,UACpCi4D,WANoB,SAASx4D,EAAS26D,GACtCA,EAAK3yD,UAAYhI,EAAQoF,OAQaw1D,KAGxC1D,EAAM,IACE,SAAAn4F,GAAC,OAAItN,QAAQ0xC,IAAI,mBAAoBpkC,MACxC+I,QAAO,SAAA/I,GAAC,MAAc,QAAVA,EAAElK,QACdiX,eAAe8uF,KAAe,SAACxlG,EAAGylG,GAAJ,OAAiBA,EAASzlG,EAAEpC,QAC1DwV,KAAI,SAAAw3B,GACE,MAAO,CAACA,UAASnrC,KAAM,kBAE7BwI,UAAUoiC,KAEfy3D,EAAM,IACE,SAAAn4F,GAAC,OAAItN,QAAQ0xC,IAAI,mBAAoBpkC,MACxC+I,QAAO,SAAA/I,GAAC,MAAc,UAAVA,EAAElK,QACdwI,UAAUoiC,M,2NErBR,IAAMm7D,EAAgB,IACzBp/F,mBAAgBqnC,UACK/6B,QAAO,SAAA/I,GAAC,MAAI,wBAAwBkhC,KAAKlhC,MACzC2F,QAAO,SAACkjB,EAAK7oB,GACJ,IAAM4wB,EAAOmT,aAAag4D,QAAQ/7F,GAClC,IACE6oB,EAAI7oB,GAAK4Y,KAAKkB,MAAM8W,GACpB,MAAO5wB,GACPtN,QAAQ0xC,IAAR,mCAAwCpkC,EAAxC,cAAgD4wB,IAElD,OAAO/H,IACN,KAGtB2d,GAAmB3G,gBAAWg8D,EAAe,CAExD1X,OAAQ,SAASjhF,EAAO+8B,GACtB,IAAMgB,EAAehB,EAAIgB,QAQzB,OAPAA,EAAQx0B,WAAc,IAAItJ,MAAQ09B,UAClCI,EAAQhtC,IAAagtC,EAAQhtC,KAAR,kBAA0BgtC,EAAQx0B,WACvDw0B,EAAQnrC,KAAamrC,EAAQnrC,MAAR,kBAA2BmrC,EAAQx0B,WAExDs3B,aAAai4D,QAAQ/6D,EAAQhtC,IAAK2kB,KAAKC,UAAUooB,IACjD/9B,EAAM+9B,EAAQhtC,KAAOgtC,EAEd/9B,GAGTioC,OAAQ,SAASjoC,EAAO+8B,GACtB,IAAMhsC,EAAMgsC,EAAIhsC,IAKhB,OAHA8vC,aAAak4D,WAAWhoG,UACjBiP,EAAMjP,GAENiP,GAGT,aAAc,WAOZ,OALA4gC,UAAmB1kC,SAAQ,SAAAnL,GACpB,YAAYitC,KAAKjtC,IACtB8vC,aAAak4D,WAAWhoG,MAGnB,IAGT,kBAAmB,SAASiP,EAAO+8B,GACjC,IAAMoB,EAAWpB,EAAIoB,SACfptC,EAAG,mBAAoBotC,GAC7B,IAAK0C,aAAa9vC,GAAM,CAEtB,IAAMioG,EAAW,CACfjoG,IAAUA,EACV6B,KAAUurC,EACVA,SAAUA,EACVE,SAAU,IACVG,KAAU,GACV2E,IAAK,gDAAF,OAAuDhF,EAAvD,iFAILmF,EAAiB1xC,KAAK,CAACgB,KAAM,SAAUmrC,QAASi7D,IAElD,OAAOh5F,GAGT,2BAA4B,SAASA,GAAO,Q,25BAAA,EACvBg/B,QAAkB61D,IAAlB71D,IADuB,IAC1C,2BAAoD,KAAzCpsC,EAAyC,QAClD0wC,EAAiB1xC,KAAK,CAACgB,KAAM,kBAAmBurC,SAAUvrC,KAFlB,8BAI1C,OAAOoN,KAKXwR,YAAW,kBAAM8xB,EAAiB1xC,KAAK,8BAA6B,M,yHC1EvDiwC,EAAa,IAAItoC,kBAAgB,UAC9CsoC,EACKzmC,WAAU,SAAA0B,GAAC,OAAI+jC,aAHM,cAGoB/jC,KAE9C,IAAMm8F,GAAgBt8D,gBAAWkF,GACjCo3D,EAAchrF,GAAG,UAAU,SAAAjO,GAAK,MAAa,WAATA,EAAqB,SAAW,aAIpE,IAAMk5F,EAAc7hE,SAASiH,eAAe,cAE5CuD,EAAWzmC,WAAU,SAAA0B,GACnBo8F,EAAYxD,UAAYwD,EAAYxD,UAAUryD,QAAQ,iBAAkBvmC,MAK1EnC,uBAAqBu+F,EAAa,SAAlC,IACQ,SAAA/lG,GAAC,OAAIA,EAAEkqC,oBACV72B,MAAM,UACNpL,UAAU69F,GAEft+F,uBAAqB08B,SAAU,YAC1BxxB,QAAO,SAAA1S,GAAC,OAAiB,IAAbA,EAAEgmG,WACd3yF,MAAM,UACNpL,UAAU69F,I,sPCrBR,I,EAAM76D,EAAe,IAAI7kC,kBAAgB,K,kDACrBknC,QAAe,IAAO,M,gwBAA1C24D,E,KAAUC,E,KACXC,ECdC,SAA4BC,EAAUF,EAAQD,GAEnD,IAAMI,EAAW,IAAIjgG,kBAAgB8/F,EAAOE,EAAStiG,aAwBrD,OAvBAsiG,EACGn0F,WACAhK,WAAU,SAAS0B,GACP08F,EAAS5nG,KAAKynG,EAAOv8F,OAEvB,SAAS9K,GACPwnG,EAAS3gG,MAAM7G,MAEjB,WACEwnG,EAASvgG,cAGxBugG,EACGp0F,WACAhK,WAAU,SAAS0B,GACPy8F,EAAS3nG,KAAKwnG,EAASt8F,OAEzB,SAAS9K,GACPunG,EAAS1gG,MAAM7G,MAEjB,WACEunG,EAAStgG,cAEjBugG,EDZmBC,CAAmBr7D,EACAi7D,EACAD,GAEzCM,GAAkB/8D,gBAAWyB,GACnCs7D,EAAgBzrF,GAAG,OAAO,SAAAjO,GAAK,MAAY,IAARA,KACnC05F,EAAgBzrF,GAAG,SAAS,SAAAjO,GAAK,MAAY,IAARA,KACrC05F,EAAgBzrF,GAAG,OAAO,SAAAjO,GAAK,OAAY,KAARA,KACnC05F,EAAgBzrF,GAAG,SAAS,SAAAjO,GAAK,OAAY,KAARA,KAGrC,IAAM25F,EAAWtiE,SAASiH,eAAe,cACnC9B,GAAWd,OAAQi+D,EAAML,GACzBM,EAAW,kBAAMD,EAAK18D,cAAc,SAG1CT,EACK3yB,eAAeu0B,GAAc,SAACy7D,EAAS75F,GAAV,OAAoB65F,EAAU,EAAIT,EAASS,GAAW75F,KACnFwD,MAAM46B,GACN73B,IAAI46B,MACJ/lC,WAAU,SAAC0B,GAAD,OAAQ88F,IAAWE,YAAch9F,KAGhDshC,EACK53B,MAAM,SACNhD,MAAMg5B,EAASj2B,KAAI,SAAAzJ,GAAC,OAAIA,EAAI,EAAI,UAAY,YAC5C1B,WAAU,SAAC2+F,GAAD,OAASH,IAAWr7D,UAAiB,WAAPw7D,EAAmB,MAAQ,UAAU,cAIjEp/F,EAAW,WAAXA,UAAqB08B,SAAU,WAI3CxxB,QAAO,SAAA1S,GAAC,OAAIA,EAAEpC,IAAIm2C,MAAM,uBAD7B,IAEQ,SAAA/zC,GAAC,OAAIA,EAAEkqC,oBACV92B,KAAI,SAAApT,GAAC,gBAAOA,EAAEpC,IAAIm2C,MAAM,SAAW,MAAQ,OAAtC,OAA8C/zC,EAAEsxC,SAAU,KAAO,OACtErpC,UAAUs+F,I,67CEpDR,SAASM,IAEd,IAgBQC,EAhBFC,EAAW5lG,KAAKqB,IAAI,EAAG,EAAI,IAI3BwkG,EAAqB,SAACC,GAAD,OAAOA,EAAIF,EAAWA,GAC3CG,EAAqB,SAACD,GAAD,OAAOA,EAAI9lG,KAAKqB,IAAIukG,EAAU,IACnDI,EAAqB,SAACF,GAAD,OAAW,EAAJA,EAAU,GACtCG,EAAqB,SAACH,GAAD,OAAW,EAAJA,EAAU,GACtCI,EAAqB,SAACJ,GAAD,OAAOA,EAAI9lG,KAAKqB,IAAIukG,EAAU,IACnDO,EAAqB,SAACL,GAAD,OAAW,EAAJA,EAAU,GAEtCM,EAAqB,SAACN,GAAD,OAAOA,EAAI9lG,KAAKqB,IAAIukG,EAAU,IACnDS,EAAqB,SAACP,GAAD,OAAOA,EAAI9lG,KAAKqB,IAAIukG,EAAU,KACnDU,EAAqB,SAACR,GAAD,OAAOA,EAAI9lG,KAAKqB,IAAIukG,EAAU,KAwBnDE,EAAe,CACnBtJ,SAAsB,IAAK,IAtBrBmJ,EAAaY,KAsBG,KApBtB,EADmBA,KAAyBZ,EAqBjB,QAKvBa,EAlBN,SAAuBhK,GAAqB,2BAATiK,EAAS,iCAATA,EAAS,kBAC1C,IAAMjgD,EAAM,GAOZ,OANAg2C,EAAQ50F,SAAQ,SAAAw5E,GACd56B,EAAIhpD,KAAK4jF,GADa,UAELqlB,GAFK,IAEtB,2BAA0B,KAAfv5F,EAAe,QACxBs5C,EAAIhpD,KAAK0P,EAAGk0E,KAHQ,kCAMjB56B,GAU2B35C,KAAK,KAAMi5F,EAAEtJ,SAEjDsJ,EAAC,OAAoBU,EAAcL,GACnCL,EAAC,QAAoBU,EAAcP,EAAoBE,GACvDL,EAAC,WAAoBU,EAAcR,EAAiBG,GACpDL,EAAC,MAAoBU,EAAcX,EAAkBG,EAAiBC,EAAoBE,EAAmBC,EAAiBE,GAC9HR,EAAC,cAAoBU,EAAcX,EAAkBE,EAAiBE,EAAoBE,EAAmBC,EAAiBC,GAC9HP,EAAC,MAAoBU,EAAcT,EAAiBE,EAAoBC,EAAeC,EAAmBE,GAC1GP,EAAC,UAAoBU,GAhDM,SAACV,GAAD,OAAOA,EAAIF,IAgDYC,EAAkBE,EAAiBC,EAClDC,EAAoBC,EAAeC,GA1C3C,SAACL,GAAD,OAAOA,EAAI9lG,KAAKqB,IAAIukG,EAAU,KA2CtBQ,EAAiBC,EAAmBC,GAEvER,EAAC,WAjCC,EAAWS,KAAyBA,KAiCT,KAAK,MAElC,IAAMG,EAAqB,SAASC,GAClC,OAAO,SAASn+F,GACd,IAAM+nC,EAAIu1D,EAAEa,GACZ,OAAOp2D,EAAEvwC,KAAK0B,OAAMgqC,QAAIljC,EAAG,EAAG,GAAK+nC,EAAE/0C,WAInCmqC,EAAM,GACZ,IAAK,IAAM6yC,KAAKstB,EAAGngE,EAAI6yC,GAAKkuB,EAAmBluB,GAC/C,OAAO7yC,I,qECnEI46D,GAAamF,E,SAAAA,KAEb97D,EAAmB,IAAI3kC,kBAAgB,SAK9C2hG,EAAsB7jE,SAASiH,eAAe,iBAEpDJ,EAAiB9iC,WAAU,SAACypC,GAAD,OAAOq2D,EAAiBn1D,UAAjB,UAAgClB,O,gBCbln1C,EAAOC,QAAU,EAAjB,Q,gBC1IA,EAAQ,MACRD,EAAOC,QAAU,EAAjB,sB,gBCDA,EAAQ,OACRD,EAAOC,QAAU,EAAjB,uB,gBCDA,EAAQ,OACRD,EAAOC,QAAU,EAAjB,uB,gBCDA,EAAQ,OACRD,EAAOC,QAAU,EAAjB,yC,gBCDA,EAAQ,OACRD,EAAOC,QAAU,EAAjB,sB,6BCAA,EAAQ,OACR,EAAQ,MACRD,EAAOC,QAAU,EAAjB,wB,eCHA,EAAQ,OACRD,EAAOC,QAAU,EAAjB,sB,gBCDA,EAAQ,OACRD,EAAOC,QAAU,EAAjB,wB,gBCDA,EAAQ,OACRD,EAAOC,QAAU,EAAjB,yB,gBCDA,EAAQ,OACRD,EAAOC,QAAU,EAAjB,wB,gBCDA,EAAQ,OACRD,EAAOC,QAAU,WAAoC,kB,gBCDrD,EAAQ,OACRD,EAAOC,QAAU,EAAjB,e,UCDAD,EAAOC,QAAU,SAAUkvC,GACzB,GAAiB,mBAANA,EAAkB,MAAMxuC,UAAUwuC,EAAK,uBAClD,OAAOA,I,gBCFT,IAAI38B,EAAW,EAAQ,OACvBxS,EAAOC,QAAU,SAAUkvC,GACzB,IAAK38B,EAAS28B,GAAK,MAAMxuC,UAAUwuC,EAAK,sBACxC,OAAOA,I,UCHT,IAAIs8D,EAAOzrG,EAAOC,QAAU,CAAEi6E,QAAS,UACrB,iBAAPwxB,MAAiBA,IAAMD,I,gBCAlC,IAAIE,EAAY,EAAQ,OACxB3rG,EAAOC,QAAU,SAAU6R,EAAI85F,EAAMxrG,GAEnC,GADAurG,EAAU75F,QACGtM,IAATomG,EAAoB,OAAO95F,EAC/B,OAAQ1R,GACN,KAAK,EAAG,OAAO,SAAU84B,GACvB,OAAOpnB,EAAG7P,KAAK2pG,EAAM1yE,IAEvB,KAAK,EAAG,OAAO,SAAUA,EAAGC,GAC1B,OAAOrnB,EAAG7P,KAAK2pG,EAAM1yE,EAAGC,IAE1B,KAAK,EAAG,OAAO,SAAUD,EAAGC,EAAGwF,GAC7B,OAAO7sB,EAAG7P,KAAK2pG,EAAM1yE,EAAGC,EAAGwF,IAG/B,OAAO,WACL,OAAO7sB,EAAGwJ,MAAMswF,EAAM76F,c,gBChB1B/Q,EAAOC,SAAW,EAAQ,KAAR,EAAoB,WACpC,OAA+E,GAAxEkB,OAAOC,eAAe,GAAI,IAAK,CAAEwjB,IAAK,WAAc,OAAO,KAAQsU,M,gBCF5E,IAAI1mB,EAAW,EAAQ,OACnBm1B,EAAW,kBAEXkkE,EAAKr5F,EAASm1B,IAAan1B,EAASm1B,EAASC,eACjD5nC,EAAOC,QAAU,SAAUkvC,GACzB,OAAO08D,EAAKlkE,EAASC,cAAcuH,GAAM,K,gBCL3C,IAAIoC,EAAS,EAAQ,OACjBk6D,EAAO,EAAQ,OACf1uB,EAAM,EAAQ,OACd+uB,EAAO,EAAQ,OACfl6E,EAAM,EAAQ,OAGdm6E,EAAU,SAAU/nG,EAAMd,EAAM6I,GAClC,IASI1K,EAAK2qG,EAAKzM,EATV0M,EAAYjoG,EAAO+nG,EAAQG,EAC3BC,EAAYnoG,EAAO+nG,EAAQK,EAC3BC,EAAYroG,EAAO+nG,EAAQO,EAC3BC,EAAWvoG,EAAO+nG,EAAQj0B,EAC1B00B,EAAUxoG,EAAO+nG,EAAQU,EACzBC,EAAU1oG,EAAO+nG,EAAQY,EACzB1sG,EAAUksG,EAAYV,EAAOA,EAAKvoG,KAAUuoG,EAAKvoG,GAAQ,IACzD0pG,EAAW3sG,EAAiB,UAC5BY,EAASsrG,EAAY56D,EAAS86D,EAAY96D,EAAOruC,IAASquC,EAAOruC,IAAS,IAAa,UAG3F,IAAK7B,KADD8qG,IAAWpgG,EAAS7I,GACZ6I,GAEVigG,GAAOC,GAAaprG,QAA0B2E,IAAhB3E,EAAOQ,KAC1BuwB,EAAI3xB,EAASoB,KAExBk+F,EAAMyM,EAAMnrG,EAAOQ,GAAO0K,EAAO1K,GAEjCpB,EAAQoB,GAAO8qG,GAAmC,mBAAftrG,EAAOQ,GAAqB0K,EAAO1K,GAEpEmrG,GAAWR,EAAMjvB,EAAIwiB,EAAKhuD,GAE1Bm7D,GAAW7rG,EAAOQ,IAAQk+F,EAAM,SAAWsN,GAC3C,IAAIX,EAAI,SAAUhzE,EAAGC,EAAGwF,GACtB,GAAI/3B,gBAAgBimG,EAAG,CACrB,OAAQ97F,UAAU3Q,QAChB,KAAK,EAAG,OAAO,IAAIysG,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAE3zE,GACrB,KAAK,EAAG,OAAO,IAAI2zE,EAAE3zE,EAAGC,GACxB,OAAO,IAAI0zE,EAAE3zE,EAAGC,EAAGwF,GACrB,OAAOkuE,EAAEvxF,MAAM1U,KAAMmK,YAGzB,OADAm7F,EAAW,UAAIW,EAAW,UACnBX,EAXyB,CAa/B3M,GAAOgN,GAA0B,mBAAPhN,EAAoBxiB,EAAI90C,SAAShmC,KAAMs9F,GAAOA,EAEvEgN,KACDtsG,EAAQ6sG,UAAY7sG,EAAQ6sG,QAAU,KAAKzrG,GAAOk+F,EAE/Cv7F,EAAO+nG,EAAQgB,GAAKH,IAAaA,EAASvrG,IAAMyqG,EAAKc,EAAUvrG,EAAKk+F,MAK9EwM,EAAQG,EAAI,EACZH,EAAQK,EAAI,EACZL,EAAQO,EAAI,EACZP,EAAQj0B,EAAI,EACZi0B,EAAQU,EAAI,GACZV,EAAQY,EAAI,GACZZ,EAAQiB,EAAI,GACZjB,EAAQgB,EAAI,IACZ/sG,EAAOC,QAAU8rG,G,SC7DjB/rG,EAAOC,QAAU,SAAUquC,GACzB,IACE,QAASA,IACT,MAAO7qC,GACP,OAAO,K,UCHX,IAAI8tC,EAASvxC,EAAOC,QAA2B,oBAAV8Z,QAAyBA,OAAOnV,MAAQA,KACzEmV,OAAwB,oBAARyB,MAAuBA,KAAK5W,MAAQA,KAAO4W,KAE3DysB,SAAS,cAATA,GACc,iBAAPglE,MAAiBA,IAAM17D,I,UCLlC,IAAI7sB,EAAiB,GAAGA,eACxB1kB,EAAOC,QAAU,SAAUkvC,EAAI9tC,GAC7B,OAAOqjB,EAAeziB,KAAKktC,EAAI9tC,K,gBCFjC,IAAI6rG,EAAK,EAAQ,MACbC,EAAa,EAAQ,OACzBntG,EAAOC,QAAU,EAAQ,OAAoB,SAAUmoD,EAAQ/mD,EAAKgB,GAClE,OAAO6qG,EAAG99D,EAAEgZ,EAAQ/mD,EAAK8rG,EAAW,EAAG9qG,KACrC,SAAU+lD,EAAQ/mD,EAAKgB,GAEzB,OADA+lD,EAAO/mD,GAAOgB,EACP+lD,I,gBCNTpoD,EAAOC,SAAW,EAAQ,SAAsB,EAAQ,KAAR,EAAoB,WAClE,OAA4G,GAArGkB,OAAOC,eAAe,EAAQ,MAAR,CAAyB,OAAQ,IAAK,CAAEwjB,IAAK,WAAc,OAAO,KAAQsU,M,UCDzGl5B,EAAOC,QAAU,SAAUkvC,GACzB,MAAqB,iBAAPA,EAAyB,OAAPA,EAA4B,mBAAPA,I,eCDvD,IAAIi+D,EAAW,EAAQ,OACnBC,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,OACtBJ,EAAK/rG,OAAOC,eAEhBnB,EAAQmvC,EAAI,EAAQ,OAAoBjuC,OAAOC,eAAiB,SAAwBmsG,EAAGz1B,EAAG01B,GAI5F,GAHAJ,EAASG,GACTz1B,EAAIw1B,EAAYx1B,GAAG,GACnBs1B,EAASI,GACLH,EAAgB,IAClB,OAAOH,EAAGK,EAAGz1B,EAAG01B,GAChB,MAAO/pG,IACT,GAAI,QAAS+pG,GAAc,QAASA,EAAY,MAAM7sG,UAAU,4BAEhE,MADI,UAAW6sG,IAAYD,EAAEz1B,GAAK01B,EAAWnrG,OACtCkrG,I,UCdTvtG,EAAOC,QAAU,SAAUwtG,EAAQprG,GACjC,MAAO,CACLrB,aAAuB,EAATysG,GACdxsG,eAAyB,EAATwsG,GAChBvsG,WAAqB,EAATusG,GACZprG,MAAOA,K,gBCJX,IAAImQ,EAAW,EAAQ,OAGvBxS,EAAOC,QAAU,SAAUkvC,EAAIm9D,GAC7B,IAAK95F,EAAS28B,GAAK,OAAOA,EAC1B,IAAIr9B,EAAIq4B,EACR,GAAImiE,GAAkC,mBAArBx6F,EAAKq9B,EAAGpsC,YAA4ByP,EAAS23B,EAAMr4B,EAAG7P,KAAKktC,IAAM,OAAOhF,EACzF,GAAgC,mBAApBr4B,EAAKq9B,EAAG0rC,WAA2BroE,EAAS23B,EAAMr4B,EAAG7P,KAAKktC,IAAM,OAAOhF,EACnF,IAAKmiE,GAAkC,mBAArBx6F,EAAKq9B,EAAGpsC,YAA4ByP,EAAS23B,EAAMr4B,EAAG7P,KAAKktC,IAAM,OAAOhF,EAC1F,MAAMxpC,UAAU,6C,gBCTlB,IAAIorG,EAAU,EAAQ,OAEtBA,EAAQA,EAAQK,EAAG,CAAE76D,OAAQ,EAAQ,U,UCHrCvxC,EAAOC,QAAU,SAAUkvC,GACzB,GAAiB,mBAANA,EAAkB,MAAMxuC,UAAUwuC,EAAK,uBAClD,OAAOA,I,gBCFT,IAAIu+D,EAAM,EAAQ,OAClB1tG,EAAOC,QAAU,SAAUkvC,EAAIlE,GAC7B,GAAiB,iBAANkE,GAA6B,UAAXu+D,EAAIv+D,GAAiB,MAAMxuC,UAAUsqC,GAClE,OAAQkE,I,gBCFV,IAAIw+D,EAAc,EAAQ,MAAR,CAAkB,eAChCC,EAAartG,MAAMiB,UACQgE,MAA3BooG,EAAWD,IAA2B,EAAQ,MAAR,CAAmBC,EAAYD,EAAa,IACtF3tG,EAAOC,QAAU,SAAUoB,GACzBusG,EAAWD,GAAatsG,IAAO,I,6BCJjC,IAAIwsG,EAAK,EAAQ,MAAR,EAAwB,GAIjC7tG,EAAOC,QAAU,SAAUqsG,EAAGhnG,EAAOwoG,GACnC,OAAOxoG,GAASwoG,EAAUD,EAAGvB,EAAGhnG,GAAOlF,OAAS,K,UCNlDJ,EAAOC,QAAU,SAAUkvC,EAAIzuC,EAAawC,EAAM6qG,GAChD,KAAM5+D,aAAczuC,SAAoC8E,IAAnBuoG,GAAgCA,KAAkB5+D,EACrF,MAAMxuC,UAAUuC,EAAO,2BACvB,OAAOisC,I,gBCHX,IAAI38B,EAAW,EAAQ,OACvBxS,EAAOC,QAAU,SAAUkvC,GACzB,IAAK38B,EAAS28B,GAAK,MAAMxuC,UAAUwuC,EAAK,sBACxC,OAAOA,I,4BCDT,IAAI6+D,EAAW,EAAQ,OACnBC,EAAkB,EAAQ,OAC1B1sF,EAAW,EAAQ,OAEvBvhB,EAAOC,QAAU,GAAGiuG,YAAc,SAAoBrtG,EAAkBkhB,GACtE,IAAIwrF,EAAIS,EAASpnG,MACbzG,EAAMohB,EAASgsF,EAAEntG,QACjB+tG,EAAKF,EAAgBptG,EAAQV,GAC7BgD,EAAO8qG,EAAgBlsF,EAAO5hB,GAC9Bg7E,EAAMpqE,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,EAC5C4P,EAAQxQ,KAAK0S,UAAa9R,IAAR21E,EAAoBh7E,EAAM8tG,EAAgB9yB,EAAKh7E,IAAQgD,EAAMhD,EAAMguG,GACrFC,EAAM,EAMV,IALIjrG,EAAOgrG,GAAMA,EAAKhrG,EAAOiS,IAC3Bg5F,GAAO,EACPjrG,GAAQiS,EAAQ,EAChB+4F,GAAM/4F,EAAQ,GAETA,KAAU,GACXjS,KAAQoqG,EAAGA,EAAEY,GAAMZ,EAAEpqG,UACboqG,EAAEY,GACdA,GAAMC,EACNjrG,GAAQirG,EACR,OAAOb,I,6BCtBX,IAAIS,EAAW,EAAQ,OACnBC,EAAkB,EAAQ,OAC1B1sF,EAAW,EAAQ,OACvBvhB,EAAOC,QAAU,SAAcoC,GAO7B,IANA,IAAIkrG,EAAIS,EAASpnG,MACbxG,EAASmhB,EAASgsF,EAAEntG,QACpBiuG,EAAOt9F,UAAU3Q,OACjBkF,EAAQ2oG,EAAgBI,EAAO,EAAIt9F,UAAU,QAAKvL,EAAWpF,GAC7D+6E,EAAMkzB,EAAO,EAAIt9F,UAAU,QAAKvL,EAChC8oG,OAAiB9oG,IAAR21E,EAAoB/6E,EAAS6tG,EAAgB9yB,EAAK/6E,GACxDkuG,EAAShpG,GAAOioG,EAAEjoG,KAAWjD,EACpC,OAAOkrG,I,gBCXT,IAAIgB,EAAY,EAAQ,OACpBhtF,EAAW,EAAQ,OACnB0sF,EAAkB,EAAQ,OAC9BjuG,EAAOC,QAAU,SAAUuuG,GACzB,OAAO,SAAUC,EAAOt7D,EAAIu7D,GAC1B,IAGIrsG,EAHAkrG,EAAIgB,EAAUE,GACdruG,EAASmhB,EAASgsF,EAAEntG,QACpBkF,EAAQ2oG,EAAgBS,EAAWtuG,GAIvC,GAAIouG,GAAer7D,GAAMA,GAAI,KAAO/yC,EAASkF,GAG3C,IAFAjD,EAAQkrG,EAAEjoG,OAEGjD,EAAO,OAAO,OAEtB,KAAMjC,EAASkF,EAAOA,IAAS,IAAIkpG,GAAelpG,KAASioG,IAC5DA,EAAEjoG,KAAW6tC,EAAI,OAAOq7D,GAAelpG,GAAS,EACpD,OAAQkpG,IAAgB,K,gBCb9B,IAAIzxB,EAAM,EAAQ,KACd4xB,EAAU,EAAQ,OAClBX,EAAW,EAAQ,OACnBzsF,EAAW,EAAQ,OACnBqtF,EAAM,EAAQ,OAClB5uG,EAAOC,QAAU,SAAU4uG,EAAMC,GAC/B,IAAIC,EAAiB,GAARF,EACTG,EAAoB,GAARH,EACZI,EAAkB,GAARJ,EACVK,EAAmB,GAARL,EACXM,EAAwB,GAARN,EAChBO,EAAmB,GAARP,GAAaM,EACxB9hG,EAASyhG,GAAWF,EACxB,OAAO,SAAUH,EAAOY,EAAYzD,GAQlC,IAPA,IAMIzhE,EAAKmlE,EANL/B,EAAIS,EAASS,GACbjzF,EAAOmzF,EAAQpB,GACfn+D,EAAI2tC,EAAIsyB,EAAYzD,EAAM,GAC1BxrG,EAASmhB,EAAS/F,EAAKpb,QACvBkF,EAAQ,EACR2X,EAAS8xF,EAAS1hG,EAAOohG,EAAOruG,GAAU4uG,EAAY3hG,EAAOohG,EAAO,QAAKjpG,EAEvEpF,EAASkF,EAAOA,IAAS,IAAI8pG,GAAY9pG,KAASkW,KAEtD8zF,EAAMlgE,EADNjF,EAAM3uB,EAAKlW,GACEA,EAAOioG,GAChBsB,GACF,GAAIE,EAAQ9xF,EAAO3X,GAASgqG,OACvB,GAAIA,EAAK,OAAQT,GACpB,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAO1kE,EACf,KAAK,EAAG,OAAO7kC,EACf,KAAK,EAAG2X,EAAO7a,KAAK+nC,QACf,GAAI+kE,EAAU,OAAO,EAGhC,OAAOC,GAAiB,EAAIF,GAAWC,EAAWA,EAAWjyF,K,gBCzCjE,IAAI0uF,EAAY,EAAQ,OACpBqC,EAAW,EAAQ,OACnBW,EAAU,EAAQ,OAClBptF,EAAW,EAAQ,OAEvBvhB,EAAOC,QAAU,SAAU2rG,EAAMyD,EAAYhB,EAAMkB,EAAMC,GACvD7D,EAAU0D,GACV,IAAI9B,EAAIS,EAASpC,GACbpwF,EAAOmzF,EAAQpB,GACfntG,EAASmhB,EAASgsF,EAAEntG,QACpBkF,EAAQkqG,EAAUpvG,EAAS,EAAI,EAC/BC,EAAImvG,GAAW,EAAI,EACvB,GAAInB,EAAO,EAAG,OAAS,CACrB,GAAI/oG,KAASkW,EAAM,CACjB+zF,EAAO/zF,EAAKlW,GACZA,GAASjF,EACT,MAGF,GADAiF,GAASjF,EACLmvG,EAAUlqG,EAAQ,EAAIlF,GAAUkF,EAClC,MAAM3E,UAAU,+CAGpB,KAAM6uG,EAAUlqG,GAAS,EAAIlF,EAASkF,EAAOA,GAASjF,EAAOiF,KAASkW,IACpE+zF,EAAOF,EAAWE,EAAM/zF,EAAKlW,GAAQA,EAAOioG,IAE9C,OAAOgC,I,gBC1BT,IAAI/8F,EAAW,EAAQ,OACnBhS,EAAU,EAAQ,MAClBivG,EAAU,EAAQ,MAAR,CAAkB,WAEhCzvG,EAAOC,QAAU,SAAUimD,GACzB,IAAI2mD,EASF,OARErsG,EAAQ0lD,KAGM,mBAFhB2mD,EAAI3mD,EAASjjD,cAEkB4pG,IAAMtsG,QAASC,EAAQqsG,EAAErrG,aAAaqrG,OAAIrnG,GACrEgN,EAASq6F,IAED,QADVA,EAAIA,EAAE4C,MACU5C,OAAIrnG,SAETA,IAANqnG,EAAkBtsG,MAAQssG,I,gBCbrC,IAAI6C,EAAqB,EAAQ,OAEjC1vG,EAAOC,QAAU,SAAUimD,EAAU9lD,GACnC,OAAO,IAAKsvG,EAAmBxpD,GAAxB,CAAmC9lD,K,6BCH5C,IAAIurG,EAAY,EAAQ,OACpBn5F,EAAW,EAAQ,OACnB0hF,EAAS,EAAQ,OACjByb,EAAa,GAAG3sG,MAChB4sG,EAAY,GAEZz4D,EAAY,SAAU+0D,EAAG/rG,EAAK8a,GAChC,KAAM9a,KAAOyvG,GAAY,CACvB,IAAK,IAAI9sG,EAAI,GAAIzC,EAAI,EAAGA,EAAIF,EAAKE,IAAKyC,EAAEzC,GAAK,KAAOA,EAAI,IAExDuvG,EAAUzvG,GAAO8nC,SAAS,MAAO,gBAAkBnlC,EAAEijB,KAAK,KAAO,KACjE,OAAO6pF,EAAUzvG,GAAK+rG,EAAGjxF,IAG7Bjb,EAAOC,QAAUgoC,SAASx2B,MAAQ,SAAcm6F,GAC9C,IAAI95F,EAAK65F,EAAU/kG,MACfipG,EAAWF,EAAW1tG,KAAK8O,UAAW,GACtC++F,EAAQ,WACV,IAAI70F,EAAO40F,EAASp9F,OAAOk9F,EAAW1tG,KAAK8O,YAC3C,OAAOnK,gBAAgBkpG,EAAQ34D,EAAUrlC,EAAImJ,EAAK7a,OAAQ6a,GAAQi5E,EAAOpiF,EAAImJ,EAAM2wF,IAGrF,OADIp5F,EAASV,EAAGtQ,aAAYsuG,EAAMtuG,UAAYsQ,EAAGtQ,WAC1CsuG,I,gBCtBT,IAAIpC,EAAM,EAAQ,OACdqC,EAAM,EAAQ,MAAR,CAAkB,eAExBC,EAAkD,aAA5CtC,EAAI,WAAc,OAAO38F,UAArB,IASd/Q,EAAOC,QAAU,SAAUkvC,GACzB,IAAIo+D,EAAG0C,EAAGxD,EACV,YAAcjnG,IAAP2pC,EAAmB,YAAqB,OAAPA,EAAc,OAEN,iBAApC8gE,EAVD,SAAU9gE,EAAI9tC,GACzB,IACE,OAAO8tC,EAAG9tC,GACV,MAAOoC,KAOOysG,CAAO3C,EAAIpsG,OAAOguC,GAAK4gE,IAAoBE,EAEvDD,EAAMtC,EAAIH,GAEM,WAAfd,EAAIiB,EAAIH,KAAsC,mBAAZA,EAAE4C,OAAuB,YAAc1D,I,UCrBhF,IAAI1pG,EAAW,GAAGA,SAElB/C,EAAOC,QAAU,SAAUkvC,GACzB,OAAOpsC,EAASd,KAAKktC,GAAInsC,MAAM,GAAI,K,4BCFrC,IAAIkqG,EAAK,WACL7/F,EAAS,EAAQ,OACjB+iG,EAAc,EAAQ,OACtBrzB,EAAM,EAAQ,KACdszB,EAAa,EAAQ,OACrBC,EAAQ,EAAQ,MAChBC,EAAc,EAAQ,OACtBt4B,EAAO,EAAQ,OACfu4B,EAAa,EAAQ,MACrBC,EAAc,EAAQ,OACtBC,EAAU,iBACVC,EAAW,EAAQ,MACnBC,EAAOH,EAAc,KAAO,OAE5BI,EAAW,SAAUjF,EAAMvqG,GAE7B,IACIyvG,EADAxrG,EAAQorG,EAAQrvG,GAEpB,GAAc,MAAViE,EAAe,OAAOsmG,EAAKnqG,GAAG6D,GAElC,IAAKwrG,EAAQlF,EAAKmF,GAAID,EAAOA,EAAQA,EAAMhuG,EACzC,GAAIguG,EAAM9mE,GAAK3oC,EAAK,OAAOyvG,GAI/B9wG,EAAOC,QAAU,CACf+wG,eAAgB,SAAUC,EAASC,EAAMnC,EAAQoC,GAC/C,IAAItE,EAAIoE,GAAQ,SAAUrF,EAAMwF,GAC9Bf,EAAWzE,EAAMiB,EAAGqE,EAAM,MAC1BtF,EAAKyF,GAAKH,EACVtF,EAAKnqG,GAAK4L,EAAO,MACjBu+F,EAAKmF,QAAKvrG,EACVomG,EAAK0F,QAAK9rG,EACVomG,EAAKgF,GAAQ,EACGprG,MAAZ4rG,GAAuBd,EAAMc,EAAUrC,EAAQnD,EAAKuF,GAAQvF,MAsDlE,OApDAwE,EAAYvD,EAAErrG,UAAW,CAGvBiwB,MAAO,WACL,IAAK,IAAIm6E,EAAO+E,EAAS/pG,KAAMsqG,GAAOzpF,EAAOmkF,EAAKnqG,GAAIqvG,EAAQlF,EAAKmF,GAAID,EAAOA,EAAQA,EAAMhuG,EAC1FguG,EAAMthE,GAAI,EACNshE,EAAM/5E,IAAG+5E,EAAM/5E,EAAI+5E,EAAM/5E,EAAEj0B,OAAI0C,UAC5BiiB,EAAKqpF,EAAMzwG,GAEpBurG,EAAKmF,GAAKnF,EAAK0F,QAAK9rG,EACpBomG,EAAKgF,GAAQ,GAIf,OAAU,SAAUvvG,GAClB,IAAIuqG,EAAO+E,EAAS/pG,KAAMsqG,GACtBJ,EAAQD,EAASjF,EAAMvqG,GAC3B,GAAIyvG,EAAO,CACT,IAAI5uG,EAAO4uG,EAAMhuG,EACb6zB,EAAOm6E,EAAM/5E,SACV60E,EAAKnqG,GAAGqvG,EAAMzwG,GACrBywG,EAAMthE,GAAI,EACN7Y,IAAMA,EAAK7zB,EAAIZ,GACfA,IAAMA,EAAK60B,EAAIJ,GACfi1E,EAAKmF,IAAMD,IAAOlF,EAAKmF,GAAK7uG,GAC5B0pG,EAAK0F,IAAMR,IAAOlF,EAAK0F,GAAK36E,GAChCi1E,EAAKgF,KACL,QAASE,GAIbtkG,QAAS,SAAiB6iG,GACxBsB,EAAS/pG,KAAMsqG,GAGf,IAFA,IACIJ,EADA1hE,EAAI2tC,EAAIsyB,EAAYt+F,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,EAAW,GAElEsrG,EAAQA,EAAQA,EAAMhuG,EAAI8D,KAAKmqG,IAGpC,IAFA3hE,EAAE0hE,EAAM3X,EAAG2X,EAAM9mE,EAAGpjC,MAEbkqG,GAASA,EAAMthE,GAAGshE,EAAQA,EAAM/5E,GAK3CnF,IAAK,SAAavwB,GAChB,QAASwvG,EAASF,EAAS/pG,KAAMsqG,GAAO7vG,MAGxCovG,GAAavD,EAAGL,EAAErrG,UAAW,OAAQ,CACvCojB,IAAK,WACH,OAAO+rF,EAAS/pG,KAAMsqG,GAAMN,MAGzB/D,GAET0E,IAAK,SAAU3F,EAAMvqG,EAAKgB,GACxB,IACIs0B,EAAMrxB,EADNwrG,EAAQD,EAASjF,EAAMvqG,GAoBzB,OAjBEyvG,EACFA,EAAM3X,EAAI92F,GAGVupG,EAAK0F,GAAKR,EAAQ,CAChBzwG,EAAGiF,EAAQorG,EAAQrvG,GAAK,GACxB2oC,EAAG3oC,EACH83F,EAAG92F,EACH00B,EAAGJ,EAAOi1E,EAAK0F,GACfxuG,OAAG0C,EACHgqC,GAAG,GAEAo8D,EAAKmF,KAAInF,EAAKmF,GAAKD,GACpBn6E,IAAMA,EAAK7zB,EAAIguG,GACnBlF,EAAKgF,KAES,MAAVtrG,IAAesmG,EAAKnqG,GAAG6D,GAASwrG,IAC7BlF,GAEXiF,SAAUA,EACVW,UAAW,SAAU3E,EAAGqE,EAAMnC,GAG5BwB,EAAY1D,EAAGqE,GAAM,SAAUO,EAAU/mG,GACvC9D,KAAKyqG,GAAKV,EAASc,EAAUP,GAC7BtqG,KAAK8qG,GAAKhnG,EACV9D,KAAK0qG,QAAK9rG,KACT,WAKD,IAJA,IAAIomG,EAAOhlG,KACP8D,EAAOkhG,EAAK8F,GACZZ,EAAQlF,EAAK0F,GAEVR,GAASA,EAAMthE,GAAGshE,EAAQA,EAAM/5E,EAEvC,OAAK60E,EAAKyF,KAAQzF,EAAK0F,GAAKR,EAAQA,EAAQA,EAAMhuG,EAAI8oG,EAAKyF,GAAGN,IAMnC94B,EAAK,EAApB,QAARvtE,EAA+BomG,EAAM9mE,EAC7B,UAARt/B,EAAiComG,EAAM3X,EAC5B,CAAC2X,EAAM9mE,EAAG8mE,EAAM3X,KAN7ByS,EAAKyF,QAAK7rG,EACHyyE,EAAK,MAMb82B,EAAS,UAAY,UAAWA,GAAQ,GAG3CyB,EAAWU,M,6BC5If,IAAId,EAAc,EAAQ,OACtBuB,EAAU,iBACVvE,EAAW,EAAQ,OACnB56F,EAAW,EAAQ,OACnB69F,EAAa,EAAQ,OACrBC,EAAQ,EAAQ,MAChBsB,EAAoB,EAAQ,OAC5BC,EAAO,EAAQ,OACflB,EAAW,EAAQ,MACnBmB,EAAYF,EAAkB,GAC9BG,EAAiBH,EAAkB,GACnCjxE,EAAK,EAGLqxE,EAAsB,SAAUpG,GAClC,OAAOA,EAAK0F,KAAO1F,EAAK0F,GAAK,IAAIW,IAE/BA,EAAsB,WACxBrrG,KAAKsyB,EAAI,IAEPg5E,EAAqB,SAAUC,EAAO9wG,GACxC,OAAOywG,EAAUK,EAAMj5E,GAAG,SAAUiW,GAClC,OAAOA,EAAG,KAAO9tC,MAGrB4wG,EAAoBzwG,UAAY,CAC9BojB,IAAK,SAAUvjB,GACb,IAAIyvG,EAAQoB,EAAmBtrG,KAAMvF,GACrC,GAAIyvG,EAAO,OAAOA,EAAM,IAE1Bl/E,IAAK,SAAUvwB,GACb,QAAS6wG,EAAmBtrG,KAAMvF,IAEpCizB,IAAK,SAAUjzB,EAAKgB,GAClB,IAAIyuG,EAAQoB,EAAmBtrG,KAAMvF,GACjCyvG,EAAOA,EAAM,GAAKzuG,EACjBuE,KAAKsyB,EAAE92B,KAAK,CAACf,EAAKgB,KAEzB,OAAU,SAAUhB,GAClB,IAAIiE,EAAQysG,EAAenrG,KAAKsyB,GAAG,SAAUiW,GAC3C,OAAOA,EAAG,KAAO9tC,KAGnB,OADKiE,GAAOsB,KAAKsyB,EAAEtxB,OAAOtC,EAAO,MACvBA,IAIdtF,EAAOC,QAAU,CACf+wG,eAAgB,SAAUC,EAASC,EAAMnC,EAAQoC,GAC/C,IAAItE,EAAIoE,GAAQ,SAAUrF,EAAMwF,GAC9Bf,EAAWzE,EAAMiB,EAAGqE,EAAM,MAC1BtF,EAAKyF,GAAKH,EACVtF,EAAKnqG,GAAKk/B,IACVirE,EAAK0F,QAAK9rG,EACMA,MAAZ4rG,GAAuBd,EAAMc,EAAUrC,EAAQnD,EAAKuF,GAAQvF,MAoBlE,OAlBAwE,EAAYvD,EAAErrG,UAAW,CAGvB,OAAU,SAAUH,GAClB,IAAKmR,EAASnR,GAAM,OAAO,EAC3B,IAAIomB,EAAOkqF,EAAQtwG,GACnB,OAAa,IAATomB,EAAsBuqF,EAAoBrB,EAAS/pG,KAAMsqG,IAAe,OAAE7vG,GACvEomB,GAAQoqF,EAAKpqF,EAAM7gB,KAAKnF,YAAcgmB,EAAK7gB,KAAKnF,KAIzDmwB,IAAK,SAAavwB,GAChB,IAAKmR,EAASnR,GAAM,OAAO,EAC3B,IAAIomB,EAAOkqF,EAAQtwG,GACnB,OAAa,IAATomB,EAAsBuqF,EAAoBrB,EAAS/pG,KAAMsqG,IAAOt/E,IAAIvwB,GACjEomB,GAAQoqF,EAAKpqF,EAAM7gB,KAAKnF,OAG5BorG,GAET0E,IAAK,SAAU3F,EAAMvqG,EAAKgB,GACxB,IAAIolB,EAAOkqF,EAAQvE,EAAS/rG,IAAM,GAGlC,OAFa,IAATomB,EAAeuqF,EAAoBpG,GAAMt3E,IAAIjzB,EAAKgB,GACjDolB,EAAKmkF,EAAKnqG,IAAMY,EACdupG,GAETwG,QAASJ,I,6BClFX,IAAIzgE,EAAS,EAAQ,MACjBw6D,EAAU,EAAQ,OAClBsG,EAAW,EAAQ,OACnBjC,EAAc,EAAQ,OACtBkC,EAAO,EAAQ,OACfhC,EAAQ,EAAQ,MAChBD,EAAa,EAAQ,OACrB79F,EAAW,EAAQ,OACnB+/F,EAAQ,EAAQ,OAChBC,EAAc,EAAQ,MACtBC,EAAiB,EAAQ,OACzBC,EAAoB,EAAQ,OAEhC1yG,EAAOC,QAAU,SAAUixG,EAAMD,EAAS0B,EAASC,EAAQ7D,EAAQ8D,GACjE,IAAIC,EAAOvhE,EAAO2/D,GACdrE,EAAIiG,EACJ3B,EAAQpC,EAAS,MAAQ,MACzBgE,EAAQlG,GAAKA,EAAErrG,UACf+rG,EAAI,GACJyF,EAAY,SAAUC,GACxB,IAAInhG,EAAKihG,EAAME,GACfZ,EAASU,EAAOE,EACP,UAAPA,GAEW,OAAPA,EAFc,SAAU/5E,GAC1B,QAAO25E,IAAYrgG,EAAS0mB,KAAapnB,EAAG7P,KAAK2E,KAAY,IAANsyB,EAAU,EAAIA,IAG5D,OAAP+5E,EAAe,SAAa/5E,GAC9B,OAAO25E,IAAYrgG,EAAS0mB,QAAK1zB,EAAYsM,EAAG7P,KAAK2E,KAAY,IAANsyB,EAAU,EAAIA,IAChE,OAAP+5E,EAAe,SAAa/5E,GAAqC,OAAhCpnB,EAAG7P,KAAK2E,KAAY,IAANsyB,EAAU,EAAIA,GAAWtyB,MACxE,SAAasyB,EAAGC,GAAwC,OAAnCrnB,EAAG7P,KAAK2E,KAAY,IAANsyB,EAAU,EAAIA,EAAGC,GAAWvyB,QAGvE,GAAgB,mBAALimG,IAAqBgG,GAAWE,EAAMvmG,UAAY+lG,GAAM,YACjE,IAAI1F,GAAIvsD,UAAUp+C,WAMb,CACL,IAAIzB,EAAW,IAAIosG,EAEfqG,EAAiBzyG,EAAS0wG,GAAO0B,EAAU,IAAM,EAAG,IAAMpyG,EAE1D0yG,EAAuBZ,GAAM,WAAc9xG,EAASmxB,IAAI,MAExDwhF,EAAmBZ,GAAY,SAAUa,GAAQ,IAAIxG,EAAEwG,MAEvDC,GAAcT,GAAWN,GAAM,WAIjC,IAFA,IAAIgB,EAAY,IAAI1G,EAChBvnG,EAAQ,EACLA,KAASiuG,EAAUpC,GAAO7rG,EAAOA,GACxC,OAAQiuG,EAAU3hF,KAAK,MAEpBwhF,KACHvG,EAAIoE,GAAQ,SAAUpwG,EAAQuwG,GAC5Bf,EAAWxvG,EAAQgsG,EAAGqE,GACtB,IAAItF,EAAO8G,EAAkB,IAAII,EAAQjyG,EAAQgsG,GAEjD,OADgBrnG,MAAZ4rG,GAAuBd,EAAMc,EAAUrC,EAAQnD,EAAKuF,GAAQvF,GACzDA,MAEPpqG,UAAYuxG,EACdA,EAAM9vG,YAAc4pG,IAElBsG,GAAwBG,KAC1BN,EAAU,UACVA,EAAU,OACVjE,GAAUiE,EAAU,SAElBM,GAAcJ,IAAgBF,EAAU7B,GAExC0B,GAAWE,EAAMthF,cAAcshF,EAAMthF,WApCzCo7E,EAAI+F,EAAO5B,eAAeC,EAASC,EAAMnC,EAAQoC,GACjDf,EAAYvD,EAAErrG,UAAWmxG,GACzBL,EAAKkB,MAAO,EA4Cd,OAPAf,EAAe5F,EAAGqE,GAElB3D,EAAE2D,GAAQrE,EACVd,EAAQA,EAAQK,EAAIL,EAAQY,EAAIZ,EAAQG,GAAKW,GAAKiG,GAAOvF,GAEpDsF,GAASD,EAAOpB,UAAU3E,EAAGqE,EAAMnC,GAEjClC,I,UCnFT,IAAIpB,EAAOzrG,EAAOC,QAAU,CAAEi6E,QAAS,UACrB,iBAAPwxB,MAAiBA,IAAMD,I,6BCAlC,IAAIgI,EAAkB,EAAQ,OAC1BtG,EAAa,EAAQ,OAEzBntG,EAAOC,QAAU,SAAUmoD,EAAQ9iD,EAAOjD,GACpCiD,KAAS8iD,EAAQqrD,EAAgBrkE,EAAEgZ,EAAQ9iD,EAAO6nG,EAAW,EAAG9qG,IAC/D+lD,EAAO9iD,GAASjD,I,cCLvB,IAAIspG,EAAY,EAAQ,OACxB3rG,EAAOC,QAAU,SAAU6R,EAAI85F,EAAMxrG,GAEnC,GADAurG,EAAU75F,QACGtM,IAATomG,EAAoB,OAAO95F,EAC/B,OAAQ1R,GACN,KAAK,EAAG,OAAO,SAAU84B,GACvB,OAAOpnB,EAAG7P,KAAK2pG,EAAM1yE,IAEvB,KAAK,EAAG,OAAO,SAAUA,EAAGC,GAC1B,OAAOrnB,EAAG7P,KAAK2pG,EAAM1yE,EAAGC,IAE1B,KAAK,EAAG,OAAO,SAAUD,EAAGC,EAAGwF,GAC7B,OAAO7sB,EAAG7P,KAAK2pG,EAAM1yE,EAAGC,EAAGwF,IAG/B,OAAO,WACL,OAAO7sB,EAAGwJ,MAAMswF,EAAM76F,c,6BCf1B,IAAIwhG,EAAQ,EAAQ,OAChBtkE,EAAU19B,KAAK/O,UAAUysC,QACzBylE,EAAenjG,KAAK/O,UAAUmyG,YAE9BC,EAAK,SAAUC,GACjB,OAAOA,EAAM,EAAIA,EAAM,IAAMA,GAI/B7zG,EAAOC,QAAWsyG,GAAM,WACtB,MAAiD,4BAA1CmB,EAAazxG,KAAK,IAAIsO,MAAK,sBAC7BgiG,GAAM,WACXmB,EAAazxG,KAAK,IAAIsO,KAAKujG,SACvB,WACJ,IAAK5yF,SAAS+sB,EAAQhsC,KAAK2E,OAAQ,MAAMw+C,WAAW,sBACpD,IAAIsyB,EAAI9wE,KACJorB,EAAI0lD,EAAEq8B,iBACNpxB,EAAIjL,EAAEs8B,qBACN7+D,EAAInjB,EAAI,EAAI,IAAMA,EAAI,KAAO,IAAM,GACvC,OAAOmjB,GAAK,QAAUvwC,KAAKyc,IAAI2Q,IAAIhvB,MAAMmyC,GAAK,GAAK,GACjD,IAAMy+D,EAAGl8B,EAAEu8B,cAAgB,GAAK,IAAML,EAAGl8B,EAAEw8B,cAC3C,IAAMN,EAAGl8B,EAAEy8B,eAAiB,IAAMP,EAAGl8B,EAAE08B,iBACvC,IAAMR,EAAGl8B,EAAE28B,iBAAmB,KAAO1xB,EAAI,GAAKA,EAAI,IAAMixB,EAAGjxB,IAAM,KACjE+wB,G,2BCxBJ,IAAItG,EAAW,EAAQ,OACnBE,EAAc,EAAQ,OACtBgH,EAAS,SAEbt0G,EAAOC,QAAU,SAAUy9E,GACzB,GAAa,WAATA,GAAqBA,IAAS42B,GAAmB,YAAT52B,EAAoB,MAAM/8E,UAAU,kBAChF,OAAO2sG,EAAYF,EAASxmG,MAAO82E,GAAQ42B,K,UCN7Ct0G,EAAOC,QAAU,SAAUkvC,GACzB,GAAU3pC,MAAN2pC,EAAiB,MAAMxuC,UAAU,yBAA2BwuC,GAChE,OAAOA,I,gBCFTnvC,EAAOC,SAAW,EAAQ,MAAR,EAAoB,WACpC,OAA+E,GAAxEkB,OAAOC,eAAe,GAAI,IAAK,CAAEwjB,IAAK,WAAc,OAAO,KAAQsU,M,gBCF5E,IAAI1mB,EAAW,EAAQ,OACnBm1B,EAAW,iBAEXkkE,EAAKr5F,EAASm1B,IAAan1B,EAASm1B,EAASC,eACjD5nC,EAAOC,QAAU,SAAUkvC,GACzB,OAAO08D,EAAKlkE,EAASC,cAAcuH,GAAM,K,UCJ3CnvC,EAAOC,QAAU,gGAEf87E,MAAM,M,eCFR,IAAIw4B,EAAU,EAAQ,OAClBC,EAAO,EAAQ,OACfC,EAAM,EAAQ,OAClBz0G,EAAOC,QAAU,SAAUkvC,GACzB,IAAIlyB,EAASs3F,EAAQplE,GACjBulE,EAAaF,EAAKplE,EACtB,GAAIslE,EAKF,IAJA,IAGIrzG,EAHAszG,EAAUD,EAAWvlE,GACrBylE,EAASH,EAAIrlE,EACb/uC,EAAI,EAEDs0G,EAAQv0G,OAASC,GAAOu0G,EAAO3yG,KAAKktC,EAAI9tC,EAAMszG,EAAQt0G,OAAO4c,EAAO7a,KAAKf,GAChF,OAAO4b,I,gBCbX,IAAIs0B,EAAS,EAAQ,MACjBk6D,EAAO,EAAQ,OACfK,EAAO,EAAQ,OACfuG,EAAW,EAAQ,OACnBt1B,EAAM,EAAQ,KAGdgvB,EAAU,SAAU/nG,EAAMd,EAAM6I,GAClC,IAQI1K,EAAK2qG,EAAKzM,EAAK16F,EARfonG,EAAYjoG,EAAO+nG,EAAQG,EAC3BC,EAAYnoG,EAAO+nG,EAAQK,EAC3BC,EAAYroG,EAAO+nG,EAAQO,EAC3BC,EAAWvoG,EAAO+nG,EAAQj0B,EAC1B00B,EAAUxoG,EAAO+nG,EAAQU,EACzB5rG,EAASsrG,EAAY56D,EAAS86D,EAAY96D,EAAOruC,KAAUquC,EAAOruC,GAAQ,KAAOquC,EAAOruC,IAAS,IAAa,UAC9GjD,EAAUksG,EAAYV,EAAOA,EAAKvoG,KAAUuoG,EAAKvoG,GAAQ,IACzD0pG,EAAW3sG,EAAiB,YAAMA,EAAiB,UAAI,IAG3D,IAAKoB,KADD8qG,IAAWpgG,EAAS7I,GACZ6I,EAIVwzF,IAFAyM,GAAOC,GAAaprG,QAA0B2E,IAAhB3E,EAAOQ,IAExBR,EAASkL,GAAQ1K,GAE9BwD,EAAM2nG,GAAWR,EAAMjvB,EAAIwiB,EAAKhuD,GAAUg7D,GAA0B,mBAAPhN,EAAoBxiB,EAAI90C,SAAShmC,KAAMs9F,GAAOA,EAEvG1+F,GAAQwxG,EAASxxG,EAAQQ,EAAKk+F,EAAKv7F,EAAO+nG,EAAQiB,GAElD/sG,EAAQoB,IAAQk+F,GAAKuM,EAAK7rG,EAASoB,EAAKwD,GACxC0nG,GAAYK,EAASvrG,IAAQk+F,IAAKqN,EAASvrG,GAAOk+F,IAG1DhuD,EAAOk6D,KAAOA,EAEdM,EAAQG,EAAI,EACZH,EAAQK,EAAI,EACZL,EAAQO,EAAI,EACZP,EAAQj0B,EAAI,EACZi0B,EAAQU,EAAI,GACZV,EAAQY,EAAI,GACZZ,EAAQiB,EAAI,GACZjB,EAAQgB,EAAI,IACZ/sG,EAAOC,QAAU8rG,G,eC1CjB,IAAI8I,EAAQ,EAAQ,MAAR,CAAkB,SAC9B70G,EAAOC,QAAU,SAAUgzG,GACzB,IAAI6B,EAAK,IACT,IACE,MAAM7B,GAAK6B,GACX,MAAOrxG,GACP,IAEE,OADAqxG,EAAGD,IAAS,GACJ,MAAM5B,GAAK6B,GACnB,MAAO1lE,KACT,OAAO,I,UCVXpvC,EAAOC,QAAU,SAAUquC,GACzB,IACE,QAASA,IACT,MAAO7qC,GACP,OAAO,K,6BCHX,EAAQ,OACR,IAAI4uG,EAAW,EAAQ,OACnBvG,EAAO,EAAQ,OACfyG,EAAQ,EAAQ,OAChBwC,EAAU,EAAQ,OAClBC,EAAM,EAAQ,OACdC,EAAa,EAAQ,OAErBxF,EAAUuF,EAAI,WAEdE,GAAiC3C,GAAM,WAIzC,IAAIuC,EAAK,IAMT,OALAA,EAAGxmE,KAAO,WACR,IAAIrxB,EAAS,GAEb,OADAA,EAAO8W,OAAS,CAAEmF,EAAG,KACdjc,GAEyB,MAA3B,GAAG02B,QAAQmhE,EAAI,WAGpBK,EAAoC,WAEtC,IAAIL,EAAK,OACLM,EAAeN,EAAGxmE,KACtBwmE,EAAGxmE,KAAO,WAAc,OAAO8mE,EAAa95F,MAAM1U,KAAMmK,YACxD,IAAIkM,EAAS,KAAK8+D,MAAM+4B,GACxB,OAAyB,IAAlB73F,EAAO7c,QAA8B,MAAd6c,EAAO,IAA4B,MAAdA,EAAO,GANpB,GASxCjd,EAAOC,QAAU,SAAUgzG,EAAK7yG,EAAQkuC,GACtC,IAAI+mE,EAASL,EAAI/B,GAEbqC,GAAuB/C,GAAM,WAE/B,IAAIhF,EAAI,GAER,OADAA,EAAE8H,GAAU,WAAc,OAAO,GACZ,GAAd,GAAGpC,GAAK1F,MAGbgI,EAAoBD,GAAuB/C,GAAM,WAEnD,IAAIiD,GAAa,EACbV,EAAK,IAST,OARAA,EAAGxmE,KAAO,WAAiC,OAAnBknE,GAAa,EAAa,MACtC,UAARvC,IAGF6B,EAAG7xG,YAAc,GACjB6xG,EAAG7xG,YAAYwsG,GAAW,WAAc,OAAOqF,IAEjDA,EAAGO,GAAQ,KACHG,UACLhwG,EAEL,IACG8vG,IACAC,GACQ,YAARtC,IAAsBiC,GACd,UAARjC,IAAoBkC,EACrB,CACA,IAAIM,EAAqB,IAAIJ,GACzB9qE,EAAM+D,EACRymE,EACAM,EACA,GAAGpC,IACH,SAAyByC,EAAclzB,EAAQ1hE,EAAK60F,EAAMC,GACxD,OAAIpzB,EAAOl0C,OAAS2mE,EACdK,IAAwBM,EAInB,CAAEzzG,MAAM,EAAME,MAAOozG,EAAmBxzG,KAAKugF,EAAQ1hE,EAAK60F,IAE5D,CAAExzG,MAAM,EAAME,MAAOqzG,EAAazzG,KAAK6e,EAAK0hE,EAAQmzB,IAEtD,CAAExzG,MAAM,MAGf0zG,EAAQtrE,EAAI,GACZurE,EAAOvrE,EAAI,GAEf8nE,EAAS0D,OAAOv0G,UAAWyxG,EAAK4C,GAChC/J,EAAKkK,OAAOx0G,UAAW6zG,EAAkB,GAAVj1G,EAG3B,SAAU61G,EAAQt6F,GAAO,OAAOm6F,EAAK7zG,KAAKg0G,EAAQrvG,KAAM+U,IAGxD,SAAUs6F,GAAU,OAAOH,EAAK7zG,KAAKg0G,EAAQrvG,W,6BC1FrD,IAAIwmG,EAAW,EAAQ,OACvBptG,EAAOC,QAAU,WACf,IAAI2rG,EAAOwB,EAASxmG,MAChBqW,EAAS,GAMb,OALI2uF,EAAKr6D,SAAQt0B,GAAU,KACvB2uF,EAAKsK,aAAYj5F,GAAU,KAC3B2uF,EAAKuK,YAAWl5F,GAAU,KAC1B2uF,EAAKkC,UAAS7wF,GAAU,KACxB2uF,EAAKwK,SAAQn5F,GAAU,KACpBA,I,6BCTT,IAAIzc,EAAU,EAAQ,MAClBgS,EAAW,EAAQ,OACnB+O,EAAW,EAAQ,OACnBw7D,EAAM,EAAQ,KACds5B,EAAuB,EAAQ,MAAR,CAAkB,sBAgC7Cr2G,EAAOC,QA9BP,SAASq2G,EAAiBz1G,EAAQqlD,EAAUn6C,EAAQwqG,EAAWx0F,EAAOy0F,EAAOC,EAAQrsF,GAMnF,IALA,IAGIgK,EAASsiF,EAHTC,EAAc50F,EACd60F,EAAc,EACdC,IAAQJ,GAAS15B,EAAI05B,EAAQrsF,EAAS,GAGnCwsF,EAAcL,GAAW,CAC9B,GAAIK,KAAe7qG,EAAQ,CASzB,GARAqoB,EAAUyiF,EAAQA,EAAM9qG,EAAO6qG,GAAcA,EAAa1wD,GAAYn6C,EAAO6qG,GAE7EF,GAAa,EACTlkG,EAAS4hB,KAEXsiF,OAA4BlxG,KAD5BkxG,EAAatiF,EAAQiiF,MACqBK,EAAal2G,EAAQ4zB,IAG7DsiF,GAAcF,EAAQ,EACxBG,EAAcL,EAAiBz1G,EAAQqlD,EAAU9xB,EAAS7S,EAAS6S,EAAQh0B,QAASu2G,EAAaH,EAAQ,GAAK,MACzG,CACL,GAAIG,GAAe,iBAAkB,MAAMh2G,YAC3CE,EAAO81G,GAAeviF,EAGxBuiF,IAEFC,IAEF,OAAOD,I,eCnCT,IAAI55B,EAAM,EAAQ,KACd96E,EAAO,EAAQ,OACf60G,EAAc,EAAQ,OACtB1J,EAAW,EAAQ,OACnB7rF,EAAW,EAAQ,OACnBw1F,EAAY,EAAQ,OACpBC,EAAQ,GACRC,EAAS,GACTh3G,EAAUD,EAAOC,QAAU,SAAUmxG,EAAU9wD,EAASxuC,EAAI85F,EAAMsL,GACpE,IAGI92G,EAAQ63E,EAAMt2E,EAAUsb,EAHxBk6F,EAASD,EAAW,WAAc,OAAO9F,GAAc2F,EAAU3F,GACjEhiE,EAAI2tC,EAAIjrE,EAAI85F,EAAMtrD,EAAU,EAAI,GAChCh7C,EAAQ,EAEZ,GAAqB,mBAAV6xG,EAAsB,MAAMx2G,UAAUywG,EAAW,qBAE5D,GAAI0F,EAAYK,IAAS,IAAK/2G,EAASmhB,EAAS6vF,EAAShxG,QAASA,EAASkF,EAAOA,IAEhF,IADA2X,EAASqjC,EAAUlR,EAAEg+D,EAASn1B,EAAOm5B,EAAS9rG,IAAQ,GAAI2yE,EAAK,IAAM7oC,EAAEgiE,EAAS9rG,OACjE0xG,GAAS/5F,IAAWg6F,EAAQ,OAAOh6F,OAC7C,IAAKtb,EAAWw1G,EAAOl1G,KAAKmvG,KAAan5B,EAAOt2E,EAASO,QAAQC,MAEtE,IADA8a,EAAShb,EAAKN,EAAUytC,EAAG6oC,EAAK51E,MAAOi+C,MACxB02D,GAAS/5F,IAAWg6F,EAAQ,OAAOh6F,GAGtDhd,EAAQ+2G,MAAQA,EAChB/2G,EAAQg3G,OAASA,G,gBCxBjBj3G,EAAOC,QAAU,EAAQ,KAAR,CAAqB,4BAA6BgoC,SAASllC,W,SCC5E,IAAIwuC,EAASvxC,EAAOC,QAA2B,oBAAV8Z,QAAyBA,OAAOnV,MAAQA,KACzEmV,OAAwB,oBAARyB,MAAuBA,KAAK5W,MAAQA,KAAO4W,KAE3DysB,SAAS,cAATA,GACc,iBAAPglE,MAAiBA,IAAM17D,I,UCLlC,IAAI7sB,EAAiB,GAAGA,eACxB1kB,EAAOC,QAAU,SAAUkvC,EAAI9tC,GAC7B,OAAOqjB,EAAeziB,KAAKktC,EAAI9tC,K,gBCFjC,IAAI6rG,EAAK,EAAQ,OACbC,EAAa,EAAQ,OACzBntG,EAAOC,QAAU,EAAQ,OAAoB,SAAUmoD,EAAQ/mD,EAAKgB,GAClE,OAAO6qG,EAAG99D,EAAEgZ,EAAQ/mD,EAAK8rG,EAAW,EAAG9qG,KACrC,SAAU+lD,EAAQ/mD,EAAKgB,GAEzB,OADA+lD,EAAO/mD,GAAOgB,EACP+lD,I,gBCNT,IAAIzgB,EAAW,iBACf3nC,EAAOC,QAAU0nC,GAAYA,EAASqB,iB,eCDtChpC,EAAOC,SAAW,EAAQ,SAAsB,EAAQ,MAAR,EAAoB,WAClE,OAA4G,GAArGkB,OAAOC,eAAe,EAAQ,MAAR,CAAyB,OAAQ,IAAK,CAAEwjB,IAAK,WAAc,OAAO,KAAQsU,M,gBCDzG,IAAI1mB,EAAW,EAAQ,OACnB4kG,EAAiB,aACrBp3G,EAAOC,QAAU,SAAU2rG,EAAM/qG,EAAQgsG,GACvC,IACI/0B,EADAw0B,EAAIzrG,EAAOoC,YAIb,OAFEqpG,IAAMO,GAAiB,mBAALP,IAAoBx0B,EAAIw0B,EAAE9qG,aAAeqrG,EAAErrG,WAAagR,EAASslE,IAAMs/B,GAC3FA,EAAexL,EAAM9zB,GACd8zB,I,UCNX5rG,EAAOC,QAAU,SAAU6R,EAAImJ,EAAM2wF,GACnC,IAAIyL,OAAc7xG,IAATomG,EACT,OAAQ3wF,EAAK7a,QACX,KAAK,EAAG,OAAOi3G,EAAKvlG,IACAA,EAAG7P,KAAK2pG,GAC5B,KAAK,EAAG,OAAOyL,EAAKvlG,EAAGmJ,EAAK,IACRnJ,EAAG7P,KAAK2pG,EAAM3wF,EAAK,IACvC,KAAK,EAAG,OAAOo8F,EAAKvlG,EAAGmJ,EAAK,GAAIA,EAAK,IACjBnJ,EAAG7P,KAAK2pG,EAAM3wF,EAAK,GAAIA,EAAK,IAChD,KAAK,EAAG,OAAOo8F,EAAKvlG,EAAGmJ,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC1BnJ,EAAG7P,KAAK2pG,EAAM3wF,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzD,KAAK,EAAG,OAAOo8F,EAAKvlG,EAAGmJ,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACnCnJ,EAAG7P,KAAK2pG,EAAM3wF,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAClE,OAAOnJ,EAAGwJ,MAAMswF,EAAM3wF,K,gBCb1B,IAAIyyF,EAAM,EAAQ,OAElB1tG,EAAOC,QAAUkB,OAAO,KAAKm2G,qBAAqB,GAAKn2G,OAAS,SAAUguC,GACxE,MAAkB,UAAXu+D,EAAIv+D,GAAkBA,EAAG4sC,MAAM,IAAM56E,OAAOguC,K,gBCHrD,IAAIooE,EAAY,EAAQ,OACpBL,EAAW,EAAQ,MAAR,CAAkB,YAC7BtJ,EAAartG,MAAMiB,UAEvBxB,EAAOC,QAAU,SAAUkvC,GACzB,YAAc3pC,IAAP2pC,IAAqBooE,EAAUh3G,QAAU4uC,GAAMy+D,EAAWsJ,KAAc/nE,K,eCLjF,IAAIu+D,EAAM,EAAQ,OAClB1tG,EAAOC,QAAUM,MAAMC,SAAW,SAAiBmb,GACjD,MAAmB,SAAZ+xF,EAAI/xF,K,gBCFb,IAAInJ,EAAW,EAAQ,OACnBlM,EAAQ1B,KAAK0B,MACjBtG,EAAOC,QAAU,SAAmBkvC,GAClC,OAAQ38B,EAAS28B,IAAOjuB,SAASiuB,IAAO7oC,EAAM6oC,KAAQA,I,UCJxDnvC,EAAOC,QAAU,SAAUkvC,GACzB,MAAqB,iBAAPA,EAAyB,OAAPA,EAA4B,mBAAPA,I,gBCAvD,IAAI38B,EAAW,EAAQ,OACnBk7F,EAAM,EAAQ,OACdmH,EAAQ,EAAQ,MAAR,CAAkB,SAC9B70G,EAAOC,QAAU,SAAUkvC,GACzB,IAAIqoE,EACJ,OAAOhlG,EAAS28B,UAAmC3pC,KAA1BgyG,EAAWroE,EAAG0lE,MAA0B2C,EAAsB,UAAX9J,EAAIv+D,M,gBCLlF,IAAIi+D,EAAW,EAAQ,OACvBptG,EAAOC,QAAU,SAAU0B,EAAUmQ,EAAIzP,EAAOi+C,GAC9C,IACE,OAAOA,EAAUxuC,EAAGs7F,EAAS/qG,GAAO,GAAIA,EAAM,IAAMyP,EAAGzP,GAEvD,MAAOoB,GACP,IAAIu7E,EAAMr9E,EAAiB,OAE3B,WADY6D,IAARw5E,GAAmBouB,EAASpuB,EAAI/8E,KAAKN,IACnC8B,K,6BCRV,IAAI4J,EAAS,EAAQ,OACjBtM,EAAa,EAAQ,OACrB0xG,EAAiB,EAAQ,OACzBgF,EAAoB,GAGxB,EAAQ,MAAR,CAAmBA,EAAmB,EAAQ,MAAR,CAAkB,aAAa,WAAc,OAAO7wG,QAE1F5G,EAAOC,QAAU,SAAUS,EAAawwG,EAAMhvG,GAC5CxB,EAAYc,UAAY6L,EAAOoqG,EAAmB,CAAEv1G,KAAMnB,EAAW,EAAGmB,KACxEuwG,EAAe/xG,EAAawwG,EAAO,e,6BCVrC,IAAIwG,EAAU,EAAQ,MAClB3L,EAAU,EAAQ,OAClBsG,EAAW,EAAQ,OACnBvG,EAAO,EAAQ,OACfyL,EAAY,EAAQ,OACpBI,EAAc,EAAQ,OACtBlF,EAAiB,EAAQ,OACzBjqD,EAAiB,EAAQ,KACzB0uD,EAAW,EAAQ,MAAR,CAAkB,YAC7BU,IAAU,GAAGl2F,MAAQ,QAAU,GAAGA,QAElCm2F,EAAO,OACPC,EAAS,SAETC,EAAa,WAAc,OAAOnxG,MAEtC5G,EAAOC,QAAU,SAAU6yG,EAAM5B,EAAMxwG,EAAawB,EAAM81G,EAASC,EAAQC,GACzEP,EAAYj3G,EAAawwG,EAAMhvG,GAC/B,IAeIywG,EAAStxG,EAAKo2G,EAfdU,EAAY,SAAUztG,GACxB,IAAKktG,GAASltG,KAAQqoG,EAAO,OAAOA,EAAMroG,GAC1C,OAAQA,GACN,KAAKmtG,EACL,KAAKC,EAAQ,OAAO,WAAoB,OAAO,IAAIp3G,EAAYkG,KAAM8D,IACrE,OAAO,WAAqB,OAAO,IAAIhK,EAAYkG,KAAM8D,KAEzDqlG,EAAMmB,EAAO,YACbkH,EAAaJ,GAAWF,EACxBO,GAAa,EACbtF,EAAQD,EAAKtxG,UACb82G,EAAUvF,EAAMmE,IAAanE,EAnBjB,eAmBuCiF,GAAWjF,EAAMiF,GACpEO,EAAWD,GAAWH,EAAUH,GAChCQ,EAAWR,EAAWI,EAAwBD,EAAU,WAArBI,OAAkC/yG,EACrEizG,EAAqB,SAARvH,GAAkB6B,EAAMzyD,SAAqBg4D,EAwB9D,GArBIG,IACFhB,EAAoBjvD,EAAeiwD,EAAWx2G,KAAK,IAAI6wG,OAC7B3xG,OAAOK,WAAai2G,EAAkBv1G,OAE9DuwG,EAAegF,EAAmB1H,GAAK,GAElC2H,GAAiD,mBAA/BD,EAAkBP,IAAyBpL,EAAK2L,EAAmBP,EAAUa,IAIpGK,GAAcE,GAAWA,EAAQp1G,OAAS40G,IAC5CO,GAAa,EACbE,EAAW,WAAoB,OAAOD,EAAQr2G,KAAK2E,QAG/C8wG,IAAWQ,IAAYN,IAASS,GAAetF,EAAMmE,IACzDpL,EAAKiH,EAAOmE,EAAUqB,GAGxBhB,EAAUrG,GAAQqH,EAClBhB,EAAUxH,GAAOgI,EACbC,EAMF,GALArF,EAAU,CACRtuG,OAAQ+zG,EAAaG,EAAWJ,EAAUL,GAC1Cp2F,KAAMu2F,EAASM,EAAWJ,EAAUN,GACpCv3D,QAASk4D,GAEPN,EAAQ,IAAK72G,KAAOsxG,EAChBtxG,KAAO0xG,GAAQV,EAASU,EAAO1xG,EAAKsxG,EAAQtxG,SAC7C0qG,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK0L,GAASS,GAAanH,EAAMyB,GAEtE,OAAOA,I,eCnET,IAAIuE,EAAW,EAAQ,MAAR,CAAkB,YAC7BwB,GAAe,EAEnB,IACE,IAAIC,EAAQ,CAAC,GAAGzB,KAChByB,EAAc,OAAI,WAAcD,GAAe,GAE/Cn4G,MAAM4C,KAAKw1G,GAAO,WAAc,MAAM,KACtC,MAAOl1G,IAETzD,EAAOC,QAAU,SAAUquC,EAAMsqE,GAC/B,IAAKA,IAAgBF,EAAc,OAAO,EAC1C,IAAIG,GAAO,EACX,IACE,IAAI34G,EAAM,CAAC,GACPmzG,EAAOnzG,EAAIg3G,KACf7D,EAAKnxG,KAAO,WAAc,MAAO,CAAEC,KAAM02G,GAAO,IAChD34G,EAAIg3G,GAAY,WAAc,OAAO7D,GACrC/kE,EAAKpuC,GACL,MAAOuD,IACT,OAAOo1G,I,UCpBT74G,EAAOC,QAAU,SAAUkC,EAAME,GAC/B,MAAO,CAAEA,MAAOA,EAAOF,OAAQA,K,UCDjCnC,EAAOC,QAAU,I,SCAjBD,EAAOC,SAAU,G,UCCjB,IAAI64G,EAASl0G,KAAKm0G,MAClB/4G,EAAOC,SAAY64G,GAEdA,EAAO,IAAM,oBAAsBA,EAAO,IAAM,qBAE7B,OAAnBA,GAAQ,OACT,SAAe1rG,GACjB,OAAmB,IAAXA,GAAKA,GAAUA,EAAIA,GAAK,MAAQA,EAAI,KAAOA,EAAIA,EAAIA,EAAI,EAAIxI,KAAKC,IAAIuI,GAAK,GAC/E0rG,G,gBCRJ,IAAI13F,EAAO,EAAQ,OACfnb,EAAMrB,KAAKqB,IACXk0E,EAAUl0E,EAAI,GAAI,IAClB+yG,EAAY/yG,EAAI,GAAI,IACpBgzG,EAAQhzG,EAAI,EAAG,MAAQ,EAAI+yG,GAC3BE,EAAQjzG,EAAI,GAAI,KAMpBjG,EAAOC,QAAU2E,KAAKu0G,QAAU,SAAgB/rG,GAC9C,IAEI8rB,EAAGjc,EAFHm8F,EAAOx0G,KAAKyc,IAAIjU,GAChBisG,EAAQj4F,EAAKhU,GAEjB,OAAIgsG,EAAOF,EAAcG,GAAwBD,EAAOF,EAAQF,EAPrD,EAAI7+B,EAAU,EAAIA,GAOgD++B,EAAQF,GAErF/7F,GADAic,GAAK,EAAI8/E,EAAY7+B,GAAWi/B,IAClBlgF,EAAIkgF,IAELH,GAASh8F,GAAUA,EAAeo8F,GAAQniC,KAChDmiC,EAAQp8F,I,UCpBjBjd,EAAOC,QAAU2E,KAAK00G,OAAS,SAAelsG,GAC5C,OAAQA,GAAKA,IAAM,MAAQA,EAAI,KAAOA,EAAIA,EAAIA,EAAI,EAAIxI,KAAK4sC,IAAI,EAAIpkC,K,UCDrEpN,EAAOC,QAAU2E,KAAKwc,MAAQ,SAAchU,GAE1C,OAAmB,IAAXA,GAAKA,IAAWA,GAAKA,EAAIA,EAAIA,EAAI,GAAK,EAAI,I,gBCHpD,IAAImsG,EAAO,EAAQ,MAAR,CAAkB,QACzB/mG,EAAW,EAAQ,OACnBof,EAAM,EAAQ,OACd4nF,EAAU,WACV74E,EAAK,EACL84E,EAAet4G,OAAOs4G,cAAgB,WACxC,OAAO,GAELC,GAAU,EAAQ,MAAR,EAAoB,WAChC,OAAOD,EAAat4G,OAAOw4G,kBAAkB,QAE3CC,EAAU,SAAUzqE,GACtBqqE,EAAQrqE,EAAIoqE,EAAM,CAAEl3G,MAAO,CACzBhC,EAAG,OAAQsgC,EACXk5E,EAAG,OAgCHvH,EAAOtyG,EAAOC,QAAU,CAC1BgzG,IAAKsG,EACL/F,MAAM,EACN9C,QAhCY,SAAUvhE,EAAI9hC,GAE1B,IAAKmF,EAAS28B,GAAK,MAAoB,iBAANA,EAAiBA,GAAmB,iBAANA,EAAiB,IAAM,KAAOA,EAC7F,IAAKvd,EAAIud,EAAIoqE,GAAO,CAElB,IAAKE,EAAatqE,GAAK,MAAO,IAE9B,IAAK9hC,EAAQ,MAAO,IAEpBusG,EAAQzqE,GAER,OAAOA,EAAGoqE,GAAMl5G,GAsBlBsxG,QApBY,SAAUxiE,EAAI9hC,GAC1B,IAAKukB,EAAIud,EAAIoqE,GAAO,CAElB,IAAKE,EAAatqE,GAAK,OAAO,EAE9B,IAAK9hC,EAAQ,OAAO,EAEpBusG,EAAQzqE,GAER,OAAOA,EAAGoqE,GAAMM,GAYlBC,SATa,SAAU3qE,GAEvB,OADIuqE,GAAUpH,EAAKkB,MAAQiG,EAAatqE,KAAQvd,EAAIud,EAAIoqE,IAAOK,EAAQzqE,GAChEA,K,gBC5CT,IAAIoC,EAAS,EAAQ,MACjBwoE,EAAY,aACZC,EAAWzoE,EAAO0oE,kBAAoB1oE,EAAO2oE,uBAC7CzyE,EAAU8J,EAAO9J,QACjB56B,EAAU0kC,EAAO1kC,QACjBstG,EAAuC,WAA9B,EAAQ,MAAR,CAAkB1yE,GAE/BznC,EAAOC,QAAU,WACf,IAAI+sE,EAAMt2D,EAAM0jG,EAEZp5E,EAAQ,WACV,IAAIl3B,EAAQgI,EAEZ,IADIqoG,IAAWrwG,EAAS29B,EAAQ4yE,SAASvwG,EAAOwwG,OACzCttC,GAAM,CACXl7D,EAAKk7D,EAAKl7D,GACVk7D,EAAOA,EAAK9qE,KACZ,IACE4P,IACA,MAAOrO,GAGP,MAFIupE,EAAMotC,IACL1jG,OAAOlR,EACN/B,GAERiT,OAAOlR,EACLsE,GAAQA,EAAOywG,SAIrB,GAAIJ,EACFC,EAAS,WACP3yE,EAAQU,SAASnH,SAGd,IAAIg5E,GAAczoE,EAAOipE,WAAajpE,EAAOipE,UAAUC,WAQvD,GAAI5tG,GAAWA,EAAQC,QAAS,CAErC,IAAI8U,EAAU/U,EAAQC,aAAQtH,GAC9B40G,EAAS,WACPx4F,EAAQC,KAAKmf,SASfo5E,EAAS,WAEPL,EAAU93G,KAAKsvC,EAAQvQ,QAvBgD,CACzE,IAAI4nE,GAAS,EACT5d,EAAOrjD,SAAS+yE,eAAe,IACnC,IAAIV,EAASh5E,GAAOp2B,QAAQogF,EAAM,CAAE2vB,eAAe,IACnDP,EAAS,WACPpvB,EAAKvjE,KAAOmhF,GAAUA,GAsB1B,OAAO,SAAU92F,GACf,IAAI42B,EAAO,CAAE52B,GAAIA,EAAI5P,UAAMsD,GACvBkR,IAAMA,EAAKxU,KAAOwmC,GACjBskC,IACHA,EAAOtkC,EACP0xE,KACA1jG,EAAOgyB,K,6BChEb,IAAIijE,EAAY,EAAQ,OAExB,SAASiP,EAAkB/N,GACzB,IAAI//F,EAASC,EACbnG,KAAKgb,QAAU,IAAIirF,GAAE,SAAUgO,EAAWC,GACxC,QAAgBt1G,IAAZsH,QAAoCtH,IAAXuH,EAAsB,MAAMpM,UAAU,2BACnEmM,EAAU+tG,EACV9tG,EAAS+tG,KAEXl0G,KAAKkG,QAAU6+F,EAAU7+F,GACzBlG,KAAKmG,OAAS4+F,EAAU5+F,GAG1B/M,EAAOC,QAAQmvC,EAAI,SAAUy9D,GAC3B,OAAO,IAAI+N,EAAkB/N,K,6BCd/B,IAAI4D,EAAc,EAAQ,OACtB8D,EAAU,EAAQ,OAClBC,EAAO,EAAQ,OACfC,EAAM,EAAQ,OACdzG,EAAW,EAAQ,OACnBW,EAAU,EAAQ,OAClBoM,EAAU55G,OAAOqmB,OAGrBxnB,EAAOC,SAAW86G,GAAW,EAAQ,MAAR,EAAoB,WAC/C,IAAIC,EAAI,GACJvO,EAAI,GAEJH,EAAI5qG,SACJu5G,EAAI,uBAGR,OAFAD,EAAE1O,GAAK,EACP2O,EAAEl/B,MAAM,IAAIvvE,SAAQ,SAAUw9B,GAAKyiE,EAAEziE,GAAKA,KACd,GAArB+wE,EAAQ,GAAIC,GAAG1O,IAAWnrG,OAAOugB,KAAKq5F,EAAQ,GAAItO,IAAI1mF,KAAK,KAAOk1F,KACtE,SAAgBp6G,EAAQkL,GAM3B,IALA,IAAIkkG,EAAIjC,EAASntG,GACbwtG,EAAOt9F,UAAU3Q,OACjBkF,EAAQ,EACRovG,EAAaF,EAAKplE,EAClBwlE,EAASH,EAAIrlE,EACVi/D,EAAO/oG,GAMZ,IALA,IAIIjE,EAJAirG,EAAIqC,EAAQ59F,UAAUzL,MACtBoc,EAAOgzF,EAAaH,EAAQjI,GAAG75F,OAAOiiG,EAAWpI,IAAMiI,EAAQjI,GAC/DlsG,EAASshB,EAAKthB,OACd0pC,EAAI,EAED1pC,EAAS0pC,GACdzoC,EAAMqgB,EAAKooB,KACN2mE,IAAemE,EAAO3yG,KAAKqqG,EAAGjrG,KAAM4uG,EAAE5uG,GAAOirG,EAAEjrG,IAEtD,OAAO4uG,GACP8K,G,gBCpCJ,IAAI3N,EAAW,EAAQ,OACnB8N,EAAM,EAAQ,OACdC,EAAc,EAAQ,OACtBC,EAAW,EAAQ,MAAR,CAAyB,YACpCC,EAAQ,aAIRC,EAAa,WAEf,IAIIC,EAJAC,EAAS,EAAQ,MAAR,CAAyB,UAClCn7G,EAAI86G,EAAY/6G,OAcpB,IAVAo7G,EAAO1T,MAAMa,QAAU,OACvB,qBAA+B6S,GAC/BA,EAAOruC,IAAM,eAGbouC,EAAiBC,EAAOC,cAAc9zE,UACvBliB,OACf81F,EAAeG,MAAMC,uCACrBJ,EAAelzF,QACfizF,EAAaC,EAAerP,EACrB7rG,YAAYi7G,EAAoB,UAAEH,EAAY96G,IACrD,OAAOi7G,KAGTt7G,EAAOC,QAAUkB,OAAOkM,QAAU,SAAgBkgG,EAAGqO,GACnD,IAAI3+F,EAQJ,OAPU,OAANswF,GACF8N,EAAe,UAAIjO,EAASG,GAC5BtwF,EAAS,IAAIo+F,EACbA,EAAe,UAAI,KAEnBp+F,EAAOm+F,GAAY7N,GACdtwF,EAASq+F,SACM91G,IAAfo2G,EAA2B3+F,EAASi+F,EAAIj+F,EAAQ2+F,K,gBCvCzD,IAAIxO,EAAW,EAAQ,OACnBC,EAAiB,EAAQ,MACzBC,EAAc,EAAQ,OACtBJ,EAAK/rG,OAAOC,eAEhBnB,EAAQmvC,EAAI,EAAQ,OAAoBjuC,OAAOC,eAAiB,SAAwBmsG,EAAGz1B,EAAG01B,GAI5F,GAHAJ,EAASG,GACTz1B,EAAIw1B,EAAYx1B,GAAG,GACnBs1B,EAASI,GACLH,EAAgB,IAClB,OAAOH,EAAGK,EAAGz1B,EAAG01B,GAChB,MAAO/pG,IACT,GAAI,QAAS+pG,GAAc,QAASA,EAAY,MAAM7sG,UAAU,4BAEhE,MADI,UAAW6sG,IAAYD,EAAEz1B,GAAK01B,EAAWnrG,OACtCkrG,I,gBCdT,IAAIL,EAAK,EAAQ,OACbE,EAAW,EAAQ,OACnBmH,EAAU,EAAQ,OAEtBv0G,EAAOC,QAAU,EAAQ,OAAoBkB,OAAOioD,iBAAmB,SAA0BmkD,EAAGqO,GAClGxO,EAASG,GAKT,IAJA,IAGIz1B,EAHAp2D,EAAO6yF,EAAQqH,GACfx7G,EAASshB,EAAKthB,OACdC,EAAI,EAEDD,EAASC,GAAG6sG,EAAG99D,EAAEm+D,EAAGz1B,EAAIp2D,EAAKrhB,KAAMu7G,EAAW9jC,IACrD,OAAOy1B,I,gBCXT,IAAIkH,EAAM,EAAQ,OACdtH,EAAa,EAAQ,OACrBoB,EAAY,EAAQ,OACpBjB,EAAc,EAAQ,OACtB17E,EAAM,EAAQ,OACdy7E,EAAiB,EAAQ,MACzBwO,EAAO16G,OAAOsnD,yBAElBxoD,EAAQmvC,EAAI,EAAQ,OAAoBysE,EAAO,SAAkCtO,EAAGz1B,GAGlF,GAFAy1B,EAAIgB,EAAUhB,GACdz1B,EAAIw1B,EAAYx1B,GAAG,GACfu1B,EAAgB,IAClB,OAAOwO,EAAKtO,EAAGz1B,GACf,MAAOr0E,IACT,GAAImuB,EAAI27E,EAAGz1B,GAAI,OAAOq1B,GAAYsH,EAAIrlE,EAAEntC,KAAKsrG,EAAGz1B,GAAIy1B,EAAEz1B,M,gBCbxD,IAAIy2B,EAAY,EAAQ,OACpBuN,EAAO,WACP/4G,EAAW,GAAGA,SAEdg5G,EAA+B,iBAAVhiG,QAAsBA,QAAU5Y,OAAOuhC,oBAC5DvhC,OAAOuhC,oBAAoB3oB,QAAU,GAUzC/Z,EAAOC,QAAQmvC,EAAI,SAA6BD,GAC9C,OAAO4sE,GAAoC,mBAArBh5G,EAASd,KAAKktC,GATjB,SAAUA,GAC7B,IACE,OAAO2sE,EAAK3sE,GACZ,MAAO1rC,GACP,OAAOs4G,EAAY/4G,SAK0Cg5G,CAAe7sE,GAAM2sE,EAAKvN,EAAUp/D,M,gBChBrG,IAAI8sE,EAAQ,EAAQ,OAChBC,EAAa,gBAAmC,SAAU,aAE9Dj8G,EAAQmvC,EAAIjuC,OAAOuhC,qBAAuB,SAA6B6qE,GACrE,OAAO0O,EAAM1O,EAAG2O,K,cCLlBj8G,EAAQmvC,EAAIjuC,OAAOg7G,uB,cCCnB,IAAIvqF,EAAM,EAAQ,OACdo8E,EAAW,EAAQ,OACnBoN,EAAW,EAAQ,MAAR,CAAyB,YACpCgB,EAAcj7G,OAAOK,UAEzBxB,EAAOC,QAAUkB,OAAOqnD,gBAAkB,SAAU+kD,GAElD,OADAA,EAAIS,EAAST,GACT37E,EAAI27E,EAAG6N,GAAkB7N,EAAE6N,GACH,mBAAjB7N,EAAEtqG,aAA6BsqG,aAAaA,EAAEtqG,YAChDsqG,EAAEtqG,YAAYzB,UACd+rG,aAAapsG,OAASi7G,EAAc,O,gBCX/C,IAAIxqF,EAAM,EAAQ,OACd28E,EAAY,EAAQ,OACpB8N,EAAe,EAAQ,MAAR,EAA6B,GAC5CjB,EAAW,EAAQ,MAAR,CAAyB,YAExCp7G,EAAOC,QAAU,SAAUmoD,EAAQk0D,GACjC,IAGIj7G,EAHAksG,EAAIgB,EAAUnmD,GACd/nD,EAAI,EACJ4c,EAAS,GAEb,IAAK5b,KAAOksG,EAAOlsG,GAAO+5G,GAAUxpF,EAAI27E,EAAGlsG,IAAQ4b,EAAO7a,KAAKf,GAE/D,KAAOi7G,EAAMl8G,OAASC,GAAOuxB,EAAI27E,EAAGlsG,EAAMi7G,EAAMj8G,SAC7Cg8G,EAAap/F,EAAQ5b,IAAQ4b,EAAO7a,KAAKf,IAE5C,OAAO4b,I,gBCdT,IAAIg/F,EAAQ,EAAQ,OAChBd,EAAc,EAAQ,OAE1Bn7G,EAAOC,QAAUkB,OAAOugB,MAAQ,SAAc6rF,GAC5C,OAAO0O,EAAM1O,EAAG4N,K,cCLlBl7G,EAAQmvC,EAAI,GAAGkoE,sB,gBCCf,IAAIvL,EAAU,EAAQ,OAClBN,EAAO,EAAQ,OACf8G,EAAQ,EAAQ,OACpBvyG,EAAOC,QAAU,SAAUgzG,EAAK3kE,GAC9B,IAAIx8B,GAAM25F,EAAKtqG,QAAU,IAAI8xG,IAAQ9xG,OAAO8xG,GACxCpuG,EAAM,GACVA,EAAIouG,GAAO3kE,EAAKx8B,GAChBi6F,EAAQA,EAAQO,EAAIP,EAAQG,EAAIqG,GAAM,WAAczgG,EAAG,MAAQ,SAAUjN,K,gBCR3E,IAAI4rG,EAAc,EAAQ,OACtB8D,EAAU,EAAQ,OAClBhG,EAAY,EAAQ,OACpBqG,EAAS,WACb50G,EAAOC,QAAU,SAAUs8G,GACzB,OAAO,SAAUptE,GAOf,IANA,IAKI9tC,EALAksG,EAAIgB,EAAUp/D,GACdztB,EAAO6yF,EAAQhH,GACfntG,EAASshB,EAAKthB,OACdC,EAAI,EACJ4c,EAAS,GAEN7c,EAASC,GACdgB,EAAMqgB,EAAKrhB,KACNowG,IAAemE,EAAO3yG,KAAKsrG,EAAGlsG,IACjC4b,EAAO7a,KAAKm6G,EAAY,CAACl7G,EAAKksG,EAAElsG,IAAQksG,EAAElsG,IAG9C,OAAO4b,K,gBCjBX,IAAI6+F,EAAO,EAAQ,OACftH,EAAO,EAAQ,OACfpH,EAAW,EAAQ,OACnBz1B,EAAU,gBACd33E,EAAOC,QAAU03E,GAAWA,EAAQ6kC,SAAW,SAAiBrtE,GAC9D,IAAIztB,EAAOo6F,EAAK1sE,EAAEg+D,EAASj+D,IACvBulE,EAAaF,EAAKplE,EACtB,OAAOslE,EAAahzF,EAAKjP,OAAOiiG,EAAWvlE,IAAOztB,I,gBCRpD,IAAI+6F,EAAc,mBACdC,EAAQ,cAEZ18G,EAAOC,QAAU,EAAIw8G,EAAY,EAAQ,OAAkB,QAAU,IAAY,SAAoB37F,GACnG,IAAIm1F,EAASyG,EAAM3G,OAAOj1F,GAAM,GAC5B7D,EAASw/F,EAAYxG,GACzB,OAAkB,IAAXh5F,GAAoC,KAApBg5F,EAAOj1F,OAAO,IAAa,EAAI/D,GACpDw/F,G,gBCPJ,IAAIE,EAAY,iBACZD,EAAQ,cACRE,EAAK,EAAQ,OACbC,EAAM,cAEV78G,EAAOC,QAAmC,IAAzB08G,EAAUC,EAAK,OAA0C,KAA3BD,EAAUC,EAAK,QAAiB,SAAkB97F,EAAKg8F,GACpG,IAAI7G,EAASyG,EAAM3G,OAAOj1F,GAAM,GAChC,OAAO67F,EAAU1G,EAAS6G,IAAU,IAAOD,EAAIz5G,KAAK6yG,GAAU,GAAK,MACjE0G,G,UCRJ38G,EAAOC,QAAU,SAAUquC,GACzB,IACE,MAAO,CAAE7qC,GAAG,EAAO01F,EAAG7qD,KACtB,MAAO7qC,GACP,MAAO,CAAEA,GAAG,EAAM01F,EAAG11F,M,gBCJzB,IAAI2pG,EAAW,EAAQ,OACnB56F,EAAW,EAAQ,OACnBuqG,EAAuB,EAAQ,OAEnC/8G,EAAOC,QAAU,SAAU4sG,EAAGz/F,GAE5B,GADAggG,EAASP,GACLr6F,EAASpF,IAAMA,EAAEnK,cAAgB4pG,EAAG,OAAOz/F,EAC/C,IAAI4vG,EAAoBD,EAAqB3tE,EAAEy9D,GAG/C,OADA//F,EADckwG,EAAkBlwG,SACxBM,GACD4vG,EAAkBp7F,U,UCV3B5hB,EAAOC,QAAU,SAAUwtG,EAAQprG,GACjC,MAAO,CACLrB,aAAuB,EAATysG,GACdxsG,eAAyB,EAATwsG,GAChBvsG,WAAqB,EAATusG,GACZprG,MAAOA,K,gBCLX,IAAIgwG,EAAW,EAAQ,OACvBryG,EAAOC,QAAU,SAAUY,EAAQssE,EAAK0rC,GACtC,IAAK,IAAIx3G,KAAO8rE,EAAKklC,EAASxxG,EAAQQ,EAAK8rE,EAAI9rE,GAAMw3G,GACrD,OAAOh4G,I,gBCHT,IAAI0wC,EAAS,EAAQ,MACjBu6D,EAAO,EAAQ,OACfl6E,EAAM,EAAQ,OACdqrF,EAAM,EAAQ,MAAR,CAAkB,OACxBC,EAAY,EAAQ,OACpBC,EAAY,WACZC,GAAO,GAAKF,GAAWnhC,MAAMohC,GAEjC,uBAAmC,SAAUhuE,GAC3C,OAAO+tE,EAAUj7G,KAAKktC,KAGvBnvC,EAAOC,QAAU,SAAUstG,EAAGlsG,EAAK8oC,EAAK0uE,GACvC,IAAIrnG,EAA2B,mBAAP24B,EACpB34B,IAAYogB,EAAIuY,EAAK,SAAW2hE,EAAK3hE,EAAK,OAAQ9oC,IAClDksG,EAAElsG,KAAS8oC,IACX34B,IAAYogB,EAAIuY,EAAK8yE,IAAQnR,EAAK3hE,EAAK8yE,EAAK1P,EAAElsG,GAAO,GAAKksG,EAAElsG,GAAO+7G,EAAIr3F,KAAKgwF,OAAO10G,MACnFksG,IAAMh8D,EACRg8D,EAAElsG,GAAO8oC,EACC0uE,EAGDtL,EAAElsG,GACXksG,EAAElsG,GAAO8oC,EAET2hE,EAAKyB,EAAGlsG,EAAK8oC,WALNojE,EAAElsG,GACTyqG,EAAKyB,EAAGlsG,EAAK8oC,OAOdlC,SAASzmC,UAAW27G,GAAW,WAChC,MAAsB,mBAARv2G,MAAsBA,KAAKq2G,IAAQC,EAAUj7G,KAAK2E,U,6BC3BlE,IAAIy2G,EAAU,EAAQ,OAClBC,EAActH,OAAOx0G,UAAU8sC,KAInCtuC,EAAOC,QAAU,SAAU8sG,EAAGT,GAC5B,IAAIh+D,EAAOy+D,EAAEz+D,KACb,GAAoB,mBAATA,EAAqB,CAC9B,IAAIrxB,EAASqxB,EAAKrsC,KAAK8qG,EAAGT,GAC1B,GAAsB,iBAAXrvF,EACT,MAAM,IAAItc,UAAU,sEAEtB,OAAOsc,EAET,GAAmB,WAAfogG,EAAQtQ,GACV,MAAM,IAAIpsG,UAAU,+CAEtB,OAAO28G,EAAYr7G,KAAK8qG,EAAGT,K,6BCjB7B,IAaMiR,EACAC,EAdFC,EAAc,EAAQ,OAEtBC,EAAa1H,OAAOx0G,UAAU8sC,KAI9BqvE,EAAgB5H,OAAOv0G,UAAUmyC,QAEjCiqE,EAAcF,EAIdG,GACEN,EAAM,IACNC,EAAM,MACVE,EAAWz7G,KAAKs7G,EAAK,KACrBG,EAAWz7G,KAAKu7G,EAAK,KACM,IAApBD,EAAc,WAA+B,IAApBC,EAAc,WAI5CM,OAAuCt4G,IAAvB,OAAO8oC,KAAK,IAAI,IAExBuvE,GAA4BC,KAGtCF,EAAc,SAAc98F,GAC1B,IACIi9F,EAAWC,EAAQxmE,EAAOn3C,EAD1By0G,EAAKluG,KAwBT,OArBIk3G,IACFE,EAAS,IAAIhI,OAAO,IAAMlB,EAAG/oG,OAAS,WAAY0xG,EAAYx7G,KAAK6yG,KAEjE+I,IAA0BE,EAAYjJ,EAAa,WAEvDt9D,EAAQkmE,EAAWz7G,KAAK6yG,EAAIh0F,GAExB+8F,GAA4BrmE,IAC9Bs9D,EAAa,UAAIA,EAAGvjE,OAASiG,EAAMlyC,MAAQkyC,EAAM,GAAGp3C,OAAS29G,GAE3DD,GAAiBtmE,GAASA,EAAMp3C,OAAS,GAI3Cu9G,EAAc17G,KAAKu1C,EAAM,GAAIwmE,GAAQ,WACnC,IAAK39G,EAAI,EAAGA,EAAI0Q,UAAU3Q,OAAS,EAAGC,SACfmF,IAAjBuL,UAAU1Q,KAAkBm3C,EAAMn3C,QAAKmF,MAK1CgyC,IAIXx3C,EAAOC,QAAU29G,G,UCxDjB59G,EAAOC,QAAUkB,OAAO0qG,IAAM,SAAYz+F,EAAG4kB,GAE3C,OAAO5kB,IAAM4kB,EAAU,IAAN5kB,GAAW,EAAIA,GAAM,EAAI4kB,EAAI5kB,GAAKA,GAAK4kB,GAAKA,I,gBCD/D,IAAIxf,EAAW,EAAQ,OACnB46F,EAAW,EAAQ,OACnB6Q,EAAQ,SAAU1Q,EAAGwF,GAEvB,GADA3F,EAASG,IACJ/6F,EAASugG,IAAoB,OAAVA,EAAgB,MAAMpyG,UAAUoyG,EAAQ,8BAElE/yG,EAAOC,QAAU,CACfq0B,IAAKnzB,OAAOi2G,iBAAmB,aAAe,GAC5C,SAAUh0G,EAAM86G,EAAO5pF,GACrB,KACEA,EAAM,EAAQ,IAAR,CAAkB2T,SAAShmC,KAAM,WAA4Bd,OAAOK,UAAW,aAAa8yB,IAAK,IACnGlxB,EAAM,IACV86G,IAAU96G,aAAgB7C,OAC1B,MAAOkD,GAAKy6G,GAAQ,EACtB,OAAO,SAAwB3Q,EAAGwF,GAIhC,OAHAkL,EAAM1Q,EAAGwF,GACLmL,EAAO3Q,EAAE4Q,UAAYpL,EACpBz+E,EAAIi5E,EAAGwF,GACLxF,GAVX,CAYE,IAAI,QAAS/nG,GACjBy4G,MAAOA,I,4BCtBT,IAAI1sE,EAAS,EAAQ,MACjB27D,EAAK,EAAQ,OACbuD,EAAc,EAAQ,OACtBhB,EAAU,EAAQ,MAAR,CAAkB,WAEhCzvG,EAAOC,QAAU,SAAUgzG,GACzB,IAAIpG,EAAIt7D,EAAO0hE,GACXxC,GAAe5D,IAAMA,EAAE4C,IAAUvC,EAAG99D,EAAEy9D,EAAG4C,EAAS,CACpDxuG,cAAc,EACd2jB,IAAK,WAAc,OAAOhe,U,gBCV9B,IAAI2qG,EAAM,WACN3/E,EAAM,EAAQ,OACdm+E,EAAM,EAAQ,MAAR,CAAkB,eAE5B/vG,EAAOC,QAAU,SAAUkvC,EAAIivE,EAAKC,GAC9BlvE,IAAOvd,EAAIud,EAAKkvE,EAAOlvE,EAAKA,EAAG3tC,UAAWuuG,IAAMwB,EAAIpiE,EAAI4gE,EAAK,CAAE9uG,cAAc,EAAMoB,MAAO+7G,M,gBCLhG,IAAIE,EAAS,EAAQ,KAAR,CAAqB,QAC9BC,EAAM,EAAQ,OAClBv+G,EAAOC,QAAU,SAAUoB,GACzB,OAAOi9G,EAAOj9G,KAASi9G,EAAOj9G,GAAOk9G,EAAIl9G,M,eCH3C,IAAIoqG,EAAO,EAAQ,OACfl6D,EAAS,EAAQ,MACjBitE,EAAS,qBACTrM,EAAQ5gE,EAAOitE,KAAYjtE,EAAOitE,GAAU,KAE/Cx+G,EAAOC,QAAU,SAAUoB,EAAKgB,GAC/B,OAAO8vG,EAAM9wG,KAAS8wG,EAAM9wG,QAAiBmE,IAAVnD,EAAsBA,EAAQ,MAChE,WAAY,IAAID,KAAK,CACtB83E,QAASuxB,EAAKvxB,QACdukC,KAAM,EAAQ,MAAgB,OAAS,SACvCC,UAAW,0C,gBCTb,IAAItR,EAAW,EAAQ,OACnBzB,EAAY,EAAQ,OACpB8D,EAAU,EAAQ,MAAR,CAAkB,WAChCzvG,EAAOC,QAAU,SAAUstG,EAAGoR,GAC5B,IACIrS,EADAO,EAAIO,EAASG,GAAGtqG,YAEpB,YAAauC,IAANqnG,GAAiDrnG,OAA7B8mG,EAAIc,EAASP,GAAG4C,IAAyBkP,EAAIhT,EAAUW,K,6BCNpF,IAAIiG,EAAQ,EAAQ,OAEpBvyG,EAAOC,QAAU,SAAUqjB,EAAQ3H,GACjC,QAAS2H,GAAUivF,GAAM,WAEvB52F,EAAM2H,EAAOrhB,KAAK,MAAM,cAA6B,GAAKqhB,EAAOrhB,KAAK,W,gBCN1E,IAAI28G,EAAY,EAAQ,OACpB7J,EAAU,EAAQ,OAGtB/0G,EAAOC,QAAU,SAAUk9G,GACzB,OAAO,SAAUvR,EAAMjE,GACrB,IAGIzuE,EAAGC,EAHHgc,EAAI4gE,OAAOhB,EAAQnJ,IACnBvrG,EAAIu+G,EAAUjX,GACdzqB,EAAI/nC,EAAE/0C,OAEV,OAAIC,EAAI,GAAKA,GAAK68E,EAAUigC,EAAY,QAAK33G,GAC7C0zB,EAAIic,EAAE0pE,WAAWx+G,IACN,OAAU64B,EAAI,OAAU74B,EAAI,IAAM68E,IAAM/jD,EAAIgc,EAAE0pE,WAAWx+G,EAAI,IAAM,OAAU84B,EAAI,MACxFgkF,EAAYhoE,EAAEn0B,OAAO3gB,GAAK64B,EAC1BikF,EAAYhoE,EAAEnyC,MAAM3C,EAAGA,EAAI,GAA2B84B,EAAI,OAAzBD,EAAI,OAAU,IAAqB,S,gBCb5E,IAAIs+E,EAAW,EAAQ,OACnBzC,EAAU,EAAQ,OAEtB/0G,EAAOC,QAAU,SAAU2rG,EAAMkT,EAAc5N,GAC7C,GAAIsG,EAASsH,GAAe,MAAMn+G,UAAU,UAAYuwG,EAAO,0BAC/D,OAAO6E,OAAOhB,EAAQnJ,M,gBCNxB,IAAIG,EAAU,EAAQ,OAClBwG,EAAQ,EAAQ,OAChBwC,EAAU,EAAQ,OAClBgK,EAAO,KAEPC,EAAa,SAAU/I,EAAQmI,EAAKt2B,EAAWzlF,GACjD,IAAIiqG,EAAIyJ,OAAOhB,EAAQkB,IACnBgJ,EAAK,IAAMb,EAEf,MADkB,KAAdt2B,IAAkBm3B,GAAM,IAAMn3B,EAAY,KAAOiuB,OAAO1zG,GAAOsxC,QAAQorE,EAAM,UAAY,KACtFE,EAAK,IAAM3S,EAAI,KAAO8R,EAAM,KAErCp+G,EAAOC,QAAU,SAAUixG,EAAM5iE,GAC/B,IAAIi/D,EAAI,GACRA,EAAE2D,GAAQ5iE,EAAK0wE,GACfjT,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAIqG,GAAM,WACpC,IAAInvG,EAAO,GAAG8tG,GAAM,KACpB,OAAO9tG,IAASA,EAAKijF,eAAiBjjF,EAAK24E,MAAM,KAAK37E,OAAS,KAC7D,SAAUmtG,K,gBChBhB,IAAIhsF,EAAW,EAAQ,OACnBvJ,EAAS,EAAQ,OACjB+8F,EAAU,EAAQ,OAEtB/0G,EAAOC,QAAU,SAAU2rG,EAAMsT,EAAWC,EAAY1uE,GACtD,IAAI67D,EAAIyJ,OAAOhB,EAAQnJ,IACnBwT,EAAe9S,EAAElsG,OACjBi/G,OAAyB75G,IAAf25G,EAA2B,IAAMpJ,OAAOoJ,GAClDG,EAAe/9F,EAAS29F,GAC5B,GAAII,GAAgBF,GAA2B,IAAXC,EAAe,OAAO/S,EAC1D,IAAIiT,EAAUD,EAAeF,EACzBI,EAAexnG,EAAO/V,KAAKo9G,EAASz6G,KAAK4B,KAAK+4G,EAAUF,EAAQj/G,SAEpE,OADIo/G,EAAap/G,OAASm/G,IAASC,EAAeA,EAAax8G,MAAM,EAAGu8G,IACjE9uE,EAAO+uE,EAAelT,EAAIA,EAAIkT,I,6BCbvC,IAAIZ,EAAY,EAAQ,OACpB7J,EAAU,EAAQ,OAEtB/0G,EAAOC,QAAU,SAAgBmV,GAC/B,IAAI0L,EAAMi1F,OAAOhB,EAAQnuG,OACrB0oG,EAAM,GACNxsG,EAAI87G,EAAUxpG,GAClB,GAAItS,EAAI,GAAKA,GAAKo0E,IAAU,MAAM9xB,WAAW,2BAC7C,KAAMtiD,EAAI,GAAIA,KAAO,KAAOge,GAAOA,GAAc,EAAJhe,IAAOwsG,GAAOxuF,GAC3D,OAAOwuF,I,gBCVT,IAAIvD,EAAU,EAAQ,OAClBgJ,EAAU,EAAQ,OAClBxC,EAAQ,EAAQ,OAChBkN,EAAS,EAAQ,OACjBC,EAAQ,IAAMD,EAAS,IAEvBE,EAAQ3J,OAAO,IAAM0J,EAAQA,EAAQ,KACrCE,EAAQ5J,OAAO0J,EAAQA,EAAQ,MAE/BG,EAAW,SAAU5M,EAAK3kE,EAAMwxE,GAClC,IAAIj7G,EAAM,GACNk7G,EAAQxN,GAAM,WAChB,QAASkN,EAAOxM,MAPV,WAOwBA,QAE5BnhG,EAAKjN,EAAIouG,GAAO8M,EAAQzxE,EAAKq+B,GAAQ8yC,EAAOxM,GAC5C6M,IAAOj7G,EAAIi7G,GAAShuG,GACxBi6F,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAI6T,EAAO,SAAUl7G,IAM/C8nE,EAAOkzC,EAASlzC,KAAO,SAAUspC,EAAQpH,GAI3C,OAHAoH,EAASF,OAAOhB,EAAQkB,IACb,EAAPpH,IAAUoH,EAASA,EAAOtiE,QAAQgsE,EAAO,KAClC,EAAP9Q,IAAUoH,EAASA,EAAOtiE,QAAQisE,EAAO,KACtC3J,GAGTj2G,EAAOC,QAAU4/G,G,UC7BjB7/G,EAAOC,QAAU,kD,gBCAjB,IAaImT,EAAOu1B,EAASmlC,EAbhBiP,EAAM,EAAQ,KACdmX,EAAS,EAAQ,OACjBnrD,EAAO,EAAQ,OACfi3E,EAAM,EAAQ,OACdzuE,EAAS,EAAQ,MACjB9J,EAAU8J,EAAO9J,QACjBw4E,EAAU1uE,EAAO9P,aACjBy+E,EAAY3uE,EAAO7P,eACnBgG,EAAiB6J,EAAO7J,eACxBy4E,EAAW5uE,EAAO4uE,SAClBC,EAAU,EACVzxG,EAAQ,GAGR0xG,EAAM,WACR,IAAI1/E,GAAM/5B,KAEV,GAAI+H,EAAM+V,eAAeic,GAAK,CAC5B,IAAI7uB,EAAKnD,EAAMgyB,UACRhyB,EAAMgyB,GACb7uB,MAGAiuC,EAAW,SAAUtX,GACvB43E,EAAIp+G,KAAKwmC,EAAMhhB,OAGZw4F,GAAYC,IACfD,EAAU,SAAsBnuG,GAG9B,IAFA,IAAImJ,EAAO,GACP5a,EAAI,EACD0Q,UAAU3Q,OAASC,GAAG4a,EAAK7Y,KAAK2O,UAAU1Q,MAMjD,OALAsO,IAAQyxG,GAAW,WAEjBlsB,EAAoB,mBAANpiF,EAAmBA,EAAKm2B,SAASn2B,GAAKmJ,IAEtD7H,EAAMgtG,GACCA,GAETF,EAAY,SAAwBv/E,UAC3BhyB,EAAMgyB,IAGmB,WAA9B,EAAQ,MAAR,CAAkB8G,GACpBr0B,EAAQ,SAAUutB,GAChB8G,EAAQU,SAAS40C,EAAIsjC,EAAK1/E,EAAI,KAGvBw/E,GAAYA,EAAShyG,IAC9BiF,EAAQ,SAAUutB,GAChBw/E,EAAShyG,IAAI4uE,EAAIsjC,EAAK1/E,EAAI,KAGnB+G,GAETomC,GADAnlC,EAAU,IAAIjB,GACCmB,MACfF,EAAQC,MAAM9f,UAAYi3B,EAC1B3sC,EAAQ2pE,EAAIjP,EAAKjmC,YAAaimC,EAAM,IAG3Bv8B,EAAOnzB,kBAA0C,mBAAfypB,cAA8B0J,EAAOzJ,eAChF10B,EAAQ,SAAUutB,GAChB4Q,EAAO1J,YAAYlH,EAAK,GAAI,MAE9B4Q,EAAOnzB,iBAAiB,UAAW2hC,GAAU,IAG7C3sC,EAvDqB,uBAsDU4sG,EAAI,UAC3B,SAAUr/E,GAChBoI,EAAKI,YAAY62E,EAAI,WAA6B,mBAAI,WACpDj3E,EAAKG,YAAYtiC,MACjBy5G,EAAIp+G,KAAK0+B,KAKL,SAAUA,GAChB7e,WAAWi7D,EAAIsjC,EAAK1/E,EAAI,GAAI,KAIlC3gC,EAAOC,QAAU,CACfq0B,IAAK2rF,EACLxuF,MAAOyuF,I,gBClFT,IAAItB,EAAY,EAAQ,OACpB9vG,EAAMlK,KAAKkK,IACXwI,EAAM1S,KAAK0S,IACftX,EAAOC,QAAU,SAAUqF,EAAOlF,GAEhC,OADAkF,EAAQs5G,EAAUt5G,IACH,EAAIwJ,EAAIxJ,EAAQlF,EAAQ,GAAKkX,EAAIhS,EAAOlF,K,gBCJzD,IAAIw+G,EAAY,EAAQ,OACpBr9F,EAAW,EAAQ,OACvBvhB,EAAOC,QAAU,SAAUkvC,GACzB,QAAW3pC,IAAP2pC,EAAkB,OAAO,EAC7B,IAAI8zC,EAAS27B,EAAUzvE,GACnB/uC,EAASmhB,EAAS0hE,GACtB,GAAIA,IAAW7iF,EAAQ,MAAMglD,WAAW,iBACxC,OAAOhlD,I,UCPT,IAAIoG,EAAO5B,KAAK4B,KACZF,EAAQ1B,KAAK0B,MACjBtG,EAAOC,QAAU,SAAUkvC,GACzB,OAAOluB,MAAMkuB,GAAMA,GAAM,GAAKA,EAAK,EAAI7oC,EAAQE,GAAM2oC,K,gBCHvD,IAAIw/D,EAAU,EAAQ,OAClBoG,EAAU,EAAQ,OACtB/0G,EAAOC,QAAU,SAAUkvC,GACzB,OAAOw/D,EAAQoG,EAAQ5lE,M,gBCHzB,IAAIyvE,EAAY,EAAQ,OACpBtnG,EAAM1S,KAAK0S,IACftX,EAAOC,QAAU,SAAUkvC,GACzB,OAAOA,EAAK,EAAI73B,EAAIsnG,EAAUzvE,GAAK,kBAAoB,I,gBCHzD,IAAI4lE,EAAU,EAAQ,OACtB/0G,EAAOC,QAAU,SAAUkvC,GACzB,OAAOhuC,OAAO4zG,EAAQ5lE,M,gBCFxB,IAAI38B,EAAW,EAAQ,OAGvBxS,EAAOC,QAAU,SAAUkvC,EAAIm9D,GAC7B,IAAK95F,EAAS28B,GAAK,OAAOA,EAC1B,IAAIr9B,EAAIq4B,EACR,GAAImiE,GAAkC,mBAArBx6F,EAAKq9B,EAAGpsC,YAA4ByP,EAAS23B,EAAMr4B,EAAG7P,KAAKktC,IAAM,OAAOhF,EACzF,GAAgC,mBAApBr4B,EAAKq9B,EAAG0rC,WAA2BroE,EAAS23B,EAAMr4B,EAAG7P,KAAKktC,IAAM,OAAOhF,EACnF,IAAKmiE,GAAkC,mBAArBx6F,EAAKq9B,EAAGpsC,YAA4ByP,EAAS23B,EAAMr4B,EAAG7P,KAAKktC,IAAM,OAAOhF,EAC1F,MAAMxpC,UAAU,6C,6BCTlB,GAAI,EAAQ,OAAmB,CAC7B,IAAI+2G,EAAU,EAAQ,MAClBnmE,EAAS,EAAQ,MACjBghE,EAAQ,EAAQ,OAChBxG,EAAU,EAAQ,OAClBuU,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAClBxjC,EAAM,EAAQ,KACdszB,EAAa,EAAQ,OACrBmQ,EAAe,EAAQ,OACvB1U,EAAO,EAAQ,OACfsE,EAAc,EAAQ,OACtBwO,EAAY,EAAQ,OACpBr9F,EAAW,EAAQ,OACnBk/F,EAAU,EAAQ,OAClBxS,EAAkB,EAAQ,OAC1BX,EAAc,EAAQ,OACtB17E,EAAM,EAAQ,OACdyrF,EAAU,EAAQ,OAClB7qG,EAAW,EAAQ,OACnBw7F,EAAW,EAAQ,OACnB8I,EAAc,EAAQ,OACtBzpG,EAAS,EAAQ,OACjBm7C,EAAiB,EAAQ,KACzBszD,EAAO,WACP/E,EAAY,EAAQ,OACpBwH,EAAM,EAAQ,OACdvJ,EAAM,EAAQ,OACdpD,EAAoB,EAAQ,OAC5B8O,EAAsB,EAAQ,OAC9BhR,EAAqB,EAAQ,OAC7BiR,EAAiB,EAAQ,OACzBpJ,EAAY,EAAQ,OACpB/E,EAAc,EAAQ,MACtBhC,EAAa,EAAQ,MACrBoQ,EAAY,EAAQ,OACpBC,EAAkB,EAAQ,MAC1BC,EAAM,EAAQ,OACdC,EAAQ,EAAQ,OAChB7T,EAAK4T,EAAI1xE,EACTysE,EAAOkF,EAAM3xE,EACbgW,EAAa7T,EAAO6T,WACpBzkD,EAAY4wC,EAAO5wC,UACnBgqD,EAAapZ,EAAOoZ,WACpBq2D,EAAe,cACfC,EAAgB,oBAChBjgE,EAAoB,oBAEpB4sD,EAAartG,MAAe,UAC5B2gH,EAAeX,EAAQY,YACvBC,EAAYb,EAAQc,SACpBC,EAAe1P,EAAkB,GACjC2P,EAAc3P,EAAkB,GAChC4P,GAAY5P,EAAkB,GAC9B6P,GAAa7P,EAAkB,GAC/BE,GAAYF,EAAkB,GAC9BG,GAAiBH,EAAkB,GACnC8P,GAAgBhB,GAAoB,GACpCrE,GAAeqE,GAAoB,GACnCiB,GAAchB,EAAet8G,OAC7Bu9G,GAAYjB,EAAej/F,KAC3BmgG,GAAelB,EAAergE,QAC9BwhE,GAAmBlU,EAAWmU,YAC9BC,GAAcpU,EAAW76F,OACzBkvG,GAAmBrU,EAAWsU,YAC9BC,GAAYvU,EAAW7nF,KACvBq8F,GAAYxU,EAAWprE,KACvBmtE,GAAa/B,EAAW5qG,MACxBq/G,GAAgBzU,EAAW7qG,SAC3Bu/G,GAAsB1U,EAAW2U,eACjCrL,GAAWlC,EAAI,YACfjF,GAAMiF,EAAI,eACVwN,GAAoBjE,EAAI,qBACxBkE,GAAkBlE,EAAI,mBACtBmE,GAAmBpC,EAAOqC,OAC1BC,GAActC,EAAOuC,MACrBC,GAAOxC,EAAOwC,KACdC,GAAe,gBAEfC,GAAOpR,EAAkB,GAAG,SAAUrE,EAAGntG,GAC3C,OAAO6iH,GAASvT,EAAmBnC,EAAGA,EAAEkV,KAAmBriH,MAGzD8iH,GAAgB3Q,GAAM,WAExB,OAA0D,IAAnD,IAAI5nD,EAAW,IAAIw4D,YAAY,CAAC,IAAIzuG,QAAQ,MAGjD0uG,KAAez4D,KAAgBA,EAAoB,UAAEr2B,KAAOi+E,GAAM,WACpE,IAAI5nD,EAAW,GAAGr2B,IAAI,OAGpB+uF,GAAW,SAAUl0E,EAAIm0E,GAC3B,IAAItnE,EAAS4iE,EAAUzvE,GACvB,GAAI6M,EAAS,GAAKA,EAASsnE,EAAO,MAAMl+D,EAAW,iBACnD,OAAOpJ,GAGL20D,GAAW,SAAUxhE,GACvB,GAAI38B,EAAS28B,IAAOyzE,MAAezzE,EAAI,OAAOA,EAC9C,MAAMxuC,EAAUwuC,EAAK,2BAGnB8zE,GAAW,SAAUpW,EAAGzsG,GAC1B,IAAMoS,EAASq6F,MAAM2V,MAAqB3V,GACxC,MAAMlsG,EAAU,wCAChB,OAAO,IAAIksG,EAAEzsG,IAGbmjH,GAAkB,SAAUhW,EAAGrH,GACjC,OAAOsd,GAAS9T,EAAmBnC,EAAGA,EAAEkV,KAAmBvc,IAGzDsd,GAAW,SAAU3W,EAAG3G,GAI1B,IAHA,IAAI5gG,EAAQ,EACRlF,EAAS8lG,EAAK9lG,OACd6c,EAASgmG,GAASpW,EAAGzsG,GAClBA,EAASkF,GAAO2X,EAAO3X,GAAS4gG,EAAK5gG,KAC5C,OAAO2X,GAGLwmG,GAAY,SAAUt0E,EAAI9tC,EAAKqiH,GACjCxW,EAAG/9D,EAAI9tC,EAAK,CAAEujB,IAAK,WAAc,OAAOhe,KAAK5E,GAAG0hH,OAG9CC,GAAQ,SAAc53G,GACxB,IAKI1L,EAAGD,EAAQiE,EAAQ4Y,EAAQg7D,EAAMt2E,EALjC4rG,EAAIS,EAASjiG,GACbsiG,EAAOt9F,UAAU3Q,OACjBwjH,EAAQvV,EAAO,EAAIt9F,UAAU,QAAKvL,EAClCi0F,OAAoBj0F,IAAVo+G,EACVzM,EAASJ,EAAUxJ,GAEvB,GAAc/nG,MAAV2xG,IAAwBL,EAAYK,GAAS,CAC/C,IAAKx1G,EAAWw1G,EAAOl1G,KAAKsrG,GAAIlpG,EAAS,GAAIhE,EAAI,IAAK43E,EAAOt2E,EAASO,QAAQC,KAAM9B,IAClFgE,EAAOjC,KAAK61E,EAAK51E,OACjBkrG,EAAIlpG,EAGR,IADIo1F,GAAW4U,EAAO,IAAGuV,EAAQ7mC,EAAI6mC,EAAO7yG,UAAU,GAAI,IACrD1Q,EAAI,EAAGD,EAASmhB,EAASgsF,EAAEntG,QAAS6c,EAASgmG,GAASr8G,KAAMxG,GAASA,EAASC,EAAGA,IACpF4c,EAAO5c,GAAKo5F,EAAUmqB,EAAMrW,EAAEltG,GAAIA,GAAKktG,EAAEltG,GAE3C,OAAO4c,GAGL4mG,GAAM,WAIR,IAHA,IAAIv+G,EAAQ,EACRlF,EAAS2Q,UAAU3Q,OACnB6c,EAASgmG,GAASr8G,KAAMxG,GACrBA,EAASkF,GAAO2X,EAAO3X,GAASyL,UAAUzL,KACjD,OAAO2X,GAIL6mG,KAAkBn5D,GAAc4nD,GAAM,WAAc+P,GAAoBrgH,KAAK,IAAI0oD,EAAW,OAE5Fo5D,GAAkB,WACpB,OAAOzB,GAAoBhnG,MAAMwoG,GAAgBnU,GAAW1tG,KAAK0uG,GAAS/pG,OAAS+pG,GAAS/pG,MAAOmK,YAGjGgiG,GAAQ,CACV7E,WAAY,SAAoBrtG,EAAQkhB,GACtC,OAAO8+F,EAAgB5+G,KAAK0uG,GAAS/pG,MAAO/F,EAAQkhB,EAAOhR,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAEnGuQ,MAAO,SAAes5F,GACpB,OAAOoS,GAAW9Q,GAAS/pG,MAAOyoG,EAAYt+F,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAEtF84D,KAAM,SAAcj8D,GAClB,OAAOu+G,EAAUtlG,MAAMq1F,GAAS/pG,MAAOmK,YAEzCoF,OAAQ,SAAgBk5F,GACtB,OAAOkU,GAAgB38G,KAAM26G,EAAY5Q,GAAS/pG,MAAOyoG,EACvDt+F,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,KAE1C6Q,KAAM,SAAcyT,GAClB,OAAOgoF,GAAUnB,GAAS/pG,MAAOkjB,EAAW/Y,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAEpFyB,UAAW,SAAmB6iB,GAC5B,OAAOioF,GAAepB,GAAS/pG,MAAOkjB,EAAW/Y,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAEzFgH,QAAS,SAAiB6iG,GACxBiS,EAAa3Q,GAAS/pG,MAAOyoG,EAAYt+F,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAEjFqL,QAAS,SAAiBmzG,GACxB,OAAO3H,GAAa1L,GAAS/pG,MAAOo9G,EAAejzG,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAE3F+1C,SAAU,SAAkByoE,GAC1B,OAAOtC,GAAc/Q,GAAS/pG,MAAOo9G,EAAejzG,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAE5FugB,KAAM,SAAck+F,GAClB,OAAO9B,GAAU7mG,MAAMq1F,GAAS/pG,MAAOmK,YAEzCgxG,YAAa,SAAqBiC,GAChC,OAAOlC,GAAiBxmG,MAAMq1F,GAAS/pG,MAAOmK,YAEhD8F,IAAK,SAAa+sG,GAChB,OAAOZ,GAAKrS,GAAS/pG,MAAOg9G,EAAO7yG,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAE3EuN,OAAQ,SAAgBs8F,GACtB,OAAO2S,GAAY1mG,MAAMq1F,GAAS/pG,MAAOmK,YAE3CmxG,YAAa,SAAqB7S,GAChC,OAAO4S,GAAiB3mG,MAAMq1F,GAAS/pG,MAAOmK,YAEhDitE,QAAS,WAMP,IALA,IAII37E,EAJAupG,EAAOhlG,KACPxG,EAASuwG,GAAS/E,GAAMxrG,OACxB8jH,EAASt/G,KAAK0B,MAAMlG,EAAS,GAC7BkF,EAAQ,EAELA,EAAQ4+G,GACb7hH,EAAQupG,EAAKtmG,GACbsmG,EAAKtmG,KAAWsmG,IAAOxrG,GACvBwrG,EAAKxrG,GAAUiC,EACf,OAAOupG,GAEX7sD,KAAM,SAAcswD,GAClB,OAAOmS,GAAU7Q,GAAS/pG,MAAOyoG,EAAYt+F,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,IAErFg9B,KAAM,SAAc2hF,GAClB,OAAO/B,GAAUngH,KAAK0uG,GAAS/pG,MAAOu9G,IAExC/kC,SAAU,SAAkBglC,EAAOjpC,GACjC,IAAIoyB,EAAIoD,GAAS/pG,MACbxG,EAASmtG,EAAEntG,OACXikH,EAASpW,EAAgBmW,EAAOhkH,GACpC,OAAO,IAAKsvG,EAAmBnC,EAAGA,EAAEkV,KAA7B,CACLlV,EAAE74F,OACF64F,EAAE+W,WAAaD,EAAS9W,EAAEvsD,kBAC1Bz/B,QAAkB/b,IAAR21E,EAAoB/6E,EAAS6tG,EAAgB9yB,EAAK/6E,IAAWikH,MAKzEE,GAAS,SAAexiG,EAAOo5D,GACjC,OAAOooC,GAAgB38G,KAAM+oG,GAAW1tG,KAAK0uG,GAAS/pG,MAAOmb,EAAOo5D,KAGlEqpC,GAAO,SAAalqG,GACtBq2F,GAAS/pG,MACT,IAAIo1C,EAASqnE,GAAStyG,UAAU,GAAI,GAChC3Q,EAASwG,KAAKxG,OACd+sE,EAAM6gC,EAAS1zF,GACfna,EAAMohB,EAAS4rD,EAAI/sE,QACnBkF,EAAQ,EACZ,GAAInF,EAAM67C,EAAS57C,EAAQ,MAAMglD,EAAW29D,IAC5C,KAAOz9G,EAAQnF,GAAKyG,KAAKo1C,EAAS12C,GAAS6nE,EAAI7nE,MAG7Cm/G,GAAa,CACfnkE,QAAS,WACP,OAAOuhE,GAAa5/G,KAAK0uG,GAAS/pG,QAEpC8a,KAAM,WACJ,OAAOkgG,GAAU3/G,KAAK0uG,GAAS/pG,QAEjCvC,OAAQ,WACN,OAAOs9G,GAAY1/G,KAAK0uG,GAAS/pG,SAIjC89G,GAAY,SAAU7jH,EAAQQ,GAChC,OAAOmR,EAAS3R,IACXA,EAAO+hH,KACO,iBAAPvhH,GACPA,KAAOR,GACPk1G,QAAQ10G,IAAQ00G,OAAO10G,IAE1BsjH,GAAW,SAAkC9jH,EAAQQ,GACvD,OAAOqjH,GAAU7jH,EAAQQ,EAAMisG,EAAYjsG,GAAK,IAC5Cm/G,EAAa,EAAG3/G,EAAOQ,IACvBw6G,EAAKh7G,EAAQQ,IAEfujH,GAAW,SAAwB/jH,EAAQQ,EAAKo2E,GAClD,QAAIitC,GAAU7jH,EAAQQ,EAAMisG,EAAYjsG,GAAK,KACxCmR,EAASilE,IACT7lD,EAAI6lD,EAAM,WACT7lD,EAAI6lD,EAAM,QACV7lD,EAAI6lD,EAAM,QAEVA,EAAKx2E,cACJ2wB,EAAI6lD,EAAM,cAAeA,EAAKv2E,UAC9B0wB,EAAI6lD,EAAM,gBAAiBA,EAAKz2E,WAI9BksG,EAAGrsG,EAAQQ,EAAKo2E,IAFvB52E,EAAOQ,GAAOo2E,EAAKp1E,MACZxB,IAIN6hH,KACH3B,EAAM3xE,EAAIu1E,GACV7D,EAAI1xE,EAAIw1E,IAGV7Y,EAAQA,EAAQO,EAAIP,EAAQG,GAAKwW,GAAkB,SAAU,CAC3Dj6D,yBAA0Bk8D,GAC1BvjH,eAAgBwjH,KAGdrS,GAAM,WAAc8P,GAAcpgH,KAAK,SACzCogH,GAAgBC,GAAsB,WACpC,OAAOH,GAAUlgH,KAAK2E,QAI1B,IAAIi+G,GAAwBzU,EAAY,GAAI2C,IAC5C3C,EAAYyU,GAAuBJ,IACnC3Y,EAAK+Y,GAAuB3N,GAAUuN,GAAWpgH,QACjD+rG,EAAYyU,GAAuB,CACjC7hH,MAAOuhH,GACPjwF,IAAKkwF,GACLvhH,YAAa,aACbF,SAAUs/G,GACVE,eAAgBwB,KAElBN,GAAUoB,GAAuB,SAAU,KAC3CpB,GAAUoB,GAAuB,aAAc,KAC/CpB,GAAUoB,GAAuB,aAAc,KAC/CpB,GAAUoB,GAAuB,SAAU,KAC3C3X,EAAG2X,GAAuB9U,GAAK,CAC7BnrF,IAAK,WAAc,OAAOhe,KAAKg8G,OAIjC5iH,EAAOC,QAAU,SAAUgzG,EAAKqQ,EAAOrS,EAAS6T,GAE9C,IAAI5T,EAAO+B,IADX6R,IAAYA,GACgB,UAAY,IAAM,QAC1CC,EAAS,MAAQ9R,EACjB+R,EAAS,MAAQ/R,EACjBgS,EAAa1zE,EAAO2/D,GACpB4B,EAAOmS,GAAc,GACrBC,EAAMD,GAAcz8D,EAAey8D,GACnC/M,GAAU+M,IAAe3E,EAAO6E,IAChC5X,EAAI,GACJ6X,EAAsBH,GAAcA,EAAoB,UAUxDI,EAAa,SAAUzZ,EAAMtmG,GAC/B4nG,EAAGtB,EAAMtmG,EAAO,CACdsf,IAAK,WACH,OAZO,SAAUgnF,EAAMtmG,GAC3B,IAAImiB,EAAOmkF,EAAK5pG,GAChB,OAAOylB,EAAK0xE,EAAE4rB,GAAQz/G,EAAQg+G,EAAQ77F,EAAK7kB,EAAGsgH,IAUnCoC,CAAO1+G,KAAMtB,IAEtBgvB,IAAK,SAAUjyB,GACb,OAXO,SAAUupG,EAAMtmG,EAAOjD,GAClC,IAAIolB,EAAOmkF,EAAK5pG,GACZ8iH,IAASziH,GAASA,EAAQuC,KAAK+sC,MAAMtvC,IAAU,EAAI,EAAIA,EAAQ,IAAO,IAAe,IAARA,GACjFolB,EAAK0xE,EAAE6rB,GAAQ1/G,EAAQg+G,EAAQ77F,EAAK7kB,EAAGP,EAAO6gH,IAQnCqC,CAAO3+G,KAAMtB,EAAOjD,IAE7BrB,YAAY,KAGZk3G,GACF+M,EAAahU,GAAQ,SAAUrF,EAAMnkF,EAAM+9F,EAASC,GAClDpV,EAAWzE,EAAMqZ,EAAY/T,EAAM,MACnC,IAEIx8F,EAAQosC,EAAY1gD,EAAQslH,EAF5BpgH,EAAQ,EACR02C,EAAS,EAEb,GAAKxpC,EAASiV,GAIP,MAAIA,aAAgBy5F,IAAiBwE,EAAQrI,EAAQ51F,KAAUu5F,GAAgB0E,GAASzE,GAaxF,OAAI2B,MAAen7F,EACjB+7F,GAASyB,EAAYx9F,GAErBk8F,GAAM1hH,KAAKgjH,EAAYx9F,GAf9B/S,EAAS+S,EACTu0B,EAASqnE,GAASmC,EAASlC,GAC3B,IAAIqC,EAAOl+F,EAAKq5B,WAChB,QAAgBt7C,IAAZigH,EAAuB,CACzB,GAAIE,EAAOrC,EAAO,MAAMl+D,EAAW29D,IAEnC,IADAjiE,EAAa6kE,EAAO3pE,GACH,EAAG,MAAMoJ,EAAW29D,SAGrC,IADAjiE,EAAav/B,EAASkkG,GAAWnC,GAChBtnE,EAAS2pE,EAAM,MAAMvgE,EAAW29D,IAEnD3iH,EAAS0gD,EAAawiE,OAftBljH,EAASqgH,EAAQh5F,GAEjB/S,EAAS,IAAIwsG,EADbpgE,EAAa1gD,EAASkjH,GA2BxB,IAPAxX,EAAKF,EAAM,KAAM,CACfzyE,EAAGzkB,EACH9R,EAAGo5C,EACHkhC,EAAGp8B,EACHr9C,EAAGrD,EACH+4F,EAAG,IAAIioB,EAAU1sG,KAEZpP,EAAQlF,GAAQilH,EAAWzZ,EAAMtmG,QAE1C8/G,EAAsBH,EAAoB,UAAI53G,EAAOw3G,IACrD/Y,EAAKsZ,EAAqB,cAAeH,IAC/B1S,GAAM,WAChB0S,EAAW,OACN1S,GAAM,WACX,IAAI0S,GAAY,OACXzS,GAAY,SAAUa,GAC3B,IAAI4R,EACJ,IAAIA,EAAW,MACf,IAAIA,EAAW,KACf,IAAIA,EAAW5R,MACd,KACD4R,EAAahU,GAAQ,SAAUrF,EAAMnkF,EAAM+9F,EAASC,GAElD,IAAIC,EAGJ,OAJArV,EAAWzE,EAAMqZ,EAAY/T,GAIxB1+F,EAASiV,GACVA,aAAgBy5F,IAAiBwE,EAAQrI,EAAQ51F,KAAUu5F,GAAgB0E,GAASzE,OACnEz7G,IAAZigH,EACH,IAAI3S,EAAKrrF,EAAM47F,GAASmC,EAASlC,GAAQmC,QAC7BjgH,IAAZggH,EACE,IAAI1S,EAAKrrF,EAAM47F,GAASmC,EAASlC,IACjC,IAAIxQ,EAAKrrF,GAEbm7F,MAAen7F,EAAa+7F,GAASyB,EAAYx9F,GAC9Ck8F,GAAM1hH,KAAKgjH,EAAYx9F,GATF,IAAIqrF,EAAK2N,EAAQh5F,OAW/C65F,EAAa4D,IAAQj9E,SAASzmC,UAAYs6G,EAAKhJ,GAAMrgG,OAAOqpG,EAAKoJ,IAAQpJ,EAAKhJ,IAAO,SAAUzxG,GACvFA,KAAO4jH,GAAanZ,EAAKmZ,EAAY5jH,EAAKyxG,EAAKzxG,OAEvD4jH,EAAoB,UAAIG,EACnB1N,IAAS0N,EAAoBniH,YAAcgiH,IAElD,IAAIW,EAAkBR,EAAoBlO,IACtC2O,IAAsBD,IACI,UAAxBA,EAAgB1iH,MAA4CsC,MAAxBogH,EAAgB1iH,MACtD4iH,EAAYrB,GAAWpgH,OAC3BynG,EAAKmZ,EAAYzC,IAAmB,GACpC1W,EAAKsZ,EAAqBxC,GAAa1R,GACvCpF,EAAKsZ,EAAqBtC,IAAM,GAChChX,EAAKsZ,EAAqB3C,GAAiBwC,IAEvCH,EAAU,IAAIG,EAAW,GAAGlV,KAAQmB,EAASnB,MAAOqV,IACtDlY,EAAGkY,EAAqBrV,GAAK,CAC3BnrF,IAAK,WAAc,OAAOssF,KAI9B3D,EAAE2D,GAAQ+T,EAEVlZ,EAAQA,EAAQK,EAAIL,EAAQY,EAAIZ,EAAQG,GAAK+Y,GAAcnS,GAAOvF,GAElExB,EAAQA,EAAQO,EAAG4E,EAAM,CACvBlwD,kBAAmBsiE,IAGrBvX,EAAQA,EAAQO,EAAIP,EAAQG,EAAIqG,GAAM,WAAcO,EAAK5nG,GAAGjJ,KAAKgjH,EAAY,MAAQ/T,EAAM,CACzF/tG,KAAMwgH,GACNz4G,GAAI24G,KAGA7iE,KAAqBokE,GAAsBtZ,EAAKsZ,EAAqBpkE,EAAmBsiE,GAE9FvX,EAAQA,EAAQj0B,EAAGo5B,EAAM6B,IAEzBvC,EAAWU,GAEXnF,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAIkX,GAAYlS,EAAM,CAAE58E,IAAKkwF,KAEzDzY,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK2Z,EAAmB3U,EAAMuT,IAErD/M,GAAW0N,EAAoBriH,UAAYs/G,KAAe+C,EAAoBriH,SAAWs/G,IAE9FtW,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAIqG,GAAM,WACpC,IAAI0S,EAAW,GAAGjiH,WAChBkuG,EAAM,CAAEluG,MAAOuhH,KAEnBxY,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAKqG,GAAM,WACrC,MAAO,CAAC,EAAG,GAAGgQ,kBAAoB,IAAI0C,EAAW,CAAC,EAAG,IAAI1C,sBACpDhQ,GAAM,WACX6S,EAAoB7C,eAAetgH,KAAK,CAAC,EAAG,QACzCivG,EAAM,CAAEqR,eAAgBwB,KAE7BxM,EAAUrG,GAAQ2U,EAAoBD,EAAkBE,EACnDpO,GAAYmO,GAAmB/Z,EAAKsZ,EAAqBlO,GAAU4O,SAErE9lH,EAAOC,QAAU,c,6BC9dxB,IAAIsxC,EAAS,EAAQ,MACjBk/D,EAAc,EAAQ,OACtBiH,EAAU,EAAQ,MAClB4I,EAAS,EAAQ,OACjBxU,EAAO,EAAQ,OACfsE,EAAc,EAAQ,OACtBmC,EAAQ,EAAQ,OAChBlC,EAAa,EAAQ,OACrBuO,EAAY,EAAQ,OACpBr9F,EAAW,EAAQ,OACnBk/F,EAAU,EAAQ,OAClB3E,EAAO,WACP5O,EAAK,WACL0T,EAAY,EAAQ,OACpBnO,EAAiB,EAAQ,OACzBuO,EAAe,cACf+E,EAAY,WAGZC,EAAc,eACd9E,EAAe3vE,EAAmB,YAClC6vE,EAAY7vE,EAAgB,SAC5B3sC,EAAO2sC,EAAO3sC,KACdwgD,EAAa7T,EAAO6T,WAEpB8xB,EAAW3lC,EAAO2lC,SAClB+uC,EAAa/E,EACb7/F,EAAMzc,EAAKyc,IACXpb,EAAMrB,EAAKqB,IACXK,EAAQ1B,EAAK0B,MACbkrC,EAAM5sC,EAAK4sC,IACX00E,EAAMthH,EAAKshH,IACXC,EAAS,SACTC,EAAc,aACdC,EAAc,aACdC,EAAU7V,EAAc,KAAO0V,EAC/BI,EAAU9V,EAAc,KAAO2V,EAC/BI,EAAU/V,EAAc,KAAO4V,EAGnC,SAASI,EAAYpkH,EAAOqkH,EAAMC,GAChC,IAOIljH,EAAGk/E,EAAGhkD,EAPNjqB,EAAS,IAAInU,MAAMomH,GACnBC,EAAgB,EAATD,EAAaD,EAAO,EAC3BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,EAAc,KAATL,EAAczgH,EAAI,GAAI,IAAMA,EAAI,GAAI,IAAM,EAC/C5F,EAAI,EACJ80C,EAAI9yC,EAAQ,GAAe,IAAVA,GAAe,EAAIA,EAAQ,EAAI,EAAI,EAkCxD,KAhCAA,EAAQgf,EAAIhf,KAECA,GAASA,IAAU60E,GAE9ByL,EAAItgF,GAASA,EAAQ,EAAI,EACzBoB,EAAIojH,IAEJpjH,EAAI6C,EAAMkrC,EAAInvC,GAAS6jH,GACnB7jH,GAASs8B,EAAI14B,EAAI,GAAIxC,IAAM,IAC7BA,IACAk7B,GAAK,IAGLt8B,GADEoB,EAAIqjH,GAAS,EACNC,EAAKpoF,EAELooF,EAAK9gH,EAAI,EAAG,EAAI6gH,IAEfnoF,GAAK,IACfl7B,IACAk7B,GAAK,GAEHl7B,EAAIqjH,GAASD,GACflkC,EAAI,EACJl/E,EAAIojH,GACKpjH,EAAIqjH,GAAS,GACtBnkC,GAAKtgF,EAAQs8B,EAAI,GAAK14B,EAAI,EAAGygH,GAC7BjjH,GAAQqjH,IAERnkC,EAAItgF,EAAQ4D,EAAI,EAAG6gH,EAAQ,GAAK7gH,EAAI,EAAGygH,GACvCjjH,EAAI,IAGDijH,GAAQ,EAAGhyG,EAAOrU,KAAW,IAAJsiF,EAASA,GAAK,IAAK+jC,GAAQ,GAG3D,IAFAjjH,EAAIA,GAAKijH,EAAO/jC,EAChBikC,GAAQF,EACDE,EAAO,EAAGlyG,EAAOrU,KAAW,IAAJoD,EAASA,GAAK,IAAKmjH,GAAQ,GAE1D,OADAlyG,IAASrU,IAAU,IAAJ80C,EACRzgC,EAET,SAASsyG,EAActyG,EAAQgyG,EAAMC,GACnC,IAOIhkC,EAPAikC,EAAgB,EAATD,EAAaD,EAAO,EAC3BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBI,EAAQL,EAAO,EACfvmH,EAAIsmH,EAAS,EACbxxE,EAAIzgC,EAAOrU,KACXoD,EAAQ,IAAJ0xC,EAGR,IADAA,IAAM,EACC8xE,EAAQ,EAAGxjH,EAAQ,IAAJA,EAAUiR,EAAOrU,GAAIA,IAAK4mH,GAAS,GAIzD,IAHAtkC,EAAIl/E,GAAK,IAAMwjH,GAAS,EACxBxjH,KAAOwjH,EACPA,GAASP,EACFO,EAAQ,EAAGtkC,EAAQ,IAAJA,EAAUjuE,EAAOrU,GAAIA,IAAK4mH,GAAS,GACzD,GAAU,IAANxjH,EACFA,EAAI,EAAIqjH,MACH,IAAIrjH,IAAMojH,EACf,OAAOlkC,EAAImxB,IAAM3+D,GAAK+hC,EAAWA,EAEjCyL,GAAQ18E,EAAI,EAAGygH,GACfjjH,GAAQqjH,EACR,OAAQ3xE,GAAK,EAAI,GAAKwtC,EAAI18E,EAAI,EAAGxC,EAAIijH,GAGzC,SAASQ,EAAUC,GACjB,OAAOA,EAAM,IAAM,GAAKA,EAAM,IAAM,GAAKA,EAAM,IAAM,EAAIA,EAAM,GAEjE,SAASC,EAAOj4E,GACd,MAAO,CAAM,IAALA,GAEV,SAASk4E,EAAQl4E,GACf,MAAO,CAAM,IAALA,EAAWA,GAAM,EAAI,KAE/B,SAASm4E,EAAQn4E,GACf,MAAO,CAAM,IAALA,EAAWA,GAAM,EAAI,IAAMA,GAAM,GAAK,IAAMA,GAAM,GAAK,KAEjE,SAASo4E,EAAQp4E,GACf,OAAOs3E,EAAYt3E,EAAI,GAAI,GAE7B,SAASq4E,EAAQr4E,GACf,OAAOs3E,EAAYt3E,EAAI,GAAI,GAG7B,SAASs0E,EAAU5W,EAAGxrG,EAAKqiH,GACzBxW,EAAGL,EAAW,UAAGxrG,EAAK,CAAEujB,IAAK,WAAc,OAAOhe,KAAK88G,MAGzD,SAAS9+F,EAAI6iG,EAAMN,EAAO7hH,EAAOoiH,GAC/B,IACIC,EAAWlH,GADCn7G,GAEhB,GAAIqiH,EAAWR,EAAQM,EAAKlB,GAAU,MAAMnhE,EAAW4gE,GACvD,IAAI7T,EAAQsV,EAAKnB,GAASztF,GACtB9W,EAAQ4lG,EAAWF,EAAKjB,GACxBoB,EAAOzV,EAAMnvG,MAAM+e,EAAOA,EAAQolG,GACtC,OAAOO,EAAiBE,EAAOA,EAAK5pC,UAEtC,SAAS1pD,EAAImzF,EAAMN,EAAO7hH,EAAOuiH,EAAYxlH,EAAOqlH,GAClD,IACIC,EAAWlH,GADCn7G,GAEhB,GAAIqiH,EAAWR,EAAQM,EAAKlB,GAAU,MAAMnhE,EAAW4gE,GAIvD,IAHA,IAAI7T,EAAQsV,EAAKnB,GAASztF,GACtB9W,EAAQ4lG,EAAWF,EAAKjB,GACxBoB,EAAOC,GAAYxlH,GACdhC,EAAI,EAAGA,EAAI8mH,EAAO9mH,IAAK8xG,EAAMpwF,EAAQ1hB,GAAKunH,EAAKF,EAAiBrnH,EAAI8mH,EAAQ9mH,EAAI,GAG3F,GAAKigH,EAAO6E,IAgFL,CACL,IAAK5S,GAAM,WACT2O,EAAa,QACR3O,GAAM,WACX,IAAI2O,GAAc,OACd3O,GAAM,WAIV,OAHA,IAAI2O,EACJ,IAAIA,EAAa,KACjB,IAAIA,EAAapN,KACVoN,EAAah+G,MAAQ89G,KAC1B,CAMF,IADA,IACyC3/G,EADrCymH,GAJJ5G,EAAe,SAAqB9gH,GAElC,OADAiwG,EAAWzpG,KAAMs6G,GACV,IAAI+E,EAAWxF,EAAQrgH,MAEa,UAAI6lH,EAAoB,UAC5DvkG,EAAOo6F,EAAKmK,GAAan8E,EAAI,EAAQpoB,EAAKthB,OAAS0pC,IACnDzoC,EAAMqgB,EAAKooB,QAASo3E,GAAepV,EAAKoV,EAAc7/G,EAAK4kH,EAAW5kH,IAE1Eq2G,IAASoQ,EAAiB7kH,YAAci+G,GAG/C,IAAIuG,EAAO,IAAIrG,EAAU,IAAIF,EAAa,IACtC6G,GAAW3G,EAAmB,UAAE4G,QACpCP,EAAKO,QAAQ,EAAG,YAChBP,EAAKO,QAAQ,EAAG,aACZP,EAAKQ,QAAQ,IAAOR,EAAKQ,QAAQ,IAAI7X,EAAYgR,EAAmB,UAAG,CACzE4G,QAAS,SAAiB1D,EAAYjiH,GACpC0lH,GAAS9lH,KAAK2E,KAAM09G,EAAYjiH,GAAS,IAAM,KAEjD6lH,SAAU,SAAkB5D,EAAYjiH,GACtC0lH,GAAS9lH,KAAK2E,KAAM09G,EAAYjiH,GAAS,IAAM,OAEhD,QAhHH6+G,EAAe,SAAqB9gH,GAClCiwG,EAAWzpG,KAAMs6G,EAAcF,GAC/B,IAAIlgE,EAAa2/D,EAAQrgH,GACzBwG,KAAKiyB,GAAK+nF,EAAU3+G,KAAK,IAAI1B,MAAMugD,GAAa,GAChDl6C,KAAK2/G,GAAWzlE,GAGlBsgE,EAAY,SAAkB1sG,EAAQ4vG,EAAYxjE,GAChDuvD,EAAWzpG,KAAMw6G,EAAW2E,GAC5B1V,EAAW37F,EAAQwsG,EAAc6E,GACjC,IAAI5hE,EAAezvC,EAAO6xG,GACtBvqE,EAAS4iE,EAAU0F,GACvB,GAAItoE,EAAS,GAAKA,EAASmI,EAAc,MAAMiB,EAAW,iBAE1D,GAAIpJ,GADJ8E,OAA4Bt7C,IAAfs7C,EAA2BqD,EAAenI,EAASz6B,EAASu/B,IAC/CqD,EAAc,MAAMiB,EAxJ/B,iBAyJfx+C,KAAK0/G,GAAW5xG,EAChB9N,KAAK4/G,GAAWxqE,EAChBp1C,KAAK2/G,GAAWzlE,GAGd2vD,IACFgT,EAAUvC,EAAckF,EAAa,MACrC3C,EAAUrC,EAAW+E,EAAQ,MAC7B1C,EAAUrC,EAAWgF,EAAa,MAClC3C,EAAUrC,EAAWiF,EAAa,OAGpCjW,EAAYgR,EAAmB,UAAG,CAChC6G,QAAS,SAAiB3D,GACxB,OAAO1/F,EAAIhe,KAAM,EAAG09G,GAAY,IAAM,IAAM,IAE9C6D,SAAU,SAAkB7D,GAC1B,OAAO1/F,EAAIhe,KAAM,EAAG09G,GAAY,IAElC8D,SAAU,SAAkB9D,GAC1B,IAAI6C,EAAQviG,EAAIhe,KAAM,EAAG09G,EAAYvzG,UAAU,IAC/C,OAAQo2G,EAAM,IAAM,EAAIA,EAAM,KAAO,IAAM,IAE7CkB,UAAW,SAAmB/D,GAC5B,IAAI6C,EAAQviG,EAAIhe,KAAM,EAAG09G,EAAYvzG,UAAU,IAC/C,OAAOo2G,EAAM,IAAM,EAAIA,EAAM,IAE/BmB,SAAU,SAAkBhE,GAC1B,OAAO4C,EAAUtiG,EAAIhe,KAAM,EAAG09G,EAAYvzG,UAAU,MAEtDw3G,UAAW,SAAmBjE,GAC5B,OAAO4C,EAAUtiG,EAAIhe,KAAM,EAAG09G,EAAYvzG,UAAU,OAAS,GAE/Dy3G,WAAY,SAAoBlE,GAC9B,OAAO0C,EAAcpiG,EAAIhe,KAAM,EAAG09G,EAAYvzG,UAAU,IAAK,GAAI,IAEnE03G,WAAY,SAAoBnE,GAC9B,OAAO0C,EAAcpiG,EAAIhe,KAAM,EAAG09G,EAAYvzG,UAAU,IAAK,GAAI,IAEnEi3G,QAAS,SAAiB1D,EAAYjiH,GACpCiyB,EAAI1tB,KAAM,EAAG09G,EAAY8C,EAAQ/kH,IAEnC6lH,SAAU,SAAkB5D,EAAYjiH,GACtCiyB,EAAI1tB,KAAM,EAAG09G,EAAY8C,EAAQ/kH,IAEnCqmH,SAAU,SAAkBpE,EAAYjiH,GACtCiyB,EAAI1tB,KAAM,EAAG09G,EAAY+C,EAAShlH,EAAO0O,UAAU,KAErD43G,UAAW,SAAmBrE,EAAYjiH,GACxCiyB,EAAI1tB,KAAM,EAAG09G,EAAY+C,EAAShlH,EAAO0O,UAAU,KAErD63G,SAAU,SAAkBtE,EAAYjiH,GACtCiyB,EAAI1tB,KAAM,EAAG09G,EAAYgD,EAASjlH,EAAO0O,UAAU,KAErD83G,UAAW,SAAmBvE,EAAYjiH,GACxCiyB,EAAI1tB,KAAM,EAAG09G,EAAYgD,EAASjlH,EAAO0O,UAAU,KAErD+3G,WAAY,SAAoBxE,EAAYjiH,GAC1CiyB,EAAI1tB,KAAM,EAAG09G,EAAYkD,EAASnlH,EAAO0O,UAAU,KAErDg4G,WAAY,SAAoBzE,EAAYjiH,GAC1CiyB,EAAI1tB,KAAM,EAAG09G,EAAYiD,EAASllH,EAAO0O,UAAU,OAsCzD0hG,EAAeyO,EAAcF,GAC7BvO,EAAe2O,EAAW2E,GAC1Bja,EAAKsV,EAAmB,UAAGd,EAAOwC,MAAM,GACxC7iH,EAAoB,YAAIihH,EACxBjhH,EAAiB,SAAImhH,G,gBCpQrB,IAfA,IASI4H,EATAz3E,EAAS,EAAQ,MACjBu6D,EAAO,EAAQ,OACfyS,EAAM,EAAQ,OACdsE,EAAQtE,EAAI,eACZuE,EAAOvE,EAAI,QACX4G,KAAS5zE,EAAO4vE,cAAe5vE,EAAO8vE,UACtCsB,EAASwC,EACT9kH,EAAI,EAIJ4oH,EAAyB,iHAE3BltC,MAAM,KAED17E,EAPC,IAQF2oH,EAAQz3E,EAAO03E,EAAuB5oH,QACxCyrG,EAAKkd,EAAMxnH,UAAWqhH,GAAO,GAC7B/W,EAAKkd,EAAMxnH,UAAWshH,GAAM,IACvBH,GAAS,EAGlB3iH,EAAOC,QAAU,CACfklH,IAAKA,EACLxC,OAAQA,EACRE,MAAOA,EACPC,KAAMA,I,UC1BR,IAAIniF,EAAK,EACLuoF,EAAKtkH,KAAK0jC,SACdtoC,EAAOC,QAAU,SAAUoB,GACzB,MAAO,UAAUoR,YAAejN,IAARnE,EAAoB,GAAKA,EAAK,QAASs/B,EAAKuoF,GAAInmH,SAAS,O,gBCHnF,IACIy3G,EADS,EAAQ,MACEA,UAEvBx6G,EAAOC,QAAUu6G,GAAaA,EAAU2O,WAAa,I,eCHrD,IAAI32G,EAAW,EAAQ,OACvBxS,EAAOC,QAAU,SAAUkvC,EAAI0/D,GAC7B,IAAKr8F,EAAS28B,IAAOA,EAAGkiE,KAAOxC,EAAM,MAAMluG,UAAU,0BAA4BkuG,EAAO,cACxF,OAAO1/D,I,gBCHT,IAAIoC,EAAS,EAAQ,MACjBk6D,EAAO,EAAQ,OACfiM,EAAU,EAAQ,MAClB0R,EAAS,EAAQ,OACjBhoH,EAAiB,WACrBpB,EAAOC,QAAU,SAAUiD,GACzB,IAAImmH,EAAU5d,EAAK/pG,SAAW+pG,EAAK/pG,OAASg2G,EAAU,GAAKnmE,EAAO7vC,QAAU,IACtD,KAAlBwB,EAAK8d,OAAO,IAAe9d,KAAQmmH,GAAUjoH,EAAeioH,EAASnmH,EAAM,CAAEb,MAAO+mH,EAAOh6E,EAAElsC,O,gBCPnGjD,EAAQmvC,EAAI,EAAZ,Q,gBCAA,IAAI+iE,EAAQ,EAAQ,KAAR,CAAqB,OAC7BoM,EAAM,EAAQ,OACd78G,EAAS,eACT4nH,EAA8B,mBAAV5nH,GAET1B,EAAOC,QAAU,SAAUiD,GACxC,OAAOivG,EAAMjvG,KAAUivG,EAAMjvG,GAC3BomH,GAAc5nH,EAAOwB,KAAUomH,EAAa5nH,EAAS68G,GAAK,UAAYr7G,MAGjEivG,MAAQA,G,gBCVjB,IAAIkL,EAAU,EAAQ,OAClBnG,EAAW,EAAQ,MAAR,CAAkB,YAC7BK,EAAY,EAAQ,OACxBv3G,EAAOC,QAAU,2BAAuC,SAAUkvC,GAChE,GAAU3pC,MAAN2pC,EAAiB,OAAOA,EAAG+nE,IAC1B/nE,EAAG,eACHooE,EAAU8F,EAAQluE,M,eCLzB,IAAI48D,EAAU,EAAQ,OAEtBA,EAAQA,EAAQj0B,EAAG,QAAS,CAAEo2B,WAAY,EAAQ,QAElD,EAAQ,MAAR,CAAiC,e,6BCJjC,IAAInC,EAAU,EAAQ,OAClBwd,EAAS,EAAQ,MAAR,CAA4B,GAEzCxd,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK,EAAQ,MAAR,CAA4B,GAAGn2F,OAAO,GAAO,QAAS,CAErFA,MAAO,SAAes5F,GACpB,OAAOka,EAAO3iH,KAAMyoG,EAAYt+F,UAAU,Q,gBCN9C,IAAIg7F,EAAU,EAAQ,OAEtBA,EAAQA,EAAQj0B,EAAG,QAAS,CAAExZ,KAAM,EAAQ,SAE5C,EAAQ,MAAR,CAAiC,S,6BCJjC,IAAIytC,EAAU,EAAQ,OAClByd,EAAU,EAAQ,MAAR,CAA4B,GAE1Czd,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK,EAAQ,MAAR,CAA4B,GAAG/1F,QAAQ,GAAO,QAAS,CAEtFA,OAAQ,SAAgBk5F,GACtB,OAAOma,EAAQ5iH,KAAMyoG,EAAYt+F,UAAU,Q,6BCL/C,IAAIg7F,EAAU,EAAQ,OAClB0d,EAAQ,EAAQ,MAAR,CAA4B,GACpCxW,EAAM,YACNyW,GAAS,EAETzW,IAAO,IAAI1yG,MAAM,GAAG0yG,IAAK,WAAcyW,GAAS,KACpD3d,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAIwd,EAAQ,QAAS,CAC/CziH,UAAW,SAAmBooG,GAC5B,OAAOoa,EAAM7iH,KAAMyoG,EAAYt+F,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,MAGzE,EAAQ,MAAR,CAAiCytG,I,6BCXjC,IAAIlH,EAAU,EAAQ,OAClB0d,EAAQ,EAAQ,MAAR,CAA4B,GACpCxW,EAAM,OACNyW,GAAS,EAETzW,IAAO,IAAI1yG,MAAM,GAAM,MAAE,WAAcmpH,GAAS,KACpD3d,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAIwd,EAAQ,QAAS,CAC/CrzG,KAAM,SAAcg5F,GAClB,OAAOoa,EAAM7iH,KAAMyoG,EAAYt+F,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,MAGzE,EAAQ,MAAR,CAAiCytG,I,6BCZjC,IAAIlH,EAAU,EAAQ,OAClB4d,EAAW,EAAQ,MAAR,CAA4B,GACvCC,EAAS,EAAQ,MAAR,CAA4B,GAAGp9G,SAAS,GAErDu/F,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK0d,EAAQ,QAAS,CAEhDp9G,QAAS,SAAiB6iG,GACxB,OAAOsa,EAAS/iH,KAAMyoG,EAAYt+F,UAAU,Q,6BCPhD,IAAIgsE,EAAM,EAAQ,KACdgvB,EAAU,EAAQ,OAClBiC,EAAW,EAAQ,OACnB/rG,EAAO,EAAQ,OACf60G,EAAc,EAAQ,OACtBv1F,EAAW,EAAQ,OACnBsoG,EAAiB,EAAQ,OACzB9S,EAAY,EAAQ,OAExBhL,EAAQA,EAAQO,EAAIP,EAAQG,GAAK,EAAQ,KAAR,EAA0B,SAAUmH,GAAQ9yG,MAAM4C,KAAKkwG,MAAW,QAAS,CAE1GlwG,KAAM,SAAcmX,GAClB,IAOIla,EAAQ6c,EAAQg7D,EAAMt2E,EAPtB4rG,EAAIS,EAAS1zF,GACbuyF,EAAmB,mBAARjmG,KAAqBA,KAAOrG,MACvC8tG,EAAOt9F,UAAU3Q,OACjBwjH,EAAQvV,EAAO,EAAIt9F,UAAU,QAAKvL,EAClCi0F,OAAoBj0F,IAAVo+G,EACVt+G,EAAQ,EACR6xG,EAASJ,EAAUxJ,GAIvB,GAFI9T,IAASmqB,EAAQ7mC,EAAI6mC,EAAOvV,EAAO,EAAIt9F,UAAU,QAAKvL,EAAW,IAEvDA,MAAV2xG,GAAyBtK,GAAKtsG,OAASu2G,EAAYK,GAMrD,IAAKl6F,EAAS,IAAI4vF,EADlBzsG,EAASmhB,EAASgsF,EAAEntG,SACSA,EAASkF,EAAOA,IAC3CukH,EAAe5sG,EAAQ3X,EAAOm0F,EAAUmqB,EAAMrW,EAAEjoG,GAAQA,GAASioG,EAAEjoG,SANrE,IAAK3D,EAAWw1G,EAAOl1G,KAAKsrG,GAAItwF,EAAS,IAAI4vF,IAAO50B,EAAOt2E,EAASO,QAAQC,KAAMmD,IAChFukH,EAAe5sG,EAAQ3X,EAAOm0F,EAAUx3F,EAAKN,EAAUiiH,EAAO,CAAC3rC,EAAK51E,MAAOiD,IAAQ,GAAQ2yE,EAAK51E,OASpG,OADA4a,EAAO7c,OAASkF,EACT2X,M,6BCjCX,IAAI8uF,EAAU,EAAQ,OAClB+d,EAAW,EAAQ,MAAR,EAA6B,GACxCxR,EAAU,GAAGznG,QACbk5G,IAAkBzR,GAAW,EAAI,CAAC,GAAGznG,QAAQ,GAAI,GAAK,EAE1Dk7F,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK6d,IAAkB,EAAQ,MAAR,CAA4BzR,IAAW,QAAS,CAEjGznG,QAAS,SAAiBmzG,GACxB,OAAO+F,EAEHzR,EAAQh9F,MAAM1U,KAAMmK,YAAc,EAClC+4G,EAASljH,KAAMo9G,EAAejzG,UAAU,Q,gBCXhD,IAAIg7F,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,QAAS,CAAE9rG,QAAS,EAAQ,S,6BCF/C,IAAIwpH,EAAmB,EAAQ,OAC3B/xC,EAAO,EAAQ,OACfs/B,EAAY,EAAQ,OACpBhJ,EAAY,EAAQ,OAMxBvuG,EAAOC,QAAU,EAAQ,MAAR,CAA0BM,MAAO,SAAS,SAAUkxG,EAAU/mG,GAC7E9D,KAAKyqG,GAAK9C,EAAUkD,GACpB7qG,KAAKnF,GAAK,EACVmF,KAAK8qG,GAAKhnG,KAET,WACD,IAAI6iG,EAAI3mG,KAAKyqG,GACT3mG,EAAO9D,KAAK8qG,GACZpsG,EAAQsB,KAAKnF,KACjB,OAAK8rG,GAAKjoG,GAASioG,EAAEntG,QACnBwG,KAAKyqG,QAAK7rG,EACHyyE,EAAK,IAEaA,EAAK,EAApB,QAARvtE,EAA+BpF,EACvB,UAARoF,EAAiC6iG,EAAEjoG,GACxB,CAACA,EAAOioG,EAAEjoG,OACxB,UAGHiyG,EAAU0S,UAAY1S,EAAUh3G,MAEhCypH,EAAiB,QACjBA,EAAiB,UACjBA,EAAiB,Y,6BC/BjB,IAAIje,EAAU,EAAQ,OAClBwC,EAAY,EAAQ,OACpB4T,EAAY,GAAGp8F,KAGnBgmF,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK,EAAQ,QAAiB/qG,SAAW,EAAQ,MAAR,CAA4BghH,IAAa,QAAS,CACrHp8F,KAAM,SAAck+F,GAClB,OAAO9B,EAAUlgH,KAAKssG,EAAU3nG,WAAqBpB,IAAdy+G,EAA0B,IAAMA,O,6BCR3E,IAAIlY,EAAU,EAAQ,OAClBwC,EAAY,EAAQ,OACpBqQ,EAAY,EAAQ,OACpBr9F,EAAW,EAAQ,OACnB+2F,EAAU,GAAGyJ,YACbgI,IAAkBzR,GAAW,EAAI,CAAC,GAAGyJ,YAAY,GAAI,GAAK,EAE9DhW,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK6d,IAAkB,EAAQ,MAAR,CAA4BzR,IAAW,QAAS,CAEjGyJ,YAAa,SAAqBiC,GAEhC,GAAI+F,EAAe,OAAOzR,EAAQh9F,MAAM1U,KAAMmK,YAAc,EAC5D,IAAIw8F,EAAIgB,EAAU3nG,MACdxG,EAASmhB,EAASgsF,EAAEntG,QACpBkF,EAAQlF,EAAS,EAGrB,IAFI2Q,UAAU3Q,OAAS,IAAGkF,EAAQV,KAAK0S,IAAIhS,EAAOs5G,EAAU7tG,UAAU,MAClEzL,EAAQ,IAAGA,EAAQlF,EAASkF,GAC1BA,GAAS,EAAGA,IAAS,GAAIA,KAASioG,GAAOA,EAAEjoG,KAAW0+G,EAAe,OAAO1+G,GAAS,EAC3F,OAAQ,M,6BClBZ,IAAIymG,EAAU,EAAQ,OAClBiX,EAAO,EAAQ,MAAR,CAA4B,GAEvCjX,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK,EAAQ,MAAR,CAA4B,GAAGr1F,KAAK,GAAO,QAAS,CAEnFA,IAAK,SAAaw4F,GAChB,OAAO2T,EAAKp8G,KAAMyoG,EAAYt+F,UAAU,Q,6BCN5C,IAAIg7F,EAAU,EAAQ,OAClB8d,EAAiB,EAAQ,OAG7B9d,EAAQA,EAAQO,EAAIP,EAAQG,EAAI,EAAQ,MAAR,EAAoB,WAClD,SAASA,KACT,QAAS3rG,MAAM2K,GAAGjJ,KAAKiqG,aAAcA,MACnC,QAAS,CAEXhhG,GAAI,WAIF,IAHA,IAAI5F,EAAQ,EACR+oG,EAAOt9F,UAAU3Q,OACjB6c,EAAS,IAAoB,mBAARrW,KAAqBA,KAAOrG,OAAO8tG,GACrDA,EAAO/oG,GAAOukH,EAAe5sG,EAAQ3X,EAAOyL,UAAUzL,MAE7D,OADA2X,EAAO7c,OAASiuG,EACTpxF,M,4BCfX,IAAI8uF,EAAU,EAAQ,OAClBme,EAAU,EAAQ,OAEtBne,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK,EAAQ,MAAR,CAA4B,GAAGgW,aAAa,GAAO,QAAS,CAE3FA,YAAa,SAAqB7S,GAChC,OAAO6a,EAAQtjH,KAAMyoG,EAAYt+F,UAAU3Q,OAAQ2Q,UAAU,IAAI,O,6BCNrE,IAAIg7F,EAAU,EAAQ,OAClBme,EAAU,EAAQ,OAEtBne,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK,EAAQ,MAAR,CAA4B,GAAGn5F,QAAQ,GAAO,QAAS,CAEtFA,OAAQ,SAAgBs8F,GACtB,OAAO6a,EAAQtjH,KAAMyoG,EAAYt+F,UAAU3Q,OAAQ2Q,UAAU,IAAI,O,6BCNrE,IAAIg7F,EAAU,EAAQ,OAClBhjE,EAAO,EAAQ,OACf2kE,EAAM,EAAQ,OACdO,EAAkB,EAAQ,OAC1B1sF,EAAW,EAAQ,OACnBouF,EAAa,GAAG3sG,MAGpB+oG,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAI,EAAQ,MAAR,EAAoB,WAC9CnjE,GAAM4mE,EAAW1tG,KAAK8mC,MACxB,QAAS,CACX/lC,MAAO,SAAeohH,EAAOjpC,GAC3B,IAAIh7E,EAAMohB,EAAS3a,KAAKxG,QACpBslH,EAAQhY,EAAI9mG,MAEhB,GADAu0E,OAAc31E,IAAR21E,EAAoBh7E,EAAMg7E,EACnB,SAATuqC,EAAkB,OAAO/V,EAAW1tG,KAAK2E,KAAMw9G,EAAOjpC,GAM1D,IALA,IAAIp5D,EAAQksF,EAAgBmW,EAAOjkH,GAC/BgqH,EAAOlc,EAAgB9yB,EAAKh7E,GAC5BmpC,EAAO/nB,EAAS4oG,EAAOpoG,GACvBqoG,EAAS,IAAI7pH,MAAM+oC,GACnBjpC,EAAI,EACDA,EAAIipC,EAAMjpC,IAAK+pH,EAAO/pH,GAAc,UAATqlH,EAC9B9+G,KAAKoa,OAAOe,EAAQ1hB,GACpBuG,KAAKmb,EAAQ1hB,GACjB,OAAO+pH,M,6BCxBX,IAAIre,EAAU,EAAQ,OAClBse,EAAQ,EAAQ,MAAR,CAA4B,GAExCte,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK,EAAQ,MAAR,CAA4B,GAAGntD,MAAM,GAAO,QAAS,CAEpFA,KAAM,SAAcswD,GAClB,OAAOgb,EAAMzjH,KAAMyoG,EAAYt+F,UAAU,Q,6BCN7C,IAAIg7F,EAAU,EAAQ,OAClBJ,EAAY,EAAQ,OACpBqC,EAAW,EAAQ,OACnBuE,EAAQ,EAAQ,OAChB+X,EAAQ,GAAG9nF,KACXp/B,EAAO,CAAC,EAAG,EAAG,GAElB2oG,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAKqG,GAAM,WAErCnvG,EAAKo/B,UAAKh9B,QACL+sG,GAAM,WAEXnvG,EAAKo/B,KAAK,WAEL,EAAQ,MAAR,CAA4B8nF,IAAS,QAAS,CAEnD9nF,KAAM,SAAc2hF,GAClB,YAAqB3+G,IAAd2+G,EACHmG,EAAMroH,KAAK+rG,EAASpnG,OACpB0jH,EAAMroH,KAAK+rG,EAASpnG,MAAO+kG,EAAUwY,Q,gBCpB7C,EAAQ,KAAR,CAA0B,U,gBCC1B,IAAIpY,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,OAAQ,CAAEn+F,IAAK,WAAc,OAAO,IAAIoC,MAAO09B,c,gBCFlE,IAAI89D,EAAU,EAAQ,OAClB4H,EAAc,EAAQ,OAG1B5H,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAK37F,KAAK/O,UAAUmyG,cAAgBA,GAAc,OAAQ,CACpFA,YAAaA,K,6BCLf,IAAI5H,EAAU,EAAQ,OAClBiC,EAAW,EAAQ,OACnBV,EAAc,EAAQ,OAE1BvB,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAI,EAAQ,MAAR,EAAoB,WAClD,OAAkC,OAA3B,IAAI37F,KAAKujG,KAAKyW,UAC2D,IAA3Eh6G,KAAK/O,UAAU+oH,OAAOtoH,KAAK,CAAE0xG,YAAa,WAAc,OAAO,QAClE,OAAQ,CAEV4W,OAAQ,SAAgBlpH,GACtB,IAAIksG,EAAIS,EAASpnG,MACb4jH,EAAKld,EAAYC,GACrB,MAAoB,iBAANid,GAAmBtpG,SAASspG,GAAajd,EAAEoG,cAAT,S,gBCbpD,IAAI8W,EAAe,EAAQ,MAAR,CAAkB,eACjC1X,EAAQxiG,KAAK/O,UAEXipH,KAAgB1X,GAAQ,EAAQ,MAAR,CAAmBA,EAAO0X,EAAc,EAAQ,O,gBCH9E,IAAIC,EAAYn6G,KAAK/O,UACjBmpH,EAAe,eAEfzN,EAAYwN,EAAmB,SAC/Bz8E,EAAUy8E,EAAUz8E,QACpB,IAAI19B,KAAKujG,KAAO,IAAM6W,GACxB,EAAQ,MAAR,CAAuBD,EAJT,YAI+B,WAC3C,IAAIroH,EAAQ4rC,EAAQhsC,KAAK2E,MAEzB,OAAOvE,GAAUA,EAAQ66G,EAAUj7G,KAAK2E,MAAQ+jH,M,gBCRpD,IAAI5e,EAAU,EAAQ,OAEtBA,EAAQA,EAAQj0B,EAAG,WAAY,CAAErmE,KAAM,EAAQ,U,6BCF/C,IAAIe,EAAW,EAAQ,OACnBg2C,EAAiB,EAAQ,KACzBoiE,EAAe,EAAQ,MAAR,CAAkB,eACjCC,EAAgB5iF,SAASzmC,UAEvBopH,KAAgBC,GAAgB,WAA0BA,EAAeD,EAAc,CAAEvoH,MAAO,SAAUkrG,GAC9G,GAAmB,mBAAR3mG,OAAuB4L,EAAS+6F,GAAI,OAAO,EACtD,IAAK/6F,EAAS5L,KAAKpF,WAAY,OAAO+rG,aAAa3mG,KAEnD,KAAO2mG,EAAI/kD,EAAe+kD,OAAQ3mG,KAAKpF,YAAc+rG,EAAG,OAAO,EAC/D,OAAO,M,eCXT,IAAIL,EAAK,WACL4d,EAAS7iF,SAASzmC,UAClBupH,EAAS,wBACT7Z,EAAO,OAGXA,KAAQ4Z,GAAU,EAAQ,QAAqB5d,EAAG4d,EAAQ5Z,EAAM,CAC9DjwG,cAAc,EACd2jB,IAAK,WACH,IACE,OAAQ,GAAKhe,MAAM4wC,MAAMuzE,GAAQ,GACjC,MAAOtnH,GACP,MAAO,Q,6BCXb,IAAIunH,EAAS,EAAQ,MACjBra,EAAW,EAAQ,MACnBsa,EAAM,MAGVjrH,EAAOC,QAAU,EAAQ,MAAR,CAAyBgrH,GAAK,SAAUrmG,GACvD,OAAO,WAAiB,OAAOA,EAAIhe,KAAMmK,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,MAC9E,CAEDof,IAAK,SAAavjB,GAChB,IAAIyvG,EAAQka,EAAOna,SAASF,EAAS/pG,KAAMqkH,GAAM5pH,GACjD,OAAOyvG,GAASA,EAAM3X,GAGxB7kE,IAAK,SAAajzB,EAAKgB,GACrB,OAAO2oH,EAAOzZ,IAAIZ,EAAS/pG,KAAMqkH,GAAc,IAAR5pH,EAAY,EAAIA,EAAKgB,KAE7D2oH,GAAQ,I,gBCjBX,IAAIjf,EAAU,EAAQ,OAClBuN,EAAQ,EAAQ,OAChB3pE,EAAO/qC,KAAK+qC,KACZu7E,EAAStmH,KAAKumH,MAElBpf,EAAQA,EAAQO,EAAIP,EAAQG,IAAMgf,GAEW,KAAxCtmH,KAAK0B,MAAM4kH,EAAOp9G,OAAOs9G,aAEzBF,EAAOh0C,MAAaA,KACtB,OAAQ,CACTi0C,MAAO,SAAe/9G,GACpB,OAAQA,GAAKA,GAAK,EAAI0mG,IAAM1mG,EAAI,kBAC5BxI,KAAK4sC,IAAIpkC,GAAKxI,KAAKshH,IACnB5M,EAAMlsG,EAAI,EAAIuiC,EAAKviC,EAAI,GAAKuiC,EAAKviC,EAAI,Q,gBCd7C,IAAI2+F,EAAU,EAAQ,OAClBsf,EAASzmH,KAAK0mH,MAOlBvf,EAAQA,EAAQO,EAAIP,EAAQG,IAAMmf,GAAU,EAAIA,EAAO,GAAK,GAAI,OAAQ,CAAEC,MAL1E,SAASA,EAAMl+G,GACb,OAAQ8T,SAAS9T,GAAKA,IAAW,GAALA,EAAaA,EAAI,GAAKk+G,GAAOl+G,GAAKxI,KAAK4sC,IAAIpkC,EAAIxI,KAAK+qC,KAAKviC,EAAIA,EAAI,IAAxDA,M,gBCJvC,IAAI2+F,EAAU,EAAQ,OAClBwf,EAAS3mH,KAAK4mH,MAGlBzf,EAAQA,EAAQO,EAAIP,EAAQG,IAAMqf,GAAU,EAAIA,GAAQ,GAAK,GAAI,OAAQ,CACvEC,MAAO,SAAep+G,GACpB,OAAmB,IAAXA,GAAKA,GAAUA,EAAIxI,KAAK4sC,KAAK,EAAIpkC,IAAM,EAAIA,IAAM,M,gBCN7D,IAAI2+F,EAAU,EAAQ,OAClB3qF,EAAO,EAAQ,OAEnB2qF,EAAQA,EAAQO,EAAG,OAAQ,CACzBmf,KAAM,SAAcr+G,GAClB,OAAOgU,EAAKhU,GAAKA,GAAKxI,KAAKqB,IAAIrB,KAAKyc,IAAIjU,GAAI,EAAI,O,gBCLpD,IAAI2+F,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,OAAQ,CACzBof,MAAO,SAAet+G,GACpB,OAAQA,KAAO,GAAK,GAAKxI,KAAK0B,MAAM1B,KAAK4sC,IAAIpkC,EAAI,IAAOxI,KAAK+mH,OAAS,O,eCJ1E,IAAI5f,EAAU,EAAQ,OAClBlnG,EAAMD,KAAKC,IAEfknG,EAAQA,EAAQO,EAAG,OAAQ,CACzBsf,KAAM,SAAcx+G,GAClB,OAAQvI,EAAIuI,GAAKA,GAAKvI,GAAKuI,IAAM,M,gBCLrC,IAAI2+F,EAAU,EAAQ,OAClB+M,EAAS,EAAQ,OAErB/M,EAAQA,EAAQO,EAAIP,EAAQG,GAAK4M,GAAUl0G,KAAKm0G,OAAQ,OAAQ,CAAEA,MAAOD,K,gBCHzE,IAAI/M,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,OAAQ,CAAE6M,OAAQ,EAAQ,U,eCF7C,IAAIpN,EAAU,EAAQ,OAClB1qF,EAAMzc,KAAKyc,IAEf0qF,EAAQA,EAAQO,EAAG,OAAQ,CACzBuf,MAAO,SAAeC,EAAQC,GAM5B,IALA,IAIIpwG,EAAKqwG,EAJLpqE,EAAM,EACNvhD,EAAI,EACJguG,EAAOt9F,UAAU3Q,OACjB6rH,EAAO,EAEJ5rH,EAAIguG,GAEL4d,GADJtwG,EAAM0F,EAAItQ,UAAU1Q,QAGlBuhD,EAAMA,GADNoqE,EAAMC,EAAOtwG,GACKqwG,EAAM,EACxBC,EAAOtwG,GAGPimC,GAFSjmC,EAAM,GACfqwG,EAAMrwG,EAAMswG,GACCD,EACDrwG,EAEhB,OAAOswG,IAAS/0C,IAAWA,IAAW+0C,EAAOrnH,KAAK+qC,KAAKiS,O,gBCrB3D,IAAImqD,EAAU,EAAQ,OAClBmgB,EAAQtnH,KAAKunH,KAGjBpgB,EAAQA,EAAQO,EAAIP,EAAQG,EAAI,EAAQ,MAAR,EAAoB,WAClD,OAAgC,GAAzBggB,EAAM,WAAY,IAA4B,GAAhBA,EAAM9rH,UACzC,OAAQ,CACV+rH,KAAM,SAAc/+G,EAAG4kB,GACrB,IAAIo6F,EAAS,MACTC,GAAMj/G,EACNk/G,GAAMt6F,EACNu6F,EAAKH,EAASC,EACdG,EAAKJ,EAASE,EAClB,OAAO,EAAIC,EAAKC,IAAOJ,EAASC,IAAO,IAAMG,EAAKD,GAAMH,EAASE,IAAO,KAAO,KAAO,O,gBCb1F,IAAIvgB,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,OAAQ,CACzB90C,MAAO,SAAepqD,GACpB,OAAOxI,KAAK4sC,IAAIpkC,GAAKxI,KAAK6nH,W,gBCJ9B,IAAI1gB,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,OAAQ,CAAEgN,MAAO,EAAQ,U,gBCF5C,IAAIvN,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,OAAQ,CACzB9mD,KAAM,SAAcp4C,GAClB,OAAOxI,KAAK4sC,IAAIpkC,GAAKxI,KAAKshH,Q,gBCJ9B,IAAIna,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,OAAQ,CAAElrF,KAAM,EAAQ,U,gBCF3C,IAAI2qF,EAAU,EAAQ,OAClBgN,EAAQ,EAAQ,OAChBl0G,EAAMD,KAAKC,IAGfknG,EAAQA,EAAQO,EAAIP,EAAQG,EAAI,EAAQ,MAAR,EAAoB,WAClD,OAA8B,QAAtBtnG,KAAK8nH,MAAM,UACjB,OAAQ,CACVA,KAAM,SAAct/G,GAClB,OAAOxI,KAAKyc,IAAIjU,GAAKA,GAAK,GACrB2rG,EAAM3rG,GAAK2rG,GAAO3rG,IAAM,GACxBvI,EAAIuI,EAAI,GAAKvI,GAAKuI,EAAI,KAAOxI,KAAK+nH,EAAI,O,gBCX/C,IAAI5gB,EAAU,EAAQ,OAClBgN,EAAQ,EAAQ,OAChBl0G,EAAMD,KAAKC,IAEfknG,EAAQA,EAAQO,EAAG,OAAQ,CACzBsgB,KAAM,SAAcx/G,GAClB,IAAI8rB,EAAI6/E,EAAM3rG,GAAKA,GACf+rB,EAAI4/E,GAAO3rG,GACf,OAAO8rB,GAAKg+C,IAAW,EAAI/9C,GAAK+9C,KAAY,GAAKh+C,EAAIC,IAAMt0B,EAAIuI,GAAKvI,GAAKuI,Q,cCR7E,IAAI2+F,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,OAAQ,CACzBugB,MAAO,SAAe19E,GACpB,OAAQA,EAAK,EAAIvqC,KAAK0B,MAAQ1B,KAAK4B,MAAM2oC,O,6BCJ7C,IAAIoC,EAAS,EAAQ,MACjB3f,EAAM,EAAQ,OACd87E,EAAM,EAAQ,OACdgF,EAAoB,EAAQ,OAC5BpF,EAAc,EAAQ,OACtBiF,EAAQ,EAAQ,OAChBuJ,EAAO,WACPD,EAAO,WACP3O,EAAK,WACLwP,EAAQ,cACRpI,EAAS,SACTwY,EAAUv7E,EAAa,OACvBuhE,EAAOga,EACP/Z,EAAQ+Z,EAAQtrH,UAEhBurH,EAAarf,EAAI,EAAQ,MAAR,CAA4BqF,KAAWuB,EACxD0Y,EAAO,SAAUjX,OAAOv0G,UAGxByrH,EAAW,SAAUC,GACvB,IAAI/9E,EAAKm+D,EAAY4f,GAAU,GAC/B,GAAiB,iBAAN/9E,GAAkBA,EAAG/uC,OAAS,EAAG,CAE1C,IACI+sH,EAAOrQ,EAAOsQ,EADd92G,GADJ64B,EAAK69E,EAAO79E,EAAGw9B,OAAS+vC,EAAMvtE,EAAI,IACnB0vE,WAAW,GAE1B,GAAc,KAAVvoG,GAA0B,KAAVA,GAElB,GAAc,MADd62G,EAAQh+E,EAAG0vE,WAAW,KACQ,MAAVsO,EAAe,OAAOrZ,SACrC,GAAc,KAAVx9F,EAAc,CACvB,OAAQ64B,EAAG0vE,WAAW,IACpB,KAAK,GAAI,KAAK,GAAI/B,EAAQ,EAAGsQ,EAAU,GAAI,MAC3C,KAAK,GAAI,KAAK,IAAKtQ,EAAQ,EAAGsQ,EAAU,GAAI,MAC5C,QAAS,OAAQj+E,EAEnB,IAAK,IAAoD1mB,EAAhD4kG,EAASl+E,EAAGnsC,MAAM,GAAI3C,EAAI,EAAG68E,EAAImwC,EAAOjtH,OAAcC,EAAI68E,EAAG78E,IAIpE,IAHAooB,EAAO4kG,EAAOxO,WAAWx+G,IAGd,IAAMooB,EAAO2kG,EAAS,OAAOtZ,IACxC,OAAOpxB,SAAS2qC,EAAQvQ,IAE5B,OAAQ3tE,GAGZ,IAAK29E,EAAQ,UAAYA,EAAQ,QAAUA,EAAQ,QAAS,CAC1DA,EAAU,SAAgBzqH,GACxB,IAAI8sC,EAAKp+B,UAAU3Q,OAAS,EAAI,EAAIiC,EAChCupG,EAAOhlG,KACX,OAAOglG,aAAgBkhB,IAEjBC,EAAaxa,GAAM,WAAcQ,EAAMl4B,QAAQ54E,KAAK2pG,MAAY8B,EAAI9B,IAAS0I,GAC7E5B,EAAkB,IAAII,EAAKma,EAAS99E,IAAMy8D,EAAMkhB,GAAWG,EAAS99E,IAE5E,IAAK,IAMgB9tC,EANZqgB,EAAO,EAAQ,OAAoBo6F,EAAKhJ,GAAQ,6KAMvD/2B,MAAM,KAAMjyC,EAAI,EAAQpoB,EAAKthB,OAAS0pC,EAAGA,IACrClY,EAAIkhF,EAAMzxG,EAAMqgB,EAAKooB,MAAQlY,EAAIk7F,EAASzrH,IAC5C6rG,EAAG4f,EAASzrH,EAAKw6G,EAAK/I,EAAMzxG,IAGhCyrH,EAAQtrH,UAAYuxG,EACpBA,EAAM9vG,YAAc6pH,EACpB,EAAQ,MAAR,CAAuBv7E,EAAQ+iE,EAAQwY,K,gBClEzC,IAAI/gB,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,SAAU,CAAEnyB,QAASv1E,KAAKqB,IAAI,GAAI,O,gBCFrD,IAAI8lG,EAAU,EAAQ,OAClBuhB,EAAY,iBAEhBvhB,EAAQA,EAAQO,EAAG,SAAU,CAC3BprF,SAAU,SAAkBiuB,GAC1B,MAAoB,iBAANA,GAAkBm+E,EAAUn+E,O,gBCL9C,IAAI48D,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,SAAU,CAAEihB,UAAW,EAAQ,U,gBCFlD,IAAIxhB,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,SAAU,CAC3BrrF,MAAO,SAAegiE,GAEpB,OAAOA,GAAUA,M,gBCLrB,IAAI8oB,EAAU,EAAQ,OAClBwhB,EAAY,EAAQ,OACpBlsG,EAAMzc,KAAKyc,IAEf0qF,EAAQA,EAAQO,EAAG,SAAU,CAC3BkhB,cAAe,SAAuBvqC,GACpC,OAAOsqC,EAAUtqC,IAAW5hE,EAAI4hE,IAAW,qB,gBCN/C,IAAI8oB,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,SAAU,CAAEmhB,iBAAkB,oB,gBCFjD,IAAI1hB,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,SAAU,CAAEohB,kBAAmB,oB,gBCHlD,IAAI3hB,EAAU,EAAQ,OAClB0Q,EAAc,EAAQ,OAE1B1Q,EAAQA,EAAQO,EAAIP,EAAQG,GAAKp+F,OAAOs8B,YAAcqyE,GAAc,SAAU,CAAEryE,WAAYqyE,K,gBCH5F,IAAI1Q,EAAU,EAAQ,OAClB4Q,EAAY,EAAQ,OAExB5Q,EAAQA,EAAQO,EAAIP,EAAQG,GAAKp+F,OAAO40E,UAAYi6B,GAAY,SAAU,CAAEj6B,SAAUi6B,K,6BCFtF,IAAI5Q,EAAU,EAAQ,OAClB6S,EAAY,EAAQ,OACpB+O,EAAe,EAAQ,OACvB31G,EAAS,EAAQ,OACjB41G,EAAW,GAAIn1C,QACfnyE,EAAQ1B,KAAK0B,MACbmhB,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACvBomG,EAAQ,wCACRC,EAAO,IAEPC,EAAW,SAAUjrH,EAAG67B,GAG1B,IAFA,IAAIt+B,GAAK,EACL2tH,EAAKrvF,IACAt+B,EAAI,GACX2tH,GAAMlrH,EAAI2kB,EAAKpnB,GACfonB,EAAKpnB,GAAK2tH,EAAK,IACfA,EAAK1nH,EAAM0nH,EAAK,MAGhBvnE,EAAS,SAAU3jD,GAGrB,IAFA,IAAIzC,EAAI,EACJs+B,EAAI,IACCt+B,GAAK,GACZs+B,GAAKlX,EAAKpnB,GACVonB,EAAKpnB,GAAKiG,EAAMq4B,EAAI77B,GACpB67B,EAAKA,EAAI77B,EAAK,KAGdmrH,EAAc,WAGhB,IAFA,IAAI5tH,EAAI,EACJ80C,EAAI,KACC90C,GAAK,GACZ,GAAU,KAAN80C,GAAkB,IAAN90C,GAAuB,IAAZonB,EAAKpnB,GAAU,CACxC,IAAI+8E,EAAI24B,OAAOtuF,EAAKpnB,IACpB80C,EAAU,KAANA,EAAWioC,EAAIjoC,EAAIn9B,EAAO/V,KAAK6rH,EAAM,EAAI1wC,EAAEh9E,QAAUg9E,EAE3D,OAAOjoC,GAEPlvC,EAAM,SAAUmH,EAAGtK,EAAGmzB,GACxB,OAAa,IAANnzB,EAAUmzB,EAAMnzB,EAAI,GAAM,EAAImD,EAAImH,EAAGtK,EAAI,EAAGmzB,EAAM7oB,GAAKnH,EAAImH,EAAIA,EAAGtK,EAAI,EAAGmzB,IAelF81E,EAAQA,EAAQj0B,EAAIi0B,EAAQG,KAAO0hB,IACV,UAAvB,KAAQn1C,QAAQ,IACG,MAAnB,GAAIA,QAAQ,IACS,SAArB,MAAMA,QAAQ,IACuB,yBAArC,mBAAsBA,QAAQ,MAC1B,EAAQ,MAAR,EAAoB,WAExBm1C,EAAS3rH,KAAK,QACX,SAAU,CACbw2E,QAAS,SAAiBy1C,GACxB,IAIIzqH,EAAGojD,EAAG/c,EAAGE,EAJT58B,EAAIugH,EAAa/mH,KAAMinH,GACvBz+E,EAAIwvE,EAAUsP,GACd/4E,EAAI,GACJwtC,EAAImrC,EAER,GAAI1+E,EAAI,GAAKA,EAAI,GAAI,MAAMgW,WAAWyoE,GAEtC,GAAIzgH,GAAKA,EAAG,MAAO,MACnB,GAAIA,IAAM,MAAQA,GAAK,KAAM,OAAO2oG,OAAO3oG,GAK3C,GAJIA,EAAI,IACN+nC,EAAI,IACJ/nC,GAAKA,GAEHA,EAAI,MAKN,GAHAy5C,GADApjD,EArCI,SAAU2J,GAGlB,IAFA,IAAItK,EAAI,EACJ0xC,EAAKpnC,EACFonC,GAAM,MACX1xC,GAAK,GACL0xC,GAAM,KAER,KAAOA,GAAM,GACX1xC,GAAK,EACL0xC,GAAM,EACN,OAAO1xC,EA2BD0uC,CAAIpkC,EAAInH,EAAI,EAAG,GAAI,IAAM,IACrB,EAAImH,EAAInH,EAAI,GAAIxC,EAAG,GAAK2J,EAAInH,EAAI,EAAGxC,EAAG,GAC9CojD,GAAK,kBACLpjD,EAAI,GAAKA,GACD,EAAG,CAGT,IAFAsqH,EAAS,EAAGlnE,GACZ/c,EAAIsF,EACGtF,GAAK,GACVikF,EAAS,IAAK,GACdjkF,GAAK,EAIP,IAFAikF,EAAS9nH,EAAI,GAAI6jC,EAAG,GAAI,GACxBA,EAAIrmC,EAAI,EACDqmC,GAAK,IACV2c,EAAO,GAAK,IACZ3c,GAAK,GAEP2c,EAAO,GAAK3c,GACZikF,EAAS,EAAG,GACZtnE,EAAO,GACPk8B,EAAIsrC,SAEJF,EAAS,EAAGlnE,GACZknE,EAAS,IAAMtqH,EAAG,GAClBk/E,EAAIsrC,IAAgBj2G,EAAO/V,KAAK6rH,EAAM1+E,GAQxC,OALEA,EAAI,EAEF+F,IADJnL,EAAI24C,EAAEviF,SACQgvC,EAAI,KAAOp3B,EAAO/V,KAAK6rH,EAAM1+E,EAAIpF,GAAK24C,EAAIA,EAAE3/E,MAAM,EAAGgnC,EAAIoF,GAAK,IAAMuzC,EAAE3/E,MAAMgnC,EAAIoF,IAE1F+F,EAAIwtC,M,4BC7Gd,IAAIopB,EAAU,EAAQ,OAClBoiB,EAAS,EAAQ,OACjBR,EAAe,EAAQ,OACvBS,EAAe,GAAIC,YAEvBtiB,EAAQA,EAAQj0B,EAAIi0B,EAAQG,GAAKiiB,GAAO,WAEtC,MAA2C,MAApCC,EAAansH,KAAK,OAAGuD,QACvB2oH,GAAO,WAEZC,EAAansH,KAAK,QACf,SAAU,CACbosH,YAAa,SAAqBC,GAChC,IAAI1iB,EAAO+hB,EAAa/mH,KAAM,6CAC9B,YAAqBpB,IAAd8oH,EAA0BF,EAAansH,KAAK2pG,GAAQwiB,EAAansH,KAAK2pG,EAAM0iB,O,gBCdvF,IAAIviB,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAIP,EAAQG,EAAG,SAAU,CAAE1kF,OAAQ,EAAQ,U,gBCH3D,IAAIukF,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,SAAU,CAAEj/F,OAAQ,EAAQ,U,gBCF/C,IAAI0+F,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAIP,EAAQG,GAAK,EAAQ,OAAmB,SAAU,CAAE9iD,iBAAkB,EAAQ,U,gBCFlG,IAAI2iD,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAIP,EAAQG,GAAK,EAAQ,OAAmB,SAAU,CAAE9qG,eAAgB,c,gBCDxF,IAAIoR,EAAW,EAAQ,OACnB8/F,EAAO,kBAEX,EAAQ,MAAR,CAAyB,UAAU,SAAUic,GAC3C,OAAO,SAAgBp/E,GACrB,OAAOo/E,GAAW/7G,EAAS28B,GAAMo/E,EAAQjc,EAAKnjE,IAAOA,O,gBCLzD,IAAIo/D,EAAY,EAAQ,OACpBigB,EAA4B,WAEhC,EAAQ,MAAR,CAAyB,4BAA4B,WACnD,OAAO,SAAkCr/E,EAAI9tC,GAC3C,OAAOmtH,EAA0BjgB,EAAUp/D,GAAK9tC,Q,gBCLpD,EAAQ,MAAR,CAAyB,uBAAuB,WAC9C,OAAO,e,gBCDT,IAAI2sG,EAAW,EAAQ,OACnBygB,EAAkB,EAAQ,KAE9B,EAAQ,MAAR,CAAyB,kBAAkB,WACzC,OAAO,SAAwBt/E,GAC7B,OAAOs/E,EAAgBzgB,EAAS7+D,S,gBCLpC,IAAI38B,EAAW,EAAQ,OAEvB,EAAQ,MAAR,CAAyB,gBAAgB,SAAUk8G,GACjD,OAAO,SAAsBv/E,GAC3B,QAAO38B,EAAS28B,MAAMu/E,GAAgBA,EAAcv/E,S,gBCJxD,IAAI38B,EAAW,EAAQ,OAEvB,EAAQ,MAAR,CAAyB,YAAY,SAAUm8G,GAC7C,OAAO,SAAkBx/E,GACvB,OAAO38B,EAAS28B,MAAMw/E,GAAYA,EAAUx/E,Q,gBCJhD,IAAI38B,EAAW,EAAQ,OAEvB,EAAQ,MAAR,CAAyB,YAAY,SAAUo8G,GAC7C,OAAO,SAAkBz/E,GACvB,OAAO38B,EAAS28B,MAAMy/E,GAAYA,EAAUz/E,Q,gBCJhD,IAAI48D,EAAU,EAAQ,OACtBA,EAAQA,EAAQO,EAAG,SAAU,CAAET,GAAI,EAAQ,U,gBCD3C,IAAImC,EAAW,EAAQ,OACnBiO,EAAQ,EAAQ,OAEpB,EAAQ,MAAR,CAAyB,QAAQ,WAC/B,OAAO,SAAc9sE,GACnB,OAAO8sE,EAAMjO,EAAS7+D,S,gBCL1B,IAAI38B,EAAW,EAAQ,OACnB8/F,EAAO,kBAEX,EAAQ,MAAR,CAAyB,qBAAqB,SAAUuc,GACtD,OAAO,SAA2B1/E,GAChC,OAAO0/E,GAAsBr8G,EAAS28B,GAAM0/E,EAAmBvc,EAAKnjE,IAAOA,O,gBCL/E,IAAI38B,EAAW,EAAQ,OACnB8/F,EAAO,kBAEX,EAAQ,MAAR,CAAyB,QAAQ,SAAUwc,GACzC,OAAO,SAAc3/E,GACnB,OAAO2/E,GAASt8G,EAAS28B,GAAM2/E,EAAMxc,EAAKnjE,IAAOA,O,gBCLrD,IAAI48D,EAAU,EAAQ,OACtBA,EAAQA,EAAQO,EAAG,SAAU,CAAE8K,eAAgB,gB,6BCA/C,IAAIiG,EAAU,EAAQ,OAClBj6G,EAAO,GACXA,EAAK,EAAQ,MAAR,CAAkB,gBAAkB,IACrCA,EAAO,IAAM,cACf,EAAQ,MAAR,CAAuBjC,OAAOK,UAAW,YAAY,WACnD,MAAO,WAAa67G,EAAQz2G,MAAQ,OACnC,I,gBCRL,IAAImlG,EAAU,EAAQ,OAClB0Q,EAAc,EAAQ,OAE1B1Q,EAAQA,EAAQK,EAAIL,EAAQG,GAAK9hE,YAAcqyE,GAAc,CAAEryE,WAAYqyE,K,gBCH3E,IAAI1Q,EAAU,EAAQ,OAClB4Q,EAAY,EAAQ,OAExB5Q,EAAQA,EAAQK,EAAIL,EAAQG,GAAKxpB,UAAYi6B,GAAY,CAAEj6B,SAAUi6B,K,6BCFrE,IAwBIoS,EAAUC,EAA6BC,EAAsBC,EAxB7DxX,EAAU,EAAQ,MAClBnmE,EAAS,EAAQ,MACjBwrC,EAAM,EAAQ,KACdsgC,EAAU,EAAQ,OAClBtR,EAAU,EAAQ,OAClBv5F,EAAW,EAAQ,OACnBm5F,EAAY,EAAQ,OACpB0E,EAAa,EAAQ,OACrBC,EAAQ,EAAQ,MAChBZ,EAAqB,EAAQ,OAC7BhnE,EAAO,aACPymF,EAAY,EAAQ,MAAR,GACZC,EAA6B,EAAQ,OACrCC,EAAU,EAAQ,OAClBlG,EAAY,EAAQ,OACpBmG,EAAiB,EAAQ,OACzBC,EAAU,UACV5uH,EAAY4wC,EAAO5wC,UACnB8mC,EAAU8J,EAAO9J,QACjB+nF,EAAW/nF,GAAWA,EAAQ+nF,SAC9BC,EAAKD,GAAYA,EAASC,IAAM,GAChCC,EAAWn+E,EAAc,QACzB4oE,EAA6B,WAApBkD,EAAQ51E,GACjBt8B,EAAQ,aAER4xG,EAAuBiS,EAA8BI,EAA2BhgF,EAEhFugF,IAAe,WACjB,IAEE,IAAI/tG,EAAU8tG,EAAS5iH,QAAQ,GAC3B8iH,GAAehuG,EAAQ3e,YAAc,IAAI,EAAQ,MAAR,CAAkB,YAAc,SAAUqrC,GACrFA,EAAKnjC,EAAOA,IAGd,OAAQgvG,GAA0C,mBAAzB0V,wBACpBjuG,EAAQC,KAAK1W,aAAkBykH,GAIT,IAAtBH,EAAG5+G,QAAQ,SACyB,IAApCs4G,EAAUt4G,QAAQ,aACvB,MAAOpN,KAfQ,GAmBfqsH,EAAa,SAAU3gF,GACzB,IAAIttB,EACJ,SAAOrP,EAAS28B,IAAkC,mBAAnBttB,EAAOstB,EAAGttB,QAAsBA,GAE7Du4F,EAAS,SAAUx4F,EAASmuG,GAC9B,IAAInuG,EAAQ7f,GAAZ,CACA6f,EAAQ7f,IAAK,EACb,IAAI0tD,EAAQ7tC,EAAQouG,GACpBb,GAAU,WAoCR,IAnCA,IAAI9sH,EAAQuf,EAAQquG,GAChB1iD,EAAmB,GAAd3rD,EAAQhgB,GACbvB,EAAI,EACJggH,EAAM,SAAU6P,GAClB,IAIIjzG,EAAQ4E,EAAMsuG,EAJd/0G,EAAUmyD,EAAK2iD,EAAS3iD,GAAK2iD,EAASlhD,KACtCliE,EAAUojH,EAASpjH,QACnBC,EAASmjH,EAASnjH,OAClBstG,EAAS6V,EAAS7V,OAEtB,IACMj/F,GACGmyD,IACe,GAAd3rD,EAAQwuG,IAASC,EAAkBzuG,GACvCA,EAAQwuG,GAAK,IAEC,IAAZh1G,EAAkB6B,EAAS5a,GAEzBg4G,GAAQA,EAAOE,QACnBt9F,EAAS7B,EAAQ/Y,GACbg4G,IACFA,EAAOC,OACP6V,GAAS,IAGTlzG,IAAWizG,EAAStuG,QACtB7U,EAAOpM,EAAU,yBACRkhB,EAAOiuG,EAAW7yG,IAC3B4E,EAAK5f,KAAKgb,EAAQnQ,EAASC,GACtBD,EAAQmQ,IACVlQ,EAAO1K,GACd,MAAOoB,GACH42G,IAAW8V,GAAQ9V,EAAOC,OAC9BvtG,EAAOtJ,KAGJgsD,EAAMrvD,OAASC,GAAGggH,EAAI5wD,EAAMpvD,MACnCuhB,EAAQouG,GAAK,GACbpuG,EAAQ7f,IAAK,EACTguH,IAAanuG,EAAQwuG,IAAIE,EAAY1uG,QAGzC0uG,EAAc,SAAU1uG,GAC1B8mB,EAAKzmC,KAAKsvC,GAAQ,WAChB,IAEIt0B,EAAQ7B,EAAStb,EAFjBuC,EAAQuf,EAAQquG,GAChBM,EAAYC,EAAY5uG,GAe5B,GAbI2uG,IACFtzG,EAASoyG,GAAQ,WACXlV,EACF1yE,EAAQzO,KAAK,qBAAsB32B,EAAOuf,IACjCxG,EAAUm2B,EAAOk/E,sBAC1Br1G,EAAQ,CAAEwG,QAASA,EAAS8G,OAAQrmB,KAC1BvC,EAAUyxC,EAAOzxC,UAAYA,EAAQqJ,OAC/CrJ,EAAQqJ,MAAM,8BAA+B9G,MAIjDuf,EAAQwuG,GAAKjW,GAAUqW,EAAY5uG,GAAW,EAAI,GAClDA,EAAQgX,QAAKpzB,EACX+qH,GAAatzG,EAAOxZ,EAAG,MAAMwZ,EAAOk8E,MAGxCq3B,EAAc,SAAU5uG,GAC1B,OAAsB,IAAfA,EAAQwuG,IAAkD,KAArCxuG,EAAQgX,IAAMhX,EAAQouG,IAAI5vH,QAEpDiwH,EAAoB,SAAUzuG,GAChC8mB,EAAKzmC,KAAKsvC,GAAQ,WAChB,IAAIn2B,EACA++F,EACF1yE,EAAQzO,KAAK,mBAAoBpX,IACxBxG,EAAUm2B,EAAOm/E,qBAC1Bt1G,EAAQ,CAAEwG,QAASA,EAAS8G,OAAQ9G,EAAQquG,SAI9CU,EAAU,SAAUtuH,GACtB,IAAIuf,EAAUhb,KACVgb,EAAQ5f,KACZ4f,EAAQ5f,IAAK,GACb4f,EAAUA,EAAQgvG,IAAMhvG,GAChBquG,GAAK5tH,EACbuf,EAAQhgB,GAAK,EACRggB,EAAQgX,KAAIhX,EAAQgX,GAAKhX,EAAQouG,GAAGhtH,SACzCo3G,EAAOx4F,GAAS,KAEdivG,EAAW,SAAUxuH,GACvB,IACIwf,EADAD,EAAUhb,KAEd,IAAIgb,EAAQ5f,GAAZ,CACA4f,EAAQ5f,IAAK,EACb4f,EAAUA,EAAQgvG,IAAMhvG,EACxB,IACE,GAAIA,IAAYvf,EAAO,MAAM1B,EAAU,qCACnCkhB,EAAOiuG,EAAWztH,IACpB8sH,GAAU,WACR,IAAIle,EAAU,CAAE2f,GAAIhvG,EAAS5f,IAAI,GACjC,IACE6f,EAAK5f,KAAKI,EAAO06E,EAAI8zC,EAAU5f,EAAS,GAAIl0B,EAAI4zC,EAAS1f,EAAS,IAClE,MAAOxtG,GACPktH,EAAQ1uH,KAAKgvG,EAASxtG,QAI1Bme,EAAQquG,GAAK5tH,EACbuf,EAAQhgB,GAAK,EACbw4G,EAAOx4F,GAAS,IAElB,MAAOne,GACPktH,EAAQ1uH,KAAK,CAAE2uH,GAAIhvG,EAAS5f,IAAI,GAASyB,MAKxCksH,IAEHD,EAAW,SAAiBoB,GAC1BzgB,EAAWzpG,KAAM8oH,EAAUH,EAAS,MACpC5jB,EAAUmlB,GACV/B,EAAS9sH,KAAK2E,MACd,IACEkqH,EAAS/zC,EAAI8zC,EAAUjqH,KAAM,GAAIm2E,EAAI4zC,EAAS/pH,KAAM,IACpD,MAAOtE,GACPquH,EAAQ1uH,KAAK2E,KAAMtE,MAIvBysH,EAAW,SAAiB+B,GAC1BlqH,KAAKopH,GAAK,GACVppH,KAAKgyB,QAAKpzB,EACVoB,KAAKhF,GAAK,EACVgF,KAAK5E,IAAK,EACV4E,KAAKqpH,QAAKzqH,EACVoB,KAAKwpH,GAAK,EACVxpH,KAAK7E,IAAK,IAEHP,UAAY,EAAQ,MAAR,CAA2BkuH,EAASluH,UAAW,CAElEqgB,KAAM,SAAckvG,EAAaC,GAC/B,IAAId,EAAWnT,EAAqBrN,EAAmB9oG,KAAM8oH,IAO7D,OANAQ,EAAS3iD,GAA2B,mBAAfwjD,GAA4BA,EACjDb,EAASlhD,KAA4B,mBAAdgiD,GAA4BA,EACnDd,EAAS7V,OAASF,EAAS1yE,EAAQ4yE,YAAS70G,EAC5CoB,KAAKopH,GAAG5tH,KAAK8tH,GACTtpH,KAAKgyB,IAAIhyB,KAAKgyB,GAAGx2B,KAAK8tH,GACtBtpH,KAAKhF,IAAIw4G,EAAOxzG,MAAM,GACnBspH,EAAStuG,SAGlB,MAAS,SAAUovG,GACjB,OAAOpqH,KAAKib,UAAKrc,EAAWwrH,MAGhC/B,EAAuB,WACrB,IAAIrtG,EAAU,IAAImtG,EAClBnoH,KAAKgb,QAAUA,EACfhb,KAAKkG,QAAUiwE,EAAI8zC,EAAUjvG,EAAS,GACtChb,KAAKmG,OAASgwE,EAAI4zC,EAAS/uG,EAAS,IAEtCwtG,EAA2BhgF,EAAI2tE,EAAuB,SAAUlQ,GAC9D,OAAOA,IAAM6iB,GAAY7iB,IAAMqiB,EAC3B,IAAID,EAAqBpiB,GACzBmiB,EAA4BniB,KAIpCd,EAAQA,EAAQK,EAAIL,EAAQY,EAAIZ,EAAQG,GAAKyjB,EAAY,CAAE9iH,QAAS6iH,IACpE,EAAQ,MAAR,CAAgCA,EAAUH,GAC1C,EAAQ,KAAR,CAA0BA,GAC1BL,EAAU,EAAQ,OAAkB,QAGpCnjB,EAAQA,EAAQO,EAAIP,EAAQG,GAAKyjB,EAAYJ,EAAS,CAEpDxiH,OAAQ,SAAgByiC,GACtB,IAAIyhF,EAAalU,EAAqBn2G,MAGtC,OADAk0G,EADemW,EAAWlkH,QACjByiC,GACFyhF,EAAWrvG,WAGtBmqF,EAAQA,EAAQO,EAAIP,EAAQG,GAAKwL,IAAYiY,GAAaJ,EAAS,CAEjEziH,QAAS,SAAiBM,GACxB,OAAOkiH,EAAe5X,GAAW9wG,OAASsoH,EAAUQ,EAAW9oH,KAAMwG,MAGzE2+F,EAAQA,EAAQO,EAAIP,EAAQG,IAAMyjB,GAAc,EAAQ,KAAR,EAA0B,SAAUtc,GAClFqc,EAAStkE,IAAIioD,GAAa,MAAEloG,OACzBokH,EAAS,CAEZnkE,IAAK,SAAagmD,GAChB,IAAIvE,EAAIjmG,KACJqqH,EAAalU,EAAqBlQ,GAClC//F,EAAUmkH,EAAWnkH,QACrBC,EAASkkH,EAAWlkH,OACpBkQ,EAASoyG,GAAQ,WACnB,IAAIhrH,EAAS,GACTiB,EAAQ,EACR4rH,EAAY,EAChB5gB,EAAMc,GAAU,GAAO,SAAUxvF,GAC/B,IAAIuvG,EAAS7rH,IACT8rH,GAAgB,EACpB/sH,EAAOjC,UAAKoD,GACZ0rH,IACArkB,EAAE//F,QAAQ8U,GAASC,MAAK,SAAUxf,GAC5B+uH,IACJA,GAAgB,EAChB/sH,EAAO8sH,GAAU9uH,IACf6uH,GAAapkH,EAAQzI,MACtB0I,QAEHmkH,GAAapkH,EAAQzI,MAGzB,OADI4Y,EAAOxZ,GAAGsJ,EAAOkQ,EAAOk8E,GACrB83B,EAAWrvG,SAGpB1N,KAAM,SAAck9F,GAClB,IAAIvE,EAAIjmG,KACJqqH,EAAalU,EAAqBlQ,GAClC9/F,EAASkkH,EAAWlkH,OACpBkQ,EAASoyG,GAAQ,WACnB/e,EAAMc,GAAU,GAAO,SAAUxvF,GAC/BirF,EAAE//F,QAAQ8U,GAASC,KAAKovG,EAAWnkH,QAASC,SAIhD,OADIkQ,EAAOxZ,GAAGsJ,EAAOkQ,EAAOk8E,GACrB83B,EAAWrvG,Y,gBC1RtB,IAAImqF,EAAU,EAAQ,OAClBJ,EAAY,EAAQ,OACpByB,EAAW,EAAQ,OACnBikB,GAAU,iBAAgC,IAAI/1G,MAC9Cg2G,EAASrpF,SAAS3sB,MAEtBywF,EAAQA,EAAQO,EAAIP,EAAQG,GAAK,EAAQ,MAAR,EAAoB,WACnDmlB,GAAO,kBACL,UAAW,CACb/1G,MAAO,SAAeza,EAAQ0wH,EAAcC,GAC1C,IAAIvhB,EAAItE,EAAU9qG,GACd4wH,EAAIrkB,EAASokB,GACjB,OAAOH,EAASA,EAAOphB,EAAGshB,EAAcE,GAAKH,EAAOrvH,KAAKguG,EAAGshB,EAAcE,O,gBCZ9E,IAAI1lB,EAAU,EAAQ,OAClB1+F,EAAS,EAAQ,OACjBs+F,EAAY,EAAQ,OACpByB,EAAW,EAAQ,OACnB56F,EAAW,EAAQ,OACnB+/F,EAAQ,EAAQ,OAChB9gG,EAAO,EAAQ,OACfigH,GAAc,iBAAgC,IAAIv6E,UAIlDw6E,EAAiBpf,GAAM,WACzB,SAASrG,KACT,QAASwlB,GAAW,cAA6B,GAAIxlB,aAAcA,MAEjE0lB,GAAYrf,GAAM,WACpBmf,GAAW,kBAGb3lB,EAAQA,EAAQO,EAAIP,EAAQG,GAAKylB,GAAkBC,GAAW,UAAW,CACvEz6E,UAAW,SAAmB06E,EAAQ52G,GACpC0wF,EAAUkmB,GACVzkB,EAASnyF,GACT,IAAI62G,EAAY/gH,UAAU3Q,OAAS,EAAIyxH,EAASlmB,EAAU56F,UAAU,IACpE,GAAI6gH,IAAaD,EAAgB,OAAOD,EAAWG,EAAQ52G,EAAM62G,GACjE,GAAID,GAAUC,EAAW,CAEvB,OAAQ72G,EAAK7a,QACX,KAAK,EAAG,OAAO,IAAIyxH,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAO52G,EAAK,IAC/B,KAAK,EAAG,OAAO,IAAI42G,EAAO52G,EAAK,GAAIA,EAAK,IACxC,KAAK,EAAG,OAAO,IAAI42G,EAAO52G,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjD,KAAK,EAAG,OAAO,IAAI42G,EAAO52G,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG5D,IAAI82G,EAAQ,CAAC,MAEb,OADAA,EAAM3vH,KAAKkZ,MAAMy2G,EAAO92G,GACjB,IAAKxJ,EAAK6J,MAAMu2G,EAAQE,IAGjC,IAAIhf,EAAQ+e,EAAUtwH,UAClBf,EAAW4M,EAAOmF,EAASugG,GAASA,EAAQ5xG,OAAOK,WACnDyb,EAASgrB,SAAS3sB,MAAMrZ,KAAK4vH,EAAQpxH,EAAUwa,GACnD,OAAOzI,EAASyK,GAAUA,EAASxc,M,gBC3CvC,IAAIysG,EAAK,EAAQ,OACbnB,EAAU,EAAQ,OAClBqB,EAAW,EAAQ,OACnBE,EAAc,EAAQ,OAG1BvB,EAAQA,EAAQO,EAAIP,EAAQG,EAAI,EAAQ,MAAR,EAAoB,WAElDv0B,QAAQv2E,eAAe8rG,EAAG99D,EAAE,GAAI,EAAG,CAAE/sC,MAAO,IAAM,EAAG,CAAEA,MAAO,OAC5D,UAAW,CACbjB,eAAgB,SAAwBP,EAAQ67F,EAAas1B,GAC3D5kB,EAASvsG,GACT67F,EAAc4Q,EAAY5Q,GAAa,GACvC0Q,EAAS4kB,GACT,IAEE,OADA9kB,EAAG99D,EAAEvuC,EAAQ67F,EAAas1B,IACnB,EACP,MAAOvuH,GACP,OAAO,O,gBClBb,IAAIsoG,EAAU,EAAQ,OAClB8P,EAAO,WACPzO,EAAW,EAAQ,OAEvBrB,EAAQA,EAAQO,EAAG,UAAW,CAC5B2lB,eAAgB,SAAwBpxH,EAAQ67F,GAC9C,IAAIjlB,EAAOokC,EAAKzO,EAASvsG,GAAS67F,GAClC,QAAOjlB,IAASA,EAAKx2E,sBAA8BJ,EAAO67F,O,6BCN9D,IAAIqP,EAAU,EAAQ,OAClBqB,EAAW,EAAQ,OACnB8kB,EAAY,SAAUzgB,GACxB7qG,KAAKyqG,GAAKjE,EAASqE,GACnB7qG,KAAKnF,GAAK,EACV,IACIJ,EADAqgB,EAAO9a,KAAK8qG,GAAK,GAErB,IAAKrwG,KAAOowG,EAAU/vF,EAAKtf,KAAKf,IAElC,EAAQ,MAAR,CAA0B6wH,EAAW,UAAU,WAC7C,IAEI7wH,EAFAuqG,EAAOhlG,KACP8a,EAAOkqF,EAAK8F,GAEhB,GACE,GAAI9F,EAAKnqG,IAAMigB,EAAKthB,OAAQ,MAAO,CAAEiC,WAAOmD,EAAWrD,MAAM,YACnDd,EAAMqgB,EAAKkqF,EAAKnqG,SAAUmqG,EAAKyF,KAC3C,MAAO,CAAEhvG,MAAOhB,EAAKc,MAAM,MAG7B4pG,EAAQA,EAAQO,EAAG,UAAW,CAC5B6lB,UAAW,SAAmBtxH,GAC5B,OAAO,IAAIqxH,EAAUrxH,O,gBCtBzB,IAAIg7G,EAAO,EAAQ,OACf9P,EAAU,EAAQ,OAClBqB,EAAW,EAAQ,OAEvBrB,EAAQA,EAAQO,EAAG,UAAW,CAC5B7jD,yBAA0B,SAAkC5nD,EAAQ67F,GAClE,OAAOmf,EAAKzsE,EAAEg+D,EAASvsG,GAAS67F,O,gBCNpC,IAAIqP,EAAU,EAAQ,OAClBqmB,EAAW,EAAQ,KACnBhlB,EAAW,EAAQ,OAEvBrB,EAAQA,EAAQO,EAAG,UAAW,CAC5B9jD,eAAgB,SAAwB3nD,GACtC,OAAOuxH,EAAShlB,EAASvsG,Q,gBCN7B,IAAIg7G,EAAO,EAAQ,OACfrzD,EAAiB,EAAQ,KACzB52B,EAAM,EAAQ,OACdm6E,EAAU,EAAQ,OAClBv5F,EAAW,EAAQ,OACnB46F,EAAW,EAAQ,OAcvBrB,EAAQA,EAAQO,EAAG,UAAW,CAAE1nF,IAZhC,SAASA,EAAI/jB,EAAQ67F,GACnB,IACIjlB,EAAMs7B,EADNsf,EAAWthH,UAAU3Q,OAAS,EAAIS,EAASkQ,UAAU,GAEzD,OAAIq8F,EAASvsG,KAAYwxH,EAAiBxxH,EAAO67F,IAC7CjlB,EAAOokC,EAAKzsE,EAAEvuC,EAAQ67F,IAAqB9qE,EAAI6lD,EAAM,SACrDA,EAAKp1E,WACQmD,IAAbiyE,EAAK7yD,IACH6yD,EAAK7yD,IAAI3iB,KAAKowH,QACd7sH,EACFgN,EAASugG,EAAQvqD,EAAe3nD,IAAiB+jB,EAAImuF,EAAOrW,EAAa21B,QAA7E,M,gBChBF,IAAItmB,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,UAAW,CAC5B16E,IAAK,SAAa/wB,EAAQ67F,GACxB,OAAOA,KAAe77F,M,gBCJ1B,IAAIkrG,EAAU,EAAQ,OAClBqB,EAAW,EAAQ,OACnBshB,EAAgBvtH,OAAOs4G,aAE3B1N,EAAQA,EAAQO,EAAG,UAAW,CAC5BmN,aAAc,SAAsB54G,GAElC,OADAusG,EAASvsG,IACF6tH,GAAgBA,EAAc7tH,O,gBCPzC,IAAIkrG,EAAU,EAAQ,OAEtBA,EAAQA,EAAQO,EAAG,UAAW,CAAEkQ,QAAS,EAAQ,U,gBCFjD,IAAIzQ,EAAU,EAAQ,OAClBqB,EAAW,EAAQ,OACnByhB,EAAqB1tH,OAAOw4G,kBAEhC5N,EAAQA,EAAQO,EAAG,UAAW,CAC5BqN,kBAAmB,SAA2B94G,GAC5CusG,EAASvsG,GACT,IAEE,OADIguH,GAAoBA,EAAmBhuH,IACpC,EACP,MAAO4C,GACP,OAAO,O,gBCXb,IAAIsoG,EAAU,EAAQ,OAClBumB,EAAW,EAAQ,OAEnBA,GAAUvmB,EAAQA,EAAQO,EAAG,UAAW,CAC1C8K,eAAgB,SAAwBv2G,EAAQkyG,GAC9Cuf,EAASrU,MAAMp9G,EAAQkyG,GACvB,IAEE,OADAuf,EAASh+F,IAAIzzB,EAAQkyG,IACd,EACP,MAAOtvG,GACP,OAAO,O,gBCVb,IAAIypG,EAAK,EAAQ,OACb2O,EAAO,EAAQ,OACfrzD,EAAiB,EAAQ,KACzB52B,EAAM,EAAQ,OACdm6E,EAAU,EAAQ,OAClBoB,EAAa,EAAQ,OACrBC,EAAW,EAAQ,OACnB56F,EAAW,EAAQ,OAwBvBu5F,EAAQA,EAAQO,EAAG,UAAW,CAAEh4E,IAtBhC,SAASA,EAAIzzB,EAAQ67F,EAAa61B,GAChC,IAEIC,EAAoBzf,EAFpBsf,EAAWthH,UAAU3Q,OAAS,EAAIS,EAASkQ,UAAU,GACrD0hH,EAAU5W,EAAKzsE,EAAEg+D,EAASvsG,GAAS67F,GAEvC,IAAK+1B,EAAS,CACZ,GAAIjgH,EAASugG,EAAQvqD,EAAe3nD,IAClC,OAAOyzB,EAAIy+E,EAAOrW,EAAa61B,EAAGF,GAEpCI,EAAUtlB,EAAW,GAEvB,GAAIv7E,EAAI6gG,EAAS,SAAU,CACzB,IAAyB,IAArBA,EAAQvxH,WAAuBsR,EAAS6/G,GAAW,OAAO,EAC9D,GAAIG,EAAqB3W,EAAKzsE,EAAEijF,EAAU31B,GAAc,CACtD,GAAI81B,EAAmB5tG,KAAO4tG,EAAmBl+F,MAAuC,IAAhCk+F,EAAmBtxH,SAAoB,OAAO,EACtGsxH,EAAmBnwH,MAAQkwH,EAC3BrlB,EAAG99D,EAAEijF,EAAU31B,EAAa81B,QACvBtlB,EAAG99D,EAAEijF,EAAU31B,EAAayQ,EAAW,EAAGolB,IACjD,OAAO,EAET,YAAuB/sH,IAAhBitH,EAAQn+F,MAA6Bm+F,EAAQn+F,IAAIryB,KAAKowH,EAAUE,IAAI,O,gBC7B7E,IAAIhhF,EAAS,EAAQ,MACjBmhE,EAAoB,EAAQ,OAC5BxF,EAAK,WACL4O,EAAO,WACPtE,EAAW,EAAQ,OACnBkb,EAAS,EAAQ,OACjBC,EAAUphF,EAAOykE,OACjBlD,EAAO6f,EACP5f,EAAQ4f,EAAQnxH,UAChB+7G,EAAM,KACNC,EAAM,KAENoV,EAAc,IAAID,EAAQpV,KAASA,EAEvC,GAAI,EAAQ,UAAuBqV,GAAe,EAAQ,MAAR,EAAoB,WAGpE,OAFApV,EAAI,EAAQ,MAAR,CAAkB,WAAY,EAE3BmV,EAAQpV,IAAQA,GAAOoV,EAAQnV,IAAQA,GAA4B,QAArBmV,EAAQpV,EAAK,SAC/D,CACHoV,EAAU,SAAgB57F,EAAGqY,GAC3B,IAAIyjF,EAAOjsH,gBAAgB+rH,EACvBG,EAAOtb,EAASzgF,GAChBg8F,OAAYvtH,IAAN4pC,EACV,OAAQyjF,GAAQC,GAAQ/7F,EAAE9zB,cAAgB0vH,GAAWI,EAAMh8F,EACvD27E,EAAkBkgB,EAChB,IAAI9f,EAAKggB,IAASC,EAAMh8F,EAAEhrB,OAASgrB,EAAGqY,GACtC0jE,GAAMggB,EAAO/7F,aAAa47F,GAAW57F,EAAEhrB,OAASgrB,EAAG+7F,GAAQC,EAAML,EAAOzwH,KAAK80B,GAAKqY,GACpFyjF,EAAOjsH,KAAOmsG,EAAO4f,IAS3B,IAPA,IAAIvxE,EAAQ,SAAU//C,GACpBA,KAAOsxH,GAAWzlB,EAAGylB,EAAStxH,EAAK,CACjCJ,cAAc,EACd2jB,IAAK,WAAc,OAAOkuF,EAAKzxG,IAC/BizB,IAAK,SAAU6a,GAAM2jE,EAAKzxG,GAAO8tC,MAG5BztB,EAAOo6F,EAAKhJ,GAAOzyG,EAAI,EAAGqhB,EAAKthB,OAASC,GAAI+gD,EAAM1/B,EAAKrhB,MAChE0yG,EAAM9vG,YAAc0vH,EACpBA,EAAQnxH,UAAYuxG,EACpB,EAAQ,MAAR,CAAuBxhE,EAAQ,SAAUohF,GAG3C,EAAQ,KAAR,CAA0B,W,6BCzC1B,IAAI1d,EAAa,EAAQ,OACzB,EAAQ,MAAR,CAAqB,CACnBp0G,OAAQ,SACRkyG,OAAO,EACP2W,OAAQzU,IAAe,IAAI3mE,MAC1B,CACDA,KAAM2mE,K,gBCNJ,EAAQ,QAAmC,KAAd,KAAK+d,OAAc,WAA0Bhd,OAAOx0G,UAAW,QAAS,CACvGP,cAAc,EACd2jB,IAAK,EAAQ,U,6BCDf,IAAIwoF,EAAW,EAAQ,OACnB7rF,EAAW,EAAQ,OACnB0xG,EAAqB,EAAQ,OAC7BC,EAAa,EAAQ,OAGzB,EAAQ,MAAR,CAAyB,QAAS,GAAG,SAAUne,EAASF,EAAOse,EAAQC,GACrE,MAAO,CAGL,SAAe5wC,GACb,IAAI+qB,EAAIwH,EAAQnuG,MACZkL,EAAetM,MAAVg9E,OAAsBh9E,EAAYg9E,EAAOqyB,GAClD,YAAcrvG,IAAPsM,EAAmBA,EAAG7P,KAAKugF,EAAQ+qB,GAAK,IAAIyI,OAAOxzB,GAAQqyB,GAAOkB,OAAOxI,KAIlF,SAAU/qB,GACR,IAAI8sB,EAAM8jB,EAAgBD,EAAQ3wC,EAAQ57E,MAC1C,GAAI0oG,EAAIntG,KAAM,OAAOmtG,EAAIjtG,MACzB,IAAIgxH,EAAKjmB,EAAS5qB,GACd8pB,EAAIyJ,OAAOnvG,MACf,IAAKysH,EAAG9hF,OAAQ,OAAO2hF,EAAWG,EAAI/mB,GACtC,IAAIgnB,EAAcD,EAAGvlB,QACrBulB,EAAGtV,UAAY,EAIf,IAHA,IAEI9gG,EAFA+9F,EAAI,GACJl4G,EAAI,EAEgC,QAAhCma,EAASi2G,EAAWG,EAAI/mB,KAAc,CAC5C,IAAIinB,EAAWxd,OAAO94F,EAAO,IAC7B+9F,EAAEl4G,GAAKywH,EACU,KAAbA,IAAiBF,EAAGtV,UAAYkV,EAAmB3mB,EAAG/qF,EAAS8xG,EAAGtV,WAAYuV,IAClFxwH,IAEF,OAAa,IAANA,EAAU,KAAOk4G,Q,6BClC9B,IAAI5N,EAAW,EAAQ,OACnBY,EAAW,EAAQ,OACnBzsF,EAAW,EAAQ,OACnBq9F,EAAY,EAAQ,OACpBqU,EAAqB,EAAQ,OAC7BC,EAAa,EAAQ,OACrBpkH,EAAMlK,KAAKkK,IACXwI,EAAM1S,KAAK0S,IACXhR,EAAQ1B,KAAK0B,MACbktH,EAAuB,4BACvBC,EAAgC,oBAOpC,EAAQ,MAAR,CAAyB,UAAW,GAAG,SAAU1e,EAAS2e,EAASC,EAAUP,GAC3E,MAAO,CAGL,SAAiBQ,EAAaC,GAC5B,IAAItmB,EAAIwH,EAAQnuG,MACZkL,EAAoBtM,MAAfouH,OAA2BpuH,EAAYouH,EAAYF,GAC5D,YAAcluH,IAAPsM,EACHA,EAAG7P,KAAK2xH,EAAarmB,EAAGsmB,GACxBF,EAAS1xH,KAAK8zG,OAAOxI,GAAIqmB,EAAaC,IAI5C,SAAUrxC,EAAQqxC,GAChB,IAAIvkB,EAAM8jB,EAAgBO,EAAUnxC,EAAQ57E,KAAMitH,GAClD,GAAIvkB,EAAIntG,KAAM,OAAOmtG,EAAIjtG,MAEzB,IAAIgxH,EAAKjmB,EAAS5qB,GACd8pB,EAAIyJ,OAAOnvG,MACXktH,EAA4C,mBAAjBD,EAC1BC,IAAmBD,EAAe9d,OAAO8d,IAC9C,IAAItiF,EAAS8hF,EAAG9hF,OAChB,GAAIA,EAAQ,CACV,IAAI+hF,EAAcD,EAAGvlB,QACrBulB,EAAGtV,UAAY,EAGjB,IADA,IAAIpsB,EAAU,KACD,CACX,IAAI10E,EAASi2G,EAAWG,EAAI/mB,GAC5B,GAAe,OAAXrvF,EAAiB,MAErB,GADA00E,EAAQvvF,KAAK6a,IACRs0B,EAAQ,MAEI,KADFwkE,OAAO94F,EAAO,MACRo2G,EAAGtV,UAAYkV,EAAmB3mB,EAAG/qF,EAAS8xG,EAAGtV,WAAYuV,IAIpF,IAFA,IAxCwBnkF,EAwCpB4kF,EAAoB,GACpBC,EAAqB,EAChB3zH,EAAI,EAAGA,EAAIsxF,EAAQvxF,OAAQC,IAAK,CACvC4c,EAAS00E,EAAQtxF,GASjB,IARA,IAAI4zH,EAAUle,OAAO94F,EAAO,IACxB8qF,EAAWj5F,EAAIwI,EAAIsnG,EAAU3hG,EAAO3X,OAAQgnG,EAAElsG,QAAS,GACvD8zH,EAAW,GAMNpqF,EAAI,EAAGA,EAAI7sB,EAAO7c,OAAQ0pC,IAAKoqF,EAAS9xH,UAnDzCoD,KADc2pC,EAoD8ClyB,EAAO6sB,IAnDvDqF,EAAK4mE,OAAO5mE,IAoDhC,IAAIglF,EAAgBl3G,EAAO8W,OAC3B,GAAI+/F,EAAmB,CACrB,IAAIM,EAAe,CAACH,GAASxhH,OAAOyhH,EAAUnsB,EAAUuE,QAClC9mG,IAAlB2uH,GAA6BC,EAAahyH,KAAK+xH,GACnD,IAAIriC,EAAcikB,OAAO8d,EAAav4G,WAAM9V,EAAW4uH,SAEvDtiC,EAAcuiC,EAAgBJ,EAAS3nB,EAAGvE,EAAUmsB,EAAUC,EAAeN,GAE3E9rB,GAAYisB,IACdD,GAAqBznB,EAAEtpG,MAAMgxH,EAAoBjsB,GAAYjW,EAC7DkiC,EAAqBjsB,EAAWksB,EAAQ7zH,QAG5C,OAAO2zH,EAAoBznB,EAAEtpG,MAAMgxH,KAKvC,SAASK,EAAgBJ,EAASnzG,EAAKinF,EAAUmsB,EAAUC,EAAeriC,GACxE,IAAIwiC,EAAUvsB,EAAWksB,EAAQ7zH,OAC7BuiF,EAAIuxC,EAAS9zH,OACbu0G,EAAU8e,EAKd,YAJsBjuH,IAAlB2uH,IACFA,EAAgBnmB,EAASmmB,GACzBxf,EAAU6e,GAELG,EAAS1xH,KAAK6vF,EAAa6iB,GAAS,SAAUn9D,EAAO+8E,GAC1D,IAAI3vC,EACJ,OAAQ2vC,EAAGvzG,OAAO,IAChB,IAAK,IAAK,MAAO,IACjB,IAAK,IAAK,OAAOizG,EACjB,IAAK,IAAK,OAAOnzG,EAAI9d,MAAM,EAAG+kG,GAC9B,IAAK,IAAK,OAAOjnF,EAAI9d,MAAMsxH,GAC3B,IAAK,IACH1vC,EAAUuvC,EAAcI,EAAGvxH,MAAM,GAAI,IACrC,MACF,QACE,IAAIF,GAAKyxH,EACT,GAAU,IAANzxH,EAAS,OAAO00C,EACpB,GAAI10C,EAAI6/E,EAAG,CACT,IAAIvzC,EAAI9oC,EAAMxD,EAAI,IAClB,OAAU,IAANssC,EAAgBoI,EAChBpI,GAAKuzC,OAA8Bn9E,IAApB0uH,EAAS9kF,EAAI,GAAmBmlF,EAAGvzG,OAAO,GAAKkzG,EAAS9kF,EAAI,GAAKmlF,EAAGvzG,OAAO,GACvFw2B,EAETotC,EAAUsvC,EAASpxH,EAAI,GAE3B,YAAmB0C,IAAZo/E,EAAwB,GAAKA,U,6BChH1C,IAAIwoB,EAAW,EAAQ,OACnBonB,EAAY,EAAQ,OACpBtB,EAAa,EAAQ,OAGzB,EAAQ,MAAR,CAAyB,SAAU,GAAG,SAAUne,EAAS0f,EAAQC,EAAStB,GACxE,MAAO,CAGL,SAAgB5wC,GACd,IAAI+qB,EAAIwH,EAAQnuG,MACZkL,EAAetM,MAAVg9E,OAAsBh9E,EAAYg9E,EAAOiyC,GAClD,YAAcjvH,IAAPsM,EAAmBA,EAAG7P,KAAKugF,EAAQ+qB,GAAK,IAAIyI,OAAOxzB,GAAQiyC,GAAQ1e,OAAOxI,KAInF,SAAU/qB,GACR,IAAI8sB,EAAM8jB,EAAgBsB,EAASlyC,EAAQ57E,MAC3C,GAAI0oG,EAAIntG,KAAM,OAAOmtG,EAAIjtG,MACzB,IAAIgxH,EAAKjmB,EAAS5qB,GACd8pB,EAAIyJ,OAAOnvG,MACX+tH,EAAoBtB,EAAGtV,UACtByW,EAAUG,EAAmB,KAAItB,EAAGtV,UAAY,GACrD,IAAI9gG,EAASi2G,EAAWG,EAAI/mB,GAE5B,OADKkoB,EAAUnB,EAAGtV,UAAW4W,KAAoBtB,EAAGtV,UAAY4W,GAC9C,OAAX13G,GAAmB,EAAIA,EAAO3X,Y,6BCzB3C,IAAIkyG,EAAW,EAAQ,OACnBpK,EAAW,EAAQ,OACnBsC,EAAqB,EAAQ,OAC7BujB,EAAqB,EAAQ,OAC7B1xG,EAAW,EAAQ,OACnBqzG,EAAiB,EAAQ,OACzB3f,EAAa,EAAQ,OACrB1C,EAAQ,EAAQ,OAChBsiB,EAAOjwH,KAAK0S,IACZw9G,EAAQ,GAAG1yH,KAIX2yH,EAAa,WAGbC,GAAcziB,GAAM,WAAcyD,OAAO+e,EAAY,QAGzD,EAAQ,MAAR,CAAyB,QAAS,GAAG,SAAUhgB,EAASkgB,EAAOC,EAAQ9B,GACrE,IAAI+B,EAkDJ,OAxCEA,EAR6B,KAA7B,OAAa,MAAE,QAAQ,IACe,GAAtC,OAAa,MAAE,QAAS,GAAS,QACE,GAAnC,KAAW,MAAE,WAAiB,QACK,GAAnC,IAAU,MAAE,YAAkB,QAC9B,IAAU,MAAE,QAAc,OAAI,GAC9B,GAAS,MAAE,MAAY,OAGP,SAAUlR,EAAWmR,GACnC,IAAInf,EAASF,OAAOnvG,MACpB,QAAkBpB,IAAdy+G,GAAqC,IAAVmR,EAAa,MAAO,GAEnD,IAAK5d,EAASyM,GAAY,OAAOiR,EAAOjzH,KAAKg0G,EAAQgO,EAAWmR,GAWhE,IAVA,IASI59E,EAAOumE,EAAWsX,EATlB38E,EAAS,GACTs6E,GAAS/O,EAAU/N,WAAa,IAAM,KAC7B+N,EAAU9N,UAAY,IAAM,KAC5B8N,EAAUnW,QAAU,IAAM,KAC1BmW,EAAU7N,OAAS,IAAM,IAClCkf,EAAgB,EAChBC,OAAuB/vH,IAAV4vH,EAAsBL,EAAaK,IAAU,EAE1DI,EAAgB,IAAIxf,OAAOiO,EAAUl4G,OAAQinH,EAAQ,MAElDx7E,EAAQy9D,EAAWhzG,KAAKuzH,EAAevf,QAC5C8H,EAAYyX,EAAwB,WACpBF,IACd58E,EAAOt2C,KAAK6zG,EAAOjzG,MAAMsyH,EAAe99E,EAAMlyC,QAC1CkyC,EAAY,OAAI,GAAKA,EAAMlyC,MAAQ2wG,EAAa,QAAG6e,EAAMx5G,MAAMo9B,EAAQlB,EAAMx0C,MAAM,IACvFqyH,EAAa79E,EAAM,GAAS,OAC5B89E,EAAgBvX,EACZrlE,EAAa,QAAK68E,KAEpBC,EAAwB,YAAMh+E,EAAMlyC,OAAOkwH,EAAwB,YAKzE,OAHIF,IAAkBrf,EAAa,QAC7Bof,GAAeG,EAAcpyH,KAAK,KAAKs1C,EAAOt2C,KAAK,IAClDs2C,EAAOt2C,KAAK6zG,EAAOjzG,MAAMsyH,IACzB58E,EAAa,OAAI68E,EAAa78E,EAAO11C,MAAM,EAAGuyH,GAAc78E,GAG5D,IAAU,WAAElzC,EAAW,GAAS,OACzB,SAAUy+G,EAAWmR,GACnC,YAAqB5vH,IAAdy+G,GAAqC,IAAVmR,EAAc,GAAKF,EAAOjzH,KAAK2E,KAAMq9G,EAAWmR,IAGpEF,EAGX,CAGL,SAAejR,EAAWmR,GACxB,IAAI7nB,EAAIwH,EAAQnuG,MACZ6uH,EAAwBjwH,MAAby+G,OAAyBz+G,EAAYy+G,EAAUgR,GAC9D,YAAoBzvH,IAAbiwH,EACHA,EAASxzH,KAAKgiH,EAAW1W,EAAG6nB,GAC5BD,EAAclzH,KAAK8zG,OAAOxI,GAAI0W,EAAWmR,IAO/C,SAAU5yC,EAAQ4yC,GAChB,IAAI9lB,EAAM8jB,EAAgB+B,EAAe3yC,EAAQ57E,KAAMwuH,EAAOD,IAAkBD,GAChF,GAAI5lB,EAAIntG,KAAM,OAAOmtG,EAAIjtG,MAEzB,IAAIgxH,EAAKjmB,EAAS5qB,GACd8pB,EAAIyJ,OAAOnvG,MACXimG,EAAI6C,EAAmB2jB,EAAIrd,QAE3B0f,EAAkBrC,EAAGvlB,QACrBklB,GAASK,EAAGnd,WAAa,IAAM,KACtBmd,EAAGld,UAAY,IAAM,KACrBkd,EAAGvlB,QAAU,IAAM,KACnBknB,EAAa,IAAM,KAI5BS,EAAW,IAAI5oB,EAAEmoB,EAAa3B,EAAK,OAASA,EAAGtnH,OAAS,IAAKinH,GAC7D2C,OAAgBnwH,IAAV4vH,EAAsBL,EAAaK,IAAU,EACvD,GAAY,IAARO,EAAW,MAAO,GACtB,GAAiB,IAAbrpB,EAAElsG,OAAc,OAAuC,OAAhCw0H,EAAea,EAAUnpB,GAAc,CAACA,GAAK,GAIxE,IAHA,IAAIv1E,EAAI,EACJssD,EAAI,EACJ23B,EAAI,GACD33B,EAAIipB,EAAElsG,QAAQ,CACnBq1H,EAAS1X,UAAYiX,EAAa3xC,EAAI,EACtC,IACI5/E,EADAojD,EAAI+tE,EAAea,EAAUT,EAAa1oB,EAAIA,EAAEtpG,MAAMqgF,IAE1D,GACQ,OAANx8B,IACCpjD,EAAIoxH,EAAKtzG,EAASk0G,EAAS1X,WAAaiX,EAAa,EAAI3xC,IAAKipB,EAAElsG,WAAa22B,EAE9EssD,EAAI4vC,EAAmB3mB,EAAGjpB,EAAGqyC,OACxB,CAEL,GADA1a,EAAE54G,KAAKkqG,EAAEtpG,MAAM+zB,EAAGssD,IACd23B,EAAE56G,SAAWu1H,EAAK,OAAO3a,EAC7B,IAAK,IAAI36G,EAAI,EAAGA,GAAKwmD,EAAEzmD,OAAS,EAAGC,IAEjC,GADA26G,EAAE54G,KAAKykD,EAAExmD,IACL26G,EAAE56G,SAAWu1H,EAAK,OAAO3a,EAE/B33B,EAAItsD,EAAItzB,GAIZ,OADAu3G,EAAE54G,KAAKkqG,EAAEtpG,MAAM+zB,IACRikF,Q,6BCjIb,EAAQ,OACR,IAAI5N,EAAW,EAAQ,OACnBslB,EAAS,EAAQ,OACjBjiB,EAAc,EAAQ,OACtB0M,EAAY,WACZD,EAAY,IAAa,SAEzB0Y,EAAS,SAAU9jH,GACrB,EAAQ,MAAR,CAAuBkkG,OAAOx0G,UAAW27G,EAAWrrG,GAAI,IAItD,EAAQ,MAAR,EAAoB,WAAc,MAAsD,QAA/CorG,EAAUj7G,KAAK,CAAE8J,OAAQ,IAAKinH,MAAO,SAChF4C,GAAO,WACL,IAAI7oB,EAAIK,EAASxmG,MACjB,MAAO,IAAI6L,OAAOs6F,EAAEhhG,OAAQ,IAC1B,UAAWghG,EAAIA,EAAEimB,OAASviB,GAAe1D,aAAaiJ,OAAS0c,EAAOzwH,KAAK8qG,QAAKvnG,MAG3E03G,EAAUh6G,MAAQi6G,GAC3ByY,GAAO,WACL,OAAO1Y,EAAUj7G,KAAK2E,U,6BCrB1B,IAAIokH,EAAS,EAAQ,MACjBra,EAAW,EAAQ,MAIvB3wG,EAAOC,QAAU,EAAQ,MAAR,CAHP,OAGqC,SAAU2kB,GACvD,OAAO,WAAiB,OAAOA,EAAIhe,KAAMmK,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,MAC9E,CAED2G,IAAK,SAAa9J,GAChB,OAAO2oH,EAAOzZ,IAAIZ,EAAS/pG,KARrB,OAQiCvE,EAAkB,IAAVA,EAAc,EAAIA,EAAOA,KAEzE2oH,I,6BCXH,EAAQ,MAAR,CAA0B,UAAU,SAAUhM,GAC5C,OAAO,SAAgB97G,GACrB,OAAO87G,EAAWp4G,KAAM,IAAK,OAAQ1D,Q,6BCFzC,EAAQ,MAAR,CAA0B,OAAO,SAAU87G,GACzC,OAAO,WACL,OAAOA,EAAWp4G,KAAM,MAAO,GAAI,S,6BCFvC,EAAQ,MAAR,CAA0B,SAAS,SAAUo4G,GAC3C,OAAO,WACL,OAAOA,EAAWp4G,KAAM,QAAS,GAAI,S,4BCFzC,EAAQ,MAAR,CAA0B,QAAQ,SAAUo4G,GAC1C,OAAO,WACL,OAAOA,EAAWp4G,KAAM,IAAK,GAAI,S,6BCHrC,IAAImlG,EAAU,EAAQ,OAClB8pB,EAAM,EAAQ,MAAR,EAAwB,GAClC9pB,EAAQA,EAAQj0B,EAAG,SAAU,CAE3Bg+C,YAAa,SAAqBnuB,GAChC,OAAOkuB,EAAIjvH,KAAM+gG,O,6BCJrB,IAAIoE,EAAU,EAAQ,OAClBxqF,EAAW,EAAQ,OACnBhQ,EAAU,EAAQ,OAClBwkH,EAAY,WACZC,EAAY,GAAY,SAE5BjqB,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAI,EAAQ,KAAR,CAA8B6pB,GAAY,SAAU,CAClFn2C,SAAU,SAAkBk/B,GAC1B,IAAIlT,EAAOr6F,EAAQ3K,KAAMk4G,EAAciX,GACnChgC,EAAchlF,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,EACpDrF,EAAMohB,EAASqqF,EAAKxrG,QACpB+6E,OAAsB31E,IAAhBuwF,EAA4B51F,EAAMyE,KAAK0S,IAAIiK,EAASw0E,GAAc51F,GACxEg2C,EAAS4/D,OAAO+I,GACpB,OAAOkX,EACHA,EAAU/zH,KAAK2pG,EAAMz1D,EAAQglC,GAC7BywB,EAAK5oG,MAAMm4E,EAAMhlC,EAAO/1C,OAAQ+6E,KAAShlC,M,6BCfjD,EAAQ,MAAR,CAA0B,SAAS,SAAU6oE,GAC3C,OAAO,WACL,OAAOA,EAAWp4G,KAAM,KAAM,GAAI,S,6BCFtC,EAAQ,MAAR,CAA0B,aAAa,SAAUo4G,GAC/C,OAAO,SAAmBxrE,GACxB,OAAOwrE,EAAWp4G,KAAM,OAAQ,QAAS4sC,Q,6BCF7C,EAAQ,MAAR,CAA0B,YAAY,SAAUwrE,GAC9C,OAAO,SAAkB11E,GACvB,OAAO01E,EAAWp4G,KAAM,OAAQ,OAAQ0iC,Q,gBCJ5C,IAAIyiE,EAAU,EAAQ,OAClBkC,EAAkB,EAAQ,OAC1BgoB,EAAelgB,OAAOkgB,aACtBC,EAAiBngB,OAAOogB,cAG5BpqB,EAAQA,EAAQO,EAAIP,EAAQG,KAAOgqB,GAA2C,GAAzBA,EAAe91H,QAAc,SAAU,CAE1F+1H,cAAe,SAAuB/oH,GAKpC,IAJA,IAGIqb,EAHA6mF,EAAM,GACNjB,EAAOt9F,UAAU3Q,OACjBC,EAAI,EAEDguG,EAAOhuG,GAAG,CAEf,GADAooB,GAAQ1X,UAAU1Q,KACd4tG,EAAgBxlF,EAAM,WAAcA,EAAM,MAAM28B,WAAW38B,EAAO,8BACtE6mF,EAAIltG,KAAKqmB,EAAO,MACZwtG,EAAaxtG,GACbwtG,EAAyC,QAA1BxtG,GAAQ,QAAY,IAAcA,EAAO,KAAQ,QAEpE,OAAO6mF,EAAIvpF,KAAK,Q,6BClBtB,IAAIgmF,EAAU,EAAQ,OAClBx6F,EAAU,EAAQ,OAClB6kH,EAAW,WAEfrqB,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAI,EAAQ,KAAR,CAA8BkqB,GAAW,SAAU,CACjF76E,SAAU,SAAkBujE,GAC1B,SAAUvtG,EAAQ3K,KAAMk4G,EAAcsX,GACnCvlH,QAAQiuG,EAAc/tG,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,O,6BCPnE,EAAQ,MAAR,CAA0B,WAAW,SAAUw5G,GAC7C,OAAO,WACL,OAAOA,EAAWp4G,KAAM,IAAK,GAAI,S,6BCHrC,IAAIivH,EAAM,EAAQ,MAAR,EAAwB,GAGlC,EAAQ,MAAR,CAA0B9f,OAAQ,UAAU,SAAUtE,GACpD7qG,KAAKyqG,GAAK0E,OAAOtE,GACjB7qG,KAAKnF,GAAK,KAET,WACD,IAEIuxF,EAFAua,EAAI3mG,KAAKyqG,GACT/rG,EAAQsB,KAAKnF,GAEjB,OAAI6D,GAASioG,EAAEntG,OAAe,CAAEiC,WAAOmD,EAAWrD,MAAM,IACxD6wF,EAAQ6iC,EAAItoB,EAAGjoG,GACfsB,KAAKnF,IAAMuxF,EAAM5yF,OACV,CAAEiC,MAAO2wF,EAAO7wF,MAAM,Q,4BCb/B,EAAQ,MAAR,CAA0B,QAAQ,SAAU68G,GAC1C,OAAO,SAAc77F,GACnB,OAAO67F,EAAWp4G,KAAM,IAAK,OAAQuc,Q,gBCJzC,IAAI4oF,EAAU,EAAQ,OAClBwC,EAAY,EAAQ,OACpBhtF,EAAW,EAAQ,OAEvBwqF,EAAQA,EAAQO,EAAG,SAAU,CAE3B+pB,IAAK,SAAaC,GAMhB,IALA,IAAIC,EAAMhoB,EAAU+nB,EAASD,KACzBl2H,EAAMohB,EAASg1G,EAAIn2H,QACnBiuG,EAAOt9F,UAAU3Q,OACjBkvG,EAAM,GACNjvG,EAAI,EACDF,EAAME,GACXivG,EAAIltG,KAAK2zG,OAAOwgB,EAAIl2H,OAChBA,EAAIguG,GAAMiB,EAAIltG,KAAK2zG,OAAOhlG,UAAU1Q,KACxC,OAAOivG,EAAIvpF,KAAK,Q,gBCftB,IAAIgmF,EAAU,EAAQ,OAEtBA,EAAQA,EAAQj0B,EAAG,SAAU,CAE3B9/D,OAAQ,EAAQ,U,6BCFlB,EAAQ,MAAR,CAA0B,SAAS,SAAUgnG,GAC3C,OAAO,WACL,OAAOA,EAAWp4G,KAAM,QAAS,GAAI,S,6BCFzC,IAAImlG,EAAU,EAAQ,OAClBxqF,EAAW,EAAQ,OACnBhQ,EAAU,EAAQ,OAClBilH,EAAc,aACdC,EAAc,GAAc,WAEhC1qB,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAI,EAAQ,KAAR,CAA8BsqB,GAAc,SAAU,CACpFE,WAAY,SAAoB5X,GAC9B,IAAIlT,EAAOr6F,EAAQ3K,KAAMk4G,EAAc0X,GACnClxH,EAAQic,EAAS3c,KAAK0S,IAAIvG,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,EAAWomG,EAAKxrG,SAChF+1C,EAAS4/D,OAAO+I,GACpB,OAAO2X,EACHA,EAAYx0H,KAAK2pG,EAAMz1D,EAAQ7wC,GAC/BsmG,EAAK5oG,MAAMsC,EAAOA,EAAQ6wC,EAAO/1C,UAAY+1C,M,4BCbrD,EAAQ,MAAR,CAA0B,UAAU,SAAU6oE,GAC5C,OAAO,WACL,OAAOA,EAAWp4G,KAAM,SAAU,GAAI,S,6BCF1C,EAAQ,MAAR,CAA0B,OAAO,SAAUo4G,GACzC,OAAO,WACL,OAAOA,EAAWp4G,KAAM,MAAO,GAAI,S,6BCFvC,EAAQ,MAAR,CAA0B,OAAO,SAAUo4G,GACzC,OAAO,WACL,OAAOA,EAAWp4G,KAAM,MAAO,GAAI,S,6BCFvC,EAAQ,MAAR,CAA0B,QAAQ,SAAU81G,GAC1C,OAAO,WACL,OAAOA,EAAM91G,KAAM,Q,6BCFvB,IAAI2qC,EAAS,EAAQ,MACjB3f,EAAM,EAAQ,OACd6+E,EAAc,EAAQ,OACtB1E,EAAU,EAAQ,OAClBsG,EAAW,EAAQ,OACnBkH,EAAO,aACP4U,EAAS,EAAQ,OACjB7P,EAAS,EAAQ,MACjB7L,EAAiB,EAAQ,OACzB8L,EAAM,EAAQ,OACdvJ,EAAM,EAAQ,OACdoU,EAAS,EAAQ,OACjBuN,EAAY,EAAQ,OACpBC,EAAW,EAAQ,MACnBp2H,EAAU,EAAQ,MAClB4sG,EAAW,EAAQ,OACnB56F,EAAW,EAAQ,OACnBw7F,EAAW,EAAQ,OACnBO,EAAY,EAAQ,OACpBjB,EAAc,EAAQ,OACtBH,EAAa,EAAQ,OACrB0pB,EAAU,EAAQ,OAClBC,EAAU,EAAQ,OAClB/V,EAAQ,EAAQ,OAChBgW,EAAQ,EAAQ,OAChBjW,EAAM,EAAQ,OACd7E,EAAQ,EAAQ,OAChBJ,EAAOkF,EAAM3xE,EACb89D,EAAK4T,EAAI1xE,EACT0sE,EAAOgb,EAAQ1nF,EACfi6E,EAAU93E,EAAO7vC,OACjBs1H,EAAQzlF,EAAOvrB,KACfixG,EAAaD,GAASA,EAAM/wG,UAE5BixG,EAASliB,EAAI,WACbyV,EAAezV,EAAI,eACnBJ,EAAS,GAAG0C,qBACZ6f,EAAiB7Y,EAAO,mBACxB8Y,EAAa9Y,EAAO,WACpB+Y,EAAY/Y,EAAO,cACnBlC,EAAcj7G,OAAgB,UAC9BwuH,EAA+B,mBAAXtG,KAA2B0N,EAAM3nF,EACrDkoF,EAAU/lF,EAAO+lF,QAEjB/R,GAAU+R,IAAYA,EAAiB,YAAMA,EAAiB,UAAEC,UAGhEC,EAAgB/mB,GAAe0d,GAAO,WACxC,OAES,GAFF0I,EAAQ3pB,EAAG,GAAI,IAAK,CACzBtoF,IAAK,WAAc,OAAOsoF,EAAGtmG,KAAM,IAAK,CAAEvE,MAAO,IAAK62B,MACpDA,KACD,SAAUiW,EAAI9tC,EAAKs9G,GACtB,IAAI8Y,EAAY5b,EAAKO,EAAa/6G,GAC9Bo2H,UAAkBrb,EAAY/6G,GAClC6rG,EAAG/9D,EAAI9tC,EAAKs9G,GACR8Y,GAAatoF,IAAOitE,GAAalP,EAAGkP,EAAa/6G,EAAKo2H,IACxDvqB,EAEAwqB,EAAO,SAAUtZ,GACnB,IAAIuZ,EAAMP,EAAWhZ,GAAOyY,EAAQxN,EAAiB,WAErD,OADAsO,EAAIjmB,GAAK0M,EACFuZ,GAGLC,EAAWjI,GAAyC,iBAApBtG,EAAQ1nH,SAAuB,SAAUwtC,GAC3E,MAAoB,iBAANA,GACZ,SAAUA,GACZ,OAAOA,aAAck6E,GAGnB5V,EAAkB,SAAwBtkE,EAAI9tC,EAAKs9G,GAKrD,OAJIxvE,IAAOitE,GAAa3I,EAAgB4jB,EAAWh2H,EAAKs9G,GACxDvR,EAASj+D,GACT9tC,EAAMisG,EAAYjsG,GAAK,GACvB+rG,EAASuR,GACL/sF,EAAIwlG,EAAY/1H,IACbs9G,EAAE39G,YAID4wB,EAAIud,EAAI+nF,IAAW/nF,EAAG+nF,GAAQ71H,KAAM8tC,EAAG+nF,GAAQ71H,IAAO,GAC1Ds9G,EAAIkY,EAAQlY,EAAG,CAAE39G,WAAYmsG,EAAW,GAAG,OAJtCv7E,EAAIud,EAAI+nF,IAAShqB,EAAG/9D,EAAI+nF,EAAQ/pB,EAAW,EAAG,KACnDh+D,EAAG+nF,GAAQ71H,IAAO,GAIXm2H,EAAcroF,EAAI9tC,EAAKs9G,IACzBzR,EAAG/9D,EAAI9tC,EAAKs9G,IAEnBkZ,EAAoB,SAA0B1oF,EAAI2oC,GACpDs1B,EAASj+D,GAKT,IAJA,IAGI9tC,EAHAqgB,EAAOk1G,EAAS9+C,EAAIy2B,EAAUz2B,IAC9Bz3E,EAAI,EACJ68E,EAAIx7D,EAAKthB,OAEN88E,EAAI78E,GAAGozG,EAAgBtkE,EAAI9tC,EAAMqgB,EAAKrhB,KAAMy3E,EAAEz2E,IACrD,OAAO8tC,GAKL2oF,EAAwB,SAA8Bz2H,GACxD,IAAIsrH,EAAI/X,EAAO3yG,KAAK2E,KAAMvF,EAAMisG,EAAYjsG,GAAK,IACjD,QAAIuF,OAASw1G,GAAexqF,EAAIwlG,EAAY/1H,KAASuwB,EAAIylG,EAAWh2H,QAC7DsrH,IAAM/6F,EAAIhrB,KAAMvF,KAASuwB,EAAIwlG,EAAY/1H,IAAQuwB,EAAIhrB,KAAMswH,IAAWtwH,KAAKswH,GAAQ71H,KAAOsrH,IAE/F6B,EAA4B,SAAkCr/E,EAAI9tC,GAGpE,GAFA8tC,EAAKo/D,EAAUp/D,GACf9tC,EAAMisG,EAAYjsG,GAAK,GACnB8tC,IAAOitE,IAAexqF,EAAIwlG,EAAY/1H,IAASuwB,EAAIylG,EAAWh2H,GAAlE,CACA,IAAIs9G,EAAI9C,EAAK1sE,EAAI9tC,GAEjB,OADIs9G,IAAK/sF,EAAIwlG,EAAY/1H,IAAUuwB,EAAIud,EAAI+nF,IAAW/nF,EAAG+nF,GAAQ71H,KAAOs9G,EAAE39G,YAAa,GAChF29G,IAELoZ,EAAuB,SAA6B5oF,GAKtD,IAJA,IAGI9tC,EAHAi7G,EAAQR,EAAKvN,EAAUp/D,IACvBlyB,EAAS,GACT5c,EAAI,EAEDi8G,EAAMl8G,OAASC,GACfuxB,EAAIwlG,EAAY/1H,EAAMi7G,EAAMj8G,OAASgB,GAAO61H,GAAU71H,GAAOk4G,GAAMt8F,EAAO7a,KAAKf,GACpF,OAAO4b,GAEP+6G,GAAyB,SAA+B7oF,GAM1D,IALA,IAII9tC,EAJA42H,EAAQ9oF,IAAOitE,EACfE,EAAQR,EAAKmc,EAAQZ,EAAY9oB,EAAUp/D,IAC3ClyB,EAAS,GACT5c,EAAI,EAEDi8G,EAAMl8G,OAASC,IAChBuxB,EAAIwlG,EAAY/1H,EAAMi7G,EAAMj8G,OAAU43H,IAAQrmG,EAAIwqF,EAAa/6G,IAAc4b,EAAO7a,KAAKg1H,EAAW/1H,IACxG,OAAO4b,GAIN0yG,IAYHtd,GAXAgX,EAAU,WACR,GAAIziH,gBAAgByiH,EAAS,MAAM1oH,UAAU,gCAC7C,IAAIy9G,EAAMG,EAAIxtG,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,GAChDg/G,EAAO,SAAUniH,GACfuE,OAASw1G,GAAaoI,EAAKviH,KAAKo1H,EAAWh1H,GAC3CuvB,EAAIhrB,KAAMswH,IAAWtlG,EAAIhrB,KAAKswH,GAAS9Y,KAAMx3G,KAAKswH,GAAQ9Y,IAAO,GACrEoZ,EAAc5wH,KAAMw3G,EAAKjR,EAAW,EAAG9qG,KAGzC,OADIouG,GAAe8U,GAAQiS,EAAcpb,EAAagC,EAAK,CAAEn9G,cAAc,EAAMqzB,IAAKkwF,IAC/EkT,EAAKtZ,KAEY,UAAG,YAAY,WACvC,OAAOx3G,KAAK8qG,MAGdqP,EAAM3xE,EAAIo/E,EACV1N,EAAI1xE,EAAIqkE,EACR,WAA8BqjB,EAAQ1nF,EAAI2oF,EAC1C,WAA6BD,EAC7Bf,EAAM3nF,EAAI4oF,GAENvnB,IAAgB,EAAQ,OAC1B4B,EAAS+J,EAAa,uBAAwB0b,GAAuB,GAGvE1O,EAAOh6E,EAAI,SAAUlsC,GACnB,OAAOw0H,EAAK1iB,EAAI9xG,MAIpB6oG,EAAQA,EAAQK,EAAIL,EAAQY,EAAIZ,EAAQG,GAAKyjB,EAAY,CAAEjuH,OAAQ2nH,IAEnE,IAAK,IAAI6O,GAAa,iHAGpBn8C,MAAM,KAAMjyC,GAAI,EAAGouF,GAAW93H,OAAS0pC,IAAGkrE,EAAIkjB,GAAWpuF,OAE3D,IAAK,IAAIquF,GAAmBlc,EAAMjH,EAAI7C,OAAQnoE,GAAI,EAAGmuF,GAAiB/3H,OAAS4pC,IAAI2sF,EAAUwB,GAAiBnuF,OAE9G+hE,EAAQA,EAAQO,EAAIP,EAAQG,GAAKyjB,EAAY,SAAU,CAErD,IAAO,SAAUtuH,GACf,OAAOuwB,EAAIulG,EAAgB91H,GAAO,IAC9B81H,EAAe91H,GACf81H,EAAe91H,GAAOgoH,EAAQhoH,IAGpC+2H,OAAQ,SAAgBT,GACtB,IAAKC,EAASD,GAAM,MAAMh3H,UAAUg3H,EAAM,qBAC1C,IAAK,IAAIt2H,KAAO81H,EAAgB,GAAIA,EAAe91H,KAASs2H,EAAK,OAAOt2H,GAE1Eg3H,UAAW,WAAc9S,GAAS,GAClC+S,UAAW,WAAc/S,GAAS,KAGpCxZ,EAAQA,EAAQO,EAAIP,EAAQG,GAAKyjB,EAAY,SAAU,CAErDtiH,OA/FY,SAAgB8hC,EAAI2oC,GAChC,YAAatyE,IAANsyE,EAAkB++C,EAAQ1nF,GAAM0oF,EAAkBhB,EAAQ1nF,GAAK2oC,IAgGtE12E,eAAgBqyG,EAEhBrqD,iBAAkByuE,EAElBpvE,yBAA0B+lE,EAE1B9rF,oBAAqBq1F,EAErB5b,sBAAuB6b,KAKzB,IAAIO,GAAsBpK,GAAO,WAAc4I,EAAM3nF,EAAE,MAEvD28D,EAAQA,EAAQO,EAAIP,EAAQG,EAAIqsB,GAAqB,SAAU,CAC7Dpc,sBAAuB,SAA+BhtE,GACpD,OAAO4nF,EAAM3nF,EAAE4+D,EAAS7+D,OAK5B6nF,GAASjrB,EAAQA,EAAQO,EAAIP,EAAQG,IAAMyjB,GAAcxB,GAAO,WAC9D,IAAI7hB,EAAI+c,IAIR,MAA0B,UAAnB4N,EAAW,CAAC3qB,KAA2C,MAAxB2qB,EAAW,CAAE/9F,EAAGozE,KAAyC,MAAzB2qB,EAAW91H,OAAOmrG,QACrF,OAAQ,CACXrmF,UAAW,SAAmBkpB,GAI5B,IAHA,IAEIqpF,EAAUC,EAFVx9G,EAAO,CAACk0B,GACR9uC,EAAI,EAED0Q,UAAU3Q,OAASC,GAAG4a,EAAK7Y,KAAK2O,UAAU1Q,MAEjD,GADAo4H,EAAYD,EAAWv9G,EAAK,IACvBzI,EAASgmH,SAAoBhzH,IAAP2pC,KAAoByoF,EAASzoF,GAMxD,OALK3uC,EAAQg4H,KAAWA,EAAW,SAAUn3H,EAAKgB,GAEhD,GADwB,mBAAbo2H,IAAyBp2H,EAAQo2H,EAAUx2H,KAAK2E,KAAMvF,EAAKgB,KACjEu1H,EAASv1H,GAAQ,OAAOA,IAE/B4Y,EAAK,GAAKu9G,EACHvB,EAAW37G,MAAM07G,EAAO/7G,MAKnCouG,EAAiB,UAAEoB,IAAiB,EAAQ,MAAR,CAAmBpB,EAAiB,UAAGoB,EAAcpB,EAAiB,UAAExuC,SAE5G43B,EAAe4W,EAAS,UAExB5W,EAAe7tG,KAAM,QAAQ,GAE7B6tG,EAAelhE,EAAOvrB,KAAM,QAAQ,I,6BCpPpC,IAAI+lF,EAAU,EAAQ,OAClBuU,EAAS,EAAQ,OACjB5rG,EAAS,EAAQ,OACjB04F,EAAW,EAAQ,OACnBa,EAAkB,EAAQ,OAC1B1sF,EAAW,EAAQ,OACnB/O,EAAW,EAAQ,OACnB2uG,EAAc,oBACdzR,EAAqB,EAAQ,OAC7BwR,EAAexsG,EAAOysG,YACtBC,EAAY1sG,EAAO2sG,SACnBqX,EAAUpY,EAAO6E,KAAOhE,EAAYwX,OACpCpU,EAASrD,EAAa1/G,UAAUwB,MAChC8/G,EAAOxC,EAAOwC,KACd9B,EAAe,cAEnBjV,EAAQA,EAAQK,EAAIL,EAAQY,EAAIZ,EAAQG,GAAKiV,IAAgBD,GAAe,CAAEC,YAAaD,IAE3FnV,EAAQA,EAAQO,EAAIP,EAAQG,GAAKoU,EAAOqC,OAAQ3B,EAAc,CAE5D2X,OAAQ,SAAgBxpF,GACtB,OAAOupF,GAAWA,EAAQvpF,IAAO38B,EAAS28B,IAAO2zE,KAAQ3zE,KAI7D48D,EAAQA,EAAQj0B,EAAIi0B,EAAQiB,EAAIjB,EAAQG,EAAI,EAAQ,MAAR,EAAoB,WAC9D,OAAQ,IAAIgV,EAAa,GAAGl+G,MAAM,OAAGwC,GAAWs7C,cAC9CkgE,EAAc,CAEhBh+G,MAAO,SAAe+e,EAAOo5D,GAC3B,QAAe31E,IAAX++G,QAAgC/+G,IAAR21E,EAAmB,OAAOopC,EAAOtiH,KAAKmrG,EAASxmG,MAAOmb,GAQlF,IAPA,IAAI5hB,EAAMitG,EAASxmG,MAAMk6C,WACrBxqC,EAAQ23F,EAAgBlsF,EAAO5hB,GAC/By4H,EAAM3qB,OAAwBzoG,IAAR21E,EAAoBh7E,EAAMg7E,EAAKh7E,GACrD8c,EAAS,IAAKyyF,EAAmB9oG,KAAMs6G,GAA9B,CAA6C3/F,EAASq3G,EAAMtiH,IACrEuiH,EAAQ,IAAIzX,EAAUx6G,MACtBkyH,EAAQ,IAAI1X,EAAUnkG,GACtB3X,EAAQ,EACLgR,EAAQsiH,GACbE,EAAM5Q,SAAS5iH,IAASuzH,EAAM1Q,SAAS7xG,MACvC,OAAO2G,KAIb,EAAQ,KAAR,CAA0B+jG,I,eC7C1B,IAAIjV,EAAU,EAAQ,OACtBA,EAAQA,EAAQK,EAAIL,EAAQY,EAAIZ,EAAQG,GAAK,aAAyB,CACpEmV,SAAU,qB,gBCFZ,EAAQ,MAAR,CAA0B,UAAW,GAAG,SAAU0X,GAChD,OAAO,SAAsBtxG,EAAM68F,EAAYlkH,GAC7C,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,Q,gBCFxC,EAAQ,MAAR,CAA0B,UAAW,GAAG,SAAU24H,GAChD,OAAO,SAAsBtxG,EAAM68F,EAAYlkH,GAC7C,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,Q,gBCFxC,EAAQ,MAAR,CAA0B,QAAS,GAAG,SAAU24H,GAC9C,OAAO,SAAoBtxG,EAAM68F,EAAYlkH,GAC3C,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,Q,gBCFxC,EAAQ,MAAR,CAA0B,QAAS,GAAG,SAAU24H,GAC9C,OAAO,SAAoBtxG,EAAM68F,EAAYlkH,GAC3C,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,Q,gBCFxC,EAAQ,MAAR,CAA0B,OAAQ,GAAG,SAAU24H,GAC7C,OAAO,SAAmBtxG,EAAM68F,EAAYlkH,GAC1C,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,Q,gBCFxC,EAAQ,MAAR,CAA0B,SAAU,GAAG,SAAU24H,GAC/C,OAAO,SAAqBtxG,EAAM68F,EAAYlkH,GAC5C,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,Q,gBCFxC,EAAQ,MAAR,CAA0B,SAAU,GAAG,SAAU24H,GAC/C,OAAO,SAAqBtxG,EAAM68F,EAAYlkH,GAC5C,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,Q,gBCFxC,EAAQ,MAAR,CAA0B,QAAS,GAAG,SAAU24H,GAC9C,OAAO,SAAoBtxG,EAAM68F,EAAYlkH,GAC3C,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,Q,gBCFxC,EAAQ,MAAR,CAA0B,QAAS,GAAG,SAAU24H,GAC9C,OAAO,SAA2BtxG,EAAM68F,EAAYlkH,GAClD,OAAO24H,EAAKnyH,KAAM6gB,EAAM68F,EAAYlkH,OAErC,I,6BCHH,IAcI44H,EAdAznF,EAAS,EAAQ,MACjB0nF,EAAO,EAAQ,MAAR,CAA4B,GACnC5mB,EAAW,EAAQ,OACnBC,EAAO,EAAQ,OACf9qF,EAAS,EAAQ,OACjB0xG,EAAO,EAAQ,OACf1mH,EAAW,EAAQ,OACnBm+F,EAAW,EAAQ,MACnBwoB,EAAkB,EAAQ,MAC1BC,GAAW7nF,EAAOjtB,eAAiB,kBAAmBitB,EACtD8nF,EAAW,UACX1nB,EAAUW,EAAKX,QACf8H,EAAet4G,OAAOs4G,aACtBzH,EAAsBknB,EAAK9mB,QAG3BnB,EAAU,SAAUrsF,GACtB,OAAO,WACL,OAAOA,EAAIhe,KAAMmK,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,KAIvDmtG,EAAU,CAEZ/tF,IAAK,SAAavjB,GAChB,GAAImR,EAASnR,GAAM,CACjB,IAAIomB,EAAOkqF,EAAQtwG,GACnB,OAAa,IAATomB,EAAsBuqF,EAAoBrB,EAAS/pG,KAAMyyH,IAAWz0G,IAAIvjB,GACrEomB,EAAOA,EAAK7gB,KAAKnF,SAAM+D,IAIlC8uB,IAAK,SAAajzB,EAAKgB,GACrB,OAAO62H,EAAK3nB,IAAIZ,EAAS/pG,KAAMyyH,GAAWh4H,EAAKgB,KAK/Ci3H,EAAWt5H,EAAOC,QAAU,EAAQ,MAAR,CAAyBo5H,EAAUpoB,EAAS0B,EAASumB,GAAM,GAAM,GAG7FC,GAAmBC,IAErB5xG,GADAwxG,EAAcE,EAAKloB,eAAeC,EAASooB,IACxB73H,UAAWmxG,GAC9BL,EAAKkB,MAAO,EACZylB,EAAK,CAAC,SAAU,MAAO,MAAO,QAAQ,SAAU53H,GAC9C,IAAI0xG,EAAQumB,EAAS93H,UACjB8hB,EAASyvF,EAAM1xG,GACnBgxG,EAASU,EAAO1xG,GAAK,SAAU63B,EAAGC,GAEhC,GAAI3mB,EAAS0mB,KAAOugF,EAAavgF,GAAI,CAC9BtyB,KAAKmqG,KAAInqG,KAAKmqG,GAAK,IAAIioB,GAC5B,IAAI/7G,EAASrW,KAAKmqG,GAAG1vG,GAAK63B,EAAGC,GAC7B,MAAc,OAAP93B,EAAeuF,KAAOqW,EAE7B,OAAOqG,EAAOrhB,KAAK2E,KAAMsyB,EAAGC,W,6BCvDpC,IAAI+/F,EAAO,EAAQ,OACfvoB,EAAW,EAAQ,MACnB4oB,EAAW,UAGf,EAAQ,MAAR,CAAyBA,GAAU,SAAU30G,GAC3C,OAAO,WAAqB,OAAOA,EAAIhe,KAAMmK,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,MAClF,CAED2G,IAAK,SAAa9J,GAChB,OAAO62H,EAAK3nB,IAAIZ,EAAS/pG,KAAM2yH,GAAWl3H,GAAO,KAElD62H,GAAM,GAAO,I,4BCXhB,IAAIntB,EAAU,EAAQ,OAClBuK,EAAmB,EAAQ,OAC3BtI,EAAW,EAAQ,OACnBzsF,EAAW,EAAQ,OACnBoqF,EAAY,EAAQ,OACpB6tB,EAAqB,EAAQ,OAEjCztB,EAAQA,EAAQj0B,EAAG,QAAS,CAC1B5gE,QAAS,SAAiBm4F,GACxB,IACIkH,EAAWyE,EADXzN,EAAIS,EAASpnG,MAMjB,OAJA+kG,EAAU0D,GACVkH,EAAYh1F,EAASgsF,EAAEntG,QACvB46G,EAAIwe,EAAmBjsB,EAAG,GAC1B+I,EAAiB0E,EAAGzN,EAAGA,EAAGgJ,EAAW,EAAG,EAAGlH,EAAYt+F,UAAU,IAC1DiqG,KAIX,EAAQ,MAAR,CAAiC,Y,6BCnBjC,IAAIjP,EAAU,EAAQ,OAClB0tB,EAAY,EAAQ,MAAR,EAA6B,GAE7C1tB,EAAQA,EAAQj0B,EAAG,QAAS,CAC1Bv8B,SAAU,SAAkBpI,GAC1B,OAAOsmF,EAAU7yH,KAAMusC,EAAIpiC,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,MAIrE,EAAQ,MAAR,CAAiC,a,gBCVjC,IAAIumG,EAAU,EAAQ,OAClByM,EAAW,EAAQ,MAAR,EAA8B,GAE7CzM,EAAQA,EAAQO,EAAG,SAAU,CAC3BhsD,QAAS,SAAiBnR,GACxB,OAAOqpE,EAASrpE,O,gBCLpB,IAAI48D,EAAU,EAAQ,OAClByQ,EAAU,EAAQ,OAClBjO,EAAY,EAAQ,OACpBsN,EAAO,EAAQ,OACfgO,EAAiB,EAAQ,OAE7B9d,EAAQA,EAAQO,EAAG,SAAU,CAC3BotB,0BAA2B,SAAmCtxE,GAO5D,IANA,IAKI/mD,EAAKo2E,EALL81B,EAAIgB,EAAUnmD,GACduxE,EAAU9d,EAAKzsE,EACf1tB,EAAO86F,EAAQjP,GACftwF,EAAS,GACT5c,EAAI,EAEDqhB,EAAKthB,OAASC,QAENmF,KADbiyE,EAAOkiD,EAAQpsB,EAAGlsG,EAAMqgB,EAAKrhB,QACLwpH,EAAe5sG,EAAQ5b,EAAKo2E,GAEtD,OAAOx6D,M,gBClBX,IAAI8uF,EAAU,EAAQ,OAClB6tB,EAAU,EAAQ,MAAR,EAA8B,GAE5C7tB,EAAQA,EAAQO,EAAG,SAAU,CAC3BjoG,OAAQ,SAAgB8qC,GACtB,OAAOyqF,EAAQzqF,O,4BCJnB,IAAI48D,EAAU,EAAQ,OAClBN,EAAO,EAAQ,OACfl6D,EAAS,EAAQ,MACjBm+D,EAAqB,EAAQ,OAC7B4f,EAAiB,EAAQ,OAE7BvjB,EAAQA,EAAQj0B,EAAIi0B,EAAQgB,EAAG,UAAW,CAAE,QAAW,SAAU8sB,GAC/D,IAAIhtB,EAAI6C,EAAmB9oG,KAAM6kG,EAAK5+F,SAAW0kC,EAAO1kC,SACpD2E,EAAiC,mBAAbqoH,EACxB,OAAOjzH,KAAKib,KACVrQ,EAAa,SAAUpE,GACrB,OAAOkiH,EAAeziB,EAAGgtB,KAAah4G,MAAK,WAAc,OAAOzU,MAC9DysH,EACJroH,EAAa,SAAU/N,GACrB,OAAO6rH,EAAeziB,EAAGgtB,KAAah4G,MAAK,WAAc,MAAMpe,MAC7Do2H,O,6BCfR,IAAI9tB,EAAU,EAAQ,OAClB+tB,EAAO,EAAQ,OACf3Q,EAAY,EAAQ,OAGpB4Q,EAAa,mDAAmD32H,KAAK+lH,GAEzEpd,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAI6tB,EAAY,SAAU,CACpDC,OAAQ,SAAgB9a,GACtB,OAAO4a,EAAKlzH,KAAMs4G,EAAWnuG,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,GAAW,O,6BCTlF,IAAIumG,EAAU,EAAQ,OAClB+tB,EAAO,EAAQ,OACf3Q,EAAY,EAAQ,OAGpB4Q,EAAa,mDAAmD32H,KAAK+lH,GAEzEpd,EAAQA,EAAQj0B,EAAIi0B,EAAQG,EAAI6tB,EAAY,SAAU,CACpDE,SAAU,SAAkB/a,GAC1B,OAAO4a,EAAKlzH,KAAMs4G,EAAWnuG,UAAU3Q,OAAS,EAAI2Q,UAAU,QAAKvL,GAAW,O,6BCTlF,EAAQ,MAAR,CAA0B,YAAY,SAAUk3G,GAC9C,OAAO,WACL,OAAOA,EAAM91G,KAAM,MAEpB,c,6BCJH,EAAQ,MAAR,CAA0B,aAAa,SAAU81G,GAC/C,OAAO,WACL,OAAOA,EAAM91G,KAAM,MAEpB,Y,gBCNH,EAAQ,MAAR,CAAyB,kB,gBC6CzB,IA7CA,IAAI69G,EAAa,EAAQ,OACrBlQ,EAAU,EAAQ,OAClBlC,EAAW,EAAQ,OACnB9gE,EAAS,EAAQ,MACjBu6D,EAAO,EAAQ,OACfyL,EAAY,EAAQ,OACpBvC,EAAM,EAAQ,OACdkC,EAAWlC,EAAI,YACfklB,EAAgBllB,EAAI,eACpBmlB,EAAc5iB,EAAUh3G,MAExB65H,EAAe,CACjBC,aAAa,EACbC,qBAAqB,EACrBC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,eAAe,EACfC,cAAc,EACdC,sBAAsB,EACtBC,UAAU,EACVC,mBAAmB,EACnBC,gBAAgB,EAChBC,iBAAiB,EACjBC,mBAAmB,EACnBC,WAAW,EACXC,eAAe,EACfC,cAAc,EACdC,UAAU,EACVC,kBAAkB,EAClBC,QAAQ,EACRC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,EACdC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAkB,EAClBC,eAAe,EACfC,WAAW,GAGJC,EAAc7nB,EAAQ6lB,GAAe/5H,EAAI,EAAGA,EAAI+7H,EAAYh8H,OAAQC,IAAK,CAChF,IAIIgB,EAJA6vG,EAAOkrB,EAAY/7H,GACnBg8H,EAAWjC,EAAalpB,GACxBorB,EAAa/qF,EAAO2/D,GACpB6B,EAAQupB,GAAcA,EAAW96H,UAErC,GAAIuxG,IACGA,EAAMmE,IAAWpL,EAAKiH,EAAOmE,EAAUijB,GACvCpnB,EAAMmnB,IAAgBpuB,EAAKiH,EAAOmnB,EAAehpB,GACtDqG,EAAUrG,GAAQipB,EACdkC,GAAU,IAAKh7H,KAAOojH,EAAiB1R,EAAM1xG,IAAMgxG,EAASU,EAAO1xG,EAAKojH,EAAWpjH,IAAM,K,gBCvDjG,IAAI0qG,EAAU,EAAQ,OAClBwwB,EAAQ,EAAQ,OACpBxwB,EAAQA,EAAQK,EAAIL,EAAQU,EAAG,CAC7BhrE,aAAc86F,EAAMjoG,IACpBoN,eAAgB66F,EAAM9qG,S,gBCHxB,IAAI8f,EAAS,EAAQ,MACjBw6D,EAAU,EAAQ,OAClBod,EAAY,EAAQ,OACpBnmH,EAAQ,GAAGA,MACXw5H,EAAO,WAAWp5H,KAAK+lH,GACvBuO,EAAO,SAAUpjG,GACnB,OAAO,SAAUxiB,EAAItN,GACnB,IAAIi4H,EAAY1rH,UAAU3Q,OAAS,EAC/B6a,IAAOwhH,GAAYz5H,EAAMf,KAAK8O,UAAW,GAC7C,OAAOujB,EAAImoG,EAAY,YAEP,mBAAN3qH,EAAmBA,EAAKm2B,SAASn2B,IAAKwJ,MAAM1U,KAAMqU,IACxDnJ,EAAItN,KAGZunG,EAAQA,EAAQK,EAAIL,EAAQU,EAAIV,EAAQG,EAAIswB,EAAM,CAChD16G,WAAY41G,EAAKnmF,EAAOzvB,YACxBggB,YAAa41F,EAAKnmF,EAAOzP,gB,gBClB3B,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR9hC,EAAOC,QAAU,EAAjB,Q,kBCHiED,EAAOC,QAAyJ,SAASm9E,GAAG,SAAS5tC,EAAE1sC,GAAG,GAAGW,EAAEX,GAAG,OAAOW,EAAEX,GAAG7C,QAAQ,IAAII,EAAEoD,EAAEX,GAAG,CAACzC,EAAEyC,EAAEo6E,GAAE,EAAGj9E,QAAQ,IAAI,OAAOm9E,EAAEt6E,GAAGb,KAAK5B,EAAEJ,QAAQI,EAAEA,EAAEJ,QAAQuvC,GAAGnvC,EAAE68E,GAAE,EAAG78E,EAAEJ,QAAQ,IAAIwD,EAAE,GAAG,OAAO+rC,EAAEmzC,EAAEvF,EAAE5tC,EAAE7Q,EAAEl7B,EAAE+rC,EAAEnvC,EAAE,SAAS+8E,GAAG,OAAOA,GAAG5tC,EAAEkoC,EAAE,SAAS0F,EAAE5tC,EAAE/rC,GAAGtC,OAAOC,eAAeg8E,EAAE5tC,EAAE,CAACvuC,cAAa,EAAGD,YAAW,EAAG4jB,IAAInhB,KAAK+rC,EAAE1sC,EAAE,SAASs6E,GAAG,IAAI35E,EAAE25E,GAAGA,EAAEx9E,WAAW,WAAW,OAAOw9E,EAAEs/C,SAAS,WAAW,OAAOt/C,GAAG,OAAO5tC,EAAEkoC,EAAEj0E,EAAE,IAAIA,GAAGA,GAAG+rC,EAAE5sC,EAAE,SAASw6E,EAAE5tC,GAAG,OAAOruC,OAAOK,UAAUkjB,eAAeziB,KAAKm7E,EAAE5tC,IAAIA,EAAEzY,EAAE,GAAGyY,EAAEA,EAAE2F,EAAE,IAA9d,CAAme,CAAC,SAASioC,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAE8D,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAIpD,EAAEoD,EAAE,GAAGb,EAAEa,EAAE,GAAG0xC,EAAE1xC,EAAE,IAAIk7B,EAAEl7B,EAAE,GAAGm5H,EAAE,SAASx/C,GAAG,SAAS5tC,EAAE/rC,EAAEX,EAAEzC,GAAG,OAAO+8E,EAAEn7E,KAAK2E,MAAMA,KAAK2F,eAAe,KAAK3F,KAAK0F,iBAAgB,EAAG1F,KAAKwF,oBAAmB,EAAGxF,KAAK2H,WAAU,EAAGwC,UAAU3Q,QAAQ,KAAK,EAAEwG,KAAK6G,YAAY0nC,EAAEhqC,MAAM,MAAM,KAAK,EAAE,IAAI1H,EAAE,CAACmD,KAAK6G,YAAY0nC,EAAEhqC,MAAM,MAAM,GAAG,iBAAiB1H,EAAE,CAACA,aAAa+rC,GAAG5oC,KAAK6G,YAAYhK,EAAEmD,KAAK6G,YAAYtB,IAAIvF,QAAQA,KAAKwF,oBAAmB,EAAGxF,KAAK6G,YAAY,IAAIovH,EAAEj2H,KAAKnD,IAAI,MAAM,QAAQmD,KAAKwF,oBAAmB,EAAGxF,KAAK6G,YAAY,IAAIovH,EAAEj2H,KAAKnD,EAAEX,EAAEzC,IAAI,OAAOyC,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAUm9B,EAAEoE,gBAAgB,WAAW,OAAOn8B,MAAM4oC,EAAEniC,OAAO,SAAS+vE,EAAE35E,EAAEX,GAAG,IAAIzC,EAAE,IAAImvC,EAAE4tC,EAAE35E,EAAEX,GAAG,OAAOzC,EAAE+L,oBAAmB,EAAG/L,GAAGmvC,EAAEhuC,UAAUU,KAAK,SAASk7E,GAAGx2E,KAAK2H,WAAW3H,KAAKqD,MAAMmzE,IAAI5tC,EAAEhuC,UAAU2H,MAAM,SAASi0E,GAAGx2E,KAAK2H,YAAY3H,KAAK2H,WAAU,EAAG3H,KAAKuD,OAAOizE,KAAK5tC,EAAEhuC,UAAU+H,SAAS,WAAW3C,KAAK2H,YAAY3H,KAAK2H,WAAU,EAAG3H,KAAK0D,cAAcklC,EAAEhuC,UAAU6I,YAAY,WAAWzD,KAAK+C,SAAS/C,KAAK2H,WAAU,EAAG6uE,EAAE57E,UAAU6I,YAAYpI,KAAK2E,QAAQ4oC,EAAEhuC,UAAUyI,MAAM,SAASmzE,GAAGx2E,KAAK6G,YAAYvL,KAAKk7E,IAAI5tC,EAAEhuC,UAAU2I,OAAO,SAASizE,GAAGx2E,KAAK6G,YAAYtE,MAAMi0E,GAAGx2E,KAAKyD,eAAemlC,EAAEhuC,UAAU8I,UAAU,WAAW1D,KAAK6G,YAAYlE,WAAW3C,KAAKyD,eAAemlC,EAAxoC,CAA2oC5sC,EAAEyG,cAAcmmC,EAAEhlC,WAAWoyH,EAAE,IAAIC,EAAE,SAASz/C,GAAG,SAAS5tC,EAAEA,EAAE/rC,EAAEX,EAAEF,GAAGw6E,EAAEn7E,KAAK2E,MAAMA,KAAKwK,QAAQo+B,EAAE,IAAI2F,EAAExW,EAAE/3B,KAAKvG,EAAEmR,WAAW/N,GAAG0xC,EAAE1xC,EAAEA,IAAIk7B,EAAEl7B,EAAE0xC,EAAE1xC,EAAEvB,KAAKY,EAAEW,EAAE0F,MAAMvG,EAAEa,EAAE8F,SAASlJ,EAAEmR,WAAWmtB,EAAEt0B,cAAczD,KAAKuF,IAAIwyB,EAAEt0B,YAAYoH,KAAKktB,IAAIA,EAAEt0B,YAAYzD,KAAKyD,YAAYoH,KAAK7K,OAAOA,KAAK8K,SAASitB,EAAE/3B,KAAKqD,MAAMkrC,EAAEvuC,KAAKuD,OAAOrH,EAAE8D,KAAK0D,UAAU1H,EAAE,OAAOE,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAUU,KAAK,SAASk7E,GAAG,IAAIx2E,KAAK2H,WAAW3H,KAAKqD,MAAM,CAAC,IAAIulC,EAAE5oC,KAAKwK,QAAQo+B,EAAEpjC,mBAAmBxF,KAAK+K,gBAAgB69B,EAAE5oC,KAAKqD,MAAMmzE,IAAIx2E,KAAKyD,cAAczD,KAAKgL,aAAahL,KAAKqD,MAAMmzE,KAAK5tC,EAAEhuC,UAAU2H,MAAM,SAASi0E,GAAG,IAAIx2E,KAAK2H,UAAU,CAAC,IAAIihC,EAAE5oC,KAAKwK,QAAQ,GAAGxK,KAAKuD,OAAOqlC,EAAEpjC,oBAAoBxF,KAAK+K,gBAAgB69B,EAAE5oC,KAAKuD,OAAOizE,GAAGx2E,KAAKyD,gBAAgBzD,KAAKgL,aAAahL,KAAKuD,OAAOizE,GAAGx2E,KAAKyD,mBAAmB,CAAC,IAAImlC,EAAEpjC,mBAAmB,MAAMxF,KAAKyD,cAAc+yE,EAAE5tC,EAAEjjC,eAAe6wE,EAAE5tC,EAAEljC,iBAAgB,EAAG1F,KAAKyD,iBAAiBmlC,EAAEhuC,UAAU+H,SAAS,WAAW,IAAI3C,KAAK2H,UAAU,CAAC,IAAI6uE,EAAEx2E,KAAKwK,QAAQxK,KAAK0D,UAAU8yE,EAAEhxE,oBAAoBxF,KAAK+K,gBAAgByrE,EAAEx2E,KAAK0D,WAAW1D,KAAKyD,gBAAgBzD,KAAKgL,aAAahL,KAAK0D,WAAW1D,KAAKyD,eAAezD,KAAKyD,gBAAgBmlC,EAAEhuC,UAAUoQ,aAAa,SAASwrE,EAAE5tC,GAAG,IAAI4tC,EAAEn7E,KAAK2E,KAAK8K,SAAS89B,GAAG,MAAM4tC,GAAG,MAAMx2E,KAAKyD,cAAc+yE,IAAI5tC,EAAEhuC,UAAUmQ,gBAAgB,SAASyrE,EAAE5tC,EAAE/rC,GAAG,IAAI+rC,EAAEvtC,KAAK2E,KAAK8K,SAASjO,GAAG,MAAM+rC,GAAG,OAAO4tC,EAAE7wE,eAAeijC,EAAE4tC,EAAE9wE,iBAAgB,GAAG,EAAG,OAAM,GAAIkjC,EAAEhuC,UAAUuQ,aAAa,WAAW,IAAIqrE,EAAEx2E,KAAKwK,QAAQxK,KAAK8K,SAAS,KAAK9K,KAAKwK,QAAQ,KAAKgsE,EAAE/yE,eAAemlC,EAA95C,CAAi6CotF,IAAI,SAASx/C,EAAE5tC,EAAE/rC,GAAG,cAAa,SAAU25E,GAAG,IAAI35E,EAAE,CAACq5H,SAAQ,EAAGC,UAAS,EAAG30E,QAAO,EAAG66B,QAAO,EAAGgzB,QAAO,EAAGzwG,WAAU,GAAIgqC,EAAE9iC,KAAKjJ,SAAS+X,OAAOA,MAAM/X,SAASsW,SAASA,OAAO,IAAIjX,EAAEW,SAAS25E,IAAIA,GAAGt6E,GAAGA,EAAEyuC,SAASzuC,GAAGA,EAAEiX,SAASjX,IAAI0sC,EAAE9iC,KAAK5J,KAAKb,KAAKutC,EAAE/rC,EAAE,MAAM,SAAS25E,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAEW,EAAE,GAAGpD,EAAEoD,EAAE,IAAIb,EAAEa,EAAE,GAAG0xC,EAAE,WAAW,SAASioC,EAAEA,GAAGx2E,KAAK+E,WAAU,EAAGyxE,IAAIx2E,KAAKoC,WAAWo0E,GAAG,OAAOA,EAAE57E,UAAUoK,KAAK,SAAS4jC,GAAG,IAAI/rC,EAAE,IAAI25E,EAAE,OAAO35E,EAAEsI,OAAOnF,KAAKnD,EAAEoI,SAAS2jC,EAAE/rC,GAAG25E,EAAE57E,UAAUkK,UAAU,SAAS0xE,EAAE5tC,EAAE/rC,GAAG,IAAIX,EAAE8D,KAAKiF,SAASjJ,EAAEvC,EAAE6L,aAAakxE,EAAE5tC,EAAE/rC,GAAG,GAAGX,EAAEA,EAAEb,KAAKW,EAAEgE,MAAMhE,EAAEuJ,IAAIvF,KAAKoC,WAAWpG,IAAIA,EAAEwJ,qBAAqBxJ,EAAEwJ,oBAAmB,EAAGxJ,EAAE0J,iBAAiB,MAAM1J,EAAE2J,eAAe,OAAO3J,GAAGw6E,EAAE57E,UAAUgL,QAAQ,SAAS4wE,EAAE5tC,GAAG,IAAI/rC,EAAEmD,KAAK,GAAG4oC,IAAI1sC,EAAE4J,KAAKC,IAAI7J,EAAE4J,KAAKC,GAAGC,QAAQ9J,EAAE4J,KAAKC,GAAGC,OAAOC,QAAQ2iC,EAAE1sC,EAAE4J,KAAKC,GAAGC,OAAOC,QAAQ/J,EAAE4J,KAAKG,UAAU2iC,EAAE1sC,EAAE4J,KAAKG,WAAW2iC,EAAE,MAAM,IAAIpoC,MAAM,yBAAyB,OAAO,IAAIooC,GAAE,SAASA,EAAE1sC,GAAG,IAAIzC,EAAEoD,EAAEiI,WAAU,SAAS8jC,GAAG,GAAGnvC,EAAE,IAAI+8E,EAAE5tC,GAAG,MAAM4tC,GAAGt6E,EAAEs6E,GAAG/8E,EAAEgK,mBAAmB+yE,EAAE5tC,KAAI1sC,EAAE0sC,OAAM4tC,EAAE57E,UAAUwH,WAAW,SAASo0E,GAAG,OAAOx2E,KAAKmF,OAAOL,UAAU0xE,IAAIA,EAAE57E,UAAUoB,EAAEigC,cAAc,WAAW,OAAOj8B,MAAMw2E,EAAE/vE,OAAO,SAASmiC,GAAG,OAAO,IAAI4tC,EAAE5tC,IAAI4tC,EAAr2B,GAA02B5tC,EAAEvkC,WAAWkqC,GAAG,SAASioC,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAEW,EAAE,GAAGpD,EAAEoD,EAAE,IAAIb,EAAEa,EAAE,GAAG0xC,EAAE1xC,EAAE,IAAIk7B,EAAEl7B,EAAE,GAAGm5H,EAAEn5H,EAAE,IAAIo5H,EAAE,WAAW,SAASz/C,EAAEA,GAAGx2E,KAAK+C,QAAO,EAAGyzE,IAAIx2E,KAAKmL,aAAaqrE,GAAG,OAAOA,EAAE57E,UAAU6I,YAAY,WAAW,IAAI+yE,EAAE5tC,GAAE,EAAG,IAAI5oC,KAAK+C,OAAO,CAAC/C,KAAK+C,QAAO,EAAG,IAAWkzH,EAALj2H,KAASmL,aAAamnB,EAAtBtyB,KAA0BoL,eAAqJ,GAAnIpL,KAAKoL,eAAe,KAAKpP,EAAE4O,WAAWqrH,IAAU1nF,EAAE/iC,SAASyqH,GAAG56H,KAAK2E,QAAU+3B,EAAEtsB,cAAcm9B,GAAE,GAAI4tC,EAAEA,GAAG,IAAIh7E,KAAKu8B,EAAEtsB,YAAY5O,IAAOX,EAAEtC,QAAQ04B,GAAG,IAAI,IAAIkW,GAAG,EAAE8tC,EAAEhkD,EAAE94B,SAASgvC,EAAE8tC,GAAG,CAAC,IAAI/jD,EAAED,EAAEkW,GAAG,GAAG/uC,EAAEmS,SAAS2mB,IAAUgc,EAAE/iC,SAAS+mB,EAAE9uB,aAAapI,KAAKk3B,KAAUwF,EAAEtsB,YAAY,CAACm9B,GAAE,EAAG4tC,EAAEA,GAAG,GAAG,IAAI1F,EAAE/4C,EAAEtsB,YAAY5O,EAAEi0E,aAAaklD,EAAEvtH,oBAAoB+tE,EAAEA,EAAE3qE,OAAOilE,EAAEzlE,QAAQmrE,EAAEh7E,KAAKs1E,IAAK,GAAGloC,EAAE,MAAM,IAAIotF,EAAEvtH,oBAAoB+tE,KAAKA,EAAE57E,UAAU2K,IAAI,SAASqjC,GAAG,IAAIA,GAAGA,IAAI4tC,EAAE9zE,MAAM,OAAO8zE,EAAE9zE,MAAM,GAAGkmC,IAAI5oC,KAAK,OAAOA,KAAK,IAAInD,EAAE+rC,EAAE,cAAcA,GAAG,IAAI,WAAW/rC,EAAE,IAAI25E,EAAE5tC,GAAG,IAAI,SAAS,GAAG/rC,EAAEkG,QAAQ,mBAAmBlG,EAAE4G,YAAY,MAAMzD,KAAK+C,OAAOlG,EAAE4G,eAAezD,KAAKoL,iBAAiBpL,KAAKoL,eAAe,KAAK5P,KAAKqB,GAAG,MAAM,QAAQ,MAAM,IAAI2D,MAAM,yBAAyBooC,EAAE,2BAA2B,OAAO/rC,GAAG25E,EAAE57E,UAAU2Q,OAAO,SAASq9B,GAAG,GAAG,MAAMA,GAAGA,IAAI5oC,MAAM4oC,IAAI4tC,EAAE9zE,MAAM,CAAC,IAAI7F,EAAEmD,KAAKoL,eAAe,GAAGvO,EAAE,CAAC,IAAIX,EAAEW,EAAEoN,QAAQ2+B,IAAQ,IAAL1sC,GAAQW,EAAEmE,OAAO9E,EAAE,MAAMs6E,EAAE9zE,MAAM,SAAS8zE,GAAG,OAAOA,EAAEzzE,QAAO,EAAGyzE,EAA/B,CAAkC,IAAIA,GAAGA,EAAlqC,GAAuqC5tC,EAAEnmC,aAAawzH,GAAG,SAASz/C,EAAE5tC,EAAE/rC,GAAG,cAAa,SAAU25E,GAAuOj8E,OAAOC,eAAeouC,EAAE,aAAa,CAACntC,OAAM,IAAKmtC,EAAEwtF,aAAvR,SAAW5/C,EAAE5tC,GAAG,IAAI4tC,EAAE,MAAM5tC,GAA0QA,EAAEh+B,WAA1Q,SAAW4rE,GAAG,MAAM,mBAAmBA,GAAgP5tC,EAAEytF,aAAhP,SAAWztF,EAAE/rC,GAAG+rC,EAAE9jC,WAAU,SAAS8jC,GAAG4tC,EAAEt9E,QAAQ0xC,IAAI/tC,EAAE,SAAS+rC,MAAI,SAASA,GAAG4tC,EAAEt9E,QAAQ0xC,IAAI/tC,EAAE,UAAU+rC,MAAI,SAASA,GAAG4tC,EAAEt9E,QAAQ0xC,IAAI/tC,EAAE,aAAa+rC,SAAyGvtC,KAAKutC,EAAE/rC,EAAE,MAAM,SAAS25E,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAWpD,EAALoD,EAAE,GAAOiJ,KAAKhL,OAAO8tC,EAAEzM,eAAe,mBAAmB1iC,GAAG,mBAAmBA,EAAE68H,IAAI78H,EAAE68H,IAAI,gBAAgB,kBAAkB,SAAS9/C,EAAE5tC,EAAE/rC,GAAG,aAAa,SAASX,EAAEs6E,GAAG,IAAI5tC,EAAE/rC,EAAE25E,EAAE17E,OAAO,MAAM,mBAAmB+B,EAAEA,EAAEqI,WAAW0jC,EAAE/rC,EAAEqI,YAAY0jC,EAAE/rC,EAAE,cAAcA,EAAEqI,WAAW0jC,GAAGA,EAAE,eAAeA,EAAE,IAAInvC,EAAEoD,EAAE,GAAG+rC,EAAE1M,oBAAoBhgC,EAAE0sC,EAAE3M,aAAa//B,EAAEzC,EAAEqM,OAAO,SAAS0wE,EAAE5tC,GAAG,aAAaA,EAAEn9B,YAAY,CAAC5O,EAAE,KAAK,SAAS25E,EAAE5tC,GAAG,aAAaA,EAAEhvC,QAAQD,MAAMC,SAAS,SAAS48E,GAAG,OAAOA,GAAG,iBAAiBA,EAAEh9E,SAAS,SAASg9E,EAAE5tC,GAAG,aAAsDA,EAAEh+B,WAA3C,SAAW4rE,GAAG,MAAM,mBAAmBA,IAAkB,SAASA,EAAE5tC,GAAG,IAAI/rC,EAAEA,EAAE,WAAW,OAAOmD,KAAlB,GAA0B,IAAInD,EAAEA,GAAGwkC,SAAS,cAATA,KAA2B,EAAGk1F,MAAM,QAAQ,MAAM//C,GAAG,iBAAiBrjE,SAAStW,EAAEsW,QAAQqjE,EAAEn9E,QAAQwD,GAAG,SAAS25E,EAAE5tC,EAAE/rC,GAAG,aAA6atC,OAAOC,eAAeouC,EAAE,aAAa,CAACntC,OAAM,IAAKmtC,EAAEvC,WAAnd,SAAWmwC,EAAE5tC,GAAG,IAAI/rC,EAAE,IAAIb,EAAE4G,QAAQ2rC,EAAEnlC,OAAO,IAAG,EAAG2uB,EAAEntB,YAAYg+B,GAAG/rC,EAAEiX,SAAS80B,MAAM,CAAC,IAAI1sC,GAAE,EAAG85H,EAAEQ,mBAAmB5tF,GAAG/rC,EAAEiX,UAAS,EAAGmiH,EAAEQ,eAAev6H,GAAGW,EAAEob,WAAW/b,EAAE+b,WAAWpb,EAAE8a,GAAG9a,EAAEob,WAAW,OAAOpb,EAAEoT,KAAI,SAASumE,GAAG,MAAM,iBAAiBA,EAAE,CAACl6E,KAAKk6E,GAAGA,KAAIjjE,eAAeijE,GAAE,SAASA,EAAE5tC,GAAG,OAAO/rC,EAAEiX,SAAS80B,EAAE4tC,MAAKjnE,QAAO,SAASinE,GAAG,YAAO,IAASA,KAAI1xE,UAAU0xE,GAAG35E,GAAgH+rC,EAAElC,UAAhH,SAAW8vC,IAAG,EAAGz+C,EAAEs+F,cAAc7/C,EAAE,YAAyF,IAAIx6E,EAAEa,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAI,IAAI0xC,EAAE1xC,EAAE,IAAIk7B,EAAEl7B,EAAE,GAAGm5H,EAAEn5H,EAAE,IAAIo5H,EAAEp5H,EAAE,KAAK,SAAS25E,EAAE5tC,GAAG,aAA0PruC,OAAOC,eAAeouC,EAAE,aAAa,CAACntC,OAAM,IAAKmtC,EAAE8tF,YAAhS,SAAS75H,EAAE25E,EAAE5tC,GAAG,YAAM,IAAoBA,EAAE,SAAS/rC,GAAG,IAAI,IAAIX,EAAE3B,OAAOqmB,OAAO,GAAG/jB,GAAGpD,EAAE0Q,UAAU3Q,OAAOwC,EAAErC,MAAMF,EAAE,EAAEA,EAAE,EAAE,GAAG80C,EAAE,EAAEA,EAAE90C,EAAE80C,IAAIvyC,EAAEuyC,EAAE,GAAGpkC,UAAUokC,GAAG,OAAOryC,EAAEs6E,GAAG5tC,EAAEl0B,WAAM,EAAO,CAAC7X,EAAE25E,IAAI3qE,OAAO7P,IAAIE,IAAI0sC,EAAE4tC,EAAE,SAASA,GAAG,OAAO35E,EAAE25E,EAAE5tC,OAAuE,SAAS4tC,EAAE5tC,EAAE/rC,GAAG,aAAqQtC,OAAOC,eAAeouC,EAAE,aAAa,CAACntC,OAAM,IAAKmtC,EAAE6tF,cAA3S,SAAWjgD,IAAG,EAAG/8E,EAAE28H,cAAc5/C,EAAE,0CAAyC,EAAG/8E,EAAE28H,eAAc,EAAG38H,EAAEmR,YAAY4rE,GAAG,+BAA+B,IAAI5tC,EAAE,SAASA,EAAE/rC,GAAG,IAAIX,EAAEs6E,EAAE35E,EAAEP,MAAM,OAAOJ,EAAEA,EAAEb,KAAKwB,EAAE+rC,EAAE/rC,QAAG,GAAQ,OAAO+rC,EAAE3wB,WAAWu+D,EAAEv+D,WAAW2wB,GAAqE,IAAInvC,EAAEoD,EAAE,IAAI,SAAS25E,EAAE5tC,EAAE/rC,GAAG,aAA6PtC,OAAOC,eAAeouC,EAAE,aAAa,CAACntC,OAAM,IAAKmtC,EAAE4tF,kBAAnS,SAAWhgD,GAAG,IAAI5tC,EAAEruC,OAAOqmB,OAAO,GAAG41D,GAAG35E,EAAE,SAAS25E,GAAG,OAAO5tC,EAAE4tC,IAAI5tC,EAAE,MAAM,OAAO/rC,EAAEob,WAAW,SAASu+D,EAAE35E,IAAG,EAAGpD,EAAE28H,cAAc5/C,EAAE,4BAA2B,EAAG/8E,EAAE28H,eAAc,EAAG38H,EAAEmR,YAAY/N,GAAG,kCAAkC+rC,EAAE4tC,GAAG35E,GAAGA,GAAyE,IAAIpD,EAAEoD,EAAE,IAAI,SAAS25E,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAE8D,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAWb,EAAE,SAASw6E,GAAG,SAAS5tC,EAAEA,EAAE/rC,EAAEX,GAAGs6E,EAAEn7E,KAAK2E,MAAMA,KAAKkD,OAAO0lC,EAAE5oC,KAAKmD,WAAWtG,EAAEmD,KAAKoD,WAAWlH,EAAE8D,KAAKtB,MAAM,EAAE,OAAOxC,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAUyI,MAAM,SAASmzE,GAAGx2E,KAAKkD,OAAOI,WAAWtD,KAAKmD,WAAWqzE,EAAEx2E,KAAKoD,WAAWpD,KAAKtB,QAAQsB,OAAO4oC,EAAEhuC,UAAU2I,OAAO,SAASizE,GAAGx2E,KAAKkD,OAAOM,YAAYgzE,EAAEx2E,MAAMA,KAAKyD,eAAemlC,EAAEhuC,UAAU8I,UAAU,WAAW1D,KAAKkD,OAAOS,eAAe3D,MAAMA,KAAKyD,eAAemlC,EAA5Y,CAAP/rC,EAAE,GAAsZ+G,YAAYglC,EAAE/kC,gBAAgB7H,GAAG,SAASw6E,EAAE5tC,GAAG,aAAaA,EAAErkC,MAAM,CAACxB,QAAO,EAAGzH,KAAK,SAASk7E,KAAKj0E,MAAM,SAASi0E,GAAG,MAAMA,GAAG7zE,SAAS,eAAe,SAAS6zE,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAE8D,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAWb,EAAE,SAASw6E,GAAG,SAAS5tC,IAAI4tC,EAAE9hE,MAAM1U,KAAKmK,WAAW,OAAOjO,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAU0I,WAAW,SAASkzE,EAAE5tC,EAAE/rC,EAAEX,EAAEzC,GAAGuG,KAAK6G,YAAYvL,KAAKstC,IAAIA,EAAEhuC,UAAU4I,YAAY,SAASgzE,EAAE5tC,GAAG5oC,KAAK6G,YAAYtE,MAAMi0E,IAAI5tC,EAAEhuC,UAAU+I,eAAe,SAAS6yE,GAAGx2E,KAAK6G,YAAYlE,YAAYimC,EAAzQ,CAAP/rC,EAAE,GAAmR+G,YAAYglC,EAAE9hC,gBAAgB9K,GAAG,SAASw6E,EAAE5tC,GAAG,aAAa,IAAI/rC,EAAE,WAAW,SAAS25E,EAAE5tC,EAAE/rC,QAAG,IAASA,IAAIA,EAAE25E,EAAEjvE,KAAKvH,KAAKsJ,gBAAgBs/B,EAAE5oC,KAAKuH,IAAI1K,EAAE,OAAO25E,EAAE57E,UAAU2O,SAAS,SAASitE,EAAE5tC,EAAE/rC,GAAG,YAAO,IAAS+rC,IAAIA,EAAE,GAAG,IAAI5oC,KAAKsJ,gBAAgBtJ,KAAKw2E,GAAGjtE,SAAS1M,EAAE+rC,IAAI4tC,EAAEjvE,IAAIoC,KAAKpC,IAAIoC,KAAKpC,IAAI,WAAW,OAAO,IAAIoC,MAAM6sE,EAA5P,GAAiQ5tC,EAAE3/B,UAAUpM,GAAG,SAAS25E,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAE8D,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAIpD,EAAEoD,EAAE,GAAGb,EAAEa,EAAE,GAAG0xC,EAAE1xC,EAAE,GAAGk7B,EAAEl7B,EAAE,IAAIm5H,EAAEn5H,EAAE,IAAIo5H,EAAEp5H,EAAE,GAAGy1B,EAAE,SAASkkD,GAAG,SAAS5tC,EAAEA,GAAG4tC,EAAEn7E,KAAK2E,KAAK4oC,GAAG5oC,KAAK6G,YAAY+hC,EAAE,OAAO1sC,EAAE0sC,EAAE4tC,GAAG5tC,EAA1E,CAA6E5sC,EAAE4H,YAAYglC,EAAEh/B,kBAAkB0oB,EAAE,IAAInC,EAAE,SAASqmD,GAAG,SAAS5tC,IAAI4tC,EAAEn7E,KAAK2E,MAAMA,KAAK4H,UAAU,GAAG5H,KAAK+C,QAAO,EAAG/C,KAAK2H,WAAU,EAAG3H,KAAKsC,UAAS,EAAGtC,KAAKwC,YAAY,KAAK,OAAOtG,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAUq7H,EAAE95F,gBAAgB,WAAW,OAAO,IAAI7J,EAAEtyB,OAAO4oC,EAAEhuC,UAAUoK,KAAK,SAASwxE,GAAG,IAAI5tC,EAAE,IAAIJ,EAAExoC,KAAKA,MAAM,OAAO4oC,EAAE3jC,SAASuxE,EAAE5tC,GAAGA,EAAEhuC,UAAUU,KAAK,SAASk7E,GAAG,GAAGx2E,KAAK+C,OAAO,MAAM,IAAIg1B,EAAE/0B,wBAAwB,IAAIhD,KAAK2H,UAAU,IAAI,IAAIihC,EAAE5oC,KAAK4H,UAAU/K,EAAE+rC,EAAEpvC,OAAO0C,EAAE0sC,EAAExsC,QAAQ3C,EAAE,EAAEA,EAAEoD,EAAEpD,IAAIyC,EAAEzC,GAAG6B,KAAKk7E,IAAI5tC,EAAEhuC,UAAU2H,MAAM,SAASi0E,GAAG,GAAGx2E,KAAK+C,OAAO,MAAM,IAAIg1B,EAAE/0B,wBAAwBhD,KAAKsC,UAAS,EAAGtC,KAAKwC,YAAYg0E,EAAEx2E,KAAK2H,WAAU,EAAG,IAAI,IAAIihC,EAAE5oC,KAAK4H,UAAU/K,EAAE+rC,EAAEpvC,OAAO0C,EAAE0sC,EAAExsC,QAAQ3C,EAAE,EAAEA,EAAEoD,EAAEpD,IAAIyC,EAAEzC,GAAG8I,MAAMi0E,GAAGx2E,KAAK4H,UAAUpO,OAAO,GAAGovC,EAAEhuC,UAAU+H,SAAS,WAAW,GAAG3C,KAAK+C,OAAO,MAAM,IAAIg1B,EAAE/0B,wBAAwBhD,KAAK2H,WAAU,EAAG,IAAI,IAAI6uE,EAAEx2E,KAAK4H,UAAUghC,EAAE4tC,EAAEh9E,OAAOqD,EAAE25E,EAAEp6E,QAAQF,EAAE,EAAEA,EAAE0sC,EAAE1sC,IAAIW,EAAEX,GAAGyG,WAAW3C,KAAK4H,UAAUpO,OAAO,GAAGovC,EAAEhuC,UAAU6I,YAAY,WAAWzD,KAAK2H,WAAU,EAAG3H,KAAK+C,QAAO,EAAG/C,KAAK4H,UAAU,MAAMghC,EAAEhuC,UAAUwH,WAAW,SAASo0E,GAAG,GAAGx2E,KAAK+C,OAAO,MAAM,IAAIg1B,EAAE/0B,wBAAwB,OAAOhD,KAAKsC,UAAUk0E,EAAEj0E,MAAMvC,KAAKwC,aAAa+rC,EAAE9rC,aAAaC,OAAO1C,KAAK2H,WAAW6uE,EAAE7zE,WAAW4rC,EAAE9rC,aAAaC,QAAQ1C,KAAK4H,UAAUpM,KAAKg7E,GAAG,IAAIw/C,EAAEnuH,oBAAoB7H,KAAKw2E,KAAK5tC,EAAEhuC,UAAUmP,aAAa,WAAW,IAAIysE,EAAE,IAAI/8E,EAAE4K,WAAW,OAAOmyE,EAAErxE,OAAOnF,KAAKw2E,GAAG5tC,EAAEniC,OAAO,SAAS+vE,EAAE5tC,GAAG,OAAO,IAAIJ,EAAEguC,EAAE5tC,IAAIA,EAAx1C,CAA21CnvC,EAAE4K,YAAYukC,EAAEhmC,QAAQutB,EAAE,IAAIqY,EAAE,SAASguC,GAAG,SAAS5tC,EAAEA,EAAE/rC,GAAG25E,EAAEn7E,KAAK2E,MAAMA,KAAK6G,YAAY+hC,EAAE5oC,KAAKmF,OAAOtI,EAAE,OAAOX,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAUU,KAAK,SAASk7E,GAAG,IAAI5tC,EAAE5oC,KAAK6G,YAAY+hC,GAAGA,EAAEttC,MAAMstC,EAAEttC,KAAKk7E,IAAI5tC,EAAEhuC,UAAU2H,MAAM,SAASi0E,GAAG,IAAI5tC,EAAE5oC,KAAK6G,YAAY+hC,GAAGA,EAAErmC,OAAOvC,KAAK6G,YAAYtE,MAAMi0E,IAAI5tC,EAAEhuC,UAAU+H,SAAS,WAAW,IAAI6zE,EAAEx2E,KAAK6G,YAAY2vE,GAAGA,EAAE7zE,UAAU3C,KAAK6G,YAAYlE,YAAYimC,EAAEhuC,UAAUwH,WAAW,SAASo0E,GAAqB,OAAZx2E,KAAKmF,OAAgBnF,KAAKmF,OAAOL,UAAU0xE,GAAGjoC,EAAE9rC,aAAaC,OAAOkmC,EAA9c,CAAidzY,GAAGyY,EAAExgC,iBAAiBogC,GAAG,SAASguC,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAE8D,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAWb,EAAE,SAASw6E,GAAG,SAAS5tC,EAAEA,EAAE/rC,GAAG25E,EAAEn7E,KAAK2E,MAAMA,KAAK6J,QAAQ++B,EAAE5oC,KAAKqC,WAAWxF,EAAEmD,KAAK+C,QAAO,EAAG,OAAO7G,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAU6I,YAAY,WAAW,IAAIzD,KAAK+C,OAAO,CAAC/C,KAAK+C,QAAO,EAAG,IAAIyzE,EAAEx2E,KAAK6J,QAAQ++B,EAAE4tC,EAAE5uE,UAAU,GAAG5H,KAAK6J,QAAQ,KAAK++B,GAAG,IAAIA,EAAEpvC,SAASg9E,EAAE7uE,YAAY6uE,EAAEzzE,OAAO,CAAC,IAAIlG,EAAE+rC,EAAE3+B,QAAQjK,KAAKqC,aAAiB,IAALxF,GAAQ+rC,EAAE5nC,OAAOnE,EAAE,MAAM+rC,EAApU,CAAP/rC,EAAE,GAA8U4F,cAAcmmC,EAAE/gC,oBAAoB7L,GAAG,SAASw6E,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAEW,EAAE,GAAGpD,EAAEoD,EAAE,IAAIX,EAAEmI,WAAWzJ,UAAU2U,OAAO9V,EAAE8V,QAAQ,SAASinE,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAEW,EAAE,GAAGpD,EAAEoD,EAAE,IAAIX,EAAEmI,WAAWzJ,UAAUqV,IAAIxW,EAAEwW,KAAK,SAASumE,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAEW,EAAE,GAAGpD,EAAEoD,EAAE,IAAIX,EAAEmI,WAAWzJ,UAAU2Y,eAAe9Z,EAAE8Z,gBAAgB,SAASijE,EAAE5tC,EAAE/rC,GAAG,aAA0D,IAAIpD,EAAEuG,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAIb,EAAEa,EAAE,GAAG+rC,EAAEr5B,OAAvP,SAAWinE,EAAE5tC,GAAG,OAAO5oC,KAAKgF,KAAK,IAAIupC,EAAEioC,EAAE5tC,KAAuN,IAAI2F,EAAE,WAAW,SAASioC,EAAEA,EAAE5tC,GAAG5oC,KAAKkjB,UAAUszD,EAAEx2E,KAAKwjB,QAAQolB,EAAE,OAAO4tC,EAAE57E,UAAUS,KAAK,SAASm7E,EAAE5tC,GAAG,OAAOA,EAAExmC,WAAW,IAAI21B,EAAEy+C,EAAEx2E,KAAKkjB,UAAUljB,KAAKwjB,WAAWgzD,EAA5J,GAAiKz+C,EAAE,SAASy+C,GAAG,SAAS5tC,EAAEA,EAAE/rC,EAAEX,GAAGs6E,EAAEn7E,KAAK2E,KAAK4oC,GAAG5oC,KAAKkjB,UAAUrmB,EAAEmD,KAAKwjB,QAAQtnB,EAAE8D,KAAKwO,MAAM,EAAExO,KAAKkjB,UAAUrmB,EAAE,OAAOpD,EAAEmvC,EAAE4tC,GAAG5tC,EAAEhuC,UAAUyI,MAAM,SAASmzE,GAAG,IAAI5tC,EAAE,IAAIA,EAAE5oC,KAAKkjB,UAAU7nB,KAAK2E,KAAKwjB,QAAQgzD,EAAEx2E,KAAKwO,SAAS,MAAMgoE,GAAG,YAAYx2E,KAAK6G,YAAYtE,MAAMi0E,GAAG5tC,GAAG5oC,KAAK6G,YAAYvL,KAAKk7E,IAAI5tC,EAAhS,CAAmS5sC,EAAE4H,aAAa,SAAS4yE,EAAE5tC,EAAE/rC,GAAG,aAAoK,IAAIpD,EAAEuG,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAIb,EAAEa,EAAE,GAAG+rC,EAAE34B,IAAjW,SAAWumE,EAAE5tC,GAAG,GAAG,mBAAmB4tC,EAAE,MAAM,IAAIz8E,UAAU,8DAA8D,OAAOiG,KAAKgF,KAAK,IAAIupC,EAAEioC,EAAE5tC,KAAoN,IAAI2F,EAAE,WAAW,SAASioC,EAAEA,EAAE5tC,GAAG5oC,KAAKic,QAAQu6D,EAAEx2E,KAAKwjB,QAAQolB,EAAE,OAAO4tC,EAAE57E,UAAUS,KAAK,SAASm7E,EAAE5tC,GAAG,OAAOA,EAAExmC,WAAW,IAAI21B,EAAEy+C,EAAEx2E,KAAKic,QAAQjc,KAAKwjB,WAAWgzD,EAAxJ,GAA6J5tC,EAAEta,YAAYigB,EAAE,IAAIxW,EAAE,SAASy+C,GAAG,SAAS5tC,EAAEA,EAAE/rC,EAAEX,GAAGs6E,EAAEn7E,KAAK2E,KAAK4oC,GAAG5oC,KAAKic,QAAQpf,EAAEmD,KAAKwO,MAAM,EAAExO,KAAKwjB,QAAQtnB,GAAG8D,KAAK,OAAOvG,EAAEmvC,EAAE4tC,GAAG5tC,EAAEhuC,UAAUyI,MAAM,SAASmzE,GAAG,IAAI5tC,EAAE,IAAIA,EAAE5oC,KAAKic,QAAQ5gB,KAAK2E,KAAKwjB,QAAQgzD,EAAEx2E,KAAKwO,SAAS,MAAMgoE,GAAG,YAAYx2E,KAAK6G,YAAYtE,MAAMi0E,GAAGx2E,KAAK6G,YAAYvL,KAAKstC,IAAIA,EAA9Q,CAAiR5sC,EAAE4H,aAAa,SAAS4yE,EAAE5tC,EAAE/rC,GAAG,aAA+K,IAAIpD,EAAEuG,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAIb,EAAEa,EAAE,IAAI0xC,EAAE1xC,EAAE,IAAI+rC,EAAEr1B,eAArX,WAAa,IAAI,IAAIijE,EAAE,GAAG5tC,EAAE,EAAEA,EAAEz+B,UAAU3Q,OAAOovC,IAAI4tC,EAAE5tC,EAAE,GAAGz+B,UAAUy+B,GAAG,IAAI/rC,EAAE,mBAAmB25E,EAAEA,EAAEh9E,OAAO,KAAKqD,EAAE25E,EAAEtiE,OAAO,IAAIhY,EAAEs6E,EAAE,OAAOx2E,KAAKgF,KAAK,IAAI+yB,EAAE77B,EAAEW,KAAwO,IAAIk7B,EAAE,WAAW,SAASy+C,EAAEA,EAAE5tC,GAAG5oC,KAAKkc,YAAYs6D,EAAEx2E,KAAKic,QAAQ2sB,EAAE,OAAO4tC,EAAE57E,UAAUS,KAAK,SAASm7E,EAAE5tC,GAAG,OAAOA,EAAExmC,WAAW,IAAI4zH,EAAEx/C,EAAEx2E,KAAKkc,YAAYlc,KAAKic,WAAWu6D,EAAhK,GAAqKw/C,EAAE,SAASx/C,GAAG,SAAS5tC,EAAEA,EAAE/rC,EAAEX,GAAGs6E,EAAEn7E,KAAK2E,KAAK4oC,GAAG5oC,KAAKkc,YAAYrf,EAAEmD,KAAKic,QAAQ/f,EAAE8D,KAAK+nB,UAAU,GAAG,IAAItuB,EAAEoD,EAAErD,OAAOwG,KAAKvC,OAAO,IAAI9D,MAAMF,GAAG,IAAI,IAAIuC,EAAE,EAAEA,EAAEvC,EAAEuC,IAAIgE,KAAK+nB,UAAUvsB,KAAKQ,GAAG,IAAQA,EAAE,EAAEA,EAAEvC,EAAEuC,IAAI,CAAC,IAAI+7B,EAAEl7B,EAAEb,GAAGgE,KAAKuF,IAAIgpC,EAAEj4B,kBAAkBtW,KAAK+3B,EAAEA,EAAE/7B,KAAK,OAAOvC,EAAEmvC,EAAE4tC,GAAG5tC,EAAEhuC,UAAU0I,WAAW,SAASkzE,EAAE5tC,EAAE/rC,EAAEX,EAAEzC,GAAGuG,KAAKvC,OAAOZ,GAAG+rC,EAAE,IAAI5sC,EAAEgE,KAAK+nB,UAAU,GAAG/rB,EAAExC,OAAO,EAAE,CAAC,IAAI+0C,EAAEvyC,EAAEiO,QAAQpN,IAAQ,IAAL0xC,GAAQvyC,EAAEgF,OAAOutC,EAAE,KAAK3F,EAAEhuC,UAAU+I,eAAe,aAAailC,EAAEhuC,UAAUyI,MAAM,SAASmzE,GAAG,GAAG,IAAIx2E,KAAK+nB,UAAUvuB,OAAO,CAAC,IAAIovC,EAAE,CAAC4tC,GAAG3qE,OAAO7L,KAAKvC,QAAQuC,KAAKic,QAAQjc,KAAKkoB,YAAY0gB,GAAG5oC,KAAK6G,YAAYvL,KAAKstC,KAAKA,EAAEhuC,UAAUstB,YAAY,SAASsuD,GAAG,IAAI5tC,EAAE,IAAIA,EAAE5oC,KAAKic,QAAQvH,MAAM1U,KAAKw2E,GAAG,MAAMA,GAAG,YAAYx2E,KAAK6G,YAAYtE,MAAMi0E,GAAGx2E,KAAK6G,YAAYvL,KAAKstC,IAAIA,EAA1uB,CAA6uB5sC,EAAE8K,kBAAkB,SAAS0vE,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAE8D,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAWb,EAAE,SAASw6E,GAAG,SAAS5tC,EAAEA,EAAE/rC,GAAG25E,EAAEn7E,KAAK2E,MAAM,OAAO9D,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAU2O,SAAS,SAASitE,EAAE5tC,GAAG,YAAO,IAASA,IAAIA,EAAE,GAAG5oC,MAAM4oC,EAAzH,CAAP/rC,EAAE,GAAmI4F,cAAcmmC,EAAE/O,OAAO79B,GAAG,SAASw6E,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAE8D,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAIpD,EAAEoD,EAAE,GAAW0xC,EAAE,SAASioC,GAAG,SAAS5tC,EAAEA,EAAE/rC,GAAG25E,EAAEn7E,KAAK2E,KAAK4oC,EAAE/rC,GAAGmD,KAAKiH,UAAU2hC,EAAE5oC,KAAKwJ,KAAK3M,EAAEmD,KAAKi7B,SAAQ,EAAG,OAAO/+B,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAU2O,SAAS,SAASitE,EAAE5tC,GAAG,QAAG,IAASA,IAAIA,EAAE,GAAG5oC,KAAK+C,OAAO,OAAO/C,KAAKA,KAAK0J,MAAM8sE,EAAEx2E,KAAKi7B,SAAQ,EAAG,IAAIp+B,EAAEmD,KAAK+5B,GAAG79B,EAAE8D,KAAKiH,UAAU,OAAO,MAAMpK,IAAImD,KAAK+5B,GAAG/5B,KAAKq6B,eAAen+B,EAAEW,EAAE+rC,IAAI5oC,KAAKyJ,MAAMm/B,EAAE5oC,KAAK+5B,GAAG/5B,KAAK+5B,IAAI/5B,KAAK85B,eAAe59B,EAAE8D,KAAK+5B,GAAG6O,GAAG5oC,MAAM4oC,EAAEhuC,UAAUk/B,eAAe,SAAS08C,EAAE5tC,EAAE/rC,GAAG,YAAO,IAASA,IAAIA,EAAE,GAAGpD,EAAEqM,KAAKo1B,YAAYs7C,EAAEp8C,MAAMvvB,KAAK2rE,EAAEx2E,MAAMnD,IAAI+rC,EAAEhuC,UAAUy/B,eAAe,SAASm8C,EAAE5tC,EAAE/rC,GAAG,YAAO,IAASA,IAAIA,EAAE,GAAG,OAAOA,GAAGmD,KAAKyJ,QAAQ5M,EAAE+rC,OAAEnvC,EAAEqM,KAAKq1B,cAAcyN,IAAoBA,EAAEhuC,UAAU6/B,QAAQ,SAAS+7C,EAAE5tC,GAAG,OAAG5oC,KAAK+C,OAAc,IAAIvC,MAAM,iCAAgCR,KAAKi7B,SAAQ,EAASj7B,KAAKo7B,SAASo7C,EAAE5tC,UAAkC,IAAf5oC,KAAKi7B,SAAc,MAAMj7B,KAAK+5B,KAAK/5B,KAAK+5B,GAAG/5B,KAAKq6B,eAAer6B,KAAKiH,UAAUjH,KAAK+5B,GAAG,UAAS6O,EAAEhuC,UAAUwgC,SAAS,SAASo7C,EAAE5tC,GAAG,IAAI/rC,GAAE,EAAGX,OAAE,EAAO,IAAI8D,KAAKwJ,KAAKgtE,GAAG,MAAMA,GAAG35E,GAAE,EAAGX,IAAIs6E,GAAGA,GAAG,IAAIh2E,MAAMg2E,GAAG,GAAG35E,EAAE,OAAOmD,KAAKyD,cAAcvH,GAAG0sC,EAAEhuC,UAAUuQ,aAAa,WAAW,IAAIqrE,EAAEx2E,KAAK+5B,GAAG6O,EAAE5oC,KAAKiH,UAAUpK,EAAE+rC,EAAE5O,QAAQ99B,EAAEW,EAAEoN,QAAQjK,MAAMA,KAAKwJ,KAAK,KAAKxJ,KAAKyJ,MAAM,KAAKzJ,KAAK0J,MAAM,KAAK1J,KAAKi7B,SAAQ,EAAGj7B,KAAKiH,UAAU,MAAU,IAAL/K,GAAQW,EAAEmE,OAAO9E,EAAE,GAAG,MAAMs6E,IAAIx2E,KAAK+5B,GAAG/5B,KAAKq6B,eAAeuO,EAAE4tC,EAAE,QAAQ5tC,EAAzuC,CAAR/rC,EAAE,IAAovCg9B,QAAQ+O,EAAErO,YAAYgU,GAAG,SAASioC,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAE8D,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAYb,EAAE,SAASw6E,GAAG,SAAS5tC,IAAI4tC,EAAE9hE,MAAM1U,KAAKmK,WAAWnK,KAAKg6B,QAAQ,GAAGh6B,KAAK8nB,QAAO,EAAG9nB,KAAKi6B,eAAU,EAAO,OAAO/9B,EAAE0sC,EAAE4tC,GAAG5tC,EAAEhuC,UAAUw/B,MAAM,SAASo8C,GAAG,IAAI5tC,EAAE5oC,KAAKg6B,QAAQ,GAAGh6B,KAAK8nB,OAAmB8gB,EAAEptC,KAAKg7E,OAAlC,CAAqC,IAAI35E,EAAEmD,KAAK8nB,QAAO,EAAG,MAAMjrB,EAAE25E,EAAE/7C,QAAQ+7C,EAAE9sE,MAAM8sE,EAAE/sE,OAAO,YAAY+sE,EAAE5tC,EAAE3zB,SAAS,GAAGjV,KAAK8nB,QAAO,EAAGjrB,EAAE,CAAC,KAAK25E,EAAE5tC,EAAE3zB,SAASuhE,EAAE/yE,cAAc,MAAM5G,KAAI+rC,EAA5V,CAAR/rC,EAAE,IAAuWoM,WAAW2/B,EAAElO,eAAe1+B,GAAG,SAASw6E,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAEW,EAAE,IAAIpD,EAAEoD,EAAE,IAAI+rC,EAAEx/B,MAAM,IAAI3P,EAAEihC,eAAex+B,EAAEq+B,cAAc,SAASi8C,EAAE5tC,EAAE/rC,GAAG,aAAa,IAAIX,EAAEW,EAAE,GAAGpD,EAAEyC,EAAE4J,KAAKhL,OAAO,GAAG,mBAAmBrB,EAAEA,EAAEsB,SAAS6tC,EAAE5M,WAAWviC,EAAEsB,SAAS,mBAAmBtB,EAAE68H,MAAM1tF,EAAE5M,WAAWviC,EAAE68H,IAAI,kBAAkB,GAAGp6H,EAAE4J,KAAK8kB,KAAK,mBAAkB,IAAK1uB,EAAE4J,KAAK8kB,KAAK,cAAcge,EAAE5M,WAAW,kBAAkB,GAAG9/B,EAAE4J,KAAKynB,IAAI,IAAI,IAAIvxB,EAAEzB,OAAOuhC,oBAAoB5/B,EAAE4J,KAAKynB,IAAI3yB,WAAW2zC,EAAE,EAAEA,EAAEvyC,EAAExC,SAAS+0C,EAAE,CAAC,IAAIxW,EAAE/7B,EAAEuyC,GAAG,GAAG,YAAYxW,GAAG,SAASA,GAAG77B,EAAE4J,KAAKynB,IAAI3yB,UAAUm9B,KAAK77B,EAAE4J,KAAKynB,IAAI3yB,UAAU8+C,QAAQ,CAAC9Q,EAAE5M,WAAWjE,EAAE,YAAY6Q,EAAE5M,WAAW,cAAc,SAASw6C,EAAE5tC,GAAG,aAAa,IAAI/rC,EAAEmD,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAIX,EAAE,SAASs6E,GAAG,SAAS5tC,IAAI,IAAIA,EAAE4tC,EAAEn7E,KAAK2E,KAAK,uBAAuBA,KAAK1D,KAAKssC,EAAEtsC,KAAK,0BAA0B0D,KAAK6/B,MAAM+I,EAAE/I,MAAM7/B,KAAKqgB,QAAQuoB,EAAEvoB,QAAQ,OAAOxjB,EAAE+rC,EAAE4tC,GAAG5tC,EAArK,CAAwKpoC,OAAOooC,EAAE5lC,wBAAwB9G,GAAG,SAASs6E,EAAE5tC,GAAG,aAAa,IAAI/rC,EAAEmD,MAAMA,KAAK+1H,WAAW,SAASv/C,EAAE5tC,GAAG,SAAS/rC,IAAImD,KAAK3D,YAAYm6E,EAAE,IAAI,IAAIt6E,KAAK0sC,EAAEA,EAAE9qB,eAAe5hB,KAAKs6E,EAAEt6E,GAAG0sC,EAAE1sC,IAAIs6E,EAAE57E,UAAU,OAAOguC,EAAEruC,OAAOkM,OAAOmiC,IAAI/rC,EAAEjC,UAAUguC,EAAEhuC,UAAU,IAAIiC,IAAIX,EAAE,SAASs6E,GAAG,SAAS5tC,EAAEA,GAAG4tC,EAAEn7E,KAAK2E,MAAMA,KAAKqL,OAAOu9B,EAAE,IAAI/rC,EAAE2D,MAAMnF,KAAK2E,KAAK4oC,EAAEA,EAAEpvC,OAAO,8CAA8CovC,EAAE34B,KAAI,SAASumE,EAAE5tC,GAAG,OAAOA,EAAE,EAAE,KAAK4tC,EAAEr6E,cAAagjB,KAAK,QAAQ,IAAInf,KAAK1D,KAAKO,EAAEP,KAAK,sBAAsB0D,KAAK6/B,MAAMhjC,EAAEgjC,MAAM7/B,KAAKqgB,QAAQxjB,EAAEwjB,QAAQ,OAAOxjB,EAAE+rC,EAAE4tC,GAAG5tC,EAAvS,CAA0SpoC,OAAOooC,EAAEngC,oBAAoBvM,GAAG,SAASs6E,EAAE5tC,GAAG,aAA8DA,EAAEh9B,SAAnD,SAAW4qE,GAAG,OAAO,MAAMA,GAAG,iBAAiBA,IAAgB,SAASA,EAAE5tC,GAAG,aAA+FA,EAAElwB,UAApF,SAAW89D,GAAG,OAAOA,GAAG,mBAAmBA,EAAE1xE,WAAW,mBAAmB0xE,EAAEv7D,OAAoB,SAASu7D,EAAE5tC,EAAE/rC,GAAG,aAA62B,IAAIpD,EAAEoD,EAAE,GAAGb,EAAEa,EAAE,GAAG0xC,EAAE1xC,EAAE,IAAIk7B,EAAEl7B,EAAE,GAAGm5H,EAAEn5H,EAAE,IAAIo5H,EAAEp5H,EAAE,IAAIy1B,EAAEz1B,EAAE,GAAG+rC,EAAEtyB,kBAA15B,SAAWkgE,EAAE5tC,EAAE/rC,EAAEX,GAAG,IAAIi0B,EAAE,IAAI8lG,EAAEpyH,gBAAgB2yE,EAAE35E,EAAEX,GAAG,GAAGi0B,EAAEptB,OAAO,OAAO,KAAK,GAAG6lC,aAAa7Q,EAAE1zB,WAAW,OAAOukC,EAAE7jC,WAAWorB,EAAE70B,KAAKstC,EAAEntC,OAAO00B,EAAExtB,WAAW,MAAMimC,EAAE9jC,UAAUqrB,GAAG,GAAGn0B,EAAEpC,QAAQgvC,GAAG,CAAC,IAAI,IAAIJ,EAAE,EAAE8tC,EAAE1tC,EAAEpvC,OAAOgvC,EAAE8tC,IAAInmD,EAAEptB,OAAOylC,IAAIrY,EAAE70B,KAAKstC,EAAEJ,IAAIrY,EAAEptB,QAAQotB,EAAExtB,eAAe,CAAC,GAAG4rC,EAAE71B,UAAUkwB,GAAG,OAAOA,EAAE3tB,MAAK,SAASu7D,GAAGrmD,EAAEptB,SAASotB,EAAE70B,KAAKk7E,GAAGrmD,EAAExtB,eAAa,SAAS6zE,GAAG,OAAOrmD,EAAE5tB,MAAMi0E,MAAKv7D,KAAK,MAAK,SAASu7D,GAAG/8E,EAAEqM,KAAKoV,YAAW,WAAW,MAAMs7D,QAAMrmD,EAAE,GAAG,mBAAmByY,EAAEotF,EAAEh6F,YAAY,IAAI,IAAIzJ,EAAEqW,EAAEotF,EAAEh6F,gBAAgB,CAAC,IAAI80C,EAAEv+C,EAAEj3B,OAAO,GAAGw1E,EAAEv1E,KAAK,CAAC40B,EAAExtB,WAAW,MAAM,GAAGwtB,EAAE70B,KAAKw1E,EAAEr1E,OAAO00B,EAAEptB,OAAO,WAAW,GAAG,mBAAmB6lC,EAAEtW,EAAE2J,cAAc,CAAC,IAAI7Q,EAAEwd,EAAEtW,EAAE2J,gBAAgB,GAAG,mBAAmB7Q,EAAEtmB,UAAU,OAAOsmB,EAAEtmB,UAAU,IAAImxH,EAAEpyH,gBAAgB2yE,EAAE35E,EAAEX,IAAIi0B,EAAE5tB,MAAM,IAAI/B,MAAM,4BAA4B2vB,EAAE5tB,MAAM,IAAIxI,UAAU,0BAA0B,OAAO,OAAoF,SAASy8E,EAAE5tC,EAAE/rC,GAAG,aAAuL,IAAIpD,EAAEoD,EAAE,GAAGb,EAAEa,EAAE,GAAG+rC,EAAEtjC,aAA9L,SAAWkxE,EAAE5tC,EAAE/rC,GAAG,GAAG25E,EAAE,CAAC,GAAGA,aAAa/8E,EAAEmK,WAAW,OAAO4yE,EAAE,GAAGA,EAAEx6E,EAAEmgC,gBAAgB,OAAOq6C,EAAEx6E,EAAEmgC,kBAAkB,OAAOq6C,GAAG5tC,GAAG/rC,EAAE,IAAIpD,EAAEmK,WAAW4yE,EAAE5tC,EAAE/rC,GAAG,IAAIpD,EAAEmK,aAA+C,SAAS4yE,EAAE5tC,EAAE/rC,GAAG,aAAa,SAASX,IAAI,IAAI,OAAOF,EAAE0Y,MAAM1U,KAAKmK,WAAW,MAAMqsE,GAAG,OAAOjoC,EAAE9iC,YAAY5O,EAAE25E,EAAEjoC,EAAE9iC,aAAwC,IAAIzP,EAAEuyC,EAAE1xC,EAAE,GAAG+rC,EAAEp9B,SAA1C,SAAWgrE,GAAG,OAAOx6E,EAAEw6E,EAAEt6E,IAA6B,SAASs6E,EAAE5tC,EAAE/rC,GAAG,aAAatC,OAAOC,eAAeouC,EAAE,aAAa,CAACntC,OAAM,IAAK,IAAIS,EAAEW,EAAE,IAAIpD,EAAEoD,EAAE,IAAI+rC,EAAEktF,QAAQ,CAACzvF,WAAWnqC,EAAEmqC,WAAWK,UAAUxqC,EAAEwqC,UAAUgwF,YAAYj9H,EAAEi9H,aAAalgD,EAAEn9E,QAAQuvC,EAAEktF,Y,UCO3hsB,IAAIa,EAAW,SAAUt9H,GACvB,aAEA,IAEIuF,EAFAg4H,EAAKr8H,OAAOK,UACZi8H,EAASD,EAAG94G,eAEZ2kG,EAA4B,mBAAX3nH,OAAwBA,OAAS,GAClDg8H,EAAiBrU,EAAQ1nH,UAAY,aACrCg8H,EAAsBtU,EAAQuU,eAAiB,kBAC/CC,EAAoBxU,EAAQyU,aAAe,gBAE/C,SAASlI,EAAOl2H,EAAK2B,EAAKgB,GAOxB,OANAlB,OAAOC,eAAe1B,EAAK2B,EAAK,CAC9BgB,MAAOA,EACPrB,YAAY,EACZC,cAAc,EACdC,UAAU,IAELxB,EAAI2B,GAEb,IAEEu0H,EAAO,GAAI,IACX,MAAOtzH,GACPszH,EAAS,SAASl2H,EAAK2B,EAAKgB,GAC1B,OAAO3C,EAAI2B,GAAOgB,GAItB,SAASq1H,EAAKqG,EAASC,EAASxiH,EAAMyiH,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQx8H,qBAAqB28H,EAAYH,EAAUG,EAC/EpmD,EAAY52E,OAAOkM,OAAO6wH,EAAe18H,WACzC+P,EAAU,IAAIkc,EAAQwwG,GAAe,IAMzC,OAFAlmD,EAAUqmD,QAsMZ,SAA0BL,EAASviH,EAAMjK,GACvC,IAAIjB,EAAQ+tH,EAEZ,OAAO,SAAgB/6G,EAAQ3H,GAC7B,GAAIrL,IAAUguH,EACZ,MAAM,IAAIl3H,MAAM,gCAGlB,GAAIkJ,IAAUiuH,EAAmB,CAC/B,GAAe,UAAXj7G,EACF,MAAM3H,EAKR,OAAO6iH,IAMT,IAHAjtH,EAAQ+R,OAASA,EACjB/R,EAAQoK,IAAMA,IAED,CACX,IAAI8iH,EAAWltH,EAAQktH,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUltH,GACnD,GAAImtH,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBntH,EAAQ+R,OAGV/R,EAAQstH,KAAOttH,EAAQutH,MAAQvtH,EAAQoK,SAElC,GAAuB,UAAnBpK,EAAQ+R,OAAoB,CACrC,GAAIhT,IAAU+tH,EAEZ,MADA/tH,EAAQiuH,EACFhtH,EAAQoK,IAGhBpK,EAAQwtH,kBAAkBxtH,EAAQoK,SAEN,WAAnBpK,EAAQ+R,QACjB/R,EAAQytH,OAAO,SAAUztH,EAAQoK,KAGnCrL,EAAQguH,EAER,IAAIW,EAAS7sH,EAAS2rH,EAASviH,EAAMjK,GACrC,GAAoB,WAAhB0tH,EAAOj7H,KAAmB,CAO5B,GAJAsM,EAAQiB,EAAQpP,KACZo8H,EACAW,EAEAD,EAAOtjH,MAAQijH,EACjB,SAGF,MAAO,CACLv8H,MAAO48H,EAAOtjH,IACdxZ,KAAMoP,EAAQpP,MAGS,UAAhB88H,EAAOj7H,OAChBsM,EAAQiuH,EAGRhtH,EAAQ+R,OAAS,QACjB/R,EAAQoK,IAAMsjH,EAAOtjH,OA9QPwjH,CAAiBpB,EAASviH,EAAMjK,GAE7CwmE,EAcT,SAAS3lE,EAASN,EAAIpS,EAAKic,GACzB,IACE,MAAO,CAAE3X,KAAM,SAAU2X,IAAK7J,EAAG7P,KAAKvC,EAAKic,IAC3C,MAAOrZ,GACP,MAAO,CAAE0B,KAAM,QAAS2X,IAAKrZ,IAhBjCrC,EAAQy3H,KAAOA,EAoBf,IAAI2G,EAAyB,iBACzBa,EAAyB,iBACzBZ,EAAoB,YACpBC,EAAoB,YAIpBK,EAAmB,GAMvB,SAAST,KACT,SAASiB,KACT,SAASC,KAIT,IAAI5nB,EAAoB,GACxBA,EAAkBimB,GAAkB,WAClC,OAAO92H,MAGT,IAAIwrH,EAAWjxH,OAAOqnD,eAClB82E,EAA0BlN,GAAYA,EAASA,EAAS/tH,EAAO,MAC/Di7H,GACAA,IAA4B9B,GAC5BC,EAAOx7H,KAAKq9H,EAAyB5B,KAGvCjmB,EAAoB6nB,GAGtB,IAAIC,EAAKF,EAA2B79H,UAClC28H,EAAU38H,UAAYL,OAAOkM,OAAOoqG,GAWtC,SAAS+nB,EAAsBh+H,GAC7B,CAAC,OAAQ,QAAS,UAAUgL,SAAQ,SAAS8W,GAC3CsyG,EAAOp0H,EAAW8hB,GAAQ,SAAS3H,GACjC,OAAO/U,KAAKw3H,QAAQ96G,EAAQ3H,SAkClC,SAAS8jH,EAAc1nD,EAAW2nD,GAChC,SAASxrC,EAAO5wE,EAAQ3H,EAAK7O,EAASC,GACpC,IAAIkyH,EAAS7sH,EAAS2lE,EAAUz0D,GAASy0D,EAAWp8D,GACpD,GAAoB,UAAhBsjH,EAAOj7H,KAEJ,CACL,IAAIiZ,EAASgiH,EAAOtjH,IAChBtZ,EAAQ4a,EAAO5a,MACnB,OAAIA,GACiB,iBAAVA,GACPo7H,EAAOx7H,KAAKI,EAAO,WACdq9H,EAAY5yH,QAAQzK,EAAMs9H,SAAS99G,MAAK,SAASxf,GACtD6xF,EAAO,OAAQ7xF,EAAOyK,EAASC,MAC9B,SAASzK,GACV4xF,EAAO,QAAS5xF,EAAKwK,EAASC,MAI3B2yH,EAAY5yH,QAAQzK,GAAOwf,MAAK,SAAS+9G,GAI9C3iH,EAAO5a,MAAQu9H,EACf9yH,EAAQmQ,MACP,SAAS9T,GAGV,OAAO+qF,EAAO,QAAS/qF,EAAO2D,EAASC,MAvBzCA,EAAOkyH,EAAOtjH,KA4BlB,IAAIkkH,EAgCJj5H,KAAKw3H,QA9BL,SAAiB96G,EAAQ3H,GACvB,SAASmkH,IACP,OAAO,IAAIJ,GAAY,SAAS5yH,EAASC,GACvCmnF,EAAO5wE,EAAQ3H,EAAK7O,EAASC,MAIjC,OAAO8yH,EAaLA,EAAkBA,EAAgBh+G,KAChCi+G,EAGAA,GACEA,KAkHV,SAASnB,EAAoBF,EAAUltH,GACrC,IAAI+R,EAASm7G,EAAS98H,SAAS4P,EAAQ+R,QACvC,GAAIA,IAAW9d,EAAW,CAKxB,GAFA+L,EAAQktH,SAAW,KAEI,UAAnBltH,EAAQ+R,OAAoB,CAE9B,GAAIm7G,EAAS98H,SAAiB,SAG5B4P,EAAQ+R,OAAS,SACjB/R,EAAQoK,IAAMnW,EACdm5H,EAAoBF,EAAUltH,GAEP,UAAnBA,EAAQ+R,QAGV,OAAOs7G,EAIXrtH,EAAQ+R,OAAS,QACjB/R,EAAQoK,IAAM,IAAIhb,UAChB,kDAGJ,OAAOi+H,EAGT,IAAIK,EAAS7sH,EAASkR,EAAQm7G,EAAS98H,SAAU4P,EAAQoK,KAEzD,GAAoB,UAAhBsjH,EAAOj7H,KAIT,OAHAuN,EAAQ+R,OAAS,QACjB/R,EAAQoK,IAAMsjH,EAAOtjH,IACrBpK,EAAQktH,SAAW,KACZG,EAGT,IAAImB,EAAOd,EAAOtjH,IAElB,OAAMokH,EAOFA,EAAK59H,MAGPoP,EAAQktH,EAASuB,YAAcD,EAAK19H,MAGpCkP,EAAQrP,KAAOu8H,EAASwB,QAQD,WAAnB1uH,EAAQ+R,SACV/R,EAAQ+R,OAAS,OACjB/R,EAAQoK,IAAMnW,GAUlB+L,EAAQktH,SAAW,KACZG,GANEmB,GA3BPxuH,EAAQ+R,OAAS,QACjB/R,EAAQoK,IAAM,IAAIhb,UAAU,oCAC5B4Q,EAAQktH,SAAW,KACZG,GAoDX,SAASsB,EAAaC,GACpB,IAAIrvB,EAAQ,CAAEsvB,OAAQD,EAAK,IAEvB,KAAKA,IACPrvB,EAAMuvB,SAAWF,EAAK,IAGpB,KAAKA,IACPrvB,EAAMwvB,WAAaH,EAAK,GACxBrvB,EAAMyvB,SAAWJ,EAAK,IAGxBv5H,KAAK45H,WAAWp+H,KAAK0uG,GAGvB,SAAS2vB,EAAc3vB,GACrB,IAAImuB,EAASnuB,EAAM4vB,YAAc,GACjCzB,EAAOj7H,KAAO,gBACPi7H,EAAOtjH,IACdm1F,EAAM4vB,WAAazB,EAGrB,SAASxxG,EAAQwwG,GAIfr3H,KAAK45H,WAAa,CAAC,CAAEJ,OAAQ,SAC7BnC,EAAYzxH,QAAQ0zH,EAAct5H,MAClCA,KAAK+5H,OAAM,GA8Bb,SAASt8H,EAAO+sG,GACd,GAAIA,EAAU,CACZ,IAAIwvB,EAAiBxvB,EAASssB,GAC9B,GAAIkD,EACF,OAAOA,EAAe3+H,KAAKmvG,GAG7B,GAA6B,mBAAlBA,EAASlvG,KAClB,OAAOkvG,EAGT,IAAKnwF,MAAMmwF,EAAShxG,QAAS,CAC3B,IAAIC,GAAK,EAAG6B,EAAO,SAASA,IAC1B,OAAS7B,EAAI+wG,EAAShxG,QACpB,GAAIq9H,EAAOx7H,KAAKmvG,EAAU/wG,GAGxB,OAFA6B,EAAKG,MAAQ+uG,EAAS/wG,GACtB6B,EAAKC,MAAO,EACLD,EAOX,OAHAA,EAAKG,MAAQmD,EACbtD,EAAKC,MAAO,EAELD,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMs8H,GAIjB,SAASA,IACP,MAAO,CAAEn8H,MAAOmD,EAAWrD,MAAM,GA+MnC,OA5mBAi9H,EAAkB59H,UAAY+9H,EAAGt8H,YAAco8H,EAC/CA,EAA2Bp8H,YAAcm8H,EACzCA,EAAkByB,YAAcjL,EAC9ByJ,EACAxB,EACA,qBAaF59H,EAAQ6gI,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAO99H,YAClD,QAAO+9H,IACHA,IAAS5B,GAG2B,uBAAnC4B,EAAKH,aAAeG,EAAK99H,QAIhCjD,EAAQghI,KAAO,SAASF,GAQtB,OAPI5/H,OAAOi2G,eACTj2G,OAAOi2G,eAAe2pB,EAAQ1B,IAE9B0B,EAAO5iB,UAAYkhB,EACnBzJ,EAAOmL,EAAQlD,EAAmB,sBAEpCkD,EAAOv/H,UAAYL,OAAOkM,OAAOkyH,GAC1BwB,GAOT9gI,EAAQihI,MAAQ,SAASvlH,GACvB,MAAO,CAAEgkH,QAAShkH,IAsEpB6jH,EAAsBC,EAAcj+H,WACpCi+H,EAAcj+H,UAAUm8H,GAAuB,WAC7C,OAAO/2H,MAET3G,EAAQw/H,cAAgBA,EAKxBx/H,EAAQ+P,MAAQ,SAAS+tH,EAASC,EAASxiH,EAAMyiH,EAAayB,QACxC,IAAhBA,IAAwBA,EAAc7yH,SAE1C,IAAIwmG,EAAO,IAAIosB,EACb/H,EAAKqG,EAASC,EAASxiH,EAAMyiH,GAC7ByB,GAGF,OAAOz/H,EAAQ6gI,oBAAoB9C,GAC/B3qB,EACAA,EAAKnxG,OAAO2f,MAAK,SAAS5E,GACxB,OAAOA,EAAO9a,KAAO8a,EAAO5a,MAAQgxG,EAAKnxG,WAuKjDs9H,EAAsBD,GAEtB3J,EAAO2J,EAAI1B,EAAmB,aAO9B0B,EAAG7B,GAAkB,WACnB,OAAO92H,MAGT24H,EAAGx8H,SAAW,WACZ,MAAO,sBAkCT9C,EAAQyhB,KAAO,SAAS0mC,GACtB,IAAI1mC,EAAO,GACX,IAAK,IAAIrgB,KAAO+mD,EACd1mC,EAAKtf,KAAKf,GAMZ,OAJAqgB,EAAKs8D,UAIE,SAAS97E,IACd,KAAOwf,EAAKthB,QAAQ,CAClB,IAAIiB,EAAMqgB,EAAK5G,MACf,GAAIzZ,KAAO+mD,EAGT,OAFAlmD,EAAKG,MAAQhB,EACba,EAAKC,MAAO,EACLD,EAQX,OADAA,EAAKC,MAAO,EACLD,IAsCXjC,EAAQoE,OAASA,EAMjBopB,EAAQjsB,UAAY,CAClByB,YAAawqB,EAEbkzG,MAAO,SAASQ,GAcd,GAbAv6H,KAAK+vB,KAAO,EACZ/vB,KAAK1E,KAAO,EAGZ0E,KAAKi4H,KAAOj4H,KAAKk4H,MAAQt5H,EACzBoB,KAAKzE,MAAO,EACZyE,KAAK63H,SAAW,KAEhB73H,KAAK0c,OAAS,OACd1c,KAAK+U,IAAMnW,EAEXoB,KAAK45H,WAAWh0H,QAAQi0H,IAEnBU,EACH,IAAK,IAAIj+H,KAAQ0D,KAEQ,MAAnB1D,EAAK8d,OAAO,IACZy8G,EAAOx7H,KAAK2E,KAAM1D,KACjB+d,OAAO/d,EAAKF,MAAM,MACrB4D,KAAK1D,GAAQsC,IAMrBw5C,KAAM,WACJp4C,KAAKzE,MAAO,EAEZ,IACIi/H,EADYx6H,KAAK45H,WAAW,GACLE,WAC3B,GAAwB,UAApBU,EAAWp9H,KACb,MAAMo9H,EAAWzlH,IAGnB,OAAO/U,KAAKy6H,MAGdtC,kBAAmB,SAASuC,GAC1B,GAAI16H,KAAKzE,KACP,MAAMm/H,EAGR,IAAI/vH,EAAU3K,KACd,SAAS2gC,EAAOg6F,EAAKlzG,GAYnB,OAXA4wG,EAAOj7H,KAAO,QACdi7H,EAAOtjH,IAAM2lH,EACb/vH,EAAQrP,KAAOq/H,EAEXlzG,IAGF9c,EAAQ+R,OAAS,OACjB/R,EAAQoK,IAAMnW,KAGN6oB,EAGZ,IAAK,IAAIhuB,EAAIuG,KAAK45H,WAAWpgI,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIywG,EAAQlqG,KAAK45H,WAAWngI,GACxB4+H,EAASnuB,EAAM4vB,WAEnB,GAAqB,SAAjB5vB,EAAMsvB,OAIR,OAAO74F,EAAO,OAGhB,GAAIupE,EAAMsvB,QAAUx5H,KAAK+vB,KAAM,CAC7B,IAAI6qG,EAAW/D,EAAOx7H,KAAK6uG,EAAO,YAC9B2wB,EAAahE,EAAOx7H,KAAK6uG,EAAO,cAEpC,GAAI0wB,GAAYC,EAAY,CAC1B,GAAI76H,KAAK+vB,KAAOm6E,EAAMuvB,SACpB,OAAO94F,EAAOupE,EAAMuvB,UAAU,GACzB,GAAIz5H,KAAK+vB,KAAOm6E,EAAMwvB,WAC3B,OAAO/4F,EAAOupE,EAAMwvB,iBAGjB,GAAIkB,GACT,GAAI56H,KAAK+vB,KAAOm6E,EAAMuvB,SACpB,OAAO94F,EAAOupE,EAAMuvB,UAAU,OAG3B,KAAIoB,EAMT,MAAM,IAAIr6H,MAAM,0CALhB,GAAIR,KAAK+vB,KAAOm6E,EAAMwvB,WACpB,OAAO/4F,EAAOupE,EAAMwvB,gBAU9BtB,OAAQ,SAASh7H,EAAM2X,GACrB,IAAK,IAAItb,EAAIuG,KAAK45H,WAAWpgI,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIywG,EAAQlqG,KAAK45H,WAAWngI,GAC5B,GAAIywG,EAAMsvB,QAAUx5H,KAAK+vB,MACrB8mG,EAAOx7H,KAAK6uG,EAAO,eACnBlqG,KAAK+vB,KAAOm6E,EAAMwvB,WAAY,CAChC,IAAIoB,EAAe5wB,EACnB,OAIA4wB,IACU,UAAT19H,GACS,aAATA,IACD09H,EAAatB,QAAUzkH,GACvBA,GAAO+lH,EAAapB,aAGtBoB,EAAe,MAGjB,IAAIzC,EAASyC,EAAeA,EAAahB,WAAa,GAItD,OAHAzB,EAAOj7H,KAAOA,EACdi7H,EAAOtjH,IAAMA,EAET+lH,GACF96H,KAAK0c,OAAS,OACd1c,KAAK1E,KAAOw/H,EAAapB,WAClB1B,GAGFh4H,KAAK2C,SAAS01H,IAGvB11H,SAAU,SAAS01H,EAAQsB,GACzB,GAAoB,UAAhBtB,EAAOj7H,KACT,MAAMi7H,EAAOtjH,IAcf,MAXoB,UAAhBsjH,EAAOj7H,MACS,aAAhBi7H,EAAOj7H,KACT4C,KAAK1E,KAAO+8H,EAAOtjH,IACM,WAAhBsjH,EAAOj7H,MAChB4C,KAAKy6H,KAAOz6H,KAAK+U,IAAMsjH,EAAOtjH,IAC9B/U,KAAK0c,OAAS,SACd1c,KAAK1E,KAAO,OACa,WAAhB+8H,EAAOj7H,MAAqBu8H,IACrC35H,KAAK1E,KAAOq+H,GAGP3B,GAGT+C,OAAQ,SAASrB,GACf,IAAK,IAAIjgI,EAAIuG,KAAK45H,WAAWpgI,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIywG,EAAQlqG,KAAK45H,WAAWngI,GAC5B,GAAIywG,EAAMwvB,aAAeA,EAGvB,OAFA15H,KAAK2C,SAASunG,EAAM4vB,WAAY5vB,EAAMyvB,UACtCE,EAAc3vB,GACP8tB,IAKb,MAAS,SAASwB,GAChB,IAAK,IAAI//H,EAAIuG,KAAK45H,WAAWpgI,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIywG,EAAQlqG,KAAK45H,WAAWngI,GAC5B,GAAIywG,EAAMsvB,SAAWA,EAAQ,CAC3B,IAAInB,EAASnuB,EAAM4vB,WACnB,GAAoB,UAAhBzB,EAAOj7H,KAAkB,CAC3B,IAAI49H,EAAS3C,EAAOtjH,IACpB8kH,EAAc3vB,GAEhB,OAAO8wB,GAMX,MAAM,IAAIx6H,MAAM,0BAGlBy6H,cAAe,SAASzwB,EAAU4uB,EAAYC,GAa5C,OAZAr5H,KAAK63H,SAAW,CACd98H,SAAU0C,EAAO+sG,GACjB4uB,WAAYA,EACZC,QAASA,GAGS,SAAhBr5H,KAAK0c,SAGP1c,KAAK+U,IAAMnW,GAGNo5H,IAQJ3+H,EA7sBK,CAotBiBD,EAAOC,SAGtC,IACE6hI,mBAAqBvE,EACrB,MAAOwE,GAUP95F,SAAS,IAAK,yBAAdA,CAAwCs1F,MCzuBtCyE,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB18H,IAAjB28H,EACH,OAAOA,EAAaliI,QAGrB,IAAID,EAASgiI,EAAyBE,GAAY,CAGjDjiI,QAAS,IAOV,OAHAmiI,EAAoBF,GAAUjgI,KAAKjC,EAAOC,QAASD,EAAQA,EAAOC,QAASgiI,GAGpEjiI,EAAOC,QCpBfgiI,EAAoBn/H,EAAK9C,IACxB,IAAIslH,EAAStlH,GAAUA,EAAOJ,WAC7B,IAAOI,EAAiB,QACxB,IAAM,EAEP,OADAiiI,EAAoBvqD,EAAE4tC,EAAQ,CAAEpsF,EAAGosF,IAC5BA,GCLR2c,EAAoBvqD,EAAI,CAACz3E,EAASoiI,KACjC,IAAI,IAAIhhI,KAAOghI,EACXJ,EAAoBr/H,EAAEy/H,EAAYhhI,KAAS4gI,EAAoBr/H,EAAE3C,EAASoB,IAC5EF,OAAOC,eAAenB,EAASoB,EAAK,CAAEL,YAAY,EAAM4jB,IAAKy9G,EAAWhhI,MCJ3E4gI,EAAoBp3F,EAAI,WACvB,GAA0B,iBAAfy3F,WAAyB,OAAOA,WAC3C,IACC,OAAO17H,MAAQ,IAAIqhC,SAAS,cAAb,GACd,MAAOxkC,GACR,GAAsB,iBAAXsW,OAAqB,OAAOA,QALjB,GCAxBkoH,EAAoBr/H,EAAI,CAAClD,EAAK+kB,IAAUtjB,OAAOK,UAAUkjB,eAAeziB,KAAKvC,EAAK+kB,GCGlFw9G,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACpBA,EAAoB,OACMA,EAAoB,Q","file":"bundle.js","sourcesContent":["\"use strict\";\n\nrequire(\"./noConflict\");\n\nvar _global = _interopRequireDefault(require(\"core-js/library/fn/global\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nif (_global[\"default\"]._babelPolyfill && typeof console !== \"undefined\" && console.warn) {\n  console.warn(\"@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended \" + \"and may have consequences if different versions of the polyfills are applied sequentially. \" + \"If you do need to load the polyfill more than once, use @babel/polyfill/noConflict \" + \"instead to bypass the warning.\");\n}\n\n_global[\"default\"]._babelPolyfill = true;","\"use strict\";\n\nrequire(\"core-js/es6\");\n\nrequire(\"core-js/fn/array/includes\");\n\nrequire(\"core-js/fn/array/flat-map\");\n\nrequire(\"core-js/fn/string/pad-start\");\n\nrequire(\"core-js/fn/string/pad-end\");\n\nrequire(\"core-js/fn/string/trim-start\");\n\nrequire(\"core-js/fn/string/trim-end\");\n\nrequire(\"core-js/fn/symbol/async-iterator\");\n\nrequire(\"core-js/fn/object/get-own-property-descriptors\");\n\nrequire(\"core-js/fn/object/values\");\n\nrequire(\"core-js/fn/object/entries\");\n\nrequire(\"core-js/fn/promise/finally\");\n\nrequire(\"core-js/web\");\n\nrequire(\"regenerator-runtime/runtime\");","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n}(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default['default'](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default['default'](AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default['default'](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default['default'](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  /** @deprecated internal use only */ public source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nexport {Subject, AnonymousSubject} from './Subject';\n/* tslint:enable:no-unused-variable */\nexport {Observable} from './Observable';\n\n// statics\n/* tslint:disable:no-use-before-declare */\nimport './add/observable/bindCallback';\nimport './add/observable/bindNodeCallback';\nimport './add/observable/combineLatest';\nimport './add/observable/concat';\nimport './add/observable/defer';\nimport './add/observable/empty';\nimport './add/observable/forkJoin';\nimport './add/observable/from';\nimport './add/observable/fromEvent';\nimport './add/observable/fromEventPattern';\nimport './add/observable/fromPromise';\nimport './add/observable/generate';\nimport './add/observable/if';\nimport './add/observable/interval';\nimport './add/observable/merge';\nimport './add/observable/race';\nimport './add/observable/never';\nimport './add/observable/of';\nimport './add/observable/onErrorResumeNext';\nimport './add/observable/pairs';\nimport './add/observable/range';\nimport './add/observable/using';\nimport './add/observable/throw';\nimport './add/observable/timer';\nimport './add/observable/zip';\n\n//dom\nimport './add/observable/dom/ajax';\nimport './add/observable/dom/webSocket';\n\n//operators\nimport './add/operator/buffer';\nimport './add/operator/bufferCount';\nimport './add/operator/bufferTime';\nimport './add/operator/bufferToggle';\nimport './add/operator/bufferWhen';\nimport './add/operator/catch';\nimport './add/operator/combineAll';\nimport './add/operator/combineLatest';\nimport './add/operator/concat';\nimport './add/operator/concatAll';\nimport './add/operator/concatMap';\nimport './add/operator/concatMapTo';\nimport './add/operator/count';\nimport './add/operator/dematerialize';\nimport './add/operator/debounce';\nimport './add/operator/debounceTime';\nimport './add/operator/defaultIfEmpty';\nimport './add/operator/delay';\nimport './add/operator/delayWhen';\nimport './add/operator/distinct';\nimport './add/operator/distinctUntilChanged';\nimport './add/operator/distinctUntilKeyChanged';\nimport './add/operator/do';\nimport './add/operator/exhaust';\nimport './add/operator/exhaustMap';\nimport './add/operator/expand';\nimport './add/operator/elementAt';\nimport './add/operator/filter';\nimport './add/operator/finally';\nimport './add/operator/find';\nimport './add/operator/findIndex';\nimport './add/operator/first';\nimport './add/operator/groupBy';\nimport './add/operator/ignoreElements';\nimport './add/operator/isEmpty';\nimport './add/operator/audit';\nimport './add/operator/auditTime';\nimport './add/operator/last';\nimport './add/operator/let';\nimport './add/operator/every';\nimport './add/operator/map';\nimport './add/operator/mapTo';\nimport './add/operator/materialize';\nimport './add/operator/max';\nimport './add/operator/merge';\nimport './add/operator/mergeAll';\nimport './add/operator/mergeMap';\nimport './add/operator/mergeMapTo';\nimport './add/operator/mergeScan';\nimport './add/operator/min';\nimport './add/operator/multicast';\nimport './add/operator/observeOn';\nimport './add/operator/onErrorResumeNext';\nimport './add/operator/pairwise';\nimport './add/operator/partition';\nimport './add/operator/pluck';\nimport './add/operator/publish';\nimport './add/operator/publishBehavior';\nimport './add/operator/publishReplay';\nimport './add/operator/publishLast';\nimport './add/operator/race';\nimport './add/operator/reduce';\nimport './add/operator/repeat';\nimport './add/operator/repeatWhen';\nimport './add/operator/retry';\nimport './add/operator/retryWhen';\nimport './add/operator/sample';\nimport './add/operator/sampleTime';\nimport './add/operator/scan';\nimport './add/operator/sequenceEqual';\nimport './add/operator/share';\nimport './add/operator/shareReplay';\nimport './add/operator/single';\nimport './add/operator/skip';\nimport './add/operator/skipLast';\nimport './add/operator/skipUntil';\nimport './add/operator/skipWhile';\nimport './add/operator/startWith';\nimport './add/operator/subscribeOn';\nimport './add/operator/switch';\nimport './add/operator/switchMap';\nimport './add/operator/switchMapTo';\nimport './add/operator/take';\nimport './add/operator/takeLast';\nimport './add/operator/takeUntil';\nimport './add/operator/takeWhile';\nimport './add/operator/throttle';\nimport './add/operator/throttleTime';\nimport './add/operator/timeInterval';\nimport './add/operator/timeout';\nimport './add/operator/timeoutWith';\nimport './add/operator/timestamp';\nimport './add/operator/toArray';\nimport './add/operator/toPromise';\nimport './add/operator/window';\nimport './add/operator/windowCount';\nimport './add/operator/windowTime';\nimport './add/operator/windowToggle';\nimport './add/operator/windowWhen';\nimport './add/operator/withLatestFrom';\nimport './add/operator/zip';\nimport './add/operator/zipAll';\n\n/* tslint:disable:no-unused-variable */\nexport {Operator} from './Operator';\nexport {Observer} from './Observer';\nexport {Subscription} from './Subscription';\nexport {Subscriber} from './Subscriber';\nexport {AsyncSubject} from './AsyncSubject';\nexport {ReplaySubject} from './ReplaySubject';\nexport {BehaviorSubject} from './BehaviorSubject';\nexport {ConnectableObservable} from './observable/ConnectableObservable';\nexport {Notification} from './Notification';\nexport {EmptyError} from './util/EmptyError';\nexport {ArgumentOutOfRangeError} from './util/ArgumentOutOfRangeError';\nexport {ObjectUnsubscribedError} from './util/ObjectUnsubscribedError';\nexport {TimeoutError} from './util/TimeoutError';\nexport {UnsubscriptionError} from './util/UnsubscriptionError';\nexport {TimeInterval} from './operator/timeInterval';\nexport {Timestamp} from './operators/timestamp';\nexport {TestScheduler} from './testing/TestScheduler';\nexport {VirtualTimeScheduler} from './scheduler/VirtualTimeScheduler';\nexport {AjaxRequest, AjaxResponse, AjaxError, AjaxTimeoutError} from './observable/dom/AjaxObservable';\nexport { pipe } from './util/pipe';\n\nimport { asap } from './scheduler/asap';\nimport { async } from './scheduler/async';\nimport { queue } from './scheduler/queue';\nimport { animationFrame } from './scheduler/animationFrame';\nimport { AsapScheduler } from './scheduler/AsapScheduler';\nimport { AsyncScheduler } from './scheduler/AsyncScheduler';\nimport { QueueScheduler } from './scheduler/QueueScheduler';\nimport { AnimationFrameScheduler } from './scheduler/AnimationFrameScheduler';\nimport { rxSubscriber } from './symbol/rxSubscriber';\nimport { iterator } from './symbol/iterator';\nimport { observable } from './symbol/observable';\n\nimport * as _operators from './operators';\n\nexport const operators = _operators;\n\n/* tslint:enable:no-unused-variable */\n\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nlet Scheduler = {\n  asap,\n  queue,\n  animationFrame,\n  async\n};\n\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nlet Symbol = {\n  rxSubscriber,\n  observable,\n  iterator\n};\n\nexport {\n    Scheduler,\n    Symbol\n};\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated internal use only */ _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","import { Observable } from '../../Observable';\nimport { bindCallback as staticBindCallback } from '../../observable/bindCallback';\n\nObservable.bindCallback = staticBindCallback;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let bindCallback: typeof staticBindCallback;\n  }\n}\n","import { Observable } from '../../Observable';\nimport { bindNodeCallback as staticBindNodeCallback } from '../../observable/bindNodeCallback';\n\nObservable.bindNodeCallback = staticBindNodeCallback;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let bindNodeCallback: typeof staticBindNodeCallback;\n  }\n}","import { Observable } from '../../Observable';\nimport { combineLatest as combineLatestStatic } from '../../observable/combineLatest';\n\nObservable.combineLatest = combineLatestStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let combineLatest: typeof combineLatestStatic;\n  }\n}","import { Observable } from '../../Observable';\nimport { concat as concatStatic } from '../../observable/concat';\n\nObservable.concat = concatStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let concat: typeof concatStatic;\n  }\n}","import { Observable } from '../../Observable';\nimport { defer as staticDefer } from '../../observable/defer';\n\nObservable.defer = staticDefer;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let defer: typeof staticDefer;\n  }\n}","import { Observable } from '../../../Observable';\nimport { ajax as staticAjax } from '../../../observable/dom/ajax';\nimport { AjaxCreationMethod } from '../../../observable/dom/AjaxObservable';\n\nObservable.ajax = staticAjax;\n\ndeclare module '../../../Observable' {\n  namespace Observable {\n    export let ajax: AjaxCreationMethod;\n  }\n}","import { Observable } from '../../../Observable';\nimport { webSocket as staticWebSocket } from '../../../observable/dom/webSocket';\n\nObservable.webSocket = staticWebSocket;\n\ndeclare module '../../../Observable' {\n  namespace Observable {\n    export let webSocket: typeof staticWebSocket;\n  }\n}","import { Observable } from '../../Observable';\nimport { empty as staticEmpty } from '../../observable/empty';\n\nObservable.empty = staticEmpty;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let empty: typeof staticEmpty;\n  }\n}","import { Observable } from '../../Observable';\nimport { forkJoin as staticForkJoin } from '../../observable/forkJoin';\n\nObservable.forkJoin = staticForkJoin;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let forkJoin: typeof staticForkJoin;\n  }\n}","import { Observable } from '../../Observable';\nimport { from as staticFrom } from '../../observable/from';\n\nObservable.from = staticFrom;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let from: typeof staticFrom;\n  }\n}","import { Observable } from '../../Observable';\nimport { fromEvent as staticFromEvent } from '../../observable/fromEvent';\n\nObservable.fromEvent = staticFromEvent;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromEvent: typeof staticFromEvent;\n  }\n}","import { Observable } from '../../Observable';\nimport { fromEventPattern as staticFromEventPattern } from '../../observable/fromEventPattern';\n\nObservable.fromEventPattern = staticFromEventPattern;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromEventPattern: typeof staticFromEventPattern;\n  }\n}","import { Observable } from '../../Observable';\nimport { fromPromise as staticFromPromise } from '../../observable/fromPromise';\n\nObservable.fromPromise = staticFromPromise;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromPromise: typeof staticFromPromise;\n  }\n}","import { Observable } from '../../Observable';\nimport { generate as staticGenerate } from '../../observable/generate';\n\nObservable.generate = staticGenerate;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let generate: typeof staticGenerate;\n  }\n}","import { Observable } from '../../Observable';\nimport { _if } from '../../observable/if';\n\nObservable.if = _if;","import { Observable } from '../../Observable';\nimport { interval as staticInterval } from '../../observable/interval';\n\nObservable.interval = staticInterval;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let interval: typeof staticInterval;\n  }\n}","import { Observable } from '../../Observable';\nimport { merge as mergeStatic } from '../../observable/merge';\n\nObservable.merge = mergeStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let merge: typeof mergeStatic;\n  }\n}","import { Observable } from '../../Observable';\nimport { never as staticNever } from '../../observable/never';\n\nObservable.never = staticNever;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let never: typeof staticNever;\n  }\n}","import { Observable } from '../../Observable';\nimport { of as staticOf } from '../../observable/of';\n\nObservable.of = staticOf;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let of: typeof staticOf; //formOf an iceberg!\n  }\n}","import { Observable } from '../../Observable';\r\nimport { onErrorResumeNext as staticOnErrorResumeNext } from '../../observable/onErrorResumeNext';\r\n\r\nObservable.onErrorResumeNext = staticOnErrorResumeNext;\r\n\r\ndeclare module '../../Observable' {\r\n  namespace Observable {\r\n    export let onErrorResumeNext: typeof staticOnErrorResumeNext;\r\n  }\r\n}","import { Observable } from '../../Observable';\r\nimport { pairs as staticPairs } from '../../observable/pairs';\r\n\r\nObservable.pairs = staticPairs;\r\n\r\ndeclare module '../../Observable' {\r\n  namespace Observable {\r\n    export let pairs: typeof staticPairs;\r\n  }\r\n}","import { Observable } from '../../Observable';\nimport { race as staticRace } from '../../observable/race';\n\nObservable.race = staticRace;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let race: typeof staticRace;\n  }\n}","import { Observable } from '../../Observable';\nimport { range as staticRange } from '../../observable/range';\n\nObservable.range = staticRange;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let range: typeof staticRange;\n  }\n}","import { Observable } from '../../Observable';\nimport { _throw } from '../../observable/throw';\n\nObservable.throw = _throw;","import { Observable } from '../../Observable';\nimport { timer as staticTimer } from '../../observable/timer';\n\nObservable.timer = staticTimer;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let timer: typeof staticTimer;\n  }\n}","import { Observable } from '../../Observable';\nimport { using as staticUsing } from '../../observable/using';\n\nObservable.using = staticUsing;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let using: typeof staticUsing;\n  }\n}","import { Observable } from '../../Observable';\nimport { zip as zipStatic } from '../../observable/zip';\n\nObservable.zip = zipStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let zip: typeof zipStatic;\n  }\n}","import { Observable } from '../../Observable';\nimport { audit } from '../../operator/audit';\n\nObservable.prototype.audit = audit;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    audit: typeof audit;\n  }\n}","import { Observable } from '../../Observable';\nimport { auditTime } from '../../operator/auditTime';\n\nObservable.prototype.auditTime = auditTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    auditTime: typeof auditTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { buffer } from '../../operator/buffer';\n\nObservable.prototype.buffer = buffer;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    buffer: typeof buffer;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferCount } from '../../operator/bufferCount';\n\nObservable.prototype.bufferCount = bufferCount;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferCount: typeof bufferCount;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferTime } from '../../operator/bufferTime';\n\nObservable.prototype.bufferTime = bufferTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferTime: typeof bufferTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferToggle } from '../../operator/bufferToggle';\n\nObservable.prototype.bufferToggle = bufferToggle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferToggle: typeof bufferToggle;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferWhen } from '../../operator/bufferWhen';\n\nObservable.prototype.bufferWhen = bufferWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferWhen: typeof bufferWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { _catch } from '../../operator/catch';\n\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    catch: typeof _catch;\n    _catch: typeof _catch;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { combineAll } from '../../operator/combineAll';\n\nObservable.prototype.combineAll = combineAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineAll: typeof combineAll;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { combineLatest } from '../../operator/combineLatest';\n\nObservable.prototype.combineLatest = combineLatest;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineLatest: typeof combineLatest;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concat } from '../../operator/concat';\n\nObservable.prototype.concat = concat;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concat: typeof concat;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concatAll } from '../../operator/concatAll';\n\nObservable.prototype.concatAll = concatAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatAll: typeof concatAll;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concatMap } from '../../operator/concatMap';\n\nObservable.prototype.concatMap = concatMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatMap: typeof concatMap;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concatMapTo } from '../../operator/concatMapTo';\n\nObservable.prototype.concatMapTo = concatMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatMapTo: typeof concatMapTo;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { count } from '../../operator/count';\n\nObservable.prototype.count = count;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    count: typeof count;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { debounce } from '../../operator/debounce';\n\nObservable.prototype.debounce = debounce;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    debounce: typeof debounce;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { debounceTime } from '../../operator/debounceTime';\n\nObservable.prototype.debounceTime = debounceTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    debounceTime: typeof debounceTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { defaultIfEmpty } from '../../operator/defaultIfEmpty';\n\nObservable.prototype.defaultIfEmpty = defaultIfEmpty;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    defaultIfEmpty: typeof defaultIfEmpty;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { delay } from '../../operator/delay';\n\nObservable.prototype.delay = delay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delay: typeof delay;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { delayWhen } from '../../operator/delayWhen';\n\nObservable.prototype.delayWhen = delayWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delayWhen: typeof delayWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { dematerialize } from '../../operator/dematerialize';\n\nObservable.prototype.dematerialize = dematerialize;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    dematerialize: typeof dematerialize;\n  }\n}","import { Observable } from '../../Observable';\nimport { distinct } from '../../operator/distinct';\n\nObservable.prototype.distinct = distinct;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinct: typeof distinct;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { distinctUntilChanged } from '../../operator/distinctUntilChanged';\n\nObservable.prototype.distinctUntilChanged = distinctUntilChanged;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinctUntilChanged: typeof distinctUntilChanged;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { distinctUntilKeyChanged } from '../../operator/distinctUntilKeyChanged';\n\nObservable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinctUntilKeyChanged: typeof distinctUntilKeyChanged;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { _do } from '../../operator/do';\n\nObservable.prototype.do = _do;\nObservable.prototype._do = _do;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    do: typeof _do;\n    _do: typeof _do;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { elementAt } from '../../operator/elementAt';\n\nObservable.prototype.elementAt = elementAt;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    elementAt: typeof elementAt;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { every } from '../../operator/every';\n\nObservable.prototype.every = every;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    every: typeof every;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { exhaust } from '../../operator/exhaust';\n\nObservable.prototype.exhaust = exhaust;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    exhaust: typeof exhaust;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { exhaustMap } from '../../operator/exhaustMap';\n\nObservable.prototype.exhaustMap = exhaustMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    exhaustMap: typeof exhaustMap;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { expand } from '../../operator/expand';\n\nObservable.prototype.expand = expand;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    expand: typeof expand;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { filter } from '../../operator/filter';\n\nObservable.prototype.filter = filter;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    filter: typeof filter;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { _finally } from '../../operator/finally';\n\nObservable.prototype.finally = _finally;\nObservable.prototype._finally = _finally;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    finally: typeof _finally;\n    _finally: typeof _finally;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { find } from '../../operator/find';\n\nObservable.prototype.find = find;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    find: typeof find;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { findIndex } from '../../operator/findIndex';\n\nObservable.prototype.findIndex = findIndex;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    findIndex: typeof findIndex;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { first } from '../../operator/first';\n\nObservable.prototype.first = <any>first;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    first: typeof first;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { groupBy } from '../../operator/groupBy';\n\nObservable.prototype.groupBy = <any>groupBy;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    groupBy: typeof groupBy;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { ignoreElements } from '../../operator/ignoreElements';\n\nObservable.prototype.ignoreElements = ignoreElements;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    ignoreElements: typeof ignoreElements;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { isEmpty } from '../../operator/isEmpty';\n\nObservable.prototype.isEmpty = isEmpty;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    isEmpty: typeof isEmpty;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { last } from '../../operator/last';\n\nObservable.prototype.last = <any>last;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    last: typeof last;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { letProto } from '../../operator/let';\n\nObservable.prototype.let = letProto;\nObservable.prototype.letBind = letProto;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    let: typeof letProto;\n    letBind: typeof letProto;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { map } from '../../operator/map';\n\nObservable.prototype.map = map;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    map: typeof map;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mapTo } from '../../operator/mapTo';\n\nObservable.prototype.mapTo = mapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mapTo: typeof mapTo;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { materialize } from '../../operator/materialize';\n\nObservable.prototype.materialize = materialize;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    materialize: typeof materialize;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { max } from '../../operator/max';\n\nObservable.prototype.max = max;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    max: typeof max;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { merge } from '../../operator/merge';\n\nObservable.prototype.merge = merge;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    merge: typeof merge;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeAll } from '../../operator/mergeAll';\n\nObservable.prototype.mergeAll = mergeAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mergeAll: typeof mergeAll;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeMap } from '../../operator/mergeMap';\n\nObservable.prototype.mergeMap = <any>mergeMap;\nObservable.prototype.flatMap = <any>mergeMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMap: typeof mergeMap;\n    mergeMap: typeof mergeMap;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeMapTo } from '../../operator/mergeMapTo';\n\nObservable.prototype.flatMapTo = <any>mergeMapTo;\nObservable.prototype.mergeMapTo = <any>mergeMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMapTo: typeof mergeMapTo;\n    mergeMapTo: typeof mergeMapTo;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeScan } from '../../operator/mergeScan';\n\nObservable.prototype.mergeScan = mergeScan;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mergeScan: typeof mergeScan;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { min } from '../../operator/min';\n\nObservable.prototype.min = min;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    min: typeof min;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { multicast } from '../../operator/multicast';\n\nObservable.prototype.multicast = <any>multicast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    multicast: typeof multicast;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { observeOn } from '../../operator/observeOn';\n\nObservable.prototype.observeOn = observeOn;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    observeOn: typeof observeOn;\n  }\n}","import { Observable } from '../../Observable';\r\nimport { onErrorResumeNext } from '../../operator/onErrorResumeNext';\r\n\r\nObservable.prototype.onErrorResumeNext = onErrorResumeNext;\r\n\r\ndeclare module '../../Observable' {\r\n  interface Observable<T> {\r\n    onErrorResumeNext: typeof onErrorResumeNext;\r\n  }\r\n}","\nimport { Observable } from '../../Observable';\nimport { pairwise } from '../../operator/pairwise';\n\nObservable.prototype.pairwise = pairwise;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    pairwise: typeof pairwise;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { partition } from '../../operator/partition';\n\nObservable.prototype.partition = partition;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    partition: typeof partition;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { pluck } from '../../operator/pluck';\n\nObservable.prototype.pluck = pluck;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    pluck: typeof pluck;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { publish } from '../../operator/publish';\n\nObservable.prototype.publish = <any>publish;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publish: typeof publish;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { publishBehavior } from '../../operator/publishBehavior';\n\nObservable.prototype.publishBehavior = publishBehavior;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishBehavior: typeof publishBehavior;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { publishLast } from '../../operator/publishLast';\n\nObservable.prototype.publishLast = publishLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishLast: typeof publishLast;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { publishReplay } from '../../operator/publishReplay';\n\nObservable.prototype.publishReplay = publishReplay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishReplay: typeof publishReplay;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { race } from '../../operator/race';\n\nObservable.prototype.race = race;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    race: typeof race;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { reduce } from '../../operator/reduce';\n\nObservable.prototype.reduce = reduce;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    reduce: typeof reduce;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { repeat } from '../../operator/repeat';\n\nObservable.prototype.repeat = repeat;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    repeat: typeof repeat;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { repeatWhen } from '../../operator/repeatWhen';\n\nObservable.prototype.repeatWhen = repeatWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    repeatWhen: typeof repeatWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { retry } from '../../operator/retry';\n\nObservable.prototype.retry = retry;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retry: typeof retry;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { retryWhen } from '../../operator/retryWhen';\n\nObservable.prototype.retryWhen = retryWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retryWhen: typeof retryWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { sample } from '../../operator/sample';\n\nObservable.prototype.sample = sample;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sample: typeof sample;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { sampleTime } from '../../operator/sampleTime';\n\nObservable.prototype.sampleTime = sampleTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sampleTime: typeof sampleTime;\n  }\n}","\nimport { Observable } from '../../Observable';\n\nimport { scan } from '../../operator/scan';\n\nObservable.prototype.scan = scan;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    scan: typeof scan;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { sequenceEqual } from '../../operator/sequenceEqual';\n\nObservable.prototype.sequenceEqual = sequenceEqual;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sequenceEqual: typeof sequenceEqual;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { share } from '../../operator/share';\n\nObservable.prototype.share = share;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    share: typeof share;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { shareReplay } from '../../operator/shareReplay';\n\nObservable.prototype.shareReplay = shareReplay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    shareReplay: typeof shareReplay;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { single } from '../../operator/single';\n\nObservable.prototype.single = single;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    single: typeof single;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { skip } from '../../operator/skip';\n\nObservable.prototype.skip = skip;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skip: typeof skip;\n  }\n}","import { Observable } from '../../Observable';\nimport { skipLast } from '../../operator/skipLast';\n\nObservable.prototype.skipLast = skipLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipLast: typeof skipLast;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { skipUntil } from '../../operator/skipUntil';\n\nObservable.prototype.skipUntil = skipUntil;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipUntil: typeof skipUntil;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { skipWhile } from '../../operator/skipWhile';\n\nObservable.prototype.skipWhile = skipWhile;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipWhile: typeof skipWhile;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { startWith } from '../../operator/startWith';\n\nObservable.prototype.startWith = startWith;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    startWith: typeof startWith;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { subscribeOn } from '../../operator/subscribeOn';\n\nObservable.prototype.subscribeOn = subscribeOn;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    subscribeOn: typeof subscribeOn;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { _switch } from '../../operator/switch';\n\nObservable.prototype.switch = _switch;\nObservable.prototype._switch = _switch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switch: typeof _switch;\n    _switch: typeof _switch;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { switchMap } from '../../operator/switchMap';\n\nObservable.prototype.switchMap = switchMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switchMap: typeof switchMap;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { switchMapTo } from '../../operator/switchMapTo';\n\nObservable.prototype.switchMapTo = switchMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switchMapTo: typeof switchMapTo;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { take } from '../../operator/take';\n\nObservable.prototype.take = take;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    take: typeof take;\n  }\n}","import { Observable } from '../../Observable';\nimport { takeLast } from '../../operator/takeLast';\n\nObservable.prototype.takeLast = takeLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeLast: typeof takeLast;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { takeUntil } from '../../operator/takeUntil';\n\nObservable.prototype.takeUntil = takeUntil;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeUntil: typeof takeUntil;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { takeWhile } from '../../operator/takeWhile';\n\nObservable.prototype.takeWhile = takeWhile;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeWhile: typeof takeWhile;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { throttle } from '../../operator/throttle';\n\nObservable.prototype.throttle = throttle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    throttle: typeof throttle;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { throttleTime } from '../../operator/throttleTime';\n\nObservable.prototype.throttleTime = throttleTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    throttleTime: typeof throttleTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { timeInterval } from '../../operator/timeInterval';\n\nObservable.prototype.timeInterval = timeInterval;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeInterval: typeof timeInterval;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { timeout } from '../../operator/timeout';\n\nObservable.prototype.timeout = timeout;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeout: typeof timeout;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { timeoutWith } from '../../operator/timeoutWith';\n\nObservable.prototype.timeoutWith = timeoutWith;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeoutWith: typeof timeoutWith;\n  }\n}","import { Observable } from '../../Observable';\r\nimport { timestamp } from '../../operator/timestamp';\r\n\r\nObservable.prototype.timestamp = timestamp;\r\n\r\ndeclare module '../../Observable' {\r\n  interface Observable<T> {\r\n    timestamp: typeof timestamp;\r\n  }\r\n}","\nimport { Observable } from '../../Observable';\nimport { toArray } from '../../operator/toArray';\n\nObservable.prototype.toArray = toArray;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    toArray: typeof toArray;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { window } from '../../operator/window';\n\nObservable.prototype.window = window;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    window: typeof window;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { windowCount } from '../../operator/windowCount';\n\nObservable.prototype.windowCount = windowCount;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowCount: typeof windowCount;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { windowTime } from '../../operator/windowTime';\n\nObservable.prototype.windowTime = windowTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowTime: typeof windowTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { windowToggle } from '../../operator/windowToggle';\n\nObservable.prototype.windowToggle = windowToggle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowToggle: typeof windowToggle;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { windowWhen } from '../../operator/windowWhen';\n\nObservable.prototype.windowWhen = windowWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowWhen: typeof windowWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { withLatestFrom } from '../../operator/withLatestFrom';\n\nObservable.prototype.withLatestFrom = withLatestFrom;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    withLatestFrom: typeof withLatestFrom;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { zipProto } from '../../operator/zip';\n\nObservable.prototype.zip = zipProto;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    zip: typeof zipProto;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { zipAll } from '../../operator/zipAll';\n\nObservable.prototype.zipAll = zipAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    zipAll: typeof zipAll;\n  }\n}","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { IScheduler } from '../Scheduler';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { AsyncSubject } from '../AsyncSubject';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class BoundCallbackObservable<T> extends Observable<T> {\n  subject: AsyncSubject<T>;\n\n  /* tslint:disable:max-line-length */\n  static create(callbackFunc: (callback: () => any) => any, selector?: void, scheduler?: IScheduler): () => Observable<void>;\n  static create<R>(callbackFunc: (callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<R>(callbackFunc: (callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<T>(callbackFunc: Function, selector?: void, scheduler?: IScheduler): (...args: any[]) => Observable<T>;\n  static create<T>(callbackFunc: Function, selector?: (...args: any[]) => T, scheduler?: IScheduler): (...args: any[]) => Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Converts a callback API to a function that returns an Observable.\n   *\n   * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n   * it will return a function `g` that when called as `g(x)` will output an\n   * Observable.</span>\n   *\n   * `bindCallback` is not an operator because its input and output are not\n   * Observables. The input is a function `func` with some parameters, the\n   * last parameter must be a callback function that `func` calls when it is\n   * done.\n   *\n   * The output of `bindCallback` is a function that takes the same parameters\n   * as `func`, except the last one (the callback). When the output function\n   * is called with arguments it will return an Observable. If function `func`\n   * calls its callback with one argument the Observable will emit that value.\n   * If on the other hand the callback is called with multiple values the resulting\n   * Observable will emit an array with said values as arguments.\n   *\n   * It is very important to remember that input function `func` is not called\n   * when the output function is, but rather when the Observable returned by the output\n   * function is subscribed. This means if `func` makes an AJAX request, that request\n   * will be made every time someone subscribes to the resulting Observable, but not before.\n   *\n   * Optionally, a selector function can be passed to `bindObservable`. The selector function\n   * takes the same arguments as the callback and returns the value that will be emitted by the Observable.\n   * Even though by default multiple arguments passed to callback appear in the stream as an array\n   * the selector function will be called with arguments directly, just as the callback would.\n   * This means you can imagine the default selector (when one is not provided explicitly)\n   * as a function that aggregates all its arguments into an array, or simply returns first argument\n   * if there is only one.\n   *\n   * The last optional parameter - {@link Scheduler} - can be used to control when the call\n   * to `func` happens after someone subscribes to Observable, as well as when results\n   * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n   * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n   * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n   * and call `subscribe` on the output Observable all function calls that are currently executing\n   * will end before `func` is invoked.\n   *\n   * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n   * In particular, if the callback is called synchronously the subscription of the resulting Observable\n   * will call the `next` function synchronously as well.  If you want to defer that call,\n   * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n   * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n   *\n   * Note that the Observable created by the output function will always emit a single value\n   * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n   * calls will not appear in the stream. If you need to listen for multiple calls,\n   *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n   *\n   * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n   * will be the context that the output function has at call time. In particular, if `func`\n   * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n   * it is recommended that the context of the output function is set to that object as well.\n   *\n   * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n   * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n   * provides convenient error handling and probably is a better choice.\n   * `bindCallback` will treat such functions the same as any other and error parameters\n   * (whether passed or not) will always be interpreted as regular callback argument.\n   *\n   *\n   * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n   * // Suppose we have jQuery.getJSON('/my/url', callback)\n   * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n   * var result = getJSONAsObservable('/my/url');\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   *\n   * @example <caption>Receive an array of arguments passed to a callback</caption>\n   * someFunction((a, b, c) => {\n   *   console.log(a); // 5\n   *   console.log(b); // 'some string'\n   *   console.log(c); // {someProperty: 'someValue'}\n   * });\n   *\n   * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);\n   * boundSomeFunction().subscribe(values => {\n   *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n   * });\n   *\n   *\n   * @example <caption>Use bindCallback with a selector function</caption>\n   * someFunction((a, b, c) => {\n   *   console.log(a); // 'a'\n   *   console.log(b); // 'b'\n   *   console.log(c); // 'c'\n   * });\n   *\n   * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);\n   * boundSomeFunction().subscribe(value => {\n   *   console.log(value) // 'abc'\n   * });\n   *\n   *\n   * @example <caption>Compare behaviour with and without async Scheduler</caption>\n   * function iCallMyCallbackSynchronously(cb) {\n   *   cb();\n   * }\n   *\n   * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);\n   * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n   *\n   * boundSyncFn().subscribe(() => console.log('I was sync!'));\n   * boundAsyncFn().subscribe(() => console.log('I was async!'));\n   * console.log('This happened...');\n   *\n   * // Logs:\n   * // I was sync!\n   * // This happened...\n   * // I was async!\n   *\n   *\n   * @example <caption>Use bindCallback on an object method</caption>\n   * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);\n   * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n   * .subscribe(subscriber);\n   *\n   *\n   * @see {@link bindNodeCallback}\n   * @see {@link from}\n   * @see {@link fromPromise}\n   *\n   * @param {function} func A function with a callback as the last parameter.\n   * @param {function} [selector] A function which takes the arguments from the\n   * callback and maps them to a value that is emitted on the output Observable.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * callbacks.\n   * @return {function(...params: *): Observable} A function which returns the\n   * Observable that delivers the same values the callback would deliver.\n   * @static true\n   * @name bindCallback\n   * @owner Observable\n   */\n  static create<T>(func: Function,\n                   selector: Function | void = undefined,\n                   scheduler?: IScheduler): (...args: any[]) => Observable<T> {\n    return function(this: any, ...args: any[]): Observable<T> {\n      return new BoundCallbackObservable<T>(func, <any>selector, args, this, scheduler);\n    };\n  }\n\n  constructor(private callbackFunc: Function,\n              private selector: Function,\n              private args: any[],\n              private context: any,\n              private scheduler: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T | T[]>): Subscription {\n    const callbackFunc = this.callbackFunc;\n    const args = this.args;\n    const scheduler = this.scheduler;\n    let subject = this.subject;\n\n    if (!scheduler) {\n      if (!subject) {\n        subject = this.subject = new AsyncSubject<T>();\n        const handler = function handlerFn(this: any, ...innerArgs: any[]) {\n          const source = (<any>handlerFn).source;\n          const { selector, subject } = source;\n          if (selector) {\n            const result = tryCatch(selector).apply(this, innerArgs);\n            if (result === errorObject) {\n              subject.error(errorObject.e);\n          } else {\n              subject.next(result);\n              subject.complete();\n            }\n          } else {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          }\n        };\n        // use named function instance to avoid closure.\n        (<any>handler).source = this;\n\n        const result = tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n        if (result === errorObject) {\n          subject.error(errorObject.e);\n        }\n      }\n      return subject.subscribe(subscriber);\n    } else {\n      return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber, context: this.context });\n    }\n  }\n\n  static dispatch<T>(state: { source: BoundCallbackObservable<T>, subscriber: Subscriber<T>, context: any }) {\n    const self = (<Subscription><any>this);\n    const { source, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = source;\n    let subject = source.subject;\n\n    if (!subject) {\n      subject = source.subject = new AsyncSubject<T>();\n\n      const handler = function handlerFn(this: any, ...innerArgs: any[]) {\n        const source = (<any>handlerFn).source;\n        const { selector, subject } = source;\n        if (selector) {\n          const result = tryCatch(selector).apply(this, innerArgs);\n          if (result === errorObject) {\n            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n          } else {\n            self.add(scheduler.schedule(dispatchNext, 0, { value: result, subject }));\n          }\n        } else {\n          const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n          self.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        }\n      };\n      // use named function to pass values in without closure\n      (<any>handler).source = source;\n\n      const result = tryCatch(callbackFunc).apply(context, args.concat(handler));\n      if (result === errorObject) {\n        subject.error(errorObject.e);\n      }\n    }\n\n    self.add(subject.subscribe(subscriber));\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { AsyncSubject } from '../AsyncSubject';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class BoundNodeCallbackObservable<T> extends Observable<T> {\n  subject: AsyncSubject<T>;\n\n  /* tslint:disable:max-line-length */\n  static create<R>(callbackFunc: (callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<T>(callbackFunc: Function, selector?: void, scheduler?: IScheduler): (...args: any[]) => Observable<T>;\n  static create<T>(callbackFunc: Function, selector?: (...args: any[]) => T, scheduler?: IScheduler): (...args: any[]) => Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Converts a Node.js-style callback API to a function that returns an\n   * Observable.\n   *\n   * <span class=\"informal\">It's just like {@link bindCallback}, but the\n   * callback is expected to be of type `callback(error, result)`.</span>\n   *\n   * `bindNodeCallback` is not an operator because its input and output are not\n   * Observables. The input is a function `func` with some parameters, but the\n   * last parameter must be a callback function that `func` calls when it is\n   * done. The callback function is expected to follow Node.js conventions,\n   * where the first argument to the callback is an error object, signaling\n   * whether call was successful. If that object is passed to callback, it means\n   * something went wrong.\n   *\n   * The output of `bindNodeCallback` is a function that takes the same\n   * parameters as `func`, except the last one (the callback). When the output\n   * function is called with arguments, it will return an Observable.\n   * If `func` calls its callback with error parameter present, Observable will\n   * error with that value as well. If error parameter is not passed, Observable will emit\n   * second parameter. If there are more parameters (third and so on),\n   * Observable will emit an array with all arguments, except first error argument.\n   *\n   * Optionally `bindNodeCallback` accepts selector function, which allows you to\n   * make resulting Observable emit value computed by selector, instead of regular\n   * callback arguments. It works similarly to {@link bindCallback} selector, but\n   * Node.js-style error argument will never be passed to that function.\n   *\n   * Note that `func` will not be called at the same time output function is,\n   * but rather whenever resulting Observable is subscribed. By default call to\n   * `func` will happen synchronously after subscription, but that can be changed\n   * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n   * can also control when values from callback will be emitted by Observable.\n   * To find out more, check out documentation for {@link bindCallback}, where\n   * Scheduler works exactly the same.\n   *\n   * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n   * of returned function, when it is called.\n   *\n   * After Observable emits value, it will complete immediately. This means\n   * even if `func` calls callback again, values from second and consecutive\n   * calls will never appear on the stream. If you need to handle functions\n   * that call callbacks multiple times, check out {@link fromEvent} or\n   * {@link fromEventPattern} instead.\n   *\n   * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n   * \"Node.js-style\" callbacks are just a convention, so if you write for\n   * browsers or any other environment and API you use implements that callback style,\n   * `bindNodeCallback` can be safely used on that API functions as well.\n   *\n   * Remember that Error object passed to callback does not have to be an instance\n   * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n   * Error parameter of callback function is interpreted as \"present\", when value\n   * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n   * string or boolean `true`. In all of these cases resulting Observable would error\n   * with that value. This means usually regular style callbacks will fail very often when\n   * `bindNodeCallback` is used. If your Observable errors much more often then you\n   * would expect, check if callback really is called in Node.js-style and, if not,\n   * switch to {@link bindCallback} instead.\n   *\n   * Note that even if error parameter is technically present in callback, but its value\n   * is falsy, it still won't appear in array emitted by Observable or in selector function.\n   *\n   *\n   * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n   * import * as fs from 'fs';\n   * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n   * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   *\n   * @example <caption>Use on function calling callback with multiple arguments</caption>\n   * someFunction((err, a, b) => {\n   *   console.log(err); // null\n   *   console.log(a); // 5\n   *   console.log(b); // \"some string\"\n   * });\n   * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n   * boundSomeFunction()\n   * .subscribe(value => {\n   *   console.log(value); // [5, \"some string\"]\n   * });\n   *\n   *\n   * @example <caption>Use with selector function</caption>\n   * someFunction((err, a, b) => {\n   *   console.log(err); // undefined\n   *   console.log(a); // \"abc\"\n   *   console.log(b); // \"DEF\"\n   * });\n   * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);\n   * boundSomeFunction()\n   * .subscribe(value => {\n   *   console.log(value); // \"abcDEF\"\n   * });\n   *\n   *\n   * @example <caption>Use on function calling callback in regular style</caption>\n   * someFunction(a => {\n   *   console.log(a); // 5\n   * });\n   * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n   * boundSomeFunction()\n   * .subscribe(\n   *   value => {}             // never gets called\n   *   err => console.log(err) // 5\n   *);\n   *\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   * @see {@link fromPromise}\n   *\n   * @param {function} func Function with a Node.js-style callback as the last parameter.\n   * @param {function} [selector] A function which takes the arguments from the\n   * callback and maps those to a value to emit on the output Observable.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * callbacks.\n   * @return {function(...params: *): Observable} A function which returns the\n   * Observable that delivers the same values the Node.js callback would\n   * deliver.\n   * @static true\n   * @name bindNodeCallback\n   * @owner Observable\n   */\n  static create<T>(func: Function,\n                   selector: Function | void = undefined,\n                   scheduler?: IScheduler): (...args: any[]) => Observable<T> {\n    return function(this: any, ...args: any[]): Observable<T> {\n      return new BoundNodeCallbackObservable<T>(func, <any>selector, args, this, scheduler);\n    };\n  }\n\n  constructor(private callbackFunc: Function,\n              private selector: Function,\n              private args: any[],\n              private context: any,\n              public scheduler: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T | T[]>): Subscription {\n    const callbackFunc = this.callbackFunc;\n    const args = this.args;\n    const scheduler = this.scheduler;\n    let subject = this.subject;\n\n    if (!scheduler) {\n      if (!subject) {\n        subject = this.subject = new AsyncSubject<T>();\n        const handler = function handlerFn(this: any, ...innerArgs: any[]) {\n          const source = (<any>handlerFn).source;\n          const { selector, subject } = source;\n          const err = innerArgs.shift();\n\n          if (err) {\n            subject.error(err);\n          } else if (selector) {\n            const result = tryCatch(selector).apply(this, innerArgs);\n            if (result === errorObject) {\n              subject.error(errorObject.e);\n            } else {\n              subject.next(result);\n              subject.complete();\n            }\n          } else {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          }\n        };\n        // use named function instance to avoid closure.\n        (<any>handler).source = this;\n\n        const result = tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n        if (result === errorObject) {\n          subject.error(errorObject.e);\n        }\n      }\n      return subject.subscribe(subscriber);\n    } else {\n      return scheduler.schedule(dispatch, 0, { source: this, subscriber, context: this.context });\n    }\n  }\n}\n\ninterface DispatchState<T> {\n  source: BoundNodeCallbackObservable<T>;\n  subscriber: Subscriber<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: Action<DispatchState<T>>, state: DispatchState<T>) {\n  const self = (<Subscription> this);\n  const { source, subscriber, context } = state;\n  // XXX: cast to `any` to access to the private field in `source`.\n  const { callbackFunc, args, scheduler } = source as any;\n  let subject = source.subject;\n\n  if (!subject) {\n    subject = source.subject = new AsyncSubject<T>();\n\n    const handler = function handlerFn(this: any, ...innerArgs: any[]) {\n      const source = (<any>handlerFn).source;\n      const { selector, subject } = source;\n      const err = innerArgs.shift();\n\n      if (err) {\n        self.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n      } else if (selector) {\n        const result = tryCatch(selector).apply(this, innerArgs);\n        if (result === errorObject) {\n          self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n        } else {\n          self.add(scheduler.schedule(dispatchNext, 0, { value: result, subject }));\n        }\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        self.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n      }\n    };\n    // use named function to pass values in without closure\n    (<any>handler).source = source;\n\n    const result = tryCatch(callbackFunc).apply(context, args.concat(handler));\n    if (result === errorObject) {\n      self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n    }\n  }\n\n  self.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  /** @deprecated internal use only */ public _subject: Subject<T>;\n  /** @deprecated internal use only */ public _refCount: number = 0;\n  /** @deprecated internal use only */ public _connection: Subscription;\n  _isComplete = false;\n\n  constructor(/** @deprecated internal use only */ public source: Observable<T>,\n              /** @deprecated internal use only */ public subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  /** @deprecated internal use only */ public getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  /** @deprecated internal use only */ _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class DeferObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that, on subscribe, calls an Observable factory to\n   * make an Observable for each new Observer.\n   *\n   * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n   * is subscribed.\n   * </span>\n   *\n   * <img src=\"./img/defer.png\" width=\"100%\">\n   *\n   * `defer` allows you to create the Observable only when the Observer\n   * subscribes, and create a fresh Observable for each Observer. It waits until\n   * an Observer subscribes to it, and then it generates an Observable,\n   * typically with an Observable factory function. It does this afresh for each\n   * subscriber, so although each subscriber may think it is subscribing to the\n   * same Observable, in fact each subscriber gets its own individual\n   * Observable.\n   *\n   * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n   * var clicksOrInterval = Rx.Observable.defer(function () {\n   *   if (Math.random() > 0.5) {\n   *     return Rx.Observable.fromEvent(document, 'click');\n   *   } else {\n   *     return Rx.Observable.interval(1000);\n   *   }\n   * });\n   * clicksOrInterval.subscribe(x => console.log(x));\n   *\n   * // Results in the following behavior:\n   * // If the result of Math.random() is greater than 0.5 it will listen\n   * // for clicks anywhere on the \"document\"; when document is clicked it\n   * // will log a MouseEvent object to the console. If the result is less\n   * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n   *\n   * @see {@link create}\n   *\n   * @param {function(): SubscribableOrPromise} observableFactory The Observable\n   * factory function to invoke for each Observer that subscribes to the output\n   * Observable. May also return a Promise, which will be converted on the fly\n   * to an Observable.\n   * @return {Observable} An Observable whose Observers' subscriptions trigger\n   * an invocation of the given Observable factory function.\n   * @static true\n   * @name defer\n   * @owner Observable\n   */\n  static create<T>(observableFactory: () => SubscribableOrPromise<T> | void): Observable<T> {\n    return new DeferObservable(observableFactory);\n  }\n\n  constructor(private observableFactory: () => SubscribableOrPromise<T> | void) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    return new DeferSubscriber(subscriber, this.observableFactory);\n  }\n}\n\nclass DeferSubscriber<T> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private factory: () => SubscribableOrPromise<T> | void) {\n    super(destination);\n    this.tryDefer();\n  }\n\n  private tryDefer(): void {\n    try {\n      this._callFactory();\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private _callFactory(): void {\n    const result = this.factory();\n    if (result) {\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport interface DispatchArg {\n  error: any;\n  subscriber: any;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ErrorObservable extends Observable<any> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits an error notification.\n   *\n   * <span class=\"informal\">Just emits 'error', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/throw.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the error notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then emit an error.</caption>\n   * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x === 13 ?\n   *     Rx.Observable.throw('Thirteens are bad') :\n   *     Rx.Observable.of('a', 'b', 'c')\n   * );\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link of}\n   *\n   * @param {any} error The particular Error to pass to the error notification.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the error notification.\n   * @return {Observable} An error Observable: emits only the error notification\n   * using the given error argument.\n   * @static true\n   * @name throw\n   * @owner Observable\n   */\n  static create(error: any, scheduler?: IScheduler): ErrorObservable {\n    return new ErrorObservable(error, scheduler);\n  }\n\n  static dispatch(arg: DispatchArg) {\n    const { error, subscriber } = arg;\n    subscriber.error(error);\n  }\n\n  constructor(public error: any, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const error = this.error;\n    const scheduler = this.scheduler;\n\n    subscriber.syncErrorThrowable = true;\n\n    if (scheduler) {\n      return scheduler.schedule(ErrorObservable.dispatch, 0, {\n        error, subscriber\n      });\n    } else {\n      subscriber.error(error);\n    }\n  }\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isArray } from '../util/isArray';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ForkJoinObservable<T> extends Observable<T> {\n  constructor(private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super();\n  }\n\n  /* tslint:disable:max-line-length */\n  static create<T, T2>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>): Observable<[T, T2]>;\n  static create<T, T2, T3>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>): Observable<[T, T2, T3]>;\n  static create<T, T2, T3, T4>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>): Observable<[T, T2, T3, T4]>;\n  static create<T, T2, T3, T4, T5>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>): Observable<[T, T2, T3, T4, T5]>;\n  static create<T, T2, T3, T4, T5, T6>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, v6: SubscribableOrPromise<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n  static create<T, R>(v1: SubscribableOrPromise<T>, project: (v1: T) => R): Observable<R>;\n  static create<T, T2, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  static create<T, T2, T3, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  static create<T, T2, T3, T4, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, v6: SubscribableOrPromise<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n  static create<T>(sources: SubscribableOrPromise<T>[]): Observable<T[]>;\n  static create<R>(sources: SubscribableOrPromise<any>[]): Observable<R>;\n  static create<T, R>(sources: SubscribableOrPromise<T>[], project: (...values: Array<T>) => R): Observable<R>;\n  static create<R>(sources: SubscribableOrPromise<any>[], project: (...values: Array<any>) => R): Observable<R>;\n  static create<T>(...sources: SubscribableOrPromise<T>[]): Observable<T[]>;\n  static create<R>(...sources: SubscribableOrPromise<any>[]): Observable<R>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Joins last values emitted by passed Observables.\n   *\n   * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n   *\n   * <img src=\"./img/forkJoin.png\" width=\"100%\">\n   *\n   * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n   * or directly as arguments. If no input Observables are provided, resulting stream will complete\n   * immediately.\n   *\n   * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n   * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n   * array will have `n` values, where first value is the last thing emitted by the first Observable,\n   * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n   * not emit more than once and it will complete after that. If you need to emit combined values not only\n   * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n   * or {@link zip} instead.\n   *\n   * In order for resulting array to have the same length as the number of input Observables, whenever any of\n   * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n   * and it will not emit anything either, even if it already has some last values from other Observables.\n   * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n   * unless at any point some other Observable completes without emitting value, which brings us back to\n   * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n   * have to emit something at least once and complete.\n   *\n   * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n   * will be immediately unsubscribed.\n   *\n   * Optionally `forkJoin` accepts project function, that will be called with values which normally\n   * would land in emitted array. Whatever is returned by project function, will appear in output\n   * Observable instead. This means that default project can be thought of as a function that takes\n   * all its arguments and puts them into an array. Note that project function will be called only\n   * when output Observable is supposed to emit a result.\n   *\n   * @example <caption>Use forkJoin with operator emitting immediately</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.of(1, 2, 3, 4),\n   *   Rx.Observable.of(5, 6, 7, 8)\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // [4, 8]\n   * // \"This is how it ends!\"\n   *\n   *\n   * @example <caption>Use forkJoin with operator emitting after some time</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n   *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // [2, 3] after 3 seconds\n   * // \"This is how it ends!\" immediately after\n   *\n   *\n   * @example <caption>Use forkJoin with project function</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n   *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\n   *   (n, m) => n + m\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // 5 after 3 seconds\n   * // \"This is how it ends!\" immediately after\n   *\n   * @see {@link combineLatest}\n   * @see {@link zip}\n   *\n   * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\n   * passed directly to the operator.\n   * @param {function} [project] Function that takes values emitted by input Observables and returns value\n   * that will appear in resulting Observable instead of default array.\n   * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n   * or value from project function.\n   * @static true\n   * @name forkJoin\n   * @owner Observable\n   */\n  static create<T>(...sources: Array<SubscribableOrPromise<any> |\n                                  Array<SubscribableOrPromise<any>> |\n                                  ((...values: Array<any>) => any)>): Observable<T> {\n    if (sources === null || arguments.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    let resultSelector: (...values: Array<any>) => any = null;\n    if (typeof sources[sources.length - 1] === 'function') {\n      resultSelector = <(...values: Array<any>) => any>sources.pop();\n    }\n\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n    if (sources.length === 1 && isArray(sources[0])) {\n      sources = <Array<SubscribableOrPromise<any>>>sources[0];\n    }\n\n    if (sources.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    return new ForkJoinObservable(<Array<SubscribableOrPromise<any>>>sources, resultSelector);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private total: number;\n  private values: any[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<T>,\n              private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super(destination);\n\n    const len = sources.length;\n    this.total = len;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        (<any> innerSubscription).outerIndex = i;\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(<any>innerSub)._hasValue) {\n      (<any>innerSub)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const destination = this.destination;\n    const { haveValues, resultSelector, values } = this;\n    const len = values.length;\n\n    if (!(<any>innerSub)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      const value = resultSelector ? resultSelector.apply(this, values) : values;\n      destination.next(value);\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nconst toString: Function = Object.prototype.toString;\n\nexport type NodeStyleEventEmitter = {\n  addListener: (eventName: string, handler: NodeEventHandler) => void;\n  removeListener: (eventName: string, handler: NodeEventHandler) => void;\n};\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nexport type JQueryStyleEventEmitter = {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n};\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isNodeList(sourceObj: any): sourceObj is NodeList {\n  return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\n\nfunction isHTMLCollection(sourceObj: any): sourceObj is HTMLCollection {\n  return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is EventTarget {\n  return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n\nexport type EventTargetLike = EventTarget | NodeStyleEventEmitter | JQueryStyleEventEmitter | NodeList | HTMLCollection;\n\nexport type EventListenerOptions = {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n} | boolean;\n\nexport type SelectorMethodSignature<T> = (...args: Array<any>) => T;\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromEventObservable<T> extends Observable<T> {\n\n  /* tslint:disable:max-line-length */\n  static create<T>(target: EventTargetLike, eventName: string): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, selector: SelectorMethodSignature<T>): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, options: EventListenerOptions): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, options: EventListenerOptions, selector: SelectorMethodSignature<T>): Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Creates an Observable that emits events of a specific type coming from the\n   * given event target.\n   *\n   * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n   * EventEmitter events or others.</span>\n   *\n   * <img src=\"./img/fromEvent.png\" width=\"100%\">\n   *\n   * `fromEvent` accepts as a first argument event target, which is an object with methods\n   * for registering event handler functions. As a second argument it takes string that indicates\n   * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n   * which are described in detail below. If your event target does not match any of the ones listed,\n   * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n   * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n   * handler functions have different names, but they all accept a string describing event type\n   * and function itself, which will be called whenever said event happens.\n   *\n   * Every time resulting Observable is subscribed, event handler function will be registered\n   * to event target on given event type. When that event fires, value\n   * passed as a first argument to registered function will be emitted by output Observable.\n   * When Observable is unsubscribed, function will be unregistered from event target.\n   *\n   * Note that if event target calls registered function with more than one argument, second\n   * and following arguments will not appear in resulting stream. In order to get access to them,\n   * you can pass to `fromEvent` optional project function, which will be called with all arguments\n   * passed to event handler. Output Observable will then emit value returned by project function,\n   * instead of the usual value.\n   *\n   * Remember that event targets listed below are checked via duck typing. It means that\n   * no matter what kind of object you have and no matter what environment you work in,\n   * you can safely use `fromEvent` on that object if it exposes described methods (provided\n   * of course they behave as was described above). So for example if Node.js library exposes\n   * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n   * a good choice.\n   *\n   * If the API you use is more callback then event handler oriented (subscribed\n   * callback function fires only once and thus there is no need to manually\n   * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n   * instead.\n   *\n   * `fromEvent` supports following types of event targets:\n   *\n   * **DOM EventTarget**\n   *\n   * This is an object with `addEventListener` and `removeEventListener` methods.\n   *\n   * In the browser, `addEventListener` accepts - apart from event type string and event\n   * handler function arguments - optional third parameter, which is either an object or boolean,\n   * both used for additional configuration how and when passed function will be called. When\n   * `fromEvent` is used with event target of that type, you can provide this values\n   * as third parameter as well.\n   *\n   * **Node.js EventEmitter**\n   *\n   * An object with `addListener` and `removeListener` methods.\n   *\n   * **JQuery-style event target**\n   *\n   * An object with `on` and `off` methods\n   *\n   * **DOM NodeList**\n   *\n   * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n   *\n   * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n   * it contains and install event handler function in every of them. When returned Observable\n   * is unsubscribed, function will be removed from all Nodes.\n   *\n   * **DOM HtmlCollection**\n   *\n   * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n   * installed and removed in each of elements.\n   *\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * var clicks = Rx.Observable.fromEvent(document, 'click');\n   * clicks.subscribe(x => console.log(x));\n   *\n   * // Results in:\n   * // MouseEvent object logged to console every time a click\n   * // occurs on the document.\n   *\n   *\n   * @example <caption>Use addEventListener with capture option</caption>\n   * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n   *                                                                          // which will be passed to addEventListener\n   * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n   *\n   * clicksInDocument.subscribe(() => console.log('document'));\n   * clicksInDiv.subscribe(() => console.log('div'));\n   *\n   * // By default events bubble UP in DOM tree, so normally\n   * // when we would click on div in document\n   * // \"div\" would be logged first and then \"document\".\n   * // Since we specified optional `capture` option, document\n   * // will catch event when it goes DOWN DOM tree, so console\n   * // will log \"document\" and then \"div\".\n   *\n   * @see {@link bindCallback}\n   * @see {@link bindNodeCallback}\n   * @see {@link fromEventPattern}\n   *\n   * @param {EventTargetLike} target The DOM EventTarget, Node.js\n   * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n   * @param {string} eventName The event name of interest, being emitted by the\n   * `target`.\n   * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n   * @param {SelectorMethodSignature<T>} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEvent\n   * @owner Observable\n   */\n  static create<T>(target: EventTargetLike,\n                   eventName: string,\n                   options?: EventListenerOptions | SelectorMethodSignature<T>,\n                   selector?: SelectorMethodSignature<T>): Observable<T> {\n    if (isFunction(options)) {\n      selector = <any>options;\n      options = undefined;\n    }\n    return new FromEventObservable(target, eventName, selector, options as EventListenerOptions | undefined);\n  }\n\n  constructor(private sourceObj: EventTargetLike,\n              private eventName: string,\n              private selector?: SelectorMethodSignature<T>,\n              private options?: EventListenerOptions) {\n    super();\n  }\n\n  private static setupSubscription<T>(sourceObj: EventTargetLike,\n                                      eventName: string,\n                                      handler: Function,\n                                      subscriber: Subscriber<T>,\n                                      options?: EventListenerOptions) {\n    let unsubscribe: () => void;\n    if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n      for (let i = 0, len = sourceObj.length; i < len; i++) {\n        FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n      }\n    } else if (isEventTarget(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.addEventListener(eventName, <EventListener>handler, <boolean>options);\n      unsubscribe = () => source.removeEventListener(eventName, <EventListener>handler, <boolean>options);\n    } else if (isJQueryStyleEventEmitter(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.on(eventName, handler);\n      unsubscribe = () => source.off(eventName, handler);\n    } else if (isNodeStyleEventEmitter(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.addListener(eventName, handler as NodeEventHandler);\n      unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n    } else {\n      throw new TypeError('Invalid event target');\n    }\n\n    subscriber.add(new Subscription(unsubscribe));\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const sourceObj = this.sourceObj;\n    const eventName = this.eventName;\n    const options = this.options;\n    const selector = this.selector;\n    let handler = selector ? (...args: any[]) => {\n      let result = tryCatch(selector)(...args);\n      if (result === errorObject) {\n        subscriber.error(errorObject.e);\n      } else {\n        subscriber.next(result);\n      }\n    } : (e: any) => subscriber.next(e);\n\n    FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n  }\n}\n","import { isFunction } from '../util/isFunction';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromEventPatternObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable from an API based on addHandler/removeHandler\n   * functions.\n   *\n   * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n   * Observable.</span>\n   *\n   * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n   *\n   * Creates an Observable by using the `addHandler` and `removeHandler`\n   * functions to add and remove the handlers, with an optional selector\n   * function to project the event arguments to a result. The `addHandler` is\n   * called when the output Observable is subscribed, and `removeHandler` is\n   * called when the Subscription is unsubscribed.\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * function addClickHandler(handler) {\n   *   document.addEventListener('click', handler);\n   * }\n   *\n   * function removeClickHandler(handler) {\n   *   document.removeEventListener('click', handler);\n   * }\n   *\n   * var clicks = Rx.Observable.fromEventPattern(\n   *   addClickHandler,\n   *   removeClickHandler\n   * );\n   * clicks.subscribe(x => console.log(x));\n   *\n   * @see {@link from}\n   * @see {@link fromEvent}\n   *\n   * @param {function(handler: Function): any} addHandler A function that takes\n   * a `handler` function as argument and attaches it somehow to the actual\n   * source of events.\n   * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n   * takes a `handler` function as argument and removes it in case it was\n   * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n   * removeHandler function will forward it.\n   * @param {function(...args: any): T} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEventPattern\n   * @owner Observable\n   */\n  static create<T>(addHandler: (handler: Function) => any,\n                   removeHandler?: (handler: Function, signal?: any) => void,\n                   selector?: (...args: Array<any>) => T) {\n    return new FromEventPatternObservable(addHandler, removeHandler, selector);\n  }\n\n  constructor(private addHandler: (handler: Function) => any,\n              private removeHandler?: (handler: Function, signal?: any) => void,\n              private selector?: (...args: Array<any>) => T) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const removeHandler = this.removeHandler;\n\n    const handler = !!this.selector ? (...args: Array<any>) => {\n      this._callSelector(subscriber, args);\n    } : function(e: any) { subscriber.next(e); };\n\n    const retValue = this._callAddHandler(handler, subscriber);\n\n    if (!isFunction(removeHandler)) {\n      return;\n    }\n\n    subscriber.add(new Subscription(() => {\n      //TODO: determine whether or not to forward to error handler\n      removeHandler(handler, retValue) ;\n    }));\n  }\n\n  private _callSelector(subscriber: Subscriber<T>, args: Array<any>): void {\n    try {\n      const result: T = this.selector(...args);\n      subscriber.next(result);\n    }\n    catch (e) {\n      subscriber.error(e);\n    }\n  }\n\n  private _callAddHandler(handler: (e: any) => void, errorSubscriber: Subscriber<T>): any | null {\n    try {\n      return this.addHandler(handler) || null;\n    }\n    catch (e) {\n      errorSubscriber.error(e);\n    }\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Observable } from '../Observable' ;\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\n\nconst selfSelector = <T>(value: T) => value;\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n  */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n  */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * IScheduler to use for generation process.\n   * By default, a generator starts immediately.\n  */\n  scheduler?: IScheduler;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class GenerateObservable<T, S> extends Observable<T> {\n  constructor(private initialState: S,\n              private condition: ConditionFunc<S>,\n              private iterate: IterateFunc<S>,\n              private resultSelector: ResultFunc<S, T>,\n              private scheduler?: IScheduler) {\n      super();\n  }\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1, x => x);\n   *\n   * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n   * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, x => x + 1, Rx.Scheduler.asap);\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {S} initialState Initial state.\n   * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n   * @param {function (state: S): S} iterate Iteration step function.\n   * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} on which to run the generator loop. If not provided, defaults to emit immediately.\n   * @returns {Observable<T>} The generated sequence.\n   */\n  static create<T, S>(initialState: S,\n                      condition: ConditionFunc<S>,\n                      iterate: IterateFunc<S>,\n                      resultSelector: ResultFunc<S, T>,\n                      scheduler?: IScheduler): Observable<T>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload uses state as an emitted value.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1);\n   *\n   * @example <caption>Using asap scheduler, produces sequence of 1, 2, 4, then completes.</caption>\n   * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, Rx.Scheduler.asap);\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {S} initialState Initial state.\n   * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n   * @param {function (state: S): S} iterate Iteration step function.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} on which to run the generator loop. If not provided, defaults to emit immediately.\n   * @returns {Observable<S>} The generated sequence.\n   */\n  static create<S>(initialState: S,\n                   condition: ConditionFunc<S>,\n                   iterate: IterateFunc<S>,\n                   scheduler?: IScheduler): Observable<S>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload accepts options object that might contain initial state, iterate,\n   * condition and scheduler.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate({\n   *   initialState: 0,\n   *   condition: x => x < 10,\n   *   iterate: x => x + 1\n   * });\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n   * @returns {Observable<S>} The generated sequence.\n   */\n  static create<S>(options: GenerateBaseOptions<S>): Observable<S>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload accepts options object that might contain initial state, iterate,\n   * condition, result selector and scheduler.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate({\n   *   initialState: 0,\n   *   condition: x => x < 10,\n   *   iterate: x => x + 1,\n   *   resultSelector: x => x\n   * });\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n   * @returns {Observable<T>} The generated sequence.\n   */\n  static create<T, S>(options: GenerateOptions<T, S>): Observable<T>\n\n  static create<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                      condition?: ConditionFunc<S>,\n                      iterate?: IterateFunc<S>,\n                      resultSelectorOrObservable?: (ResultFunc<S, T>) | IScheduler,\n                      scheduler?: IScheduler): Observable<T> {\n    if (arguments.length == 1) {\n      return new GenerateObservable<T, S>(\n        (<GenerateOptions<T, S>>initialStateOrOptions).initialState,\n        (<GenerateOptions<T, S>>initialStateOrOptions).condition,\n        (<GenerateOptions<T, S>>initialStateOrOptions).iterate,\n        (<GenerateOptions<T, S>>initialStateOrOptions).resultSelector || selfSelector as ResultFunc<S, T>,\n        (<GenerateOptions<T, S>>initialStateOrOptions).scheduler);\n    }\n\n    if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n      return new GenerateObservable<T, S>(\n        <S>initialStateOrOptions,\n        condition,\n        iterate,\n        selfSelector as ResultFunc<S, T>,\n        <IScheduler>resultSelectorOrObservable);\n    }\n\n    return new GenerateObservable<T, S>(\n      <S>initialStateOrOptions,\n      condition,\n      iterate,\n      <ResultFunc<S, T>>resultSelectorOrObservable,\n      <IScheduler>scheduler);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription | Function | void {\n    let state = this.initialState;\n    if (this.scheduler) {\n      return this.scheduler.schedule<SchedulerState<T, S>>(GenerateObservable.dispatch, 0, {\n        subscriber,\n        iterate: this.iterate,\n        condition: this.condition,\n        resultSelector: this.resultSelector,\n        state });\n    }\n    const { condition, resultSelector, iterate } = this;\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n    } while (true);\n  }\n\n  private static dispatch<T, S>(state: SchedulerState<T, S>): Subscription | void {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n      return;\n    }\n    if (state.needIterate) {\n      try {\n        state.state = state.iterate(state.state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n    } else {\n      state.needIterate = true;\n    }\n    if (condition) {\n      let conditionResult: boolean;\n      try {\n        conditionResult = condition(state.state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n      if (!conditionResult) {\n        subscriber.complete();\n        return;\n      }\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    let value: T;\n    try {\n      value = state.resultSelector(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return;\n    }\n    if (subscriber.closed) {\n      return;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n    return (<Action<SchedulerState<T, S>>><any>this).schedule(state);\n  }\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IfObservable<T, R> extends Observable<T> {\n\n  static create<T, R>(condition: () => boolean | void,\n                      thenSource?: SubscribableOrPromise<T> | void,\n                      elseSource?: SubscribableOrPromise<R> | void): Observable<T|R> {\n    return new IfObservable(condition, thenSource, elseSource);\n  }\n\n  constructor(private condition: () => boolean | void,\n              private thenSource?: SubscribableOrPromise<T> | void,\n              private elseSource?: SubscribableOrPromise<R> | void) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T|R>): TeardownLogic {\n    const { condition, thenSource, elseSource } = this;\n\n    return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n  }\n}\n\nclass IfSubscriber<T, R> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private condition: () => boolean | void,\n              private thenSource?: SubscribableOrPromise<T> | void,\n              private elseSource?: SubscribableOrPromise<R> | void) {\n    super(destination);\n    this.tryIf();\n  }\n\n  private tryIf(): void {\n    const { condition, thenSource, elseSource } = this;\n\n    let result: boolean;\n    try {\n      result = <boolean>condition();\n      const source = result ? thenSource : elseSource;\n\n      if (source) {\n        this.add(subscribeToResult(this, source));\n      } else {\n        this._complete();\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IntervalObservable extends Observable<number> {\n  /**\n   * Creates an Observable that emits sequential numbers every specified\n   * interval of time, on a specified IScheduler.\n   *\n   * <span class=\"informal\">Emits incremental numbers periodically in time.\n   * </span>\n   *\n   * <img src=\"./img/interval.png\" width=\"100%\">\n   *\n   * `interval` returns an Observable that emits an infinite sequence of\n   * ascending integers, with a constant interval of time of your choosing\n   * between those emissions. The first emission is not sent immediately, but\n   * only after the first period has passed. By default, this operator uses the\n   * `async` IScheduler to provide a notion of time, but you may pass any\n   * IScheduler to it.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n   * var numbers = Rx.Observable.interval(1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link delay}\n   *\n   * @param {number} [period=0] The interval size in milliseconds (by default)\n   * or the time unit determined by the scheduler's clock.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a sequential number each time\n   * interval.\n   * @static true\n   * @name interval\n   * @owner Observable\n   */\n  static create(period: number = 0,\n                scheduler: IScheduler = async): Observable<number> {\n    return new IntervalObservable(period, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { index, subscriber, period } = state;\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index += 1;\n\n    (<any> this).schedule(state, period);\n  }\n\n  constructor(private period: number = 0,\n              private scheduler: IScheduler = async) {\n    super();\n    if (!isNumeric(period) || period < 0) {\n      this.period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = async;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>) {\n    const index = 0;\n    const period = this.period;\n    const scheduler = this.scheduler;\n\n    subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n      index, subscriber, period\n    }));\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class NeverObservable<T> extends Observable<T> {\n  /**\n   * Creates an Observable that emits no items to the Observer.\n   *\n   * <span class=\"informal\">An Observable that never emits anything.</span>\n   *\n   * <img src=\"./img/never.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that emits\n   * neither values nor errors nor the completion notification. It can be used\n   * for testing purposes or for composing with other Observables. Please note\n   * that by never emitting a complete notification, this Observable keeps the\n   * subscription from being disposed automatically. Subscriptions need to be\n   * manually disposed.\n   *\n   * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n   * function info() {\n   *   console.log('Will not be called');\n   * }\n   * var result = Rx.Observable.never().startWith(7);\n   * result.subscribe(x => console.log(x), info, info);\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @return {Observable} A \"never\" Observable: never emits anything.\n   * @static true\n   * @name never\n   * @owner Observable\n   */\n  static create<T>() {\n    return new NeverObservable<T>();\n  }\n\n  constructor() {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): void {\n    noop();\n  }\n}\n","import { IScheduler } from '../Scheduler';\r\nimport { Action } from '../scheduler/Action';\r\nimport { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { TeardownLogic } from '../Subscription';\r\n\r\ninterface PairsContext<T> {\r\n  obj: Object;\r\n  keys: Array<string>;\r\n  length: number;\r\n  index: number;\r\n  subscriber: Subscriber<Array<string | T>>;\r\n}\r\n\r\nfunction dispatch<T>(this: Action<PairsContext<T>>, state: PairsContext<T>) {\r\n  const {obj, keys, length, index, subscriber} = state;\r\n\r\n  if (index === length) {\r\n    subscriber.complete();\r\n    return;\r\n  }\r\n\r\n  const key = keys[index];\r\n  subscriber.next([key, obj[key]]);\r\n\r\n  state.index = index + 1;\r\n\r\n  this.schedule(state);\r\n}\r\n\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nexport class PairsObservable<T> extends Observable<Array<string | T>> {\r\n  private keys: Array<string>;\r\n\r\n  /**\r\n   * Convert an object into an observable sequence of [key, value] pairs\r\n   * using an optional IScheduler to enumerate the object.\r\n   *\r\n   * @example <caption>Converts a javascript object to an Observable</caption>\r\n   * var obj = {\r\n   *   foo: 42,\r\n   *   bar: 56,\r\n   *   baz: 78\r\n   * };\r\n   *\r\n   * var source = Rx.Observable.pairs(obj);\r\n   *\r\n   * var subscription = source.subscribe(\r\n   *   function (x) {\r\n   *     console.log('Next: %s', x);\r\n   *   },\r\n   *   function (err) {\r\n   *     console.log('Error: %s', err);\r\n   *   },\r\n   *   function () {\r\n   *     console.log('Completed');\r\n   *   });\r\n   *\r\n   * @param {Object} obj The object to inspect and turn into an\r\n   * Observable sequence.\r\n   * @param {Scheduler} [scheduler] An optional IScheduler to run the\r\n   * enumeration of the input sequence on.\r\n   * @returns {(Observable<Array<string | T>>)} An observable sequence of\r\n   * [key, value] pairs from the object.\r\n   */\r\n  static create<T>(obj: Object, scheduler?: IScheduler): Observable<Array<string | T>> {\r\n    return new PairsObservable<T>(obj, scheduler);\r\n  }\r\n\r\n  constructor(private obj: Object, private scheduler?: IScheduler) {\r\n    super();\r\n    this.keys = Object.keys(obj);\r\n  }\r\n\r\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<Array<string | T>>): TeardownLogic {\r\n    const {keys, scheduler} = this;\r\n    const length = keys.length;\r\n\r\n    if (scheduler) {\r\n      return scheduler.schedule(dispatch, 0, {\r\n        obj: this.obj, keys, length, index: 0, subscriber\r\n      });\r\n    } else {\r\n      for (let idx = 0; idx < length; idx++) {\r\n        const key = keys[idx];\r\n        subscriber.next([key, this.obj[key]]);\r\n      }\r\n      subscriber.complete();\r\n    }\r\n  }\r\n}\r\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class RangeObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that emits a sequence of numbers within a specified\n   * range.\n   *\n   * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n   *\n   * <img src=\"./img/range.png\" width=\"100%\">\n   *\n   * `range` operator emits a range of sequential integers, in order, where you\n   * select the `start` of the range and its `length`. By default, uses no\n   * IScheduler and just delivers the notifications synchronously, but may use\n   * an optional IScheduler to regulate those deliveries.\n   *\n   * @example <caption>Emits the numbers 1 to 10</caption>\n   * var numbers = Rx.Observable.range(1, 10);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link interval}\n   *\n   * @param {number} [start=0] The value of the first integer in the sequence.\n   * @param {number} [count=0] The number of sequential integers to generate.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the notifications.\n   * @return {Observable} An Observable of numbers that emits a finite range of\n   * sequential integers.\n   * @static true\n   * @name range\n   * @owner Observable\n   */\n  static create(start: number = 0,\n                count: number = 0,\n                scheduler?: IScheduler): Observable<number> {\n    return new RangeObservable(start, count, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { start, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(start);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n    state.start = start + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  private start: number;\n  private _count: number;\n  private scheduler: IScheduler;\n\n  constructor(start: number,\n              count: number,\n              scheduler?: IScheduler) {\n    super();\n    this.start = start;\n    this._count = count;\n    this.scheduler = scheduler;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    let index = 0;\n    let start = this.start;\n    const count = this._count;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(RangeObservable.dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(start++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: IScheduler = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  static dispatch<T>(this: Action<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: IScheduler = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { AnonymousSubscription, TeardownLogic } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class UsingObservable<T> extends Observable<T> {\n\n  static create<T>(resourceFactory: () => AnonymousSubscription | void,\n                   observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void): Observable<T> {\n    return new UsingObservable<T>(resourceFactory, observableFactory);\n  }\n\n  constructor(private resourceFactory: () => AnonymousSubscription | void,\n              private observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const { resourceFactory, observableFactory } = this;\n\n    let resource: AnonymousSubscription;\n\n    try {\n      resource = <AnonymousSubscription>resourceFactory();\n      return new UsingSubscriber(subscriber, resource, observableFactory);\n    } catch (err) {\n      subscriber.error(err);\n    }\n  }\n}\n\nclass UsingSubscriber<T> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private resource: AnonymousSubscription,\n              private observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void) {\n    super(destination);\n    destination.add(resource);\n    this.tryUse();\n  }\n\n  private tryUse(): void {\n    try {\n      const source = this.observableFactory.call(this, this.resource);\n      if (source) {\n        this.add(subscribeToResult(this, source));\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n}\n","import {  BoundCallbackObservable  } from './BoundCallbackObservable';\n\nexport const bindCallback = BoundCallbackObservable.create;","import {  BoundNodeCallbackObservable  } from './BoundNodeCallbackObservable';\n\nexport const bindNodeCallback = BoundNodeCallbackObservable.create;","import {  Observable, ObservableInput  } from '../Observable';\nimport {  IScheduler  } from '../Scheduler';\nimport {  isScheduler  } from '../util/isScheduler';\nimport {  isArray  } from '../util/isArray';\nimport {  ArrayObservable  } from './ArrayObservable';\nimport {  CombineLatestOperator  } from '../operators/combineLatest';\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(v1: ObservableInput<T>, project: (v1: T) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R, scheduler?: IScheduler): Observable<R>;\n\nexport function combineLatest<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function combineLatest<T>(array: ObservableInput<T>[], scheduler?: IScheduler): Observable<T[]>;\nexport function combineLatest<R>(array: ObservableInput<any>[], scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T>(...observables: Array<ObservableInput<T> | IScheduler>): Observable<T[]>;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R) | IScheduler>): Observable<R>;\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | IScheduler>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<any | ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    (((...values: Array<any>) => R)) |\n                                                    IScheduler>): Observable<R> {\n  let project: (...values: Array<any>) => R =  null;\n  let scheduler: IScheduler = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = <IScheduler>observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<any>>>observables[0];\n  }\n\n  return new ArrayObservable(observables, scheduler).lift(new CombineLatestOperator<T, R>(project));\n}","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function concat<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function concat<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: (ObservableInput<T> | IScheduler)[]): Observable<T>;\nexport function concat<T, R>(...observables: (ObservableInput<any> | IScheduler)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | IScheduler>): Observable<R> {\n  if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n    return from(<any>observables[0]);\n  }\n  return concatAll()(of(...observables)) as Observable<R>;\n}\n","import {  DeferObservable  } from './DeferObservable';\n\nexport const defer = DeferObservable.create;","import { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { TeardownLogic } from '../../Subscription';\nimport { map } from '../../operators/map';\n\nexport interface AjaxRequest {\n  url?: string;\n  body?: any;\n  user?: string;\n  async?: boolean;\n  method?: string;\n  headers?: Object;\n  timeout?: number;\n  password?: string;\n  hasContent?: boolean;\n  crossDomain?: boolean;\n  withCredentials?: boolean;\n  createXHR?: () => XMLHttpRequest;\n  progressSubscriber?: Subscriber<any>;\n  responseType?: string;\n}\n\nfunction getCORSRequest(this: AjaxRequest): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest(): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    let progId: string;\n    try {\n      const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (let i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {\n          //suppress exceptions\n        }\n      }\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport interface AjaxCreationMethod {\n  (urlOrRequest: string | AjaxRequest): Observable<AjaxResponse>;\n  get(url: string, headers?: Object): Observable<AjaxResponse>;\n  post(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  put(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  patch(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  delete(url: string, headers?: Object): Observable<AjaxResponse>;\n  getJSON<T>(url: string, headers?: Object): Observable<T>;\n}\n\nexport function ajaxGet(url: string, headers: Object = null) {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, headers });\n};\n\nexport function ajaxPost(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'POST', url, body, headers });\n};\n\nexport function ajaxDelete(url: string, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'DELETE', url, headers });\n};\n\nexport function ajaxPut(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PUT', url, body, headers });\n};\n\nexport function ajaxPatch(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PATCH', url, body, headers });\n};\n\nconst mapResponse = map((x: AjaxResponse, index: number) => x.response);\n\nexport function ajaxGetJSON<T>(url: string, headers?: Object): Observable<T> {\n  return mapResponse(\n    new AjaxObservable<AjaxResponse>({\n      method: 'GET',\n      url,\n      responseType: 'json',\n      headers\n    })\n  );\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class AjaxObservable<T> extends Observable<T> {\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n  static create: AjaxCreationMethod = (() => {\n    const create: any = (urlOrRequest: string | AjaxRequest) => {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n\n    return <AjaxCreationMethod>create;\n  })();\n\n  private request: AjaxRequest;\n\n  constructor(urlOrRequest: string | AjaxRequest) {\n    super();\n\n    const request: AjaxRequest = {\n      async: true,\n      createXHR: function(this: AjaxRequest) {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (const prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    return new AjaxSubscriber(subscriber, this.request);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AjaxSubscriber<T> extends Subscriber<Event> {\n  private xhr: XMLHttpRequest;\n  private done: boolean = false;\n\n  constructor(destination: Subscriber<T>, public request: AjaxRequest) {\n    super(destination);\n\n    const headers = request.headers = request.headers || {};\n\n    // force CORS if requested\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    // ensure content type is set\n    if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // properly serialize body\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\n    this.send();\n  }\n\n  next(e: Event): void {\n    this.done = true;\n    const { xhr, request, destination } = this;\n    const response = new AjaxResponse(e, xhr, request);\n\n    destination.next(response);\n  }\n\n  private send(): XMLHttpRequest {\n    const {\n      request,\n      request: { user, method, url, async, password, headers, body }\n    } = this;\n    const createXHR = request.createXHR;\n    const xhr: XMLHttpRequest = tryCatch(createXHR).call(request);\n\n    if (<any>xhr === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      this.xhr = xhr;\n\n      // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n      this.setupEvents(xhr, request);\n      // open XHR\n      let result: any;\n      if (user) {\n        result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n\n      // timeout, responseType and withCredentials can be set once the XHR is open\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType as any;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n\n      // set headers\n      this.setHeaders(xhr, headers);\n\n      // finally send the request\n      result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n    }\n\n    return xhr;\n  }\n\n  private serializeBody(body: any, contentType?: string) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      const splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  }\n\n  private setHeaders(xhr: XMLHttpRequest, headers: Object) {\n    for (let key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  private setupEvents(xhr: XMLHttpRequest, request: AjaxRequest) {\n    const progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(this: XMLHttpRequest, e: ProgressEvent) {\n      const {subscriber, progressSubscriber, request } = (<any>xhrTimeout);\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    };\n    xhr.ontimeout = xhrTimeout;\n    (<any>xhrTimeout).request = request;\n    (<any>xhrTimeout).subscriber = this;\n    (<any>xhrTimeout).progressSubscriber = progressSubscriber;\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        let xhrProgress: (e: ProgressEvent) => void;\n        xhrProgress = function(e: ProgressEvent) {\n          const { progressSubscriber } = (<any>xhrProgress);\n          progressSubscriber.next(e);\n        };\n        if (root.XDomainRequest) {\n          xhr.onprogress = xhrProgress;\n        } else {\n          xhr.upload.onprogress = xhrProgress;\n        }\n        (<any>xhrProgress).progressSubscriber = progressSubscriber;\n      }\n      let xhrError: (e: ErrorEvent) => void;\n      xhrError = function(this: XMLHttpRequest, e: ErrorEvent) {\n        const { progressSubscriber, subscriber, request } = (<any>xhrError);\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n      xhr.onerror = xhrError;\n      (<any>xhrError).request = request;\n      (<any>xhrError).subscriber = this;\n      (<any>xhrError).progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(this: XMLHttpRequest, e: ProgressEvent) {\n      const { subscriber, progressSubscriber, request } = (<any>xhrReadyStateChange);\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = this.status === 1223 ? 204 : this.status;\n        let response: any = (this.responseType === 'text' ?  (\n          this.response || this.responseText) : this.response);\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          subscriber.error(new AjaxError('ajax error ' + status, this, request));\n        }\n      }\n    };\n    xhr.onreadystatechange = xhrReadyStateChange;\n    (<any>xhrReadyStateChange).subscriber = this;\n    (<any>xhrReadyStateChange).progressSubscriber = progressSubscriber;\n    (<any>xhrReadyStateChange).request = request;\n  }\n\n  unsubscribe() {\n    const { done, xhr } = this;\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n    super.unsubscribe();\n  }\n}\n\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport class AjaxResponse {\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  /** @type {string} The raw responseText */\n  responseText: string;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  constructor(public originalEvent: Event, public xhr: XMLHttpRequest, public request: AjaxRequest) {\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport class AjaxError extends Error {\n  /** @type {XMLHttpRequest} The XHR instance associated with the error */\n  xhr: XMLHttpRequest;\n\n  /** @type {AjaxRequest} The AjaxRequest associated with the error */\n  request: AjaxRequest;\n\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  constructor(message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n    super(message);\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\nfunction parseXhrResponse(responseType: string, xhr: XMLHttpRequest) {\n  switch (responseType) {\n    case 'json':\n        if ('response' in xhr) {\n          //IE does not support json as responseType, parse it internally\n          return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n        } else {\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return JSON.parse((xhr as any).responseText || 'null');\n        }\n      case 'xml':\n        return xhr.responseXML;\n      case 'text':\n      default:\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return  ('response' in xhr) ? xhr.response : (xhr as any).responseText;\n  }\n}\n\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport class AjaxTimeoutError extends AjaxError {\n  constructor(xhr: XMLHttpRequest, request: AjaxRequest) {\n    super('ajax timeout', xhr, request);\n  }\n}\n","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { Operator } from '../../Operator';\nimport { root } from '../../util/root';\nimport { ReplaySubject } from '../../ReplaySubject';\nimport { Observer, NextObserver } from '../../Observer';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { assign } from '../../util/assign';\n\nexport interface WebSocketSubjectConfig {\n  url: string;\n  protocol?: string | Array<string>;\n  resultSelector?: <T>(e: MessageEvent) => T;\n  openObserver?: NextObserver<Event>;\n  closeObserver?: NextObserver<CloseEvent>;\n  closingObserver?: NextObserver<void>;\n  WebSocketCtor?: { new(url: string, protocol?: string|Array<string>): WebSocket };\n  binaryType?: 'blob' | 'arraybuffer';\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class WebSocketSubject<T> extends AnonymousSubject<T> {\n\n  url: string;\n  protocol: string|Array<string>;\n  socket: WebSocket;\n  openObserver: NextObserver<Event>;\n  closeObserver: NextObserver<CloseEvent>;\n  closingObserver: NextObserver<void>;\n  WebSocketCtor: { new(url: string, protocol?: string|Array<string>): WebSocket };\n  binaryType?: 'blob' | 'arraybuffer';\n\n  private _output: Subject<T>;\n\n  resultSelector(e: MessageEvent) {\n    return JSON.parse(e.data);\n  }\n\n  /**\n   * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n   *\n   * @example <caption>Wraps browser WebSocket</caption>\n   *\n   * let socket$ = Observable.webSocket('ws://localhost:8081');\n   *\n   * socket$.subscribe(\n   *    (msg) => console.log('message received: ' + msg),\n   *    (err) => console.log(err),\n   *    () => console.log('complete')\n   *  );\n   *\n   * socket$.next(JSON.stringify({ op: 'hello' }));\n   *\n   * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>\n   *\n   * import { w3cwebsocket } from 'websocket';\n   *\n   * let socket$ = Observable.webSocket({\n   *   url: 'ws://localhost:8081',\n   *   WebSocketCtor: w3cwebsocket\n   * });\n   *\n   * socket$.subscribe(\n   *    (msg) => console.log('message received: ' + msg),\n   *    (err) => console.log(err),\n   *    () => console.log('complete')\n   *  );\n   *\n   * socket$.next(JSON.stringify({ op: 'hello' }));\n   *\n   * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object\n   * @return {WebSocketSubject}\n   * @static true\n   * @name webSocket\n   * @owner Observable\n   */\n  static create<T>(urlConfigOrSource: string | WebSocketSubjectConfig): WebSocketSubject<T> {\n    return new WebSocketSubject<T>(urlConfigOrSource);\n  }\n\n  constructor(urlConfigOrSource: string | WebSocketSubjectConfig | Observable<T>, destination?: Observer<T>) {\n    if (urlConfigOrSource instanceof Observable) {\n      super(destination, <Observable<T>> urlConfigOrSource);\n    } else {\n      super();\n      this.WebSocketCtor = root.WebSocket;\n      this._output = new Subject<T>();\n      if (typeof urlConfigOrSource === 'string') {\n        this.url = urlConfigOrSource;\n      } else {\n        // WARNING: config object could override important members here.\n        assign(this, urlConfigOrSource);\n      }\n      if (!this.WebSocketCtor) {\n        throw new Error('no WebSocket constructor can be found');\n      }\n      this.destination = new ReplaySubject();\n    }\n  }\n\n  lift<R>(operator: Operator<T, R>): WebSocketSubject<R> {\n    const sock = new WebSocketSubject<R>(this, <any> this.destination);\n    sock.operator = operator;\n    return sock;\n  }\n\n  private _resetState() {\n    this.socket = null;\n    if (!this.source) {\n      this.destination = new ReplaySubject();\n    }\n    this._output = new Subject<T>();\n  }\n\n  // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n  multiplex(subMsg: () => any, unsubMsg: () => any, messageFilter: (value: T) => boolean) {\n    const self = this;\n    return new Observable((observer: Observer<any>) => {\n      const result = tryCatch(subMsg)();\n      if (result === errorObject) {\n        observer.error(errorObject.e);\n      } else {\n        self.next(result);\n      }\n\n      let subscription = self.subscribe(x => {\n        const result = tryCatch(messageFilter)(x);\n        if (result === errorObject) {\n          observer.error(errorObject.e);\n        } else if (result) {\n          observer.next(x);\n        }\n      },\n        err => observer.error(err),\n        () => observer.complete());\n\n      return () => {\n        const result = tryCatch(unsubMsg)();\n        if (result === errorObject) {\n          observer.error(errorObject.e);\n        } else {\n          self.next(result);\n        }\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  private _connectSocket() {\n    const { WebSocketCtor } = this;\n    const observer = this._output;\n\n    let socket: WebSocket = null;\n    try {\n      socket = this.protocol ?\n        new WebSocketCtor(this.url, this.protocol) :\n        new WebSocketCtor(this.url);\n      this.socket = socket;\n      if (this.binaryType) {\n        this.socket.binaryType = this.binaryType;\n      }\n    } catch (e) {\n      observer.error(e);\n      return;\n    }\n\n    const subscription = new Subscription(() => {\n      this.socket = null;\n      if (socket && socket.readyState === 1) {\n        socket.close();\n      }\n    });\n\n    socket.onopen = (e: Event) => {\n      const openObserver = this.openObserver;\n      if (openObserver) {\n        openObserver.next(e);\n      }\n\n      const queue = this.destination;\n\n      this.destination = Subscriber.create(\n        (x) => socket.readyState === 1 && socket.send(x),\n        (e) => {\n          const closingObserver = this.closingObserver;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          if (e && e.code) {\n            socket.close(e.code, e.reason);\n          } else {\n            observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n              'and an optional reason: { code: number, reason: string }'));\n          }\n          this._resetState();\n        },\n        ( ) => {\n          const closingObserver = this.closingObserver;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          socket.close();\n          this._resetState();\n        }\n      );\n\n      if (queue && queue instanceof ReplaySubject) {\n        subscription.add((<ReplaySubject<T>>queue).subscribe(this.destination));\n      }\n    };\n\n    socket.onerror = (e: Event) => {\n      this._resetState();\n      observer.error(e);\n    };\n\n    socket.onclose = (e: CloseEvent) => {\n      this._resetState();\n      const closeObserver = this.closeObserver;\n      if (closeObserver) {\n        closeObserver.next(e);\n      }\n      if (e.wasClean) {\n        observer.complete();\n      } else {\n        observer.error(e);\n      }\n    };\n\n    socket.onmessage = (e: MessageEvent) => {\n      const result = tryCatch(this.resultSelector)(e);\n      if (result === errorObject) {\n        observer.error(errorObject.e);\n      } else {\n        observer.next(result);\n      }\n    };\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return source.subscribe(subscriber);\n    }\n    if (!this.socket) {\n      this._connectSocket();\n    }\n    let subscription = new Subscription();\n    subscription.add(this._output.subscribe(subscriber));\n    subscription.add(() => {\n      const { socket } = this;\n      if (this._output.observers.length === 0) {\n        if (socket && socket.readyState === 1) {\n          socket.close();\n        }\n        this._resetState();\n      }\n    });\n    return subscription;\n  }\n\n  unsubscribe() {\n    const { source, socket } = this;\n    if (socket && socket.readyState === 1) {\n      socket.close();\n      this._resetState();\n    }\n    super.unsubscribe();\n    if (!source) {\n      this.destination = new ReplaySubject();\n    }\n  }\n}\n","import {  AjaxObservable, AjaxCreationMethod  } from './AjaxObservable';\n\nexport const ajax: AjaxCreationMethod = AjaxObservable.create;","import {  WebSocketSubject  } from './WebSocketSubject';\n\nexport const webSocket = WebSocketSubject.create;","import {  EmptyObservable  } from './EmptyObservable';\n\nexport const empty = EmptyObservable.create;","import {  ForkJoinObservable  } from './ForkJoinObservable';\n\nexport const forkJoin = ForkJoinObservable.create;","import {  FromObservable  } from './FromObservable';\n\nexport const from = FromObservable.create;","import {  FromEventObservable  } from './FromEventObservable';\n\nexport const fromEvent = FromEventObservable.create;","import {  FromEventPatternObservable  } from './FromEventPatternObservable';\n\nexport const fromEventPattern = FromEventPatternObservable.create;","import {  PromiseObservable  } from './PromiseObservable';\n\nexport const fromPromise = PromiseObservable.create;","import { GenerateObservable } from './GenerateObservable';\n\nexport const generate = GenerateObservable.create;\n","import {  IfObservable  } from './IfObservable';\n\nexport const _if = IfObservable.create;","import {  IntervalObservable  } from './IntervalObservable';\n\nexport const interval = IntervalObservable.create;","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { ArrayObservable } from './ArrayObservable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | IScheduler | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | IScheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: IScheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <IScheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll(concurrent)(new ArrayObservable(<any>observables, scheduler)) as Observable<R>;\n}\n","import {  NeverObservable  } from './NeverObservable';\n\nexport const never = NeverObservable.create;","import {  ArrayObservable  } from './ArrayObservable';\n\nexport const of = ArrayObservable.of;","import { onErrorResumeNextStatic } from '../operators/onErrorResumeNext';\n\nexport const onErrorResumeNext = onErrorResumeNextStatic;\n","import {  PairsObservable  } from './PairsObservable';\r\n\r\nexport const pairs = PairsObservable.create;","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import {  RangeObservable  } from './RangeObservable';\n\nexport const range = RangeObservable.create;","import {  ErrorObservable  } from './ErrorObservable';\n\nexport const _throw = ErrorObservable.create;","import {  TimerObservable  } from './TimerObservable';\n\nexport const timer = TimerObservable.create;","import {  UsingObservable  } from './UsingObservable';\n\nexport const using = UsingObservable.create;","import {  zipStatic  } from '../operators/zip';\n\nexport const zip = zipStatic;\n","\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { audit as higherOrder } from '../operators/audit';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(this: Observable<T>, durationSelector: (value: T) => SubscribableOrPromise<any>): Observable<T> {\n  return higherOrder(durationSelector)(this);\n}\n","import { async } from '../scheduler/async';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { auditTime as higherOrder } from '../operators/auditTime';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(this: Observable<T>, duration: number, scheduler: IScheduler = async): Observable<T> {\n  return higherOrder(duration, scheduler)(this) as Observable<T>;\n}","\nimport { Observable } from '../Observable';\nimport { buffer as higherOrder } from '../operators/buffer';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(this: Observable<T>, closingNotifier: Observable<any>): Observable<T[]> {\n  return higherOrder(closingNotifier)(this) as Observable<T[]>;\n}\n","\nimport { Observable } from '../Observable';\nimport { bufferCount as higherOrder } from '../operators/bufferCount';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(this: Observable<T>, bufferSize: number, startBufferEvery: number = null): Observable<T[]> {\n  return higherOrder(bufferSize, startBufferEvery)(this) as Observable<T[]>;\n}\n","import { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { bufferTime as higherOrder } from '../operators/bufferTime';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(this: Observable<T>, bufferTimeSpan: number, scheduler?: IScheduler): Observable<T[]>;\nexport function bufferTime<T>(this: Observable<T>, bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): Observable<T[]>;\nexport function bufferTime<T>(this: Observable<T>, bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(this: Observable<T>, bufferTimeSpan: number): Observable<T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return higherOrder(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this) as Observable<T[]>;\n}\n","\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { bufferToggle as higherOrder } from '../operators/bufferToggle';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(this: Observable<T>, openings: SubscribableOrPromise<O>,\n                                   closingSelector: (value: O) => SubscribableOrPromise<any>): Observable<T[]> {\n  return higherOrder(openings, closingSelector)(this) as Observable<T[]>;\n}\n","\nimport { Observable } from '../Observable';\nimport { bufferWhen as higherOrder } from '../operators/bufferWhen';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(this: Observable<T>, closingSelector: () => Observable<any>): Observable<T[]> {\n  return higherOrder(closingSelector)(this) as Observable<T[]>;\n}\n","\nimport { Observable, ObservableInput } from '../Observable';\nimport { catchError as higherOrder } from '../operators/catchError';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nexport function _catch<T, R>(this: Observable<T>, selector: (err: any, caught: Observable<T>) => ObservableInput<R>): Observable<T | R> {\n  return higherOrder(selector)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { combineAll as higherOrder } from '../operators/combineAll';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nexport function combineAll<T, R>(this: Observable<T>, project?: (...values: Array<any>) => R): Observable<R> {\n  return higherOrder(project)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { combineLatest as higherOrder } from '../operators/combineLatest';\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(this: Observable<T>, project: (v1: T) => R): Observable<R>;\nexport function combineLatest<T, T2, R>(this: Observable<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R> ;\nexport function combineLatest<T, T2>(this: Observable<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function combineLatest<T, R>(this: Observable<T>, array: ObservableInput<T>[]): Observable<Array<T>>;\nexport function combineLatest<T, TOther, R>(this: Observable<T>, array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): Observable<R> {\n  return higherOrder(...observables)(this);\n}","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { concat as higherOrder } from '../operators/concat';\n\nexport { concat as concatStatic } from '../observable/concat';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(this: Observable<T>, scheduler?: IScheduler): Observable<T>;\nexport function concat<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function concat<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(this: Observable<T>, ...observables: Array<ObservableInput<T> | IScheduler>): Observable<T>;\nexport function concat<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nexport function concat<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler>): Observable<R> {\n  return higherOrder(...observables)(this);\n}\n","import { Observable } from '../Observable';\nimport { Subscribable } from '../Observable';\nimport { concatAll as higherOrder } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concatAll<T>(this: Observable<T>): T;\nexport function concatAll<T, R>(this: Observable<T>): Subscribable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(this: Observable<T>): T {\n  return <any>higherOrder()(this);\n}\n","import { concatMap as higherOrderConcatMap } from '../operators/concatMap';\nimport { Observable, ObservableInput } from '../Observable';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<R>): Observable<R>;\nexport function concatMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  return higherOrderConcatMap(project, resultSelector)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { concatMapTo as higherOrder } from '../operators/concatMapTo';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, R>(this: Observable<T>, observable: ObservableInput<R>): Observable<R>;\nexport function concatMapTo<T, I, R>(this: Observable<T>, observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, I, R>(this: Observable<T>, innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return higherOrder(innerObservable, resultSelector)(this);\n}\n","import { Observable } from '../Observable';\nimport { count as higherOrder } from '../operators/count';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<number> {\n  return higherOrder(predicate)(this);\n}\n","\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { debounce as higherOrder } from '../operators/debounce';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(this: Observable<T>, durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T> {\n  return higherOrder(durationSelector)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { debounceTime as higherOrder } from '../operators/debounceTime';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(this: Observable<T>, dueTime: number, scheduler: IScheduler = async): Observable<T> {\n  return higherOrder(dueTime, scheduler)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../Observable';\nimport { defaultIfEmpty as higherOrder } from '../operators/defaultIfEmpty';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(this: Observable<T>, defaultValue?: T): Observable<T>;\nexport function defaultIfEmpty<T, R>(this: Observable<T>, defaultValue?: R): Observable<T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(this: Observable<T>, defaultValue: R = null): Observable<T | R> {\n  return higherOrder<T, R>(defaultValue)(this);\n}\n","import { async } from '../scheduler/async';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { delay as higherOrder } from '../operators/delay';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(this: Observable<T>, delay: number|Date,\n                         scheduler: IScheduler = async): Observable<T> {\n  return higherOrder<T>(delay, scheduler)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { delayWhen as higherOrder } from '../operators/delayWhen';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(this: Observable<T>, delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): Observable<T> {\n  return higherOrder(delayDurationSelector, subscriptionDelay)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { dematerialize as higherOrder } from '../operators/dematerialize';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(this: Observable<Notification<T>>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { distinct as higherOrder } from '../operators/distinct';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(this: Observable<T>,\n                               keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): Observable<T> {\n  return higherOrder(keySelector, flushes)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { distinctUntilChanged as higherOrder } from '../operators/distinctUntilChanged';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(this: Observable<T>, compare?: (x: T, y: T) => boolean): Observable<T>;\nexport function distinctUntilChanged<T, K>(this: Observable<T>, compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(this: Observable<T>, compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): Observable<T> {\n  return higherOrder(compare, keySelector)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { distinctUntilKeyChanged as higherOrder } from '../operators/distinctUntilKeyChanged';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(this: Observable<T>, key: string): Observable<T>;\nexport function distinctUntilKeyChanged<T, K>(this: Observable<T>, key: string, compare: (x: K, y: K) => boolean): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T>(this: Observable<T>, key: string, compare?: (x: T, y: T) => boolean): Observable<T> {\n  return higherOrder<T, T>(key, compare)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { tap as higherOrder } from '../operators/tap';\n\n/* tslint:disable:max-line-length */\nexport function _do<T>(this: Observable<T>, next: (x: T) => void, error?: (e: any) => void, complete?: () => void): Observable<T>;\nexport function _do<T>(this: Observable<T>, observer: PartialObserver<T>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nexport function _do<T>(this: Observable<T>, nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): Observable<T> {\n  return higherOrder(<any>nextOrObserver, error, complete)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../Observable';\nimport { elementAt as higherOrder } from '../operators/elementAt';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(this: Observable<T>, index: number, defaultValue?: T): Observable<T> {\n  return higherOrder(index, defaultValue)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { every as higherOrder } from '../operators/every';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(this: Observable<T>, predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): Observable<boolean> {\n  return higherOrder(predicate, thisArg)(this);\n}","\nimport { Observable } from '../Observable';\nimport { exhaust as higherOrder } from '../operators/exhaust';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n}\n","\nimport { Observable, ObservableInput } from '../Observable';\nimport { exhaustMap as higherOrder } from '../operators/exhaustMap';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<R>): Observable<R>;\nexport function exhaustMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>,\n                                    resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return higherOrder(project, resultSelector)(this);\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { expand as higherOrder } from '../operators/expand';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(this: Observable<T>, project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function expand<T, R>(this: Observable<T>, project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(this: Observable<T>, project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): Observable<R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return higherOrder(project, concurrent, scheduler)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { filter as higherOrderFilter } from '../operators/filter';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(this: Observable<T>,\n                                       predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): Observable<S>;\nexport function filter<T>(this: Observable<T>,\n                          predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T> {\n  return higherOrderFilter(predicate, thisArg)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { finalize } from '../operators/finalize';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function _finally<T>(this: Observable<T>, callback: () => void): Observable<T> {\n  return finalize(callback)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { find as higherOrder } from '../operators/find';\n\n/* tslint:disable:max-line-length */\nexport function find<T, S extends T>(this: Observable<T>,\n                                     predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): Observable<S>;\nexport function find<T>(this: Observable<T>,\n                        predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(this: Observable<T>, predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): Observable<T> {\n  return higherOrder(predicate, thisArg)(this);\n}\n","import { Observable } from '../Observable';\nimport { findIndex as higherOrder } from '../operators/findIndex';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(this: Observable<T>, predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): Observable<number> {\n  return higherOrder(predicate, thisArg)(this);\n}\n","import { Observable } from '../Observable';\nimport { first as higherOrder } from '../operators/first';\n\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(this: Observable<T>,\n                                      predicate: (value: T, index: number, source: Observable<T>) => value is S): Observable<S>;\nexport function first<T, S extends T, R>(this: Observable<T>,\n                                         predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): Observable<R>;\nexport function first<T, S extends T>(this: Observable<T>,\n                                      predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): Observable<S>;\nexport function first<T>(this: Observable<T>,\n                         predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\nexport function first<T, R>(this: Observable<T>,\n                            predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): Observable<R>;\nexport function first<T>(this: Observable<T>,\n                         predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): Observable<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): Observable<T | R> {\n  return higherOrder(predicate, resultSelector as any, defaultValue)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { groupBy as higherOrder, GroupedObservable } from '../operators/groupBy';\nexport { GroupedObservable };\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(this: Observable<T>, keySelector: (value: T) => K): Observable<GroupedObservable<K, T>>;\nexport function groupBy<T, K>(this: Observable<T>, keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): Observable<GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(this: Observable<T>, keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): Observable<GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(this: Observable<T>, keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): Observable<GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(this: Observable<T>, keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): Observable<GroupedObservable<K, R>> {\n  return higherOrder(keySelector, elementSelector as any, durationSelector, subjectSelector)(this);\n}\n","import { Observable } from '../Observable';\nimport { ignoreElements as higherOrder } from '../operators/ignoreElements';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n};\n","\nimport { Observable } from '../Observable';\nimport { isEmpty as higherOrder } from '../operators/isEmpty';\n\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nexport function isEmpty<T>(this: Observable<T>): Observable<boolean> {\n  return higherOrder()(this);\n}\n","import { Observable } from '../Observable';\nimport { last as higherOrder } from '../operators/last';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(this: Observable<T>,\n                                     predicate: (value: T, index: number, source: Observable<T>) => value is S): Observable<S>;\nexport function last<T, S extends T, R>(this: Observable<T>,\n                                        predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): Observable<R>;\nexport function last<T, S extends T>(this: Observable<T>,\n                                     predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): Observable<S>;\nexport function last<T>(this: Observable<T>,\n                        predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\nexport function last<T, R>(this: Observable<T>,\n                           predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): Observable<R>;\nexport function last<T>(this: Observable<T>,\n                        predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): Observable<T | R> {\n  return higherOrder(predicate, resultSelector as any, defaultValue)(this);\n}\n","import { Observable } from '../Observable';\n\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nexport function letProto<T, R>(this: Observable<T>, func: (selector: Observable<T>) => Observable<R>): Observable<R> {\n  return func(this);\n}\n","import { map as higherOrderMap } from '../operators/map';\nimport { Observable } from '../Observable';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(this: Observable<T>, project: (value: T, index: number) => R, thisArg?: any): Observable<R> {\n  return higherOrderMap(project, thisArg)(this);\n}\n","import { Observable } from '../Observable';\nimport { mapTo as higherOrder } from '../operators/mapTo';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(this: Observable<T>, value: R): Observable<R> {\n  return higherOrder(value)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { materialize as higherOrder } from '../operators/materialize';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(this: Observable<T>): Observable<Notification<T>> {\n  return higherOrder()(this) as Observable<Notification<T>>;\n}\n","import { Observable } from '../Observable';\nimport { max as higherOrderMax } from '../operators/max';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(this: Observable<T>, comparer?: (x: T, y: T) => number): Observable<T> {\n  return higherOrderMax(comparer)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { merge as higherOrder } from '../operators/merge';\n\nexport { merge as mergeStatic } from '../observable/merge';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(this: Observable<T>, scheduler?: IScheduler): Observable<T>;\nexport function merge<T>(this: Observable<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function merge<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(this: Observable<T>, ...observables: Array<ObservableInput<T> | IScheduler | number>): Observable<T>;\nexport function merge<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n  return higherOrder(...observables)(this) as Observable<R>;\n}\n","import { Observable } from '../Observable';\nimport { Subscribable } from '../Observable';\nimport { mergeAll as higherOrder } from '../operators/mergeAll';\n\nexport function mergeAll<T>(this: Observable<T>, concurrent?: number): T;\nexport function mergeAll<T, R>(this: Observable<T>, concurrent?: number): Subscribable<R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(this: Observable<T>, concurrent: number = Number.POSITIVE_INFINITY): Observable<T> {\n  return higherOrder(concurrent)(this) as Observable<T>;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { mergeMap as higherOrderMergeMap } from '../operators/mergeMap';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): Observable<R>;\nexport function mergeMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): Observable<I | R> {\n  return higherOrderMergeMap(project, <any>resultSelector, concurrent)(this) as Observable<I | R>;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { mergeMapTo as higherOrder } from '../operators/mergeMapTo';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(this: Observable<T>, observable: ObservableInput<R>, concurrent?: number): Observable<R>;\nexport function mergeMapTo<T, I, R>(this: Observable<T>, observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(this: Observable<T>, innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  return higherOrder(innerObservable, resultSelector as any, concurrent)(this) as Observable<R>;\n}\n","\nimport { Observable } from '../Observable';\nimport { mergeScan as higherOrder } from '../operators/mergeScan';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(this: Observable<T>,\n                                accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  return higherOrder(accumulator, seed, concurrent)(this);\n}\n","import { Observable } from '../Observable';\nimport { min as higherOrderMin } from '../operators/min';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(this: Observable<T>, comparer?: (x: T, y: T) => number): Observable<T> {\n  return higherOrderMin(comparer)(this);\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { multicast as higherOrder } from '../operators/multicast';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(this: Observable<T>, subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): ConnectableObservable<T>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): Observable<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Allows source Observable to be subscribed only once with a Subject of choice,\n * while still sharing its values between multiple subscribers.\n *\n * <span class=\"informal\">Subscribe to Observable once, but send its values to multiple subscribers.</span>\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * `multicast` is an operator that works in two modes.\n *\n * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject\n * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be\n * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that\n * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when\n * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription\n * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,\n * even though usually it would send a request per every subscriber. Since it sends a request at the moment of\n * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.\n *\n * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,\n * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source\n * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,\n * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count\n * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least\n * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a\n * ConnectableObservable, use `refCount`.\n *\n * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.\n * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable\n * as well, which should be the input stream modified by any operators you want. Note that in this\n * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If\n * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.\n * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,\n * if inside the selector function you subscribe to the input Observable multiple times, actual source stream\n * will be subscribed only once. So if you have a chain of operators that use some Observable many times,\n * but you want to subscribe to that Observable only once, this is the mode you would use.\n *\n * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the\n * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject\n * has some special properties, Observable returned by `multicast` will have them as well. If you want to use\n * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},\n * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},\n * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually\n * just wrappers around `multicast`, with a specific Subject hardcoded inside.\n *\n * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,\n * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.\n *\n * @example <caption>Use ConnectableObservable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const connectableSeconds = seconds.multicast(new Subject());\n *\n * connectableSeconds.subscribe(value => console.log('first: ' + value));\n * connectableSeconds.subscribe(value => console.log('second: ' + value));\n *\n * // At this point still nothing happens, even though we subscribed twice.\n *\n * connectableSeconds.connect();\n *\n * // From now on `seconds` are being logged to the console,\n * // twice per every second. `seconds` Observable was however only subscribed once,\n * // so under the hood Observable.interval had only one clock started.\n *\n * @example <caption>Use selector</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds\n *     .multicast(\n *         () => new Subject(),\n *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.\n *                                         // Because we are inside selector, `seconds` is subscribed once,\n *     )                                   // thus starting only one clock used internally by Observable.interval.\n *     .subscribe();\n *\n * @see {@link publish}\n * @see {@link publishLast}\n * @see {@link publishBehavior}\n * @see {@link publishReplay}\n * @see {@link share}\n * @see {@link shareReplay}\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through\n * which the source sequence's elements will be multicast to the selector function input Observable or\n * ConnectableObservable returned by the operator.\n * @param {Function} [selector] - Optional selector function that can use the input stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the input source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector\n * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.\n *\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(this: Observable<T>, subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): Observable<R> | ConnectableObservable<R> {\n  return higherOrder(<any>subjectOrSubjectFactory, selector)(this);\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { observeOn as higherOrder } from '../operators/observeOn';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(this: Observable<T>, scheduler: IScheduler, delay: number = 0): Observable<T> {\n  return higherOrder(scheduler, delay)(this) as Observable<T>;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { onErrorResumeNext as higherOrder } from '../operators/onErrorResumeNext';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(this: Observable<T>, v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R> ;\nexport function onErrorResumeNext<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<T, R>(this: Observable<T>, array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(this: Observable<T>, ...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): Observable<R> {\n  return higherOrder(...nextSources)(this);\n}\n","import { Observable } from '../Observable';\nimport { pairwise as higherOrder } from '../operators/pairwise';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(this: Observable<T>): Observable<[T, T]> {\n  return higherOrder()(this) as Observable<[T, T]>;\n}\n","import { Observable } from '../Observable';\nimport { partition as higherOrder } from '../operators/partition';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean, thisArg?: any): [Observable<T>, Observable<T>] {\n  return higherOrder(predicate, thisArg)(this);\n}\n","import { Observable } from '../Observable';\nimport { pluck as higherOrder } from '../operators/pluck';\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(this: Observable<T>, ...properties: string[]): Observable<R> {\n  return higherOrder(...properties)(this) as Observable<R>;\n}\n","\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publish as higherOrder } from '../operators/publish';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(this: Observable<T>): ConnectableObservable<T>;\nexport function publish<T>(this: Observable<T>, selector: (source: Observable<T>) => Observable<T>): Observable<T>;\nexport function publish<T, R>(this: Observable<T>, selector: (source: Observable<T>) => Observable<R>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish<T, R>(this: Observable<T>, selector?: (source: Observable<T>) => Observable<R>): Observable<R> | ConnectableObservable<R> {\n  return higherOrder(selector)(this);\n}\n\nexport type selector<T> = (source: Observable<T>) => Observable<T>;\n","import { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publishBehavior as higherOrder } from '../operators/publishBehavior';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(this: Observable<T>, value: T): ConnectableObservable<T> {\n  return higherOrder(value)(this);\n}\n","import { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publishLast as higherOrder } from '../operators/publishLast';\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nexport function publishLast<T>(this: Observable<T>): ConnectableObservable<T> {\n  //TODO(benlesh): correct type-flow through here.\n  return higherOrder()(this) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publishReplay as higherOrder } from '../operators/publishReplay';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(this: Observable<T>, bufferSize?: number, windowTime?: number, scheduler?: IScheduler): ConnectableObservable<T>;\nexport function publishReplay<T>(this: Observable<T>, bufferSize?: number, windowTime?: number, selector?: MonoTypeOperatorFunction<T>, scheduler?: IScheduler): Observable<T>;\nexport function publishReplay<T, R>(this: Observable<T>, bufferSize?: number, windowTime?: number, selector?: OperatorFunction<T, R>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nexport function publishReplay<T, R>(this: Observable<T>, bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: IScheduler | OperatorFunction<T, R>,\n                                    scheduler?: IScheduler): Observable<R> | ConnectableObservable<R> {\n\n  return higherOrder<T, R>(bufferSize, windowTime, selectorOrScheduler as any, scheduler)(this);\n}\n","import { Observable } from '../Observable';\nimport { race as higherOrder } from '../operators/race';\n\n// NOTE: to support backwards compatability with 5.4.* and lower\nexport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\nexport function race<T>(this: Observable<T>, observables: Array<Observable<T>>): Observable<T>;\nexport function race<T, R>(this: Observable<T>, observables: Array<Observable<T>>): Observable<R>;\nexport function race<T>(this: Observable<T>, ...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T, R>(this: Observable<T>, ...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race<T>(this: Observable<T>, ...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T> {\n  return higherOrder(...observables)(this);\n}\n","import { Observable } from '../Observable';\nimport { reduce as higherOrderReduce } from '../operators/reduce';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T>(this: Observable<T>, accumulator: (acc: T, value: T, index: number) => T, seed?: T): Observable<T>;\nexport function reduce<T>(this: Observable<T>, accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): Observable<T[]>;\nexport function reduce<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index: number) => R, seed: R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index?: number) => R, seed?: R): Observable<R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return higherOrderReduce(accumulator, seed)(this);\n  }\n\n  return higherOrderReduce(accumulator)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { repeat as higherOrder } from '../operators/repeat';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(this: Observable<T>, count: number = -1): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { repeatWhen as higherOrder } from '../operators/repeatWhen';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(this: Observable<T>, notifier: (notifications: Observable<any>) => Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { retry as higherOrder } from '../operators/retry';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(this: Observable<T>, count: number = -1): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { retryWhen as higherOrder } from '../operators/retryWhen';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(this: Observable<T>, notifier: (errors: Observable<any>) => Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { sample as higherOrder } from '../operators/sample';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(this: Observable<T>, notifier: Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { sampleTime as higherOrder } from '../operators/sampleTime';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(this: Observable<T>, period: number, scheduler: IScheduler = async): Observable<T> {\n  return higherOrder(period, scheduler)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../Observable';\nimport { scan as higherOrderScan } from '../operators/scan';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(this: Observable<T>, accumulator: (acc: T, value: T, index: number) => T, seed?: T): Observable<T>;\nexport function scan<T>(this: Observable<T>, accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): Observable<T[]>;\nexport function scan<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index: number) => R, seed?: R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): Observable<R> {\n  if (arguments.length >= 2) {\n    return higherOrderScan(accumulator, seed)(this) as Observable<R>;\n  }\n  return higherOrderScan(accumulator)(this);\n}\n","import { Observable } from '../Observable';\nimport { sequenceEqual as higherOrder } from '../operators/sequenceEqual';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(this: Observable<T>, compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): Observable<boolean> {\n  return higherOrder(compareTo, comparor)(this);\n}\n","import { Observable } from '../Observable';\nimport { share as higherOrder } from '../operators/share';\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n};\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { shareReplay as higherOrder } from '../operators/shareReplay';\n\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(this: Observable<T>, bufferSize?: number, windowTime?: number, scheduler?: IScheduler):\n  Observable<T> {\n  return higherOrder(bufferSize, windowTime, scheduler)(this) as Observable<T>;\n};","import { Observable } from '../Observable';\nimport { single as higherOrder } from '../operators/single';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T> {\n  return higherOrder(predicate)(this);\n}\n","import { Observable } from '../Observable';\nimport { skip as higherOrder } from '../operators/skip';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(this: Observable<T>, count: number): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { skipLast as higherOrder } from '../operators/skipLast';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(this: Observable<T>, count: number): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { skipUntil as higherOrder } from '../operators/skipUntil';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(this: Observable<T>, notifier: Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { skipWhile as higherOrder } from '../operators/skipWhile';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean): Observable<T> {\n  return higherOrder(predicate)(this);\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { startWith as higherOrder } from '../operators/startWith';\n\n/* tslint:disable:max-line-length */\nexport function startWith<T>(this: Observable<T>, v1: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, ...array: Array<T | IScheduler>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(this: Observable<T>, ...array: Array<T | IScheduler>): Observable<T> {\n  return higherOrder(...array)(this);\n}\n","\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn as higherOrder } from '../operators/subscribeOn';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(this: Observable<T>, scheduler: IScheduler, delay: number = 0): Observable<T> {\n  return higherOrder(scheduler, delay)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { switchAll as higherOrder } from '../operators/switchAll';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nexport function _switch<T>(this: Observable<Observable<T>>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n}\n","\nimport { Observable, ObservableInput } from '../Observable';\nimport { switchMap as higherOrderSwitchMap } from '../operators/switchMap';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<R>): Observable<R>;\nexport function switchMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<I | R> {\n  return higherOrderSwitchMap(project, resultSelector)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { switchMapTo as higherOrder } from '../operators/switchMapTo';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(this: Observable<T>, observable: ObservableInput<R>): Observable<R>;\nexport function switchMapTo<T, I, R>(this: Observable<T>, observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(this: Observable<T>, innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): Observable<I | R> {\n  return higherOrder(innerObservable, resultSelector)(this);\n}\n","import { Observable } from '../Observable';\nimport { take as higherOrder } from '../operators/take';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(this: Observable<T>, count: number): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../Observable';\nimport { takeLast as higherOrderTakeLast } from '../operators/takeLast';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(this: Observable<T>, count: number): Observable<T> {\n  return higherOrderTakeLast(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { takeUntil as higherOrder } from '../operators/takeUntil';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(this: Observable<T>, notifier: Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { takeWhile as higherOrder } from '../operators/takeWhile';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean): Observable<T> {\n  return higherOrder(predicate)(this);\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { throttle as higherOrder, ThrottleConfig, defaultThrottleConfig } from '../operators/throttle';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(this: Observable<T>,\n                            durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): Observable<T> {\n  return higherOrder(durationSelector, config)(this);\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { ThrottleConfig, defaultThrottleConfig } from '../operators/throttle';\nimport { throttleTime as higherOrder } from '../operators/throttleTime';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(this: Observable<T>,\n                                duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): Observable<T> {\n  return higherOrder(duration, scheduler, config)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { timeInterval as higherOrder, TimeInterval } from '../operators/timeInterval';\nexport {TimeInterval};\n\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nexport function timeInterval<T>(this: Observable<T>, scheduler: IScheduler = async): Observable<TimeInterval<T>> {\n  return higherOrder(scheduler)(this) as Observable<TimeInterval<T>>;\n}\n","import { async } from '../scheduler/async';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { timeout as higherOrder } from '../operators/timeout';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(this: Observable<T>,\n                           due: number | Date,\n                           scheduler: IScheduler = async): Observable<T> {\n  return higherOrder(due, scheduler)(this) as Observable<T>;\n}\n","import { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { Observable, ObservableInput } from '../Observable';\nimport { timeoutWith as higherOrder } from '../operators/timeoutWith';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(this: Observable<T>, due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function timeoutWith<T, R>(this: Observable<T>, due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): Observable<T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(this: Observable<T>, due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): Observable<T | R> {\n  return higherOrder(due, withObservable, scheduler)(this as any);\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { timestamp as higherOrder } from '../operators/timestamp';\nimport { Timestamp } from '../operators/timestamp';\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(this: Observable<T>, scheduler: IScheduler = async): Observable<Timestamp<T>> {\n  return higherOrder(scheduler)(this) as Observable<Timestamp<T>>;\n}\n","\nimport { Observable } from '../Observable';\nimport { toArray as higherOrder } from '../operators/toArray';\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * <img src=\"./img/toArray.png\" width=\"100%\">\n *\n * `toArray` will wait until the source Observable completes\n * before emitting the array containing all emissions.\n * When the source Observable errors no array will be emitted.\n *\n * @example <caption>Create array from input</caption>\n * const input = Rx.Observable.interval(100).take(4);\n *\n * input.toArray()\n *   .subscribe(arr => console.log(arr)); // [0,1,2,3]\n *\n * @see {@link buffer}\n *\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nexport function toArray<T>(this: Observable<T>): Observable<T[]> {\n  return higherOrder()(this) as Observable<T[]>;\n}\n","\nimport { Observable } from '../Observable';\nimport { window as higherOrder } from '../operators/window';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(this: Observable<T>, windowBoundaries: Observable<any>): Observable<Observable<T>> {\n  return higherOrder(windowBoundaries)(this) as Observable<Observable<T>>;\n}\n","\nimport { Observable } from '../Observable';\nimport { windowCount as higherOrder } from '../operators/windowCount';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(this: Observable<T>, windowSize: number,\n                               startWindowEvery: number = 0): Observable<Observable<T>> {\n  return higherOrder(windowSize, startWindowEvery)(this) as Observable<Observable<T>>;\n}\n","import { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { windowTime as higherOrder } from '../operators/windowTime';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(this: Observable<T>, windowTimeSpan: number,\n                              scheduler?: IScheduler): Observable<Observable<T>>;\nexport function windowTime<T>(this: Observable<T>, windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): Observable<Observable<T>>;\nexport function windowTime<T>(this: Observable<T>, windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): Observable<Observable<T>>;\n\nexport function windowTime<T>(this: Observable<T>,\n                              windowTimeSpan: number): Observable<Observable<T>> {\n\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return higherOrder(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this) as Observable<Observable<T>>;\n}\n","\nimport { Observable } from '../Observable';\nimport { windowToggle as higherOrder } from '../operators/windowToggle';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(this: Observable<T>, openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): Observable<Observable<T>> {\n  return higherOrder(openings, closingSelector)(this) as Observable<Observable<T>>;\n}\n","\nimport { Observable } from '../Observable';\nimport { windowWhen as higherOrder } from '../operators/windowWhen';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(this: Observable<T>, closingSelector: () => Observable<any>): Observable<Observable<T>> {\n  return higherOrder(closingSelector)(this) as Observable<Observable<T>>;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { withLatestFrom as higherOrder } from '../operators/withLatestFrom';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(this: Observable<T>, project: (v1: T) => R): Observable<R>;\nexport function withLatestFrom<T, T2, R>(this: Observable<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function withLatestFrom<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R> ;\nexport function withLatestFrom<T, T2>(this: Observable<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function withLatestFrom<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function withLatestFrom<T, R>(this: Observable<T>, array: ObservableInput<any>[]): Observable<R>;\nexport function withLatestFrom<T, R>(this: Observable<T>, array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(this: Observable<T>, ...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  return higherOrder(...args)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { zip as higherOrder } from '../operators/zip';\n\n/* tslint:disable:max-line-length */\nexport function zipProto<T, R>(this: Observable<T>, project: (v1: T) => R): Observable<R>;\nexport function zipProto<T, T2, R>(this: Observable<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipProto<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipProto<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipProto<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipProto<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R> ;\nexport function zipProto<T, T2>(this: Observable<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipProto<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipProto<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipProto<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipProto<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]> ;\nexport function zipProto<T>(this: Observable<T>, ...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipProto<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipProto<T, R>(this: Observable<T>, array: Array<ObservableInput<T>>): Observable<R>;\nexport function zipProto<T, TOther, R>(this: Observable<T>, array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zipProto<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  return higherOrder(...observables)(this);\n}\n","import { Observable } from '../Observable';\nimport { zipAll as higherOrder } from '../operators/zipAll';\n\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nexport function zipAll<T, R>(this: Observable<T>, project?: (...values: Array<any>) => R): Observable<R> {\n  return higherOrder(project)(this);\n}\n","export { audit } from './operators/audit';\nexport { auditTime } from './operators/auditTime';\nexport { buffer } from './operators/buffer';\nexport { bufferCount } from './operators/bufferCount';\nexport { bufferTime } from './operators/bufferTime';\nexport { bufferToggle } from './operators/bufferToggle';\nexport { bufferWhen } from './operators/bufferWhen';\nexport { catchError } from './operators/catchError';\nexport { combineAll } from './operators/combineAll';\nexport { combineLatest } from './operators/combineLatest';\nexport { concat } from './operators/concat';\nexport { concatAll } from './operators/concatAll';\nexport { concatMap } from './operators/concatMap';\nexport { concatMapTo } from './operators/concatMapTo';\nexport { count } from './operators/count';\nexport { debounce } from './operators/debounce';\nexport { debounceTime } from './operators/debounceTime';\nexport { defaultIfEmpty } from './operators/defaultIfEmpty';\nexport { delay } from './operators/delay';\nexport { delayWhen } from './operators/delayWhen';\nexport { dematerialize } from './operators/dematerialize';\nexport { distinct } from './operators/distinct';\nexport { distinctUntilChanged } from './operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './operators/distinctUntilKeyChanged';\nexport { elementAt } from './operators/elementAt';\nexport { every } from './operators/every';\nexport { exhaust } from './operators/exhaust';\nexport { exhaustMap } from './operators/exhaustMap';\nexport { expand } from './operators/expand';\nexport { filter } from './operators/filter';\nexport { finalize } from './operators/finalize';\nexport { find } from './operators/find';\nexport { findIndex } from './operators/findIndex';\nexport { first } from './operators/first';\nexport { groupBy } from './operators/groupBy';\nexport { ignoreElements } from './operators/ignoreElements';\nexport { isEmpty } from './operators/isEmpty';\nexport { last } from './operators/last';\nexport { map } from './operators/map';\nexport { mapTo } from './operators/mapTo';\nexport { materialize } from './operators/materialize';\nexport { max } from './operators/max';\nexport { merge } from './operators/merge';\nexport { mergeAll } from './operators/mergeAll';\nexport { mergeMap } from './operators/mergeMap';\nexport { mergeMap as flatMap } from './operators/mergeMap';\nexport { mergeMapTo } from './operators/mergeMapTo';\nexport { mergeScan } from './operators/mergeScan';\nexport { min } from './operators/min';\nexport { multicast } from './operators/multicast';\nexport { observeOn } from './operators/observeOn';\nexport { onErrorResumeNext } from './operators/onErrorResumeNext';\nexport { pairwise } from './operators/pairwise';\nexport { partition } from './operators/partition';\nexport { pluck } from './operators/pluck';\nexport { publish } from './operators/publish';\nexport { publishBehavior } from './operators/publishBehavior';\nexport { publishLast } from './operators/publishLast';\nexport { publishReplay } from './operators/publishReplay';\nexport { race } from './operators/race';\nexport { reduce } from './operators/reduce';\nexport { repeat } from './operators/repeat';\nexport { repeatWhen } from './operators/repeatWhen';\nexport { retry } from './operators/retry';\nexport { retryWhen } from './operators/retryWhen';\nexport { refCount } from './operators/refCount';\nexport { sample } from './operators/sample';\nexport { sampleTime } from './operators/sampleTime';\nexport { scan } from './operators/scan';\nexport { sequenceEqual } from './operators/sequenceEqual';\nexport { share } from './operators/share';\nexport { shareReplay } from './operators/shareReplay';\nexport { single } from './operators/single';\nexport { skip } from './operators/skip';\nexport { skipLast } from './operators/skipLast';\nexport { skipUntil } from './operators/skipUntil';\nexport { skipWhile } from './operators/skipWhile';\nexport { startWith } from './operators/startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nexport { switchAll } from './operators/switchAll';\nexport { switchMap } from './operators/switchMap';\nexport { switchMapTo } from './operators/switchMapTo';\nexport { take } from './operators/take';\nexport { takeLast } from './operators/takeLast';\nexport { takeUntil } from './operators/takeUntil';\nexport { takeWhile } from './operators/takeWhile';\nexport { tap } from './operators/tap';\nexport { throttle } from './operators/throttle';\nexport { throttleTime } from './operators/throttleTime';\nexport { timeInterval } from './operators/timeInterval';\nexport { timeout } from './operators/timeout';\nexport { timeoutWith } from './operators/timeoutWith';\nexport { timestamp } from './operators/timestamp';\nexport { toArray } from './operators/toArray';\nexport { window } from './operators/window';\nexport { windowCount } from './operators/windowCount';\nexport { windowTime } from './operators/windowTime';\nexport { windowToggle } from './operators/windowToggle';\nexport { windowWhen } from './operators/windowWhen';\nexport { withLatestFrom } from './operators/withLatestFrom';\nexport { zip } from './operators/zip';\nexport { zipAll } from './operators/zipAll';\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { async } from '../scheduler/async';\nimport { IScheduler } from '../Scheduler';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { CombineLatestOperator } from '../operators/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\nimport { concat as concatStatic } from '../observable/concat';\n\nexport { concat as concatStatic } from '../observable/concat';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: IScheduler): OperatorFunction<T, T | T2>;\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: Array<ObservableInput<T> | IScheduler>): MonoTypeOperatorFunction<T>;\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | IScheduler>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | IScheduler>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic<T, R>(source, ...observables));\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): MonoTypeOperatorFunction<T> {\n  return mergeAll(1);\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, R>(project: (value: T, index: number) =>  ObservableInput<R>): OperatorFunction<T, R>;\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  return mergeMap(project, resultSelector, 1);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { concatMap } from './concatMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function concatMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, I, R>(\n  innerObservable: Observable<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R> {\n  return concatMap(() => innerObservable, resultSelector);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(/** @deprecated internal use only */ public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: string): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K>(key: string, compare: (x: K, y: K) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T>(key: string, compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Observable } from '../Observable';\nimport { FindValueOperator } from '../operators/find';\nimport { OperatorFunction } from '../interfaces';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, true, thisArg)) as Observable<any>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\nimport { merge as mergeStatic } from '../observable/merge';\n\nexport { merge as mergeStatic } from '../observable/merge';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function merge<T>(concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: IScheduler): OperatorFunction<T, T | T2>;\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2>;\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3>;\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: Array<ObservableInput<T> | IScheduler | number>): MonoTypeOperatorFunction<T>;\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","\nimport { ObservableInput } from '../Observable';\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap(identity as (value: T, index: number) => ObservableInput<{}>, null, concurrent);\n}","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../interfaces';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function publish<T, R>(selector: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../interfaces';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../interfaces';\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { IScheduler } from '../Scheduler';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: IScheduler): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, selector?: MonoTypeOperatorFunction<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, R>(bufferSize?: number, windowTime?: number, selector?: OperatorFunction<T, R>, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: IScheduler | OperatorFunction<T, R>,\n                                    scheduler?: IScheduler): UnaryFunction<Observable<T>, ConnectableObservable<R> | Observable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as Observable<R> | ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = <Array<Observable<T>>>observables[0];\n    }\n\n    return source.lift.call(raceStatic<T>(source, ...observables));\n  };\n}","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): OperatorFunction<T, T[]>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index?: number) => R, seed?: R): OperatorFunction<T, R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<R> {\n    return pipe(scan<T, T | R>((acc, value, index) => {\n      return accumulator(<R>acc, value, index + 1);\n    }), takeLast(1))(source) as Observable<R>;\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              public source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n};\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: IScheduler ): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));\n}\n\nfunction shareReplayOperator<T>(bufferSize?: number, windowTime?: number, scheduler?: IScheduler) {\n  let subject: ReplaySubject<T>;\n  let refCount = 0;\n  let subscription: Subscription;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(this: Subscriber<T>, source: Observable<T>) {\n    refCount++;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next(value) { subject.next(value); },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subject.complete();\n        },\n      });\n    }\n\n    const innerSub = subject.subscribe(this);\n\n    return () => {\n      refCount--;\n      innerSub.unsubscribe();\n      if (subscription && refCount === 0 && isComplete) {\n        subscription.unsubscribe();\n      }\n    };\n  };\n};\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { ScalarObservable } from '../observable/ScalarObservable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function startWith<T>(v1: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(...array: Array<T | IScheduler>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(...array: Array<T | IScheduler>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len === 1) {\n      return concatStatic(new ScalarObservable<T>(<T>array[0], scheduler), source);\n    } else if (len > 1) {\n      return concatStatic(new ArrayObservable<T>(<T[]>array, scheduler), source);\n    } else {\n      return concatStatic(new EmptyObservable<T>(scheduler), source);\n    }\n  };\n}\n","import { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { OperatorFunction } from '../interfaces';\nimport { Observable } from '../Observable';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<Observable<T>, T> {\n  return switchMap(identity);\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\nimport { map } from './map';\n\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: IScheduler = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n};\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../interfaces';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, []) as OperatorFunction<T, T[]>;\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import { ZipOperator } from './zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrame } from '../util/AnimationFrame';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: AnimationFrameAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = AnimationFrame.requestAnimationFrame(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      AnimationFrame.cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: AsapAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n  protected work: (this: this, state?: T) => void;\n\n  constructor(protected scheduler: AsyncScheduler,\n              work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n    this.work = work;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: VirtualAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\n\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\n\nexport const asap = new AsapScheduler(AsapAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ColdObservable<T> extends Observable<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  logSubscribedFrame: () => number;\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[],\n              scheduler: Scheduler) {\n    super(function (this: ColdObservable<T>, subscriber: Subscriber<any>) {\n      const observable: ColdObservable<T> = this;\n      const index = observable.logSubscribedFrame();\n      subscriber.add(new Subscription(() => {\n        observable.logUnsubscribedFrame(index);\n      }));\n      observable.scheduleMessages(subscriber);\n      return subscriber;\n    });\n    this.scheduler = scheduler;\n  }\n\n  scheduleMessages(subscriber: Subscriber<any>) {\n    const messagesLength = this.messages.length;\n    for (let i = 0; i < messagesLength; i++) {\n      const message = this.messages[i];\n      subscriber.add(\n        this.scheduler.schedule(({message, subscriber}) => { message.notification.observe(subscriber); },\n          message.frame,\n          {message, subscriber})\n      );\n    }\n  }\n}\napplyMixins(ColdObservable, [SubscriptionLoggable]);\n","import { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class HotObservable<T> extends Subject<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  logSubscribedFrame: () => number;\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[],\n              scheduler: Scheduler) {\n    super();\n    this.scheduler = scheduler;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    const subject: HotObservable<T> = this;\n    const index = subject.logSubscribedFrame();\n    subscriber.add(new Subscription(() => {\n      subject.logUnsubscribedFrame(index);\n    }));\n    return super._subscribe(subscriber);\n  }\n\n  setup() {\n    const subject = this;\n    const messagesLength = subject.messages.length;\n    /* tslint:disable:no-var-keyword */\n    for (var i = 0; i < messagesLength; i++) {\n      (() => {\n        var message = subject.messages[i];\n   /* tslint:enable */\n        subject.scheduler.schedule(\n          () => { message.notification.observe(subject); },\n          message.frame\n        );\n      })();\n    }\n  }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n","export class SubscriptionLog {\n  constructor(public subscribedFrame: number,\n              public unsubscribedFrame: number = Number.POSITIVE_INFINITY) {\n  }\n}","import { Scheduler } from '../Scheduler';\nimport { SubscriptionLog } from './SubscriptionLog';\n\nexport class SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n\n  logSubscribedFrame(): number {\n    this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n    return this.subscriptions.length - 1;\n  }\n\n  logUnsubscribedFrame(index: number) {\n    const subscriptionLogs = this.subscriptions;\n    const oldSubscriptionLog = subscriptionLogs[index];\n    subscriptionLogs[index] = new SubscriptionLog(\n      oldSubscriptionLog.subscribedFrame,\n      this.scheduler.now()\n    );\n  }\n}\n","import { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { Subscription } from '../Subscription';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\n\nconst defaultMaxFrame: number = 750;\n\ninterface FlushableTest {\n  ready: boolean;\n  actual?: any[];\n  expected?: any[];\n}\n\nexport type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;\nexport type subscriptionLogsToBeFn = (marbles: string | string[]) => void;\n\nexport class TestScheduler extends VirtualTimeScheduler {\n  private hotObservables: HotObservable<any>[] = [];\n  private coldObservables: ColdObservable<any>[] = [];\n  private flushTests: FlushableTest[] = [];\n\n  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {\n    super(VirtualAction, defaultMaxFrame);\n  }\n\n  createTime(marbles: string): number {\n    const indexOf: number = marbles.indexOf('|');\n    if (indexOf === -1) {\n      throw new Error('marble diagram for time should have a completion marker \"|\"');\n    }\n    return indexOf * TestScheduler.frameTimeFactor;\n  }\n\n  createColdObservable<T>(marbles: string, values?: any, error?: any): ColdObservable<T> {\n    if (marbles.indexOf('^') !== -1) {\n      throw new Error('cold observable cannot have subscription offset \"^\"');\n    }\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('cold observable cannot have unsubscription marker \"!\"');\n    }\n    const messages = TestScheduler.parseMarbles(marbles, values, error);\n    const cold = new ColdObservable<T>(messages, this);\n    this.coldObservables.push(cold);\n    return cold;\n  }\n\n  createHotObservable<T>(marbles: string, values?: any, error?: any): HotObservable<T> {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('hot observable cannot have unsubscription marker \"!\"');\n    }\n    const messages = TestScheduler.parseMarbles(marbles, values, error);\n    const subject = new HotObservable<T>(messages, this);\n    this.hotObservables.push(subject);\n    return subject;\n  }\n\n  private materializeInnerObservable(observable: Observable<any>,\n                                     outerFrame: number): TestMessage[] {\n    const messages: TestMessage[] = [];\n    observable.subscribe((value) => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createNext(value) });\n    }, (err) => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createError(err) });\n    }, () => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createComplete() });\n    });\n    return messages;\n  }\n\n  expectObservable(observable: Observable<any>,\n                   unsubscriptionMarbles: string = null): ({ toBe: observableToBeFn }) {\n    const actual: TestMessage[] = [];\n    const flushTest: FlushableTest = { actual, ready: false };\n    const unsubscriptionFrame = TestScheduler\n      .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n    let subscription: Subscription;\n\n    this.schedule(() => {\n      subscription = observable.subscribe(x => {\n        let value = x;\n        // Support Observable-of-Observables\n        if (x instanceof Observable) {\n          value = this.materializeInnerObservable(value, this.frame);\n        }\n        actual.push({ frame: this.frame, notification: Notification.createNext(value) });\n      }, (err) => {\n        actual.push({ frame: this.frame, notification: Notification.createError(err) });\n      }, () => {\n        actual.push({ frame: this.frame, notification: Notification.createComplete() });\n      });\n    }, 0);\n\n    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n      this.schedule(() => subscription.unsubscribe(), unsubscriptionFrame);\n    }\n\n    this.flushTests.push(flushTest);\n\n    return {\n      toBe(marbles: string, values?: any, errorValue?: any) {\n        flushTest.ready = true;\n        flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n      }\n    };\n  }\n\n  expectSubscriptions(actualSubscriptionLogs: SubscriptionLog[]): ({ toBe: subscriptionLogsToBeFn }) {\n    const flushTest: FlushableTest = { actual: actualSubscriptionLogs, ready: false };\n    this.flushTests.push(flushTest);\n    return {\n      toBe(marbles: string | string[]) {\n        const marblesArray: string[] = (typeof marbles === 'string') ? [marbles] : marbles;\n        flushTest.ready = true;\n        flushTest.expected = marblesArray.map(marbles =>\n          TestScheduler.parseMarblesAsSubscriptions(marbles)\n        );\n      }\n    };\n  }\n\n  flush() {\n    const hotObservables = this.hotObservables;\n    while (hotObservables.length > 0) {\n      hotObservables.shift().setup();\n    }\n\n    super.flush();\n    const readyFlushTests = this.flushTests.filter(test => test.ready);\n    while (readyFlushTests.length > 0) {\n      const test = readyFlushTests.shift();\n      this.assertDeepEqual(test.actual, test.expected);\n    }\n  }\n\n  static parseMarblesAsSubscriptions(marbles: string): SubscriptionLog {\n    if (typeof marbles !== 'string') {\n      return new SubscriptionLog(Number.POSITIVE_INFINITY);\n    }\n    const len = marbles.length;\n    let groupStart = -1;\n    let subscriptionFrame = Number.POSITIVE_INFINITY;\n    let unsubscriptionFrame = Number.POSITIVE_INFINITY;\n\n    for (let i = 0; i < len; i++) {\n      const frame = i * this.frameTimeFactor;\n      const c = marbles[i];\n      switch (c) {\n        case '-':\n        case ' ':\n          break;\n        case '(':\n          groupStart = frame;\n          break;\n        case ')':\n          groupStart = -1;\n          break;\n        case '^':\n          if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n            throw new Error('found a second subscription point \\'^\\' in a ' +\n              'subscription marble diagram. There can only be one.');\n          }\n          subscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        case '!':\n          if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            throw new Error('found a second subscription point \\'^\\' in a ' +\n              'subscription marble diagram. There can only be one.');\n          }\n          unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        default:\n          throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n            'subscription marble diagram. Found instead \\'' + c + '\\'.');\n      }\n    }\n\n    if (unsubscriptionFrame < 0) {\n      return new SubscriptionLog(subscriptionFrame);\n    } else {\n      return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n    }\n  }\n\n  static parseMarbles(marbles: string,\n                      values?: any,\n                      errorValue?: any,\n                      materializeInnerObservables: boolean = false): TestMessage[] {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('conventional marble diagrams cannot have the ' +\n        'unsubscription marker \"!\"');\n    }\n    const len = marbles.length;\n    const testMessages: TestMessage[] = [];\n    const subIndex = marbles.indexOf('^');\n    const frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n    const getValue = typeof values !== 'object' ?\n      (x: any) => x :\n      (x: any) => {\n        // Support Observable-of-Observables\n        if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n          return values[x].messages;\n        }\n        return values[x];\n      };\n    let groupStart = -1;\n\n    for (let i = 0; i < len; i++) {\n      const frame = i * this.frameTimeFactor + frameOffset;\n      let notification: Notification<any>;\n      const c = marbles[i];\n      switch (c) {\n        case '-':\n        case ' ':\n          break;\n        case '(':\n          groupStart = frame;\n          break;\n        case ')':\n          groupStart = -1;\n          break;\n        case '|':\n          notification = Notification.createComplete();\n          break;\n        case '^':\n          break;\n        case '#':\n          notification = Notification.createError(errorValue || 'error');\n          break;\n        default:\n          notification = Notification.createNext(getValue(c));\n          break;\n      }\n\n      if (notification) {\n        testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification });\n      }\n    }\n    return testMessages;\n  }\n}\n","import {  root  } from './root';\n\nexport class RequestAnimationFrameDefinition {\n  cancelAnimationFrame: (handle: number) => void;\n  requestAnimationFrame: (cb: () => void) => number;\n  constructor(root: any) {\n    if (root.requestAnimationFrame) {\n      this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n    } else if (root.mozRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n    } else if (root.webkitRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n    } else if (root.msRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n    } else if (root.oRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n    } else {\n      this.cancelAnimationFrame = root.clearTimeout.bind(root);\n      this.requestAnimationFrame = function(cb) { return root.setTimeout(cb, 1000 / 60); };\n    }\n  }\n}\n\nexport const AnimationFrame = new RequestAnimationFrameDefinition(root);\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n\nimport {  root  } from './root';\n\nexport class ImmediateDefinition {\n  setImmediate: (cb: () => void) => number;\n\n  clearImmediate: (handle: number) => void;\n\n  private identify(o: any): string {\n    return this.root.Object.prototype.toString.call(o);\n  }\n\n  tasksByHandle: any;\n\n  nextHandle: number;\n\n  currentlyRunningATask: boolean;\n\n  constructor(private root: any) {\n    if (root.setImmediate && typeof root.setImmediate === 'function') {\n      this.setImmediate = root.setImmediate.bind(root);\n      this.clearImmediate = root.clearImmediate.bind(root);\n    } else {\n      this.nextHandle = 1;\n      this.tasksByHandle = {};\n      this.currentlyRunningATask = false;\n\n      // Don't get fooled by e.g. browserify environments.\n      if (this.canUseProcessNextTick()) {\n        // For Node.js before 0.9\n        this.setImmediate = this.createProcessNextTickSetImmediate();\n      } else if (this.canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        this.setImmediate = this.createPostMessageSetImmediate();\n      } else if (this.canUseMessageChannel()) {\n        // For web workers, where supported\n        this.setImmediate = this.createMessageChannelSetImmediate();\n      } else if (this.canUseReadyStateChange()) {\n        // For IE 6–8\n        this.setImmediate = this.createReadyStateChangeSetImmediate();\n      } else {\n        // For older browsers\n        this.setImmediate = this.createSetTimeoutSetImmediate();\n      }\n\n      let ci = function clearImmediate(handle: any) {\n        delete (<any>clearImmediate).instance.tasksByHandle[handle];\n      };\n\n      (<any>ci).instance = this;\n\n      this.clearImmediate = ci;\n    }\n  }\n\n  canUseProcessNextTick() {\n    return this.identify(this.root.process) === '[object process]';\n  }\n\n  canUseMessageChannel() {\n    return Boolean(this.root.MessageChannel);\n  }\n\n  canUseReadyStateChange() {\n    const document = this.root.document;\n    return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n  }\n\n  canUsePostMessage() {\n    const root = this.root;\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `root.postMessage` means something completely different and can't be used for this purpose.\n    if (root.postMessage && !root.importScripts) {\n      let postMessageIsAsynchronous = true;\n      let oldOnMessage = root.onmessage;\n      root.onmessage = function() {\n        postMessageIsAsynchronous = false;\n      };\n      root.postMessage('', '*');\n      root.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n\n    return false;\n  }\n\n  // This function accepts the same arguments as setImmediate, but\n  // returns a function that requires no arguments.\n  partiallyApplied(handler: any, ...args: any[]) {\n    let fn = function result () {\n      const { handler, args } = <any>result;\n      if (typeof handler === 'function') {\n        handler.apply(undefined, args);\n      } else {\n        (new Function('' + handler))();\n      }\n    };\n\n    (<any>fn).handler = handler;\n    (<any>fn).args = args;\n\n    return fn;\n  }\n\n  addFromSetImmediateArguments(args: any[]) {\n    this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n    return this.nextHandle++;\n  }\n\n  createProcessNextTickSetImmediate() {\n    let fn = function setImmediate() {\n      const { instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createPostMessageSetImmediate() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    const root = this.root;\n\n    let messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n    let onGlobalMessage = function globalMessageHandler(event: any) {\n      const instance = (<any>globalMessageHandler).instance;\n      if (event.source === root &&\n        typeof event.data === 'string' &&\n        event.data.indexOf(messagePrefix) === 0) {\n        instance.runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n    (<any>onGlobalMessage).instance = this;\n\n    root.addEventListener('message', onGlobalMessage, false);\n\n    let fn = function setImmediate() {\n      const { messagePrefix, instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.postMessage(messagePrefix + handle, '*');\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n    (<any>fn).messagePrefix = messagePrefix;\n\n    return fn;\n  }\n\n  runIfPresent(handle: any) {\n    // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (this.currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // 'too much recursion' error.\n      this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n    } else {\n      let task = this.tasksByHandle[handle];\n      if (task) {\n        this.currentlyRunningATask = true;\n        try {\n          task();\n        } finally {\n          this.clearImmediate(handle);\n          this.currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  createMessageChannelSetImmediate() {\n    let channel = new this.root.MessageChannel();\n    channel.port1.onmessage = (event: any) => {\n      let handle = event.data;\n      this.runIfPresent(handle);\n    };\n\n    let fn = function setImmediate() {\n      const { channel, instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      channel.port2.postMessage(handle);\n      return handle;\n    };\n\n    (<any>fn).channel = channel;\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createReadyStateChangeSetImmediate() {\n    let fn = function setImmediate() {\n      const instance = (<any>setImmediate).instance;\n      const root = instance.root;\n      const doc = root.document;\n      const html = doc.documentElement;\n\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      let script = doc.createElement('script');\n      script.onreadystatechange = () => {\n        instance.runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n      html.appendChild(script);\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createSetTimeoutSetImmediate() {\n    let fn = function setImmediate() {\n      const instance = (<any>setImmediate).instance;\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n}\nexport const Immediate = new ImmediateDefinition(root);\n","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","export function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  for (let i = 0, len = baseCtors.length; i < len; i++) {\n    const baseCtor = baseCtors[i];\n    const propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n    for (let j = 0, len2 = propertyKeys.length; j < len2; j++) {\n      const name = propertyKeys[j];\n      derivedCtor.prototype[name] = baseCtor.prototype[name];\n    }\n  }\n}","import { root } from './root';\n\nexport function assignImpl(target: Object, ...sources: Object[]) {\n  const len = sources.length;\n  for (let i = 0; i < len; i++) {\n    const source = sources[i];\n    for (let k in source) {\n      if (source.hasOwnProperty(k)) {\n        target[k] = source[k];\n      }\n    }\n  }\n  return target;\n};\n\nexport function getAssign(root: any) {\n  return root.Object.assign || assignImpl;\n}\n\nexport const assign = getAssign(root);","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","export function identity<T>(x: T): T {\n  return x;\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","import {BehaviorSubject} from 'rxjs/BehaviorSubject'\nimport { Observable } from 'rxjs'\nimport Rx from 'rxjs'\nimport 'rxjs/add/observable/fromEvent'\n\nimport {svgClippedArc} from './lib/ndp-software/svg.js'\nimport {ptToVector, normalizeRadians} from './lib/ndp-software/trig.js'\n\nimport {newCmdBus$, logCmdBus} from 'pilota'\n\n\n//import {run} from '@cycle/rxjs-run'\n//import {makeDOMDriver, svg} from '@cycle/dom'\n\nconst MAX_DEGREE = 355\n\nfunction arc(startAngle, value) {\n  return svgClippedArc(50, 50, 25, 45, startAngle, value)\n}\n\nexport function newDial(dom, model$) {\n\n  function eventToPt(e) {\n    return {x: e.layerX / dom.clientWidth - 0.5, y: e.layerY / dom.clientHeight - 0.5}\n  }\n\n  function ptToNormalizedValue(pt) {\n    let rads = ptToVector(pt)[0]\n    rads     = rads + Math.PI / 2\n    rads     = normalizeRadians(rads)\n    rads     = rads < 0 ? rads + 2 * Math.PI : rads\n    return rads * 0.5 / Math.PI // normalize [0..1]\n  }\n\n  // MODEL\n  const preview$    = new BehaviorSubject({paused: false, value: null})\n  const previewCmd$ = newCmdBus$(preview$, {\n    pause()  {\n      return {value: 0, paused: true}\n    },\n    resume() {\n      return {value: 0, paused: false}\n    },\n    change(state, cmd) {\n      return Object.assign({}, state, {value: cmd.value})\n    }\n  })\n  logCmdBus //(previewCmd$)\n\n\n  // VIEW\n  model$.subscribe(function(x) {\n    const value        = x * MAX_DEGREE\n    const tempoReading = dom.querySelector('.reading')\n    tempoReading\n        .setAttribute('d', arc(0, value))\n  })\n\n  // Draw preview\n  const previewElem = dom.querySelector('.preview')\n  preview$\n      .subscribe(state => previewElem.setAttribute('d', (state.paused || state.value == 0) ? '' : arc(0, state.value * MAX_DEGREE)))\n\n  // INTENT\n  const click$     = Observable.fromEvent(dom, 'click').do(e => e.preventDefault())\n  const mouseMove$ = Observable.fromEvent(dom, 'mousemove')\n\n  click$\n      .map(eventToPt)\n      .map(ptToNormalizedValue)\n      .subscribe(model$)\n\n  // preview mouse moves\n  const scheduler = Rx.Scheduler.requestAnimationFrame\n  mouseMove$\n      .throttleTime(50, scheduler)\n      .map(eventToPt)\n      .map(ptToNormalizedValue)\n      .map(x => {\n             return {name: 'change', value: x}\n           })\n      .subscribe(previewCmd$)\n\n  // Preview off during pause: mm mm mm ...   [1s pause]\n  mouseMove$\n      .debounceTime(1000, scheduler)\n      .map(() => {\n             return {name: 'change', value: null}\n           })\n      .subscribe(previewCmd$)\n\n  // When click, turn preview off: mm mm mm mc  [1 sec off]\n  click$\n      .mapTo('pause')\n      .merge(click$.delay(1000).mapTo('resume'))\n      .subscribe(previewCmd$)\n\n  // Return a stream of preview values\n  return preview$.map((state) => state.paused ? null : state.value)\n}\n\n\n","import {polarToCartesian} from './trig.js'\n\n/* An arc */\n/* eslint-disable max-params */\nexport function svgArc(x, y, radius, startAngle, endAngle) {\n  const start = polarToCartesian(x, y, radius, endAngle)\n  const end   = polarToCartesian(x, y, radius, startAngle)\n\n  const arcSweep = endAngle - startAngle <= 180 ? '0' : '1'\n\n  return [\n    'M', start.x, start.y,\n    'A', radius, radius, 0, arcSweep, 0, end.x, end.y,\n    'L', x, y,\n    'L', start.x, start.y\n  ].join(' ')\n}\n\n\n/* Partial donut */\n/* eslint-disable max-params */\nexport function svgClippedArc(x, y,\n                       innerRadius, outerRadius,\n                       startAngle, endAngle) {\n\n  const startOuter = polarToCartesian(x, y, outerRadius, endAngle)\n  const endOuter   = polarToCartesian(x, y, outerRadius, startAngle)\n  const startInner = polarToCartesian(x, y, innerRadius, endAngle)\n  const endInner   = polarToCartesian(x, y, innerRadius, startAngle)\n\n  const arcSweep = endAngle - startAngle <= 180 ? '0' : '1'\n\n  return [\n    'M', startOuter.x, startOuter.y,\n    'A', outerRadius, outerRadius, 0, arcSweep, 0, endOuter.x, endOuter.y,\n    'L', endInner.x, endInner.y,\n    'A', innerRadius, innerRadius, 0, arcSweep, 1, startInner.x, startInner.y,\n    'Z'\n  ].join(' ')\n}\n\n","/*eslint-env browser */\n\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject'\n\nimport {newCmdBus$ } from 'pilota'\n\nimport {currentTonality$} from './tonality.js'\nimport {msPerPeriod$} from './tempo.js'\nimport {name$} from './name.js'\nimport {newSoundData} from './noise.js'\n\nexport const editorPegs$          = new BehaviorSubject([])\nexport const editorCmdBus$ = newCmdBus$(editorPegs$)\n\n\nconst newPeg = function(normalized) {\n  return {\n    id:         `peg-${(new Date()).getTime()}${Math.random()}`,\n    normalized: normalized,\n    sound:      newSoundData(normalized)\n  }\n}\n\n\n// MODEL COMMANDS\neditorCmdBus$.on('add peg', (state, cmd) => {\n  state.push(newPeg(cmd.peg))\n  return state\n})\n\neditorCmdBus$.on('clear', () => [])\n\neditorCmdBus$.on('add pattern', (state, cmd) => {\n  const pattern                              = cmd.pattern\n  if (/^template.*/.exec(pattern.key)) {\n    name$.next('My Dotz')\n  } else {\n    name$.next(pattern.name || 'My Dotz')\n  }\n  currentTonality$.next(pattern.tonality)\n  msPerPeriod$.next(pattern.periodMs)\n  document.getElementById('wheel').classList = `wheel ${pattern.tonality}`\n  return pattern.pegs.map((pegModel) => {\n    // if there is no sub-structure, then values assumed to be the normalized ones\n    return newPeg(pegModel.normalized || pegModel)\n  })\n})\n\n","// Given a fn, returns an iterator that calls that function for each step\n// of an iteration.\nimport '@babel/polyfill'\n\nexport const iterateWith = function(fn) {\n  return function *(x) {\n    while (true) {\n      yield x\n      x = fn(x)\n    }\n  }\n}\n\n// Starting with the given number, yields a number doubling each time.\nexport const doubleIter = iterateWith(x => x * 2)\n\n// Starting with a given number, yields numbers increasing by ones\nexport const counterIter = iterateWith(x => x + 1)\n\n// Given an iterator and a function, yields iterator value until\n/// function returns false.\nexport const takeWhile = function* (it, fn) {\n  for (const x of it) {\n    if (fn(x)) {\n      yield x\n    } else {\n      return\n    }\n  }\n}\n\n// Calls iterator until number is less than the max value provided.\nexport const whileLessThan = function(it, max) {\n  return takeWhile(it, x => x < max)\n}\n\n\nexport const ownPropertiesIter = function(x) {\n  return function *() {\n    for (const p in x) {\n      if (x.hasOwnProperty(p)) {\n        yield p\n      }\n    }\n  }\n}\n","export const radiansPerPeriod = 2 * Math.PI\n\n// Put `r` between -π and π\nexport const normalizeRadians = (r) => {\n  if (Math.abs(r) < Math.pi) return r\n  while (r < 0) r += radiansPerPeriod\n  while (r > Math.PI) r -= radiansPerPeriod\n  return r\n}\n\n\nexport const ptToVector = function (pt) {\n  const angle = Math.atan2(pt.y, pt.x) // note: unintuitive order is JS spec\n  const dist = Math.sqrt(pt.x * pt.x + pt.y * pt.y)\n  return [angle, dist]\n}\n\n\nexport const vectorToPt = (angle, dist) => {\n  return {\n    x: dist * Math.cos(angle),\n    y: dist * Math.sin(angle)\n  }\n}\n\n/* eslint-disable max-params */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = (angleInDegrees - 90) * Math.PI / 180\n  return {\n    x: centerX + (radius * Math.cos(angleInRadians)),\n    y: centerY + (radius * Math.sin(angleInRadians))\n  }\n}\n\n\n\n","export function precondition(x, msg) {\n  if (!x) throw msg\n}\n\nexport function isFunction(x) {\n  return typeof x === 'function'\n}\n\nexport function pin(x, min, max) {\n  return Math.min(max, Math.max(min, x))\n}\n\nexport function ptInRect(pt, rect) {\n  return pt.x > rect.left\n         && pt.x < rect.right\n         && pt.y > rect.top\n         && pt.y < rect.bottom\n}\n\nexport function ptInInscribedCircle(pt, rect) {\n  if (ptInRect(pt, rect)) {\n    const center             =\n          {\n            x: (rect.right - rect.left) / 2 + rect.left,\n            y: (rect.bottom - rect.top) / 2 + rect.top\n          },\n          distanceFromCenter = Math.sqrt(Math.pow(center.x - pt.x, 2) + Math.pow(center.y - pt.y, 2)),\n          radius             = Math.min(rect.right - rect.left, rect.bottom - rect.top) / 2\n    return distanceFromCenter <= radius\n  } else {\n    return false\n  }\n}\n\n\n/*\n linearScaleFns: create functions that scale linearly\n from [0..1] to a given range. Range can be:\n * max  (implicit 0 min)\n * min, max\n * max, min (where scaling is inverted)\n Returns two functions:\n * first function (n) => x, where x is normalized 0..1, and x is the specified range\n * the second function does the reverse scaling\n */\nexport function linearScaleFns(minOrMax, max) {\n  let min\n\n  if (typeof(max) == 'undefined') {\n    [min,max] = [0, minOrMax]\n  } else {\n    min = minOrMax\n  }\n\n  let flipFn = (x) => x\n  if (min > max) {\n    [min, max] = [max, min]\n    flipFn = (x) => 1 - x\n  }\n\n  const range = max - min\n\n  const unscaleFn = (x) => pin(flipFn((x - min) / range), 0, 1)\n  const scaleFn   = (x) => pin((flipFn(x) * range) + min, min, max)\n  return [scaleFn, unscaleFn]\n}\n\n/*global global, localStorage */\nexport function localStorageKeys() {\n  const keys = []\n  if (typeof(localStorage) !== 'undefined') {\n    for (let i = 0; i < localStorage.length; i++)\n      keys[i] = localStorage.key(i)\n  }\n  return keys\n}\n\n\nexport function labelLog(label) {\n  return function(...msgs) {\n    global.console.log(...[`${label}: `, ...msgs])\n  }\n}\n\n\n// ms/rev => human readable\nexport function humanizeTempo(x) {\n  const speed = x < 5000 ? Math.round(60000 / x) : x < 10000 ? Math.round(x / 100) / 10 : Math.round(x / 1000)\n  return `${speed}${x < 5000 ? 'rpm' : 's'}`\n}\n\n","/*eslint-env browser */\n/*eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }]*/\n/*global LZString, Velocity */\nimport {Observable} from 'rxjs/Observable'\nimport {Subject} from 'rxjs/Subject'\n\nimport 'rxjs/add/observable/interval'\nimport 'rxjs/add/observable/fromEvent'\nimport 'rxjs/add/observable/of'\nimport 'rxjs/add/operator/withLatestFrom'\nimport 'rxjs/add/operator/map'\nimport 'rxjs/add/operator/filter'\nimport 'rxjs/add/operator/scan'\n\n\nimport {labelLog} from './lib/ndp-software/util.js'\nimport * as trig from './lib/ndp-software/trig.js'\n\nimport {editorPegs$, editorCmdBus$} from './editor.js'\nimport {patternStoreBus$} from './pattern-store.js'\nimport {currentTonality$} from './tonality.js'\nimport {playState$} from './play-pause.js'\nimport {soundOut$, newSoundData} from './noise.js'\nimport {msPerPeriod$} from './tempo.js'\nimport {name$} from './name.js'\n\n// MODEL\nconst NORMALIZED_RADIUS = 600 // main editor is 1200 virtual pizels\nconst maxPegSize = () => NORMALIZED_RADIUS / 5\n\nconst MS_PER_TICK    = 20\nconst radiansPerTick = () => {\n  return (MS_PER_TICK / msPerPeriod$.getValue() * trig.radiansPerPeriod)\n}\n\n\nconst normalizeValues = (pt, size) => {\n  const r = {}\n  const [rad, dist] = trig.ptToVector(pt)\n  r.rad   = rad\n  r.mag   = 1 - (dist / NORMALIZED_RADIUS)\n  r.sz    = size / maxPegSize()\n  return r\n}\n\nconst normalizeEvent = (e, size) =>\n    normalizeValues(eventToPt(e), size)\n\n\nplayState$.subscribe(labelLog('playing state'))\nconst ticker$        = Observable.interval(MS_PER_TICK).delay(6000).filter(() => playState$.getValue() == 'playing')\nconst radians$       = ticker$.scan((last) => trig.normalizeRadians(last + radiansPerTick()))\n\n// activePegs$ is a stream of the \"active\" or highlighted peg.\nconst activePegs$ = new Subject()\n\nradians$\n    .withLatestFrom(editorPegs$, (angle, pegs) => {\n                      // Generate stream of active pegs\n                      pegs.forEach((pegModel) => {\n                        if (angle <= pegModel.normalized.rad && pegModel.normalized.rad < (angle + radiansPerTick())) {\n                          activePegs$.next(pegModel)\n                        }\n                      })\n                    })\n    .subscribe(_ => null)\n\n\n// VIEW\nconst editor      = document.getElementById('editor')\nconst wheel       = document.getElementById('wheel')\nconst pegsEl      = wheel.getElementsByClassName('pegs')[0]\n\nconst saveButton = document.getElementById('save-button')\n\n\nconst Color = {\n  note:    'violet',\n  playing: 'white',\n  growing: 'deeppink',\n  scratch: 'yellow'\n}\n\n\n// Draw the pegs\neditorPegs$\n    .map((pegs) => {\n           const newPegs = []\n           pegs.forEach((pegModel) => {\n             const screen = normalizedToScreen(pegModel.normalized)\n             newPegs.push([pegModel, screen])\n           })\n           return newPegs\n         })\n    .subscribe(pegs => pegs.forEach((p) => renderPeg(p[0], p[1])))\n\n//// Remove pegs if they are gone\neditorPegs$\n    .subscribe(function(pegs) {\n                 const ids    = pegs.map(x => x.id)\n                 const pegEls = pegsEl.getElementsByClassName('peg')\n                 // Note: go backwards, because there appears to be a bug with el.remove() when going forward.\n                 for (let i = pegEls.length - 1; i >= 0; i--) {\n                   const el   = pegEls[i]\n                   const id = el.getAttribute('id')\n                   if (ids.indexOf(id) == -1) {\n                     el.remove()\n                   }\n                 }\n               })\n\nconst normalizedToScreen = (normalized) => {\n  return {\n    pt:   trig.vectorToPt(normalized.rad, (1 - normalized.mag) * NORMALIZED_RADIUS),\n    size: normalized.sz * maxPegSize()\n  }\n}\n\n\nconst findOrCreatePeg = (pegModel) => {\n  let peg = document.getElementById(pegModel.id)\n  if (!peg) {\n    peg = document.createElementNS('http://www.w3.org/2000/svg', 'circle')\n    peg.setAttribute('id', pegModel.id)\n    peg.setAttribute('class', 'peg')\n    pegsEl.appendChild(peg)\n  }\n  return peg\n}\n\nconst renderPeg = (pegModel, screen) => {\n  const e = findOrCreatePeg(pegModel)\n  e.setAttribute('cx', screen.pt.x + NORMALIZED_RADIUS)\n  e.setAttribute('cy', screen.pt.y + NORMALIZED_RADIUS)\n  e.setAttribute('r', screen.size)\n  e.setAttribute('fill', screen.highlightcolor || screen.color || Color.note)\n}\n\n\n// INTERACTIONS\n// const saveEditorAction$ =\nObservable\n    .fromEvent(saveButton, 'click')\n    .do(e => e.preventDefault())\n    .withLatestFrom(editorPegs$, (_, pegs) => {\n                      return {\n                        name:    'insert',\n                        pattern: {\n                          name:     name$.getValue(),\n                          tonality: currentTonality$.getValue(),\n                          periodMs: msPerPeriod$.getValue(),\n                          pegs:     pegs,\n                          svg:      `<svg viewBox=\"${editor.getAttribute('viewBox')}\">${wheel.outerHTML.replace(/(style|id)=\"[^\"]+\"/g, '')}</svg>`\n                        }\n                      }\n                    })\n    .subscribe(patternStoreBus$)\n\n\nconst editorMousedown$ = Observable.fromEvent(editor, 'mousedown')\nconst editorMouseup$   = Observable.fromEvent(editor, 'mouseup')\n\n\nvar eventToPt = function(e) {\n  const bounds = editor.getBoundingClientRect()\n  //const width = bounds.right - bounds.left\n  const x = ((e.x - bounds.left) / editor.clientWidth - 0.5) * 2.0 * NORMALIZED_RADIUS\n  const y = ((e.y - bounds.top) / editor.clientHeight - 0.5) * 2.0 * NORMALIZED_RADIUS\n  return {x: x, y: y}\n}\n\nlet startedPegAt = null\n\n// Size based on how long the mouse press/touch is\nconst calcSizeWhileGrowing = (start = startedPegAt) => {\n  return Math.min(maxPegSize(), (((new Date()).getTime()) - start) / 40)\n}\n\neditorMousedown$.subscribe((e) => {\n  startedPegAt = (new Date()).getTime()\n  const pt     = eventToPt(e)\n  const [angle, dist] = trig.ptToVector(pt)\n\n  const interval = setInterval(() => {\n    if (startedPegAt) {\n      const peg    = {\n        id:    'wip',\n        angle: angle,\n        dist:  dist\n      }\n      const screen = {\n        size:  calcSizeWhileGrowing(),\n        pt:    pt,\n        color: Color.growing\n      }\n      renderPeg(peg, screen)\n    } else {\n      const e = document.getElementById('wip')\n      if (e) e.parentNode.removeChild(e)\n      clearInterval(interval)\n    }\n  }, 20)\n})\n\neditorMouseup$\n    .map((e) => {\n           const pt   = eventToPt(e)\n           const size = calcSizeWhileGrowing()\n           return {pt, size}\n         })\n    .map((screen) => {\n           const normalized = normalizeValues(screen.pt, screen.size)\n           return {name: 'add peg', peg: normalized}\n         })\n    .subscribe(editorCmdBus$)\n\neditorMouseup$.subscribe(() => startedPegAt = null)\n\n\n// Move the clock hand\nradians$.subscribe((angle) => {\n  const hand     = document.getElementById('hand')\n  const duration = MS_PER_TICK * .75 // smaller than interval so we don't drop behind\n  /* eslint-disable new-cap */\n  Velocity(hand, {\n    x1: NORMALIZED_RADIUS + Math.cos(angle) * NORMALIZED_RADIUS,\n    y1: NORMALIZED_RADIUS + Math.sin(angle) * NORMALIZED_RADIUS,\n    x2: NORMALIZED_RADIUS,\n    y2: NORMALIZED_RADIUS\n  }, {duration: duration, easing: 'linear', queue: false})\n})\n\n\nactivePegs$.subscribe((pegModel) => {\n  const e = document.getElementById(pegModel.id)\n  if (e) {\n    e.setAttribute('fill', Color.playing)\n    const highlightDuration = Math.min(200, pegModel.sound.duration * 1000)\n    setTimeout(() => e.setAttribute('fill', Color.note), highlightDuration)\n  }\n})\n\n\n// MUSIC\nactivePegs$.map((x) => x.sound).subscribe(soundOut$)\n\n\n// Scratchin'\nconst scratch$ = Observable.fromEvent(editor, 'mousemove')\n    .throttleTime(30)\n    .filter(e => e.shiftKey)\n\nscratch$\n    .map(e => newSoundData(normalizeEvent(e, maxPegSize() / 5)))\n    .filter(s => s.frequency)\n    .subscribe(soundOut$)\n\nscratch$\n    .subscribe(function(e) {\n                 const pt     = eventToPt(e)\n                 const screen = {\n                   size:  3,\n                   pt:    pt,\n                   color: Color.scratch\n                 }\n                 const [angle, dist] = trig.ptToVector(pt)\n                 const peg    = {\n                   id:    'scratch',\n                   angle: angle,\n                   dist:  dist\n                 }\n                 renderPeg(peg, screen)\n               })\n\nscratch$\n    .debounceTime(100)\n    .subscribe(function() {\n                 const scratch = document.getElementById('scratch')\n                 if (scratch) scratch.remove()\n               })\n\n\n/// DELETE ALL\nObservable.fromEvent(document.getElementById('delete-all-btn'), 'click')\n    .do(e => e.preventDefault())\n    .filter(() => window.confirm('really delete all your data? there’s no going back!'))\n    .mapTo('delete all')\n    .subscribe(patternStoreBus$)\n\n\n// Needed otherwise JSON gets filled with really long precision numbers, where\n// that level of precision is not needed for regular old JSON\nfunction roundForJSON(x) {\n  const c = 1000000.0\n  return Math.round(x * c) / c\n}\n\nfunction compressedModel(pegs) {\n  const model = {\n    name:     name$.getValue(),\n    tonality: currentTonality$.getValue(),\n    periodMs: msPerPeriod$.getValue(),\n    pegs:     pegs.map(function(peg) {\n      return {\n        rad: roundForJSON(peg.normalized.rad),\n        mag: roundForJSON(peg.normalized.mag),\n        sz:  roundForJSON(peg.normalized.sz)\n      }\n    })\n  }\n  // max length 2000\n  const json       = JSON.stringify(model)\n  return LZString.compressToEncodedURIComponent(json)\n}\n\nObservable\n    .fromEvent(document.getElementById('permalink-button'), 'click')\n    .do(e => e.preventDefault())\n    .withLatestFrom(editorPegs$, (_, pegs) => pegs)\n    .map(pegs => compressedModel(pegs))\n    .do(x => {\n          if (x.length > 2000) {\n            window.alert('This dotz is too complicated to share in a URL. Sorriz. Lemme know, and I’ll make it work... - dr. dotz.')\n          }\n        })\n    .subscribe(function(serialized) {\n                 const newHref = document.location.href.replace(/[#\\?].*/, '') + '?v1=' + serialized\n                 window.history.replaceState({}, '', newHref)\n               })\n\n\n// Load a pattern from the URL, if needed\nObservable\n    .of(document.location)\n    .map(x => x.search)\n    .filter(x => x.indexOf('v1=') !== -1)\n    .map(x => x.replace(/\\??v1=/, ''))\n    .map(x => LZString.decompressFromEncodedURIComponent(x))\n    .filter(x => x)\n    .map(x => JSON.parse(x))\n    .map(x => {\n           return {\n             name:    'add pattern',\n             pattern: x\n           }\n         })\n    .subscribe(function(x) {editorCmdBus$.next(x)})\n\n","/*eslint-env browser */\n\nimport {Observable} from 'rxjs/Observable'\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject'\n\nimport 'rxjs/add/observable/fromEvent'\nimport 'rxjs/add/operator/do'\n\n// MODEL\nexport const name$ = new BehaviorSubject('My Dotz')\n\n\n// VIEW\nname$.subscribe(function(name) {\n  const el     = document.querySelector('#pattern-name .name')\n  el.innerHTML = name\n})\n\n\n// INTENT\n\n// Change name\nObservable\n    .fromEvent(document.getElementById('pattern-name'), 'click')\n    .do(e => e.preventDefault())\n    .map(() =>  prompt('New name', name$.getValue()))\n    .filter(x => x !== null)\n    .subscribe(name$)\n","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        if (nativeContext.audioWorklet !== undefined) {\n            return Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedSourceWithoutImportStatements = isSupportingPostMessage\n                    ? sourceWithoutImportStatements\n                    : sourceWithoutImportStatements.replace(/\\s+extends\\s+AudioWorkletProcessor\\s*{/, ` extends (class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}){`);\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *     __collectBuffers = (array) => {\n                 *         array.forEach((element) => this.__buffers.add(element.buffer));\n                 *     };\n                 *\n                 *     process (inputs, outputs, parameters) {\n                 *         inputs.forEach(this.__collectBuffers);\n                 *         outputs.forEach(this.__collectBuffers);\n                 *         this.__collectBuffers(Object.values(parameters));\n                 *\n                 *         return super.process(\n                 *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *             outputs,\n                 *             parameters\n                 *         );\n                 *     }\n                 *\n                 * }))`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};(registerProcessor=>{${patchedSourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return;\n                    }\n                    // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options);\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        }\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const promise = fetchSource(moduleURL)\n            .then(([source, absoluteUrl]) => {\n            const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n            /*\n             * This is the unminified version of the code used below:\n             *\n             * ```js\n             * ${ importStatements };\n             * ((a, b) => {\n             *     (a[b] = a[b] || [ ]).push(\n             *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n             *             ${ sourceWithoutImportStatements }\n             *         }\n             *     );\n             * })(window, '_AWGS');\n             * ```\n             */\n            // tslint:disable-next-line:max-line-length\n            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n            // @todo Evaluating the given source code is a possible security problem.\n            return evaluateSource(wrappedSource);\n        })\n            .then(() => {\n            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n            if (evaluateAudioWorkletGlobalScope === undefined) {\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                throw new SyntaxError();\n            }\n            exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n            }, undefined, (name, processorCtor) => {\n                if (name.trim() === '') {\n                    throw createNotSupportedError();\n                }\n                const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                if (nodeNameToProcessorConstructorMap !== undefined) {\n                    if (nodeNameToProcessorConstructorMap.has(name)) {\n                        throw createNotSupportedError();\n                    }\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                }\n                else {\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                }\n            }, nativeContext.sampleRate, undefined, undefined));\n        });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const rslvdRqstsFCntxt = resolvedRequests.get(context);\n            if (rslvdRqstsFCntxt === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                rslvdRqstsFCntxt.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const ngngRqstsFCntxt = ongoingRequests.get(context);\n            if (ngngRqstsFCntxt !== undefined) {\n                ngngRqstsFCntxt.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext) => {\n    return new Promise((resolve) => {\n        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n        const dummy = nativeAudioContext.createGain();\n        // Bug #95: Safari does not play one sample buffers.\n        const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n        const channelData = ones.getChannelData(0);\n        channelData[0] = 1;\n        channelData[1] = 1;\n        const source = nativeAudioContext.createBufferSource();\n        source.buffer = ones;\n        source.loop = true;\n        source.connect(analyzer).connect(nativeAudioContext.destination);\n        source.connect(dummy);\n        source.disconnect(dummy);\n        // tslint:disable-next-line:deprecation\n        analyzer.onaudioprocess = (event) => {\n            const chnnlDt = event.inputBuffer.getChannelData(0);\n            if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                resolve(true);\n            }\n            else {\n                resolve(false);\n            }\n            source.stop();\n            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n            source.disconnect(analyzer);\n            analyzer.disconnect(nativeAudioContext.destination);\n        };\n        source.start();\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Only Firefox does throw an InvalidStateError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge, Firefox & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge, Firefox & Opera partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n};\n//# sourceMappingURL=native-script-processor-node.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = Object.getPrototypeOf(object);\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        const nextTrace = [...trace, audioNode];\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections)\n            .filter(([source]) => !nextTrace.includes(source))\n            .map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome, Edge & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n            const createFakeAudioParam = (input, value) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: value\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return value;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                return createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            };\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            // tslint:disable-next-line:deprecation\n            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                const orientation = [\n                    inputBuffer.getChannelData(0)[0],\n                    inputBuffer.getChannelData(1)[0],\n                    inputBuffer.getChannelData(2)[0],\n                    inputBuffer.getChannelData(3)[0],\n                    inputBuffer.getChannelData(4)[0],\n                    inputBuffer.getChannelData(5)[0]\n                ];\n                if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                    lastOrientation = orientation;\n                }\n                const positon = [\n                    inputBuffer.getChannelData(6)[0],\n                    inputBuffer.getChannelData(7)[0],\n                    inputBuffer.getChannelData(8)[0]\n                ];\n                if (positon.some((value, index) => value !== lastPosition[index])) {\n                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                    lastPosition = positon;\n                }\n            };\n            channelMergerNode.connect(scriptProcessorNode);\n            return {\n                forwardX: createFakeAudioParam(0, 0),\n                forwardY: createFakeAudioParam(1, 0),\n                forwardZ: createFakeAudioParam(2, -1),\n                positionX: createFakeAudioParam(6, 0),\n                positionY: createFakeAudioParam(7, 0),\n                positionZ: createFakeAudioParam(8, 0),\n                upX: createFakeAudioParam(3, 0),\n                upY: createFakeAudioParam(4, 1),\n                upZ: createFakeAudioParam(5, 0)\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange =\n                nativeOnStateChange !== null && nativeOnStateChange === wrappedListener\n                    ? value\n                    : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome, Edge & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                inputBuffer.getChannelData(0)[0],\n                inputBuffer.getChannelData(1)[0],\n                inputBuffer.getChannelData(2)[0]\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                inputBuffer.getChannelData(3)[0],\n                inputBuffer.getChannelData(4)[0],\n                inputBuffer.getChannelData(5)[0]\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 8000);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            })\n                .catch((err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome, Edge and Opera do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete().then(() => resolve(audioBuffer));\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        port2.onmessage = () => {\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port1.postMessage(arrayBuffer, [arrayBuffer]);\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome, Edge and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome, Edge & Opera throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    const trace = [];\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext, trace)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement, error) {\n    if (!statement) {\n        throw new Error(error);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value, gte, lte = Infinity) {\n    if (!(gte <= value && value <= lte)) {\n        throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context) {\n    // add a warning if the context is not started\n    if (!context.isOffline && context.state !== \"running\") {\n        warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n    }\n}\n/**\n * The default logger is the console\n */\nlet defaultLogger = console;\n/**\n * Set the logging interface\n */\nexport function setLogger(logger) {\n    defaultLogger = logger;\n}\n/**\n * Log anything\n */\nexport function log(...args) {\n    defaultLogger.log(...args);\n}\n/**\n * Warn anything\n */\nexport function warn(...args) {\n    defaultLogger.warn(...args);\n}\n//# sourceMappingURL=Debug.js.map","/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg) {\n    return typeof arg === \"undefined\";\n}\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined(arg) {\n    return !isUndef(arg);\n}\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg) {\n    return (typeof arg === \"number\");\n}\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg) {\n    return (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg) {\n    return (typeof arg === \"boolean\");\n}\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg) {\n    return (Array.isArray(arg));\n}\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg) {\n    return (typeof arg === \"string\");\n}\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg) {\n    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n//# sourceMappingURL=TypeCheck.js.map","import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options) {\n    return new stdAudioContext(options);\n}\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n    return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n    (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n    assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n    // @ts-ignore\n    return new stdAudioWorkletNode(context, name, options);\n}\n/**\n * This promise resolves to a boolean which indicates if the\n * functionality is supported within the currently used browse.\n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n//# sourceMappingURL=AudioContext.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n    constructor(callback, type, updateInterval) {\n        this._callback = callback;\n        this._type = type;\n        this._updateInterval = updateInterval;\n        // create the clock source for the first time\n        this._createClock();\n    }\n    /**\n     * Generate a web worker\n     */\n    _createWorker() {\n        const blob = new Blob([\n            /* javascript */ `\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n        ], { type: \"text/javascript\" });\n        const blobUrl = URL.createObjectURL(blob);\n        const worker = new Worker(blobUrl);\n        worker.onmessage = this._callback.bind(this);\n        this._worker = worker;\n    }\n    /**\n     * Create a timeout loop\n     */\n    _createTimeout() {\n        this._timeout = setTimeout(() => {\n            this._createTimeout();\n            this._callback();\n        }, this._updateInterval * 1000);\n    }\n    /**\n     * Create the clock source.\n     */\n    _createClock() {\n        if (this._type === \"worker\") {\n            try {\n                this._createWorker();\n            }\n            catch (e) {\n                // workers not supported, fallback to timeout\n                this._type = \"timeout\";\n                this._createClock();\n            }\n        }\n        else if (this._type === \"timeout\") {\n            this._createTimeout();\n        }\n    }\n    /**\n     * Clean up the current clock source\n     */\n    _disposeClock() {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = 0;\n        }\n        if (this._worker) {\n            this._worker.terminate();\n            this._worker.onmessage = null;\n        }\n    }\n    /**\n     * The rate in seconds the ticker will update\n     */\n    get updateInterval() {\n        return this._updateInterval;\n    }\n    set updateInterval(interval) {\n        this._updateInterval = Math.max(interval, 128 / 44100);\n        if (this._type === \"worker\") {\n            this._worker.postMessage(Math.max(interval * 1000, 1));\n        }\n    }\n    /**\n     * The type of the ticker, either a worker or a timeout\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._disposeClock();\n        this._type = type;\n        this._createClock();\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this._disposeClock();\n    }\n}\n//# sourceMappingURL=Ticker.js.map","import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext, } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg) {\n    return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg) {\n    return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg) {\n    return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg) {\n    return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg) {\n    return arg instanceof AudioBuffer;\n}\n//# sourceMappingURL=AdvancedTypeCheck.js.map","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key, arg) {\n    return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\nexport function deepMerge(target, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (noCopy(key, source[key])) {\n                target[key] = source[key];\n            }\n            else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                deepMerge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n    // @ts-ignore\n    return deepMerge(target, ...sources);\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals(arrayA, arrayB) {\n    return arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments(defaults, argsArray, keys = [], objKey) {\n    const opts = {};\n    const args = Array.from(argsArray);\n    // if the first argument is an object and has an object key\n    if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n        // if it's not part of the defaults\n        const partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n        if (!partOfDefaults) {\n            // merge that key\n            deepMerge(opts, { [objKey]: args[0] });\n            // remove the obj key from the keys\n            keys.splice(keys.indexOf(objKey), 1);\n            // shift the first argument off\n            args.shift();\n        }\n    }\n    if (args.length === 1 && isObject(args[0])) {\n        deepMerge(opts, args[0]);\n    }\n    else {\n        for (let i = 0; i < keys.length; i++) {\n            if (isDefined(args[i])) {\n                opts[keys[i]] = args[i];\n            }\n        }\n    }\n    return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance(instance) {\n    return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg(given, fallback) {\n    if (isUndef(given)) {\n        return fallback;\n    }\n    else {\n        return given;\n    }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject(obj, omit) {\n    omit.forEach(prop => {\n        if (Reflect.has(obj, prop)) {\n            delete obj[prop];\n        }\n    });\n    return obj;\n}\n//# sourceMappingURL=Defaults.js.map","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n/**\n * @class  Tone is the base class of all other classes.\n * @category Core\n * @constructor\n */\nexport class Tone {\n    constructor() {\n        //-------------------------------------\n        // \tDEBUGGING\n        //-------------------------------------\n        /**\n         * Set this debug flag to log all events that happen in this class.\n         */\n        this.debug = false;\n        //-------------------------------------\n        // \tDISPOSING\n        //-------------------------------------\n        /**\n         * Indicates if the instance was disposed\n         */\n        this._wasDisposed = false;\n    }\n    /**\n     * Returns all of the default options belonging to the class.\n     */\n    static getDefaults() {\n        return {};\n    }\n    /**\n     * Prints the outputs to the console log for debugging purposes.\n     * Prints the contents only if either the object has a property\n     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n     * is set to the name of the class.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * // prints all logs originating from this oscillator\n     * osc.debug = true;\n     * // calls to start/stop will print in the console\n     * osc.start();\n     */\n    log(...args) {\n        // if the object is either set to debug = true\n        // or if there is a string on the Tone.global.with the class name\n        if (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n            log(this, ...args);\n        }\n    }\n    /**\n     * disconnect and dispose.\n     */\n    dispose() {\n        this._wasDisposed = true;\n        return this;\n    }\n    /**\n     * Indicates if the instance was disposed. 'Disposing' an\n     * instance means that all of the Web Audio nodes that were\n     * created for the instance are disconnected and freed for garbage collection.\n     */\n    get disposed() {\n        return this._wasDisposed;\n    }\n    /**\n     * Convert the class to a string\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.toString());\n     */\n    toString() {\n        return this.name;\n    }\n}\n/**\n * The version number semver\n */\nTone.version = version;\n//# sourceMappingURL=Tone.js.map","export const version = \"14.7.77\";\n//# sourceMappingURL=version.js.map","/**\n * The threshold for correctness for operators. Less than one sample even\n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n/**\n * Test if A is greater than B\n */\nexport function GT(a, b) {\n    return a > b + EPSILON;\n}\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a, b) {\n    return GT(a, b) || EQ(a, b);\n}\n/**\n * Test if A is less than B\n */\nexport function LT(a, b) {\n    return a + EPSILON < b;\n}\n/**\n * Test if A is less than B\n */\nexport function EQ(a, b) {\n    return Math.abs(a - b) < EPSILON;\n}\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n//# sourceMappingURL=Math.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline extends Tone {\n    constructor() {\n        super();\n        this.name = \"Timeline\";\n        /**\n         * The array of scheduled timeline events\n         */\n        this._timeline = [];\n        const options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n        this.memory = options.memory;\n        this.increasing = options.increasing;\n    }\n    static getDefaults() {\n        return {\n            memory: Infinity,\n            increasing: false,\n        };\n    }\n    /**\n     * The number of items in the timeline.\n     */\n    get length() {\n        return this._timeline.length;\n    }\n    /**\n     * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n     * @param event  The event object to insert into the timeline.\n     */\n    add(event) {\n        // the event needs to have a time attribute\n        assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n        event.time = event.time.valueOf();\n        if (this.increasing && this.length) {\n            const lastValue = this._timeline[this.length - 1];\n            assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n            this._timeline.push(event);\n        }\n        else {\n            const index = this._search(event.time);\n            this._timeline.splice(index + 1, 0, event);\n        }\n        // if the length is more than the memory, remove the previous ones\n        if (this.length > this.memory) {\n            const diff = this.length - this.memory;\n            this._timeline.splice(0, diff);\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  {Object}  event  The event object to remove from the list.\n     * @returns {Timeline} this\n     */\n    remove(event) {\n        const index = this._timeline.indexOf(event);\n        if (index !== -1) {\n            this._timeline.splice(index, 1);\n        }\n        return this;\n    }\n    /**\n     * Get the nearest event whose time is less than or equal to the given time.\n     * @param  time  The time to query.\n     */\n    get(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index !== -1) {\n            return this._timeline[index];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Return the first event in the timeline without removing it\n     * @returns {Object} The first event object\n     */\n    peek() {\n        return this._timeline[0];\n    }\n    /**\n     * Return the first event in the timeline and remove it\n     */\n    shift() {\n        return this._timeline.shift();\n    }\n    /**\n     * Get the event which is scheduled after the given time.\n     * @param  time  The time to query.\n     */\n    getAfter(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index + 1 < this._timeline.length) {\n            return this._timeline[index + 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Get the event before the event at the given time.\n     * @param  time  The time to query.\n     */\n    getBefore(time) {\n        const len = this._timeline.length;\n        // if it's after the last item, return the last item\n        if (len > 0 && this._timeline[len - 1].time < time) {\n            return this._timeline[len - 1];\n        }\n        const index = this._search(time);\n        if (index - 1 >= 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Cancel events at and after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        if (this._timeline.length > 1) {\n            let index = this._search(after);\n            if (index >= 0) {\n                if (EQ(this._timeline[index].time, after)) {\n                    // get the first item with that time\n                    for (let i = index; i >= 0; i--) {\n                        if (EQ(this._timeline[i].time, after)) {\n                            index = i;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    this._timeline = this._timeline.slice(0, index);\n                }\n                else {\n                    this._timeline = this._timeline.slice(0, index + 1);\n                }\n            }\n            else {\n                this._timeline = [];\n            }\n        }\n        else if (this._timeline.length === 1) {\n            // the first item's time\n            if (GTE(this._timeline[0].time, after)) {\n                this._timeline = [];\n            }\n        }\n        return this;\n    }\n    /**\n     * Cancel events before or equal to the given time.\n     * @param  time  The time to cancel before.\n     */\n    cancelBefore(time) {\n        const index = this._search(time);\n        if (index >= 0) {\n            this._timeline = this._timeline.slice(index + 1);\n        }\n        return this;\n    }\n    /**\n     * Returns the previous event if there is one. null otherwise\n     * @param  event The event to find the previous one of\n     * @return The event right before the given event\n     */\n    previousEvent(event) {\n        const index = this._timeline.indexOf(event);\n        if (index > 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Does a binary search on the timeline array and returns the\n     * nearest event index whose time is after or equal to the given time.\n     * If a time is searched before the first index in the timeline, -1 is returned.\n     * If the time is after the end, the index of the last item is returned.\n     */\n    _search(time, param = \"time\") {\n        if (this._timeline.length === 0) {\n            return -1;\n        }\n        let beginning = 0;\n        const len = this._timeline.length;\n        let end = len;\n        if (len > 0 && this._timeline[len - 1][param] <= time) {\n            return len - 1;\n        }\n        while (beginning < end) {\n            // calculate the midpoint for roughly equal partition\n            let midPoint = Math.floor(beginning + (end - beginning) / 2);\n            const event = this._timeline[midPoint];\n            const nextEvent = this._timeline[midPoint + 1];\n            if (EQ(event[param], time)) {\n                // choose the last one that has the same time\n                for (let i = midPoint; i < this._timeline.length; i++) {\n                    const testEvent = this._timeline[i];\n                    if (EQ(testEvent[param], time)) {\n                        midPoint = i;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return midPoint;\n            }\n            else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n                return midPoint;\n            }\n            else if (GT(event[param], time)) {\n                // search lower\n                end = midPoint;\n            }\n            else {\n                // search upper\n                beginning = midPoint + 1;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Internal iterator. Applies extra safety checks for\n     * removing items from the array.\n     */\n    _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {\n        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n    }\n    /**\n     * Iterate over everything in the array\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        this._iterate(callback);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or before the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBefore(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array after the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAfter(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const lowerBound = this._search(time);\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array between the startTime and endTime.\n     * The timerange is inclusive of the startTime, but exclusive of the endTime.\n     * range = [startTime, endTime).\n     * @param  startTime The time to check if items are before\n     * @param  endTime The end of the test interval.\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBetween(startTime, endTime, callback) {\n        let lowerBound = this._search(startTime);\n        let upperBound = this._search(endTime);\n        if (lowerBound !== -1 && upperBound !== -1) {\n            if (this._timeline[lowerBound].time !== startTime) {\n                lowerBound += 1;\n            }\n            // exclusive of the end time\n            if (this._timeline[upperBound].time === endTime) {\n                upperBound -= 1;\n            }\n            this._iterate(callback, lowerBound, upperBound);\n        }\n        else if (lowerBound === -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or after the given time. Similar to\n     * forEachAfter, but includes the item(s) at the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        let lowerBound = this._search(time);\n        // work backwards until the event time is less than time\n        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n            lowerBound--;\n        }\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at the given time\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n            let lowerBound = upperBound;\n            for (let i = upperBound; i >= 0; i--) {\n                if (EQ(this._timeline[i].time, time)) {\n                    lowerBound = i;\n                }\n                else {\n                    break;\n                }\n            }\n            this._iterate(event => {\n                callback(event);\n            }, lowerBound, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._timeline = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Timeline.js.map","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb) {\n    notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx) {\n    // add any additional modules\n    notifyNewContext.forEach(cb => cb(ctx));\n}\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb) {\n    notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n    // add any additional modules\n    notifyCloseContext.forEach(cb => cb(ctx));\n}\n//# sourceMappingURL=ContextInitialization.js.map","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\nexport class Emitter extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"Emitter\";\n    }\n    /**\n     * Bind a callback to a specific event.\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    on(event, callback) {\n        // split the event\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (!this._events.hasOwnProperty(eventName)) {\n                this._events[eventName] = [];\n            }\n            this._events[eventName].push(callback);\n        });\n        return this;\n    }\n    /**\n     * Bind a callback which is only invoked once\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    once(event, callback) {\n        const boundCallback = (...args) => {\n            // invoke the callback\n            callback(...args);\n            // remove the event\n            this.off(event, boundCallback);\n        };\n        this.on(event, boundCallback);\n        return this;\n    }\n    /**\n     * Remove the event listener.\n     * @param  event     The event to stop listening to.\n     * @param  callback  The callback which was bound to the event with Emitter.on.\n     *                   If no callback is given, all callbacks events are removed.\n     */\n    off(event, callback) {\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (this._events.hasOwnProperty(event)) {\n                if (isUndef(callback)) {\n                    this._events[event] = [];\n                }\n                else {\n                    const eventList = this._events[event];\n                    for (let i = eventList.length - 1; i >= 0; i--) {\n                        if (eventList[i] === callback) {\n                            eventList.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * Invoke all of the callbacks bound to the event\n     * with any arguments passed in.\n     * @param  event  The name of the event.\n     * @param args The arguments to pass to the functions listening.\n     */\n    emit(event, ...args) {\n        if (this._events) {\n            if (this._events.hasOwnProperty(event)) {\n                const eventList = this._events[event].slice(0);\n                for (let i = 0, len = eventList.length; i < len; i++) {\n                    eventList[i].apply(this, args);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Add Emitter functions (on/off/emit) to the object\n     */\n    static mixin(constr) {\n        // instance._events = {};\n        [\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n            const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n            Object.defineProperty(constr.prototype, name, property);\n        });\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._events = undefined;\n        return this;\n    }\n}\n//# sourceMappingURL=Emitter.js.map","import { Emitter } from \"../util/Emitter\";\nexport class BaseContext extends Emitter {\n    constructor() {\n        super(...arguments);\n        this.isOffline = false;\n    }\n    /*\n     * This is a placeholder so that JSON.stringify does not throw an error\n     * This matches what JSON.stringify(audioContext) returns on a native\n     * audioContext instance.\n     */\n    toJSON() {\n        return {};\n    }\n}\n//# sourceMappingURL=BaseContext.js.map","import { __awaiter } from \"tslib\";\nimport { Ticker } from \"../clock/Ticker\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport { createAudioContext, createAudioWorkletNode, } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n    constructor() {\n        super();\n        this.name = \"Context\";\n        /**\n         * An object containing all of the constants AudioBufferSourceNodes\n         */\n        this._constants = new Map();\n        /**\n         * All of the setTimeout events.\n         */\n        this._timeouts = new Timeline();\n        /**\n         * The timeout id counter\n         */\n        this._timeoutIds = 0;\n        /**\n         * Private indicator if the context has been initialized\n         */\n        this._initialized = false;\n        /**\n         * Indicates if the context is an OfflineAudioContext or an AudioContext\n         */\n        this.isOffline = false;\n        //--------------------------------------------\n        // AUDIO WORKLET\n        //--------------------------------------------\n        /**\n         * Maps a module name to promise of the addModule method\n         */\n        this._workletModules = new Map();\n        const options = optionsFromArguments(Context.getDefaults(), arguments, [\n            \"context\",\n        ]);\n        if (options.context) {\n            this._context = options.context;\n        }\n        else {\n            this._context = createAudioContext({\n                latencyHint: options.latencyHint,\n            });\n        }\n        this._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n        this.on(\"tick\", this._timeoutLoop.bind(this));\n        // fwd events from the context\n        this._context.onstatechange = () => {\n            this.emit(\"statechange\", this.state);\n        };\n        this._setLatencyHint(options.latencyHint);\n        this.lookAhead = options.lookAhead;\n    }\n    static getDefaults() {\n        return {\n            clockSource: \"worker\",\n            latencyHint: \"interactive\",\n            lookAhead: 0.1,\n            updateInterval: 0.05,\n        };\n    }\n    /**\n     * Finish setting up the context. **You usually do not need to do this manually.**\n     */\n    initialize() {\n        if (!this._initialized) {\n            // add any additional modules\n            initializeContext(this);\n            this._initialized = true;\n        }\n        return this;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return this._context.createAnalyser();\n    }\n    createOscillator() {\n        return this._context.createOscillator();\n    }\n    createBufferSource() {\n        return this._context.createBufferSource();\n    }\n    createBiquadFilter() {\n        return this._context.createBiquadFilter();\n    }\n    createBuffer(numberOfChannels, length, sampleRate) {\n        return this._context.createBuffer(numberOfChannels, length, sampleRate);\n    }\n    createChannelMerger(numberOfInputs) {\n        return this._context.createChannelMerger(numberOfInputs);\n    }\n    createChannelSplitter(numberOfOutputs) {\n        return this._context.createChannelSplitter(numberOfOutputs);\n    }\n    createConstantSource() {\n        return this._context.createConstantSource();\n    }\n    createConvolver() {\n        return this._context.createConvolver();\n    }\n    createDelay(maxDelayTime) {\n        return this._context.createDelay(maxDelayTime);\n    }\n    createDynamicsCompressor() {\n        return this._context.createDynamicsCompressor();\n    }\n    createGain() {\n        return this._context.createGain();\n    }\n    createIIRFilter(feedForward, feedback) {\n        // @ts-ignore\n        return this._context.createIIRFilter(feedForward, feedback);\n    }\n    createPanner() {\n        return this._context.createPanner();\n    }\n    createPeriodicWave(real, imag, constraints) {\n        return this._context.createPeriodicWave(real, imag, constraints);\n    }\n    createStereoPanner() {\n        return this._context.createStereoPanner();\n    }\n    createWaveShaper() {\n        return this._context.createWaveShaper();\n    }\n    createMediaStreamSource(stream) {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamSource(stream);\n    }\n    createMediaElementSource(element) {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaElementSource(element);\n    }\n    createMediaStreamDestination() {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamDestination();\n    }\n    decodeAudioData(audioData) {\n        return this._context.decodeAudioData(audioData);\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get currentTime() {\n        return this._context.currentTime;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get state() {\n        return this._context.state;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get sampleRate() {\n        return this._context.sampleRate;\n    }\n    /**\n     * The listener\n     */\n    get listener() {\n        this.initialize();\n        return this._listener;\n    }\n    set listener(l) {\n        assert(!this._initialized, \"The listener cannot be set after initialization.\");\n        this._listener = l;\n    }\n    /**\n     * There is only one Transport per Context. It is created on initialization.\n     */\n    get transport() {\n        this.initialize();\n        return this._transport;\n    }\n    set transport(t) {\n        assert(!this._initialized, \"The transport cannot be set after initialization.\");\n        this._transport = t;\n    }\n    /**\n     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n     */\n    get draw() {\n        this.initialize();\n        return this._draw;\n    }\n    set draw(d) {\n        assert(!this._initialized, \"Draw cannot be set after initialization.\");\n        this._draw = d;\n    }\n    /**\n     * A reference to the Context's destination node.\n     */\n    get destination() {\n        this.initialize();\n        return this._destination;\n    }\n    set destination(d) {\n        assert(!this._initialized, \"The destination cannot be set after initialization.\");\n        this._destination = d;\n    }\n    /**\n     * Create an audio worklet node from a name and options. The module\n     * must first be loaded using [[addAudioWorkletModule]].\n     */\n    createAudioWorkletNode(name, options) {\n        return createAudioWorkletNode(this.rawContext, name, options);\n    }\n    /**\n     * Add an AudioWorkletProcessor module\n     * @param url The url of the module\n     * @param name The name of the module\n     */\n    addAudioWorkletModule(url, name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n            if (!this._workletModules.has(name)) {\n                this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));\n            }\n            yield this._workletModules.get(name);\n        });\n    }\n    /**\n     * Returns a promise which resolves when all of the worklets have been loaded on this context\n     */\n    workletsAreReady() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const promises = [];\n            this._workletModules.forEach((promise) => promises.push(promise));\n            yield Promise.all(promises);\n        });\n    }\n    //---------------------------\n    // TICKER\n    //---------------------------\n    /**\n     * How often the interval callback is invoked.\n     * This number corresponds to how responsive the scheduling\n     * can be. context.updateInterval + context.lookAhead gives you the\n     * total latency between scheduling an event and hearing it.\n     */\n    get updateInterval() {\n        return this._ticker.updateInterval;\n    }\n    set updateInterval(interval) {\n        this._ticker.updateInterval = interval;\n    }\n    /**\n     * What the source of the clock is, either \"worker\" (default),\n     * \"timeout\", or \"offline\" (none).\n     */\n    get clockSource() {\n        return this._ticker.type;\n    }\n    set clockSource(type) {\n        this._ticker.type = type;\n    }\n    /**\n     * The type of playback, which affects tradeoffs between audio\n     * output latency and responsiveness.\n     * In addition to setting the value in seconds, the latencyHint also\n     * accepts the strings \"interactive\" (prioritizes low latency),\n     * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n     * latency and performance).\n     * @example\n     * // prioritize sustained playback\n     * const context = new Tone.Context({ latencyHint: \"playback\" });\n     * // set this context as the global Context\n     * Tone.setContext(context);\n     * // the global context is gettable with Tone.getContext()\n     * console.log(Tone.getContext().latencyHint);\n     */\n    get latencyHint() {\n        return this._latencyHint;\n    }\n    /**\n     * Update the lookAhead and updateInterval based on the latencyHint\n     */\n    _setLatencyHint(hint) {\n        let lookAheadValue = 0;\n        this._latencyHint = hint;\n        if (isString(hint)) {\n            switch (hint) {\n                case \"interactive\":\n                    lookAheadValue = 0.1;\n                    break;\n                case \"playback\":\n                    lookAheadValue = 0.5;\n                    break;\n                case \"balanced\":\n                    lookAheadValue = 0.25;\n                    break;\n            }\n        }\n        this.lookAhead = lookAheadValue;\n        this.updateInterval = lookAheadValue / 2;\n    }\n    /**\n     * The unwrapped AudioContext or OfflineAudioContext\n     */\n    get rawContext() {\n        return this._context;\n    }\n    /**\n     * The current audio context time plus a short [[lookAhead]].\n     */\n    now() {\n        return this._context.currentTime + this.lookAhead;\n    }\n    /**\n     * The current audio context time without the [[lookAhead]].\n     * In most cases it is better to use [[now]] instead of [[immediate]] since\n     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n     */\n    immediate() {\n        return this._context.currentTime;\n    }\n    /**\n     * Starts the audio context from a suspended state. This is required\n     * to initially start the AudioContext. See [[Tone.start]]\n     */\n    resume() {\n        if (isAudioContext(this._context)) {\n            return this._context.resume();\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * Close the context. Once closed, the context can no longer be used and\n     * any AudioNodes created from the context will be silent.\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isAudioContext(this._context)) {\n                yield this._context.close();\n            }\n            if (this._initialized) {\n                closeContext(this);\n            }\n        });\n    }\n    /**\n     * **Internal** Generate a looped buffer at some constant value.\n     */\n    getConstant(val) {\n        if (this._constants.has(val)) {\n            return this._constants.get(val);\n        }\n        else {\n            const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n            const arr = buffer.getChannelData(0);\n            for (let i = 0; i < arr.length; i++) {\n                arr[i] = val;\n            }\n            const constant = this._context.createBufferSource();\n            constant.channelCount = 1;\n            constant.channelCountMode = \"explicit\";\n            constant.buffer = buffer;\n            constant.loop = true;\n            constant.start(0);\n            this._constants.set(val, constant);\n            return constant;\n        }\n    }\n    /**\n     * Clean up. Also closes the audio context.\n     */\n    dispose() {\n        super.dispose();\n        this._ticker.dispose();\n        this._timeouts.dispose();\n        Object.keys(this._constants).map((val) => this._constants[val].disconnect());\n        return this;\n    }\n    //---------------------------\n    // TIMEOUTS\n    //---------------------------\n    /**\n     * The private loop which keeps track of the context scheduled timeouts\n     * Is invoked from the clock source\n     */\n    _timeoutLoop() {\n        const now = this.now();\n        let firstEvent = this._timeouts.peek();\n        while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n            // invoke the callback\n            firstEvent.callback();\n            // shift the first event off\n            this._timeouts.shift();\n            // get the next one\n            firstEvent = this._timeouts.peek();\n        }\n    }\n    /**\n     * A setTimeout which is guaranteed by the clock source.\n     * Also runs in the offline context.\n     * @param  fn       The callback to invoke\n     * @param  timeout  The timeout in seconds\n     * @returns ID to use when invoking Context.clearTimeout\n     */\n    setTimeout(fn, timeout) {\n        this._timeoutIds++;\n        const now = this.now();\n        this._timeouts.add({\n            callback: fn,\n            id: this._timeoutIds,\n            time: now + timeout,\n        });\n        return this._timeoutIds;\n    }\n    /**\n     * Clears a previously scheduled timeout with Tone.context.setTimeout\n     * @param  id  The ID returned from setTimeout\n     */\n    clearTimeout(id) {\n        this._timeouts.forEach((event) => {\n            if (event.id === id) {\n                this._timeouts.remove(event);\n            }\n        });\n        return this;\n    }\n    /**\n     * Clear the function scheduled by [[setInterval]]\n     */\n    clearInterval(id) {\n        return this.clearTimeout(id);\n    }\n    /**\n     * Adds a repeating event to the context's callback clock\n     */\n    setInterval(fn, interval) {\n        const id = ++this._timeoutIds;\n        const intervalFn = () => {\n            const now = this.now();\n            this._timeouts.add({\n                callback: () => {\n                    // invoke the callback\n                    fn();\n                    // invoke the event to repeat it\n                    intervalFn();\n                },\n                id,\n                time: now + interval,\n            });\n        };\n        // kick it off\n        intervalFn();\n        return id;\n    }\n}\n//# sourceMappingURL=Context.js.map","import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => readOnly(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            enumerable: true,\n            writable: false,\n        });\n    }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => writable(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            writable: true,\n        });\n    }\n}\nexport const noOp = () => {\n    // no operation here!\n};\n//# sourceMappingURL=Interface.js.map","import { __awaiter } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/audio/casio/A1.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffer\";\n        /**\n         * Callback when the buffer is loaded.\n         */\n        this.onload = noOp;\n        const options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n        this.reverse = options.reverse;\n        this.onload = options.onload;\n        if (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n            this.set(options.url);\n        }\n        else if (isString(options.url)) {\n            // initiate the download\n            this.load(options.url).catch(options.onerror);\n        }\n    }\n    static getDefaults() {\n        return {\n            onerror: noOp,\n            onload: noOp,\n            reverse: false,\n        };\n    }\n    /**\n     * The sample rate of the AudioBuffer\n     */\n    get sampleRate() {\n        if (this._buffer) {\n            return this._buffer.sampleRate;\n        }\n        else {\n            return getContext().sampleRate;\n        }\n    }\n    /**\n     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n     */\n    set(buffer) {\n        if (buffer instanceof ToneAudioBuffer) {\n            // if it's loaded, set it\n            if (buffer.loaded) {\n                this._buffer = buffer.get();\n            }\n            else {\n                // otherwise when it's loaded, invoke it's callback\n                buffer.onload = () => {\n                    this.set(buffer);\n                    this.onload(this);\n                };\n            }\n        }\n        else {\n            this._buffer = buffer;\n        }\n        // reverse it initially\n        if (this._reversed) {\n            this._reverse();\n        }\n        return this;\n    }\n    /**\n     * The audio buffer stored in the object.\n     */\n    get() {\n        return this._buffer;\n    }\n    /**\n     * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n     * Invokes the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     * @returns A Promise which resolves with this ToneAudioBuffer\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doneLoading = ToneAudioBuffer.load(url).then(audioBuffer => {\n                this.set(audioBuffer);\n                // invoke the onload method\n                this.onload(this);\n            });\n            ToneAudioBuffer.downloads.push(doneLoading);\n            try {\n                yield doneLoading;\n            }\n            finally {\n                // remove the downloaded file\n                const index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n                ToneAudioBuffer.downloads.splice(index, 1);\n            }\n            return this;\n        });\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffer = undefined;\n        return this;\n    }\n    /**\n     * Set the audio buffer from the array.\n     * To create a multichannel AudioBuffer, pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     */\n    fromArray(array) {\n        const isMultidimensional = isArray(array) && array[0].length > 0;\n        const channels = isMultidimensional ? array.length : 1;\n        const len = isMultidimensional ? array[0].length : array.length;\n        const context = getContext();\n        const buffer = context.createBuffer(channels, len, context.sampleRate);\n        const multiChannelArray = !isMultidimensional && channels === 1 ?\n            [array] : array;\n        for (let c = 0; c < channels; c++) {\n            buffer.copyToChannel(multiChannelArray[c], c);\n        }\n        this._buffer = buffer;\n        return this;\n    }\n    /**\n     * Sums multiple channels into 1 channel\n     * @param chanNum Optionally only copy a single channel from the array.\n     */\n    toMono(chanNum) {\n        if (isNumber(chanNum)) {\n            this.fromArray(this.toArray(chanNum));\n        }\n        else {\n            let outputArray = new Float32Array(this.length);\n            const numChannels = this.numberOfChannels;\n            for (let channel = 0; channel < numChannels; channel++) {\n                const channelArray = this.toArray(channel);\n                for (let i = 0; i < channelArray.length; i++) {\n                    outputArray[i] += channelArray[i];\n                }\n            }\n            // divide by the number of channels\n            outputArray = outputArray.map(sample => sample / numChannels);\n            this.fromArray(outputArray);\n        }\n        return this;\n    }\n    /**\n     * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n     * Float32Array, and multichannel buffers will return multidimensional arrays.\n     * @param channel Optionally only copy a single channel from the array.\n     */\n    toArray(channel) {\n        if (isNumber(channel)) {\n            return this.getChannelData(channel);\n        }\n        else if (this.numberOfChannels === 1) {\n            return this.toArray(0);\n        }\n        else {\n            const ret = [];\n            for (let c = 0; c < this.numberOfChannels; c++) {\n                ret[c] = this.getChannelData(c);\n            }\n            return ret;\n        }\n    }\n    /**\n     * Returns the Float32Array representing the PCM audio data for the specific channel.\n     * @param  channel  The channel number to return\n     * @return The audio as a TypedArray\n     */\n    getChannelData(channel) {\n        if (this._buffer) {\n            return this._buffer.getChannelData(channel);\n        }\n        else {\n            return new Float32Array(0);\n        }\n    }\n    /**\n     * Cut a subsection of the array and return a buffer of the\n     * subsection. Does not modify the original buffer\n     * @param start The time to start the slice\n     * @param end The end time to slice. If none is given will default to the end of the buffer\n     */\n    slice(start, end = this.duration) {\n        const startSamples = Math.floor(start * this.sampleRate);\n        const endSamples = Math.floor(end * this.sampleRate);\n        assert(startSamples < endSamples, \"The start time must be less than the end time\");\n        const length = endSamples - startSamples;\n        const retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n        for (let channel = 0; channel < this.numberOfChannels; channel++) {\n            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n        }\n        return new ToneAudioBuffer(retBuffer);\n    }\n    /**\n     * Reverse the buffer.\n     */\n    _reverse() {\n        if (this.loaded) {\n            for (let i = 0; i < this.numberOfChannels; i++) {\n                this.getChannelData(i).reverse();\n            }\n        }\n        return this;\n    }\n    /**\n     * If the buffer is loaded or not\n     */\n    get loaded() {\n        return this.length > 0;\n    }\n    /**\n     * The duration of the buffer in seconds.\n     */\n    get duration() {\n        if (this._buffer) {\n            return this._buffer.duration;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The length of the buffer in samples\n     */\n    get length() {\n        if (this._buffer) {\n            return this._buffer.length;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n     */\n    get numberOfChannels() {\n        if (this._buffer) {\n            return this._buffer.numberOfChannels;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Reverse the buffer.\n     */\n    get reverse() {\n        return this._reversed;\n    }\n    set reverse(rev) {\n        if (this._reversed !== rev) {\n            this._reversed = rev;\n            this._reverse();\n        }\n    }\n    /**\n     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n     * pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     * @return A ToneAudioBuffer created from the array\n     */\n    static fromArray(array) {\n        return (new ToneAudioBuffer()).fromArray(array);\n    }\n    /**\n     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n     * @param  url The url to load.\n     * @return A promise which resolves to a ToneAudioBuffer\n     */\n    static fromUrl(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buffer = new ToneAudioBuffer();\n            return yield buffer.load(url);\n        });\n    }\n    /**\n     * Loads a url using fetch and returns the AudioBuffer.\n     */\n    static load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // test if the url contains multiple extensions\n            const matches = url.match(/\\[([^\\]\\[]+\\|.+)\\]$/);\n            if (matches) {\n                const extensions = matches[1].split(\"|\");\n                let extension = extensions[0];\n                for (const ext of extensions) {\n                    if (ToneAudioBuffer.supportsType(ext)) {\n                        extension = ext;\n                        break;\n                    }\n                }\n                url = url.replace(matches[0], extension);\n            }\n            // make sure there is a slash between the baseUrl and the url\n            const baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n            const response = yield fetch(baseUrl + url);\n            if (!response.ok) {\n                throw new Error(`could not load url: ${url}`);\n            }\n            const arrayBuffer = yield response.arrayBuffer();\n            const audioBuffer = yield getContext().decodeAudioData(arrayBuffer);\n            return audioBuffer;\n        });\n    }\n    /**\n     * Checks a url's extension to see if the current browser can play that file type.\n     * @param url The url/extension to test\n     * @return If the file extension can be played\n     * @static\n     * @example\n     * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n     * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n     */\n    static supportsType(url) {\n        const extensions = url.split(\".\");\n        const extension = extensions[extensions.length - 1];\n        const response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n        return response !== \"\";\n    }\n    /**\n     * Returns a Promise which resolves when all of the buffers have loaded\n     */\n    static loaded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // this makes sure that the function is always async\n            yield Promise.resolve();\n            while (ToneAudioBuffer.downloads.length) {\n                yield ToneAudioBuffer.downloads[0];\n            }\n        });\n    }\n}\n//-------------------------------------\n// STATIC METHODS\n//-------------------------------------\n/**\n * A path which is prefixed before every url.\n */\nToneAudioBuffer.baseUrl = \"\";\n/**\n * All of the downloads\n */\nToneAudioBuffer.downloads = [];\n//# sourceMappingURL=ToneAudioBuffer.js.map","import { __awaiter } from \"tslib\";\nimport { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5, 44100);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n    constructor() {\n        super({\n            clockSource: \"offline\",\n            context: isOfflineAudioContext(arguments[0]) ?\n                arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n            lookAhead: 0,\n            updateInterval: isOfflineAudioContext(arguments[0]) ?\n                128 / arguments[0].sampleRate : 128 / arguments[2],\n        });\n        this.name = \"OfflineContext\";\n        /**\n         * An artificial clock source\n         */\n        this._currentTime = 0;\n        this.isOffline = true;\n        this._duration = isOfflineAudioContext(arguments[0]) ?\n            arguments[0].length / arguments[0].sampleRate : arguments[1];\n    }\n    /**\n     * Override the now method to point to the internal clock time\n     */\n    now() {\n        return this._currentTime;\n    }\n    /**\n     * Same as this.now()\n     */\n    get currentTime() {\n        return this._currentTime;\n    }\n    /**\n     * Render just the clock portion of the audio context.\n     */\n    _renderClock(asynchronous) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let index = 0;\n            while (this._duration - this._currentTime >= 0) {\n                // invoke all the callbacks on that time\n                this.emit(\"tick\");\n                // increment the clock in block-sized chunks\n                this._currentTime += 128 / this.sampleRate;\n                // yield once a second of audio\n                index++;\n                const yieldEvery = Math.floor(this.sampleRate / 128);\n                if (asynchronous && index % yieldEvery === 0) {\n                    yield new Promise(done => setTimeout(done, 1));\n                }\n            }\n        });\n    }\n    /**\n     * Render the output of the OfflineContext\n     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n     */\n    render(asynchronous = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.workletsAreReady();\n            yield this._renderClock(asynchronous);\n            const buffer = yield this._context.startRendering();\n            return new ToneAudioBuffer(buffer);\n        });\n    }\n    /**\n     * Close the context\n     */\n    close() {\n        return Promise.resolve();\n    }\n}\n//# sourceMappingURL=OfflineContext.js.map","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext = dummyContext;\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext() {\n    if (globalContext === dummyContext && hasAudioContext) {\n        setContext(new Context());\n    }\n    return globalContext;\n}\n/**\n * Set the default audio context\n * @category Core\n */\nexport function setContext(context) {\n    if (isAudioContext(context)) {\n        globalContext = new Context(context);\n    }\n    else if (isOfflineAudioContext(context)) {\n        globalContext = new OfflineContext(context);\n    }\n    else {\n        globalContext = context;\n    }\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start() {\n    return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n    let prefix = \"v\";\n    if (version === \"dev\") {\n        prefix = \"\";\n    }\n    const printString = ` * Tone.js ${prefix}${version} * `;\n    // eslint-disable-next-line no-console\n    console.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n//# sourceMappingURL=Global.js.map","import { __awaiter } from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\nexport class DummyContext extends BaseContext {\n    constructor() {\n        super(...arguments);\n        this.lookAhead = 0;\n        this.latencyHint = 0;\n        this.isOffline = false;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return {};\n    }\n    createOscillator() {\n        return {};\n    }\n    createBufferSource() {\n        return {};\n    }\n    createBiquadFilter() {\n        return {};\n    }\n    createBuffer(_numberOfChannels, _length, _sampleRate) {\n        return {};\n    }\n    createChannelMerger(_numberOfInputs) {\n        return {};\n    }\n    createChannelSplitter(_numberOfOutputs) {\n        return {};\n    }\n    createConstantSource() {\n        return {};\n    }\n    createConvolver() {\n        return {};\n    }\n    createDelay(_maxDelayTime) {\n        return {};\n    }\n    createDynamicsCompressor() {\n        return {};\n    }\n    createGain() {\n        return {};\n    }\n    createIIRFilter(_feedForward, _feedback) {\n        return {};\n    }\n    createPanner() {\n        return {};\n    }\n    createPeriodicWave(_real, _imag, _constraints) {\n        return {};\n    }\n    createStereoPanner() {\n        return {};\n    }\n    createWaveShaper() {\n        return {};\n    }\n    createMediaStreamSource(_stream) {\n        return {};\n    }\n    createMediaElementSource(_element) {\n        return {};\n    }\n    createMediaStreamDestination() {\n        return {};\n    }\n    decodeAudioData(_audioData) {\n        return Promise.resolve({});\n    }\n    //---------------------------\n    // TONE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAudioWorkletNode(_name, _options) {\n        return {};\n    }\n    get rawContext() {\n        return {};\n    }\n    addAudioWorkletModule(_url, _name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n    resume() {\n        return Promise.resolve();\n    }\n    setTimeout(_fn, _timeout) {\n        return 0;\n    }\n    clearTimeout(_id) {\n        return this;\n    }\n    setInterval(_fn, _interval) {\n        return 0;\n    }\n    clearInterval(_id) {\n        return this;\n    }\n    getConstant(_val) {\n        return {};\n    }\n    get currentTime() {\n        return 0;\n    }\n    get state() {\n        return {};\n    }\n    get sampleRate() {\n        return 0;\n    }\n    get listener() {\n        return {};\n    }\n    get transport() {\n        return {};\n    }\n    get draw() {\n        return {};\n    }\n    set draw(_d) { }\n    get destination() {\n        return {};\n    }\n    set destination(_d) { }\n    now() {\n        return 0;\n    }\n    immediate() {\n        return 0;\n    }\n}\n//# sourceMappingURL=DummyContext.js.map","/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n    const piFactor = 0.5 * Math.PI;\n    return Math.sin(percent * piFactor);\n}\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db) {\n    return Math.pow(10, db / 20);\n}\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain) {\n    return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval) {\n    return Math.pow(2, (interval / 12));\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4 = 440;\nexport function getA4() {\n    return A4;\n}\nexport function setA4(freq) {\n    A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency) {\n    return Math.round(ftomf(frequency));\n}\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency) {\n    return 69 + 12 * Math.log2(frequency / A4);\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi) {\n    return A4 * Math.pow(2, (midi - 69) / 12);\n}\n//# sourceMappingURL=Conversions.js.map","import { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport class TimeBaseClass extends Tone {\n    /**\n     * @param context The context associated with the time value. Used to compute\n     * Transport and context-relative timing.\n     * @param  value  The time value as a number, string or object\n     * @param  units  Unit values\n     */\n    constructor(context, value, units) {\n        super();\n        /**\n         * The default units\n         */\n        this.defaultUnits = \"s\";\n        this._val = value;\n        this._units = units;\n        this.context = context;\n        this._expressions = this._getExpressions();\n    }\n    /**\n     * All of the time encoding expressions\n     */\n    _getExpressions() {\n        return {\n            hz: {\n                method: (value) => {\n                    return this._frequencyToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n            },\n            i: {\n                method: (value) => {\n                    return this._ticksToUnits(parseInt(value, 10));\n                },\n                regexp: /^(\\d+)i$/i,\n            },\n            m: {\n                method: (value) => {\n                    return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n                },\n                regexp: /^(\\d+)m$/i,\n            },\n            n: {\n                method: (value, dot) => {\n                    const numericValue = parseInt(value, 10);\n                    const scalar = dot === \".\" ? 1.5 : 1;\n                    if (numericValue === 1) {\n                        return this._beatsToUnits(this._getTimeSignature()) * scalar;\n                    }\n                    else {\n                        return this._beatsToUnits(4 / numericValue) * scalar;\n                    }\n                },\n                regexp: /^(\\d+)n(\\.?)$/i,\n            },\n            number: {\n                method: (value) => {\n                    return this._expressions[this.defaultUnits].method.call(this, value);\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)$/,\n            },\n            s: {\n                method: (value) => {\n                    return this._secondsToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)s$/,\n            },\n            samples: {\n                method: (value) => {\n                    return parseInt(value, 10) / this.context.sampleRate;\n                },\n                regexp: /^(\\d+)samples$/,\n            },\n            t: {\n                method: (value) => {\n                    const numericValue = parseInt(value, 10);\n                    return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n                },\n                regexp: /^(\\d+)t$/i,\n            },\n            tr: {\n                method: (m, q, s) => {\n                    let total = 0;\n                    if (m && m !== \"0\") {\n                        total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n            },\n        };\n    }\n    //-------------------------------------\n    // \tVALUE OF\n    //-------------------------------------\n    /**\n     * Evaluate the time value. Returns the time in seconds.\n     */\n    valueOf() {\n        if (this._val instanceof TimeBaseClass) {\n            this.fromType(this._val);\n        }\n        if (isUndef(this._val)) {\n            return this._noArg();\n        }\n        else if (isString(this._val) && isUndef(this._units)) {\n            for (const units in this._expressions) {\n                if (this._expressions[units].regexp.test(this._val.trim())) {\n                    this._units = units;\n                    break;\n                }\n            }\n        }\n        else if (isObject(this._val)) {\n            let total = 0;\n            for (const typeName in this._val) {\n                if (isDefined(this._val[typeName])) {\n                    const quantity = this._val[typeName];\n                    // @ts-ignore\n                    const time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n                    total += time;\n                }\n            }\n            return total;\n        }\n        if (isDefined(this._units)) {\n            const expr = this._expressions[this._units];\n            const matching = this._val.toString().trim().match(expr.regexp);\n            if (matching) {\n                return expr.method.apply(this, matching.slice(1));\n            }\n            else {\n                return expr.method.call(this, this._val);\n            }\n        }\n        else if (isString(this._val)) {\n            return parseFloat(this._val);\n        }\n        else {\n            return this._val;\n        }\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return 1 / freq;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return (60 / this._getBpm()) * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return seconds;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return (ticks * (this._beatsToUnits(1)) / this._getPPQ());\n    }\n    /**\n     * With no arguments, return 'now'\n     */\n    _noArg() {\n        return this._now();\n    }\n    //-------------------------------------\n    // \tTEMPO CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the bpm\n     */\n    _getBpm() {\n        return this.context.transport.bpm.value;\n    }\n    /**\n     * Return the timeSignature\n     */\n    _getTimeSignature() {\n        return this.context.transport.timeSignature;\n    }\n    /**\n     * Return the PPQ or 192 if Transport is not available\n     */\n    _getPPQ() {\n        return this.context.transport.PPQ;\n    }\n    //-------------------------------------\n    // \tCONVERSION INTERFACE\n    //-------------------------------------\n    /**\n     * Coerce a time type into this units type.\n     * @param type Any time type units\n     */\n    fromType(type) {\n        this._units = undefined;\n        switch (this.defaultUnits) {\n            case \"s\":\n                this._val = type.toSeconds();\n                break;\n            case \"i\":\n                this._val = type.toTicks();\n                break;\n            case \"hz\":\n                this._val = type.toFrequency();\n                break;\n            case \"midi\":\n                this._val = type.toMidi();\n                break;\n        }\n        return this;\n    }\n    /**\n     * Return the value in hertz\n     */\n    toFrequency() {\n        return 1 / this.toSeconds();\n    }\n    /**\n     * Return the time in samples\n     */\n    toSamples() {\n        return this.toSeconds() * this.context.sampleRate;\n    }\n    /**\n     * Return the time in milliseconds.\n     */\n    toMilliseconds() {\n        return this.toSeconds() * 1000;\n    }\n}\n//# sourceMappingURL=TimeBase.js.map","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass extends TimeBaseClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TimeClass\";\n    }\n    _getExpressions() {\n        return Object.assign(super._getExpressions(), {\n            now: {\n                method: (capture) => {\n                    return this._now() + new this.constructor(this.context, capture).valueOf();\n                },\n                regexp: /^\\+(.+)/,\n            },\n            quantize: {\n                method: (capture) => {\n                    const quantTo = new TimeClass(this.context, capture).valueOf();\n                    return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n                },\n                regexp: /^@(.+)/,\n            },\n        });\n    }\n    /**\n     * Quantize the time by the given subdivision. Optionally add a\n     * percentage which will move the time value towards the ideal\n     * quantized value by that percentage.\n     * @param  subdiv    The subdivision to quantize to\n     * @param  percent  Move the time value towards the quantized value by a percentage.\n     * @example\n     * Tone.Time(21).quantize(2); // returns 22\n     * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n     */\n    quantize(subdiv, percent = 1) {\n        const subdivision = new this.constructor(this.context, subdiv).valueOf();\n        const value = this.valueOf();\n        const multiple = Math.round(value / subdivision);\n        const ideal = multiple * subdivision;\n        const diff = ideal - value;\n        return value + diff * percent;\n    }\n    //-------------------------------------\n    // CONVERSIONS\n    //-------------------------------------\n    /**\n     * Convert a Time to Notation. The notation values are will be the\n     * closest representation between 1m to 128th note.\n     * @return {Notation}\n     * @example\n     * // if the Transport is at 120bpm:\n     * Tone.Time(2).toNotation(); // returns \"1m\"\n     */\n    toNotation() {\n        const time = this.toSeconds();\n        const testNotations = [\"1m\"];\n        for (let power = 1; power < 9; power++) {\n            const subdiv = Math.pow(2, power);\n            testNotations.push(subdiv + \"n.\");\n            testNotations.push(subdiv + \"n\");\n            testNotations.push(subdiv + \"t\");\n        }\n        testNotations.push(\"0\");\n        // find the closets notation representation\n        let closest = testNotations[0];\n        let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n        testNotations.forEach(notation => {\n            const notationSeconds = new TimeClass(this.context, notation).toSeconds();\n            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n                closest = notation;\n                closestSeconds = notationSeconds;\n            }\n        });\n        return closest;\n    }\n    /**\n     * Return the time encoded as Bars:Beats:Sixteenths.\n     */\n    toBarsBeatsSixteenths() {\n        const quarterTime = this._beatsToUnits(1);\n        let quarters = this.valueOf() / quarterTime;\n        quarters = parseFloat(quarters.toFixed(4));\n        const measures = Math.floor(quarters / this._getTimeSignature());\n        let sixteenths = (quarters % 1) * 4;\n        quarters = Math.floor(quarters) % this._getTimeSignature();\n        const sixteenthString = sixteenths.toString();\n        if (sixteenthString.length > 3) {\n            // the additional parseFloat removes insignificant trailing zeroes\n            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n        }\n        const progress = [measures, quarters, sixteenths];\n        return progress.join(\":\");\n    }\n    /**\n     * Return the time in ticks.\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.round(quarters * this._getPPQ());\n    }\n    /**\n     * Return the time in seconds.\n     */\n    toSeconds() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value as a midi note.\n     */\n    toMidi() {\n        return ftom(this.toFrequency());\n    }\n    _now() {\n        return this.context.now();\n    }\n}\n/**\n * Create a TimeClass from a time string or number. The time is computed against the\n * global Tone.Context. To use a specific context, use [[TimeClass]]\n * @param value A value which represents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n * @example\n * const time = Tone.Time(\"4n\").toSeconds();\n * console.log(time);\n * @example\n * const note = Tone.Time(1).toNotation();\n * console.log(note);\n * @example\n * const freq = Tone.Time(0.5).toFrequency();\n * console.log(freq);\n */\nexport function Time(value, units) {\n    return new TimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=Time.js.map","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `valueOf` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Frequency\";\n        this.defaultUnits = \"hz\";\n    }\n    /**\n     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n     * to generate all the other pitch values from notes. A4's values in Hertz.\n     */\n    static get A4() {\n        return getA4();\n    }\n    static set A4(freq) {\n        setA4(freq);\n    }\n    //-------------------------------------\n    // \tAUGMENT BASE EXPRESSIONS\n    //-------------------------------------\n    _getExpressions() {\n        return Object.assign({}, super._getExpressions(), {\n            midi: {\n                regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n                method(value) {\n                    if (this.defaultUnits === \"midi\") {\n                        return value;\n                    }\n                    else {\n                        return FrequencyClass.mtof(value);\n                    }\n                },\n            },\n            note: {\n                regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n                method(pitch, octave) {\n                    const index = noteToScaleIndex[pitch.toLowerCase()];\n                    const noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n                    if (this.defaultUnits === \"midi\") {\n                        return noteNumber;\n                    }\n                    else {\n                        return FrequencyClass.mtof(noteNumber);\n                    }\n                },\n            },\n            tr: {\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n                method(m, q, s) {\n                    let total = 1;\n                    if (m && m !== \"0\") {\n                        total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n            },\n        });\n    }\n    //-------------------------------------\n    // \tEXPRESSIONS\n    //-------------------------------------\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return  A new transposed frequency\n     * @example\n     * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n    }\n    /**\n     * Takes an array of semitone intervals and returns\n     * an array of frequencies transposed by those intervals.\n     * @return  Returns an array of Frequencies\n     * @example\n     * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n     */\n    harmonize(intervals) {\n        return intervals.map(interval => {\n            return this.transpose(interval);\n        });\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Frequency(\"C4\").toMidi(); // 60\n     */\n    toMidi() {\n        return ftom(this.valueOf());\n    }\n    /**\n     * Return the value of the frequency in Scientific Pitch Notation\n     * @example\n     * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n     */\n    toNote() {\n        const freq = this.toFrequency();\n        const log = Math.log2(freq / FrequencyClass.A4);\n        let noteNumber = Math.round(12 * log) + 57;\n        const octave = Math.floor(noteNumber / 12);\n        if (octave < 0) {\n            noteNumber += -12 * octave;\n        }\n        const noteName = scaleIndexToNote[noteNumber % 12];\n        return noteName + octave.toString();\n    }\n    /**\n     * Return the duration of one cycle in seconds.\n     */\n    toSeconds() {\n        return 1 / super.toSeconds();\n    }\n    /**\n     * Return the duration of one cycle in ticks\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.floor(quarters * this._getPPQ());\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS HELPERS\n    //-------------------------------------\n    /**\n     * With no arguments, return 0\n     */\n    _noArg() {\n        return 0;\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return freq;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ()));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return 1 / super._beatsToUnits(beats);\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return 1 / seconds;\n    }\n    /**\n     * Convert a MIDI note to frequency value.\n     * @param  midi The midi number to convert.\n     * @return The corresponding frequency value\n     */\n    static mtof(midi) {\n        return mtof(midi);\n    }\n    /**\n     * Convert a frequency value to a MIDI note.\n     * @param frequency The value to frequency value to convert.\n     */\n    static ftom(frequency) {\n        return ftom(frequency);\n    }\n}\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n/**\n * Note to scale index.\n * @hidden\n */\nconst noteToScaleIndex = {\n    cbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n    dbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n    ebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n    fbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n    gbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n    abb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n    bbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n * @example\n * const midi = Tone.Frequency(\"C3\").toMidi();\n * console.log(midi);\n * @example\n * const hertz = Tone.Frequency(38, \"midi\").toFrequency();\n * console.log(hertz);\n */\nexport function Frequency(value, units) {\n    return new FrequencyClass(getContext(), value, units);\n}\n//# sourceMappingURL=Frequency.js.map","import { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TransportTime\";\n    }\n    /**\n     * Return the current time in whichever context is relevant\n     */\n    _now() {\n        return this.context.transport.seconds;\n    }\n}\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value, units) {\n    return new TransportTimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=TransportTime.js.map","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport class ToneWithContext extends Tone {\n    constructor() {\n        super();\n        const options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n        if (this.defaultContext) {\n            this.context = this.defaultContext;\n        }\n        else {\n            this.context = options.context;\n        }\n    }\n    static getDefaults() {\n        return {\n            context: getContext(),\n        };\n    }\n    /**\n     * Return the current time of the Context clock plus the lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.now());\n     * }, 100);\n     */\n    now() {\n        return this.context.currentTime + this.context.lookAhead;\n    }\n    /**\n     * Return the current time of the Context clock without any lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.immediate());\n     * }, 100);\n     */\n    immediate() {\n        return this.context.currentTime;\n    }\n    /**\n     * The duration in seconds of one sample.\n     * @example\n     * console.log(Tone.Transport.sampleTime);\n     */\n    get sampleTime() {\n        return 1 / this.context.sampleRate;\n    }\n    /**\n     * The number of seconds of 1 processing block (128 samples)\n     * @example\n     * console.log(Tone.Destination.blockTime);\n     */\n    get blockTime() {\n        return 128 / this.context.sampleRate;\n    }\n    /**\n     * Convert the incoming time to seconds.\n     * This is calculated against the current [[Tone.Transport]] bpm\n     * @example\n     * const gain = new Tone.Gain();\n     * setInterval(() => console.log(gain.toSeconds(\"4n\")), 100);\n     * // ramp the tempo to 60 bpm over 30 seconds\n     * Tone.getTransport().bpm.rampTo(60, 30);\n     */\n    toSeconds(time) {\n        return new TimeClass(this.context, time).toSeconds();\n    }\n    /**\n     * Convert the input to a frequency number\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toFrequency(\"4n\"));\n     */\n    toFrequency(freq) {\n        return new FrequencyClass(this.context, freq).toFrequency();\n    }\n    /**\n     * Convert the input time into ticks\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toTicks(\"4n\"));\n     */\n    toTicks(time) {\n        return new TransportTimeClass(this.context, time).toTicks();\n    }\n    //-------------------------------------\n    // \tGET/SET\n    //-------------------------------------\n    /**\n     * Get a subset of the properties which are in the partial props\n     */\n    _getPartialProperties(props) {\n        const options = this.get();\n        // remove attributes from the prop that are not in the partial\n        Object.keys(options).forEach(name => {\n            if (isUndef(props[name])) {\n                delete options[name];\n            }\n        });\n        return options;\n    }\n    /**\n     * Get the object's attributes.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.get());\n     */\n    get() {\n        const defaults = getDefaultsFromInstance(this);\n        Object.keys(defaults).forEach(attribute => {\n            if (Reflect.has(this, attribute)) {\n                const member = this[attribute];\n                if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n                    defaults[attribute] = member.value;\n                }\n                else if (member instanceof ToneWithContext) {\n                    defaults[attribute] = member._getPartialProperties(defaults[attribute]);\n                    // otherwise make sure it's a serializable type\n                }\n                else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n                    defaults[attribute] = member;\n                }\n                else {\n                    // remove all undefined and unserializable attributes\n                    delete defaults[attribute];\n                }\n            }\n        });\n        return defaults;\n    }\n    /**\n     * Set multiple properties at once with an object.\n     * @example\n     * const filter = new Tone.Filter().toDestination();\n     * // set values using an object\n     * filter.set({\n     * \tfrequency: \"C6\",\n     * \ttype: \"highpass\"\n     * });\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3\").connect(filter);\n     * player.autostart = true;\n     */\n    set(props) {\n        Object.keys(props).forEach(attribute => {\n            if (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n                if (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n                    // small optimization\n                    if (this[attribute].value !== props[attribute]) {\n                        this[attribute].value = props[attribute];\n                    }\n                }\n                else if (this[attribute] instanceof ToneWithContext) {\n                    this[attribute].set(props[attribute]);\n                }\n                else {\n                    this[attribute] = props[attribute];\n                }\n            }\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=ToneWithContext.js.map","import { Timeline } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline extends Timeline {\n    constructor(initial = \"stopped\") {\n        super();\n        this.name = \"StateTimeline\";\n        this._initial = initial;\n        this.setStateAtTime(this._initial, 0);\n    }\n    /**\n     * Returns the scheduled state scheduled before or at\n     * the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     */\n    getValueAtTime(time) {\n        const event = this.get(time);\n        if (event !== null) {\n            return event.state;\n        }\n        else {\n            return this._initial;\n        }\n    }\n    /**\n     * Add a state to the timeline.\n     * @param  state The name of the state to set.\n     * @param  time  The time to query.\n     * @param options Any additional options that are needed in the timeline.\n     */\n    setStateAtTime(state, time, options) {\n        assertRange(time, 0);\n        this.add(Object.assign({}, options, {\n            state,\n            time,\n        }));\n        return this;\n    }\n    /**\n     * Return the event before the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check before\n     * @return  The event with the given state before the time\n     */\n    getLastState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        for (let i = index; i >= 0; i--) {\n            const event = this._timeline[i];\n            if (event.state === state) {\n                return event;\n            }\n        }\n    }\n    /**\n     * Return the event after the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check from\n     * @return  The event with the given state after the time\n     */\n    getNextState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        if (index !== -1) {\n            for (let i = index; i < this._timeline.length; i++) {\n                const event = this._timeline[i];\n                if (event.state === state) {\n                    return event;\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=StateTimeline.js.map","import { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n * @category Core\n */\nexport class Param extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n        this.name = \"Param\";\n        this.overridden = false;\n        /**\n         * The minimum output value\n         */\n        this._minOutput = 1e-7;\n        const options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n        assert(isDefined(options.param) &&\n            (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n        while (!isAudioParam(options.param)) {\n            options.param = options.param._param;\n        }\n        this._swappable = isDefined(options.swappable) ? options.swappable : false;\n        if (this._swappable) {\n            this.input = this.context.createGain();\n            // initialize\n            this._param = options.param;\n            this.input.connect(this._param);\n        }\n        else {\n            this._param = this.input = options.param;\n        }\n        this._events = new Timeline(1000);\n        this._initialValue = this._param.defaultValue;\n        this.units = options.units;\n        this.convert = options.convert;\n        this._minValue = options.minValue;\n        this._maxValue = options.maxValue;\n        // if the value is defined, set it immediately\n        if (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n            this.setValueAtTime(options.value, 0);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            convert: true,\n            units: \"number\",\n        });\n    }\n    get value() {\n        const now = this.now();\n        return this.getValueAtTime(now);\n    }\n    set value(value) {\n        this.cancelScheduledValues(this.now());\n        this.setValueAtTime(value, this.now());\n    }\n    get minValue() {\n        // if it's not the default minValue, return it\n        if (isDefined(this._minValue)) {\n            return this._minValue;\n        }\n        else if (this.units === \"time\" || this.units === \"frequency\" ||\n            this.units === \"normalRange\" || this.units === \"positive\" ||\n            this.units === \"transportTime\" || this.units === \"ticks\" ||\n            this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n            return 0;\n        }\n        else if (this.units === \"audioRange\") {\n            return -1;\n        }\n        else if (this.units === \"decibels\") {\n            return -Infinity;\n        }\n        else {\n            return this._param.minValue;\n        }\n    }\n    get maxValue() {\n        if (isDefined(this._maxValue)) {\n            return this._maxValue;\n        }\n        else if (this.units === \"normalRange\" ||\n            this.units === \"audioRange\") {\n            return 1;\n        }\n        else {\n            return this._param.maxValue;\n        }\n    }\n    /**\n     * Type guard based on the unit name\n     */\n    _is(arg, type) {\n        return this.units === type;\n    }\n    /**\n     * Make sure the value is always in the defined range\n     */\n    _assertRange(value) {\n        if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n            assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n        }\n        return value;\n    }\n    /**\n     * Convert the given value from the type specified by Param.units\n     * into the destination value (such as Gain or Frequency).\n     */\n    _fromType(val) {\n        if (this.convert && !this.overridden) {\n            if (this._is(val, \"time\")) {\n                return this.toSeconds(val);\n            }\n            else if (this._is(val, \"decibels\")) {\n                return dbToGain(val);\n            }\n            else if (this._is(val, \"frequency\")) {\n                return this.toFrequency(val);\n            }\n            else {\n                return val;\n            }\n        }\n        else if (this.overridden) {\n            // if it's overridden, should only schedule 0s\n            return 0;\n        }\n        else {\n            return val;\n        }\n    }\n    /**\n     * Convert the parameters value into the units specified by Param.units.\n     */\n    _toType(val) {\n        if (this.convert && this.units === \"decibels\") {\n            return gainToDb(val);\n        }\n        else {\n            return val;\n        }\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // all docs are generated from ParamInterface.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        const numericValue = this._fromType(value);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n        this._assertRange(numericValue);\n        this.log(this.units, \"setValueAtTime\", value, computedTime);\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: numericValue,\n        });\n        this._param.setValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    getValueAtTime(time) {\n        const computedTime = Math.max(this.toSeconds(time), 0);\n        const after = this._events.getAfter(computedTime);\n        const before = this._events.get(computedTime);\n        let value = this._initialValue;\n        // if it was set by\n        if (before === null) {\n            value = this._initialValue;\n        }\n        else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n            const previous = this._events.getBefore(before.time);\n            let previousVal;\n            if (previous === null) {\n                previousVal = this._initialValue;\n            }\n            else {\n                previousVal = previous.value;\n            }\n            if (before.type === \"setTargetAtTime\") {\n                value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n            }\n        }\n        else if (after === null) {\n            value = before.value;\n        }\n        else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n            let beforeValue = before.value;\n            if (before.type === \"setTargetAtTime\") {\n                const previous = this._events.getBefore(before.time);\n                if (previous === null) {\n                    beforeValue = this._initialValue;\n                }\n                else {\n                    beforeValue = previous.value;\n                }\n            }\n            if (after.type === \"linearRampToValueAtTime\") {\n                value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n            else {\n                value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n        }\n        else {\n            value = before.value;\n        }\n        return this._toType(value);\n    }\n    setRampPoint(time) {\n        time = this.toSeconds(time);\n        let currentVal = this.getValueAtTime(time);\n        this.cancelAndHoldAtTime(time);\n        if (this._fromType(currentVal) === 0) {\n            currentVal = this._toType(this._minOutput);\n        }\n        this.setValueAtTime(currentVal, time);\n        return this;\n    }\n    linearRampToValueAtTime(value, endTime) {\n        const numericValue = this._fromType(value);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        this._assertRange(numericValue);\n        this._events.add({\n            time: computedTime,\n            type: \"linearRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n        this._param.linearRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, endTime) {\n        let numericValue = this._fromType(value);\n        // the value can't be 0\n        numericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;\n        this._assertRange(numericValue);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        // store the event\n        this._events.add({\n            time: computedTime,\n            type: \"exponentialRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n        this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialApproachValueAtTime(value, startTime, rampTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        time = this.toSeconds(time);\n        rampTime = this.toSeconds(rampTime);\n        const timeConstant = Math.log(rampTime + 1) / Math.log(200);\n        this.setTargetAtTime(value, time, timeConstant);\n        // at 90% start a linear ramp to the final value\n        this.cancelAndHoldAtTime(time + rampTime * 0.9);\n        this.linearRampToValueAtTime(value, time + rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        const numericValue = this._fromType(value);\n        // The value will never be able to approach without timeConstant > 0.\n        assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n        const computedTime = this.toSeconds(startTime);\n        this._assertRange(numericValue);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n        this._events.add({\n            constant: timeConstant,\n            time: computedTime,\n            type: \"setTargetAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling = 1) {\n        duration = this.toSeconds(duration);\n        startTime = this.toSeconds(startTime);\n        const startingValue = this._fromType(values[0]) * scaling;\n        this.setValueAtTime(this._toType(startingValue), startTime);\n        const segTime = duration / (values.length - 1);\n        for (let i = 1; i < values.length; i++) {\n            const numericValue = this._fromType(values[i]) * scaling;\n            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n        }\n        return this;\n    }\n    cancelScheduledValues(time) {\n        const computedTime = this.toSeconds(time);\n        assert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n        this._events.cancel(computedTime);\n        this._param.cancelScheduledValues(computedTime);\n        this.log(this.units, \"cancelScheduledValues\", computedTime);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n        // remove the schedule events\n        assert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n        this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n        // if there is an event at the given computedTime\n        // and that even is not a \"set\"\n        const before = this._events.get(computedTime);\n        const after = this._events.getAfter(computedTime);\n        if (before && EQ(before.time, computedTime)) {\n            // remove everything after\n            if (after) {\n                this._param.cancelScheduledValues(after.time);\n                this._events.cancel(after.time);\n            }\n            else {\n                this._param.cancelAndHoldAtTime(computedTime);\n                this._events.cancel(computedTime + this.sampleTime);\n            }\n        }\n        else if (after) {\n            this._param.cancelScheduledValues(after.time);\n            // cancel the next event(s)\n            this._events.cancel(after.time);\n            if (after.type === \"linearRampToValueAtTime\") {\n                this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n            else if (after.type === \"exponentialRampToValueAtTime\") {\n                this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n        }\n        // set the value at the given time\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: valueAtTime,\n        });\n        this._param.setValueAtTime(valueAtTime, computedTime);\n        return this;\n    }\n    rampTo(value, rampTime = 0.1, startTime) {\n        if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n            this.exponentialRampTo(value, rampTime, startTime);\n        }\n        else {\n            this.linearRampTo(value, rampTime, startTime);\n        }\n        return this;\n    }\n    /**\n     * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n     * The applied values will start at the context's current time and schedule\n     * all of the events which are scheduled on this Param onto the passed in param.\n     */\n    apply(param) {\n        const now = this.context.currentTime;\n        // set the param's value at the current time and schedule everything else\n        param.setValueAtTime(this.getValueAtTime(now), now);\n        // if the previous event was a curve, then set the rest of it\n        const previousEvent = this._events.get(now);\n        if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n            // approx it until the next event with linear ramps\n            const nextEvent = this._events.getAfter(previousEvent.time);\n            // or for 2 seconds if there is no event\n            const endTime = nextEvent ? nextEvent.time : now + 2;\n            const subdivisions = (endTime - now) / 10;\n            for (let i = now; i < endTime; i += subdivisions) {\n                param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n            }\n        }\n        this._events.forEachAfter(this.context.currentTime, event => {\n            if (event.type === \"cancelScheduledValues\") {\n                param.cancelScheduledValues(event.time);\n            }\n            else if (event.type === \"setTargetAtTime\") {\n                param.setTargetAtTime(event.value, event.time, event.constant);\n            }\n            else {\n                param[event.type](event.value, event.time);\n            }\n        });\n        return this;\n    }\n    /**\n     * Replace the Param's internal AudioParam. Will apply scheduled curves\n     * onto the parameter and replace the connections.\n     */\n    setParam(param) {\n        assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n        const input = this.input;\n        input.disconnect(this._param);\n        this.apply(param);\n        this._param = param;\n        input.connect(this._param);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        return this;\n    }\n    get defaultValue() {\n        return this._toType(this._param.defaultValue);\n    }\n    //-------------------------------------\n    // \tAUTOMATION CURVE CALCULATIONS\n    // \tMIT License, copyright (c) 2014 Jordan Santell\n    //-------------------------------------\n    // Calculates the the value along the curve produced by setTargetAtTime\n    _exponentialApproach(t0, v0, v1, timeConstant, t) {\n        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n    }\n    // Calculates the the value along the curve produced by linearRampToValueAtTime\n    _linearInterpolate(t0, v0, t1, v1, t) {\n        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n    }\n    // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n    _exponentialInterpolate(t0, v0, t1, v1, t) {\n        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n    }\n}\n//# sourceMappingURL=Param.js.map","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport class ToneAudioNode extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        /**\n         * The name of the class\n         */\n        this.name = \"ToneAudioNode\";\n        /**\n         * List all of the node that must be set to match the ChannelProperties\n         */\n        this._internalChannels = [];\n    }\n    /**\n     * The number of inputs feeding into the AudioNode.\n     * For source nodes, this will be 0.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfInputs);\n     */\n    get numberOfInputs() {\n        if (isDefined(this.input)) {\n            if (isAudioParam(this.input) || this.input instanceof Param) {\n                return 1;\n            }\n            else {\n                return this.input.numberOfInputs;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of outputs of the AudioNode.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfOutputs);\n     */\n    get numberOfOutputs() {\n        if (isDefined(this.output)) {\n            return this.output.numberOfOutputs;\n        }\n        else {\n            return 0;\n        }\n    }\n    //-------------------------------------\n    // AUDIO PROPERTIES\n    //-------------------------------------\n    /**\n     * Used to decide which nodes to get/set properties on\n     */\n    _isAudioNode(node) {\n        return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n    }\n    /**\n     * Get all of the audio nodes (either internal or input/output) which together\n     * make up how the class node responds to channel input/output\n     */\n    _getInternalNodes() {\n        const nodeList = this._internalChannels.slice(0);\n        if (this._isAudioNode(this.input)) {\n            nodeList.push(this.input);\n        }\n        if (this._isAudioNode(this.output)) {\n            if (this.input !== this.output) {\n                nodeList.push(this.output);\n            }\n        }\n        return nodeList;\n    }\n    /**\n     * Set the audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     * @param options\n     */\n    _setChannelProperties(options) {\n        const nodeList = this._getInternalNodes();\n        nodeList.forEach(node => {\n            node.channelCount = options.channelCount;\n            node.channelCountMode = options.channelCountMode;\n            node.channelInterpretation = options.channelInterpretation;\n        });\n    }\n    /**\n     * Get the current audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     */\n    _getChannelProperties() {\n        const nodeList = this._getInternalNodes();\n        assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n        // use the first node to get properties\n        // they should all be the same\n        const node = nodeList[0];\n        return {\n            channelCount: node.channelCount,\n            channelCountMode: node.channelCountMode,\n            channelInterpretation: node.channelInterpretation,\n        };\n    }\n    /**\n     * channelCount is the number of channels used when up-mixing and down-mixing\n     * connections to any inputs to the node. The default value is 2 except for\n     * specific nodes where its value is specially determined.\n     */\n    get channelCount() {\n        return this._getChannelProperties().channelCount;\n    }\n    set channelCount(channelCount) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCount }));\n    }\n    /**\n     * channelCountMode determines how channels will be counted when up-mixing and\n     * down-mixing connections to any inputs to the node.\n     * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n     * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n     * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n     * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n     */\n    get channelCountMode() {\n        return this._getChannelProperties().channelCountMode;\n    }\n    set channelCountMode(channelCountMode) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCountMode }));\n    }\n    /**\n     * channelInterpretation determines how individual channels will be treated\n     * when up-mixing and down-mixing connections to any inputs to the node.\n     * The default value is \"speakers\".\n     */\n    get channelInterpretation() {\n        return this._getChannelProperties().channelInterpretation;\n    }\n    set channelInterpretation(channelInterpretation) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelInterpretation }));\n    }\n    //-------------------------------------\n    // CONNECTIONS\n    //-------------------------------------\n    /**\n     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n     * @param destination The output to connect to\n     * @param outputNum The output to connect from\n     * @param inputNum The input to connect to\n     */\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * @example\n     * const osc = new Tone.Oscillator(\"C2\").start();\n     * osc.toDestination();\n     */\n    toDestination() {\n        this.connect(this.context.destination);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * See [[toDestination]]\n     * @deprecated\n     */\n    toMaster() {\n        warn(\"toMaster() has been renamed toDestination()\");\n        return this.toDestination();\n    }\n    /**\n     * disconnect the output\n     */\n    disconnect(destination, outputNum = 0, inputNum = 0) {\n        disconnect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output of this node to the rest of the nodes in series.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3\");\n     * player.autostart = true;\n     * const filter = new Tone.AutoFilter(4).start();\n     * const distortion = new Tone.Distortion(0.5);\n     * // connect the player to the filter, distortion and then to the master output\n     * player.chain(filter, distortion, Tone.Destination);\n     */\n    chain(...nodes) {\n        connectSeries(this, ...nodes);\n        return this;\n    }\n    /**\n     * connect the output of this node to the rest of the nodes in parallel.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n     * player.autostart = true;\n     * const pitchShift = new Tone.PitchShift(4).toDestination();\n     * const filter = new Tone.Filter(\"G5\").toDestination();\n     * // connect a node to the pitch shift and filter in parallel\n     * player.fan(pitchShift, filter);\n     */\n    fan(...nodes) {\n        nodes.forEach(node => this.connect(node));\n        return this;\n    }\n    /**\n     * Dispose and disconnect\n     */\n    dispose() {\n        super.dispose();\n        if (isDefined(this.input)) {\n            if (this.input instanceof ToneAudioNode) {\n                this.input.dispose();\n            }\n            else if (isAudioNode(this.input)) {\n                this.input.disconnect();\n            }\n        }\n        if (isDefined(this.output)) {\n            if (this.output instanceof ToneAudioNode) {\n                this.output.dispose();\n            }\n            else if (isAudioNode(this.output)) {\n                this.output.disconnect();\n            }\n        }\n        this._internalChannels = [];\n        return this;\n    }\n}\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes) {\n    const first = nodes.shift();\n    nodes.reduce((prev, current) => {\n        if (prev instanceof ToneAudioNode) {\n            prev.connect(current);\n        }\n        else if (isAudioNode(prev)) {\n            connect(prev, current);\n        }\n        return current;\n    }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n    assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n    if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n        assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n    }\n    assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n    // resolve the input of the dstNode\n    while ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n        if (isDefined(dstNode.input)) {\n            dstNode = dstNode.input;\n        }\n    }\n    while (srcNode instanceof ToneAudioNode) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    // make the connection\n    if (isAudioParam(dstNode)) {\n        srcNode.connect(dstNode, outputNumber);\n    }\n    else {\n        srcNode.connect(dstNode, outputNumber, inputNumber);\n    }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    // resolve the destination node\n    if (isDefined(dstNode)) {\n        while (dstNode instanceof ToneAudioNode) {\n            dstNode = dstNode.input;\n        }\n    }\n    // resolve the src node\n    while (!(isAudioNode(srcNode))) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    if (isAudioParam(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber);\n    }\n    else if (isAudioNode(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber, inputNumber);\n    }\n    else {\n        srcNode.disconnect();\n    }\n}\n//# sourceMappingURL=ToneAudioNode.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\nexport class Gain extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n        this.name = \"Gain\";\n        /**\n         * The wrapped GainNode.\n         */\n        this._gainNode = this.context.createGain();\n        // input = output\n        this.input = this._gainNode;\n        this.output = this._gainNode;\n        const options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n        this.gain = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._gainNode.gain,\n            units: options.units,\n            value: options.gain,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        readOnly(this, \"gain\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            gain: 1,\n            units: \"gain\",\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        this.gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Gain.js.map","import { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\nexport class OneShotSource extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * The callback to invoke after the\n         * source is done playing.\n         */\n        this.onended = noOp;\n        /**\n         * The start time\n         */\n        this._startTime = -1;\n        /**\n         * The stop time\n         */\n        this._stopTime = -1;\n        /**\n         * The id of the timeout\n         */\n        this._timeout = -1;\n        /**\n         * The public output node\n         */\n        this.output = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The output gain node.\n         */\n        this._gainNode = this.output;\n        /**\n         * Get the playback state at the given time\n         */\n        this.getStateAtTime = function (time) {\n            const computedTime = this.toSeconds(time);\n            if (this._startTime !== -1 &&\n                computedTime >= this._startTime &&\n                (this._stopTime === -1 || computedTime <= this._stopTime)) {\n                return \"started\";\n            }\n            else {\n                return \"stopped\";\n            }\n        };\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n        this._curve = options.curve;\n        this.onended = options.onended;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            curve: \"linear\",\n            fadeIn: 0,\n            fadeOut: 0,\n            onended: noOp,\n        });\n    }\n    /**\n     * Start the source at the given time\n     * @param  time When to start the source\n     */\n    _startGain(time, gain = 1) {\n        assert(this._startTime === -1, \"Source cannot be started more than once\");\n        // apply a fade in envelope\n        const fadeInTime = this.toSeconds(this._fadeIn);\n        // record the start time\n        this._startTime = time + fadeInTime;\n        this._startTime = Math.max(this._startTime, this.context.currentTime);\n        // schedule the envelope\n        if (fadeInTime > 0) {\n            this._gainNode.gain.setValueAtTime(0, time);\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n            }\n            else {\n                this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n            }\n        }\n        else {\n            this._gainNode.gain.setValueAtTime(gain, time);\n        }\n        return this;\n    }\n    /**\n     * Stop the source node at the given time.\n     * @param time When to stop the source\n     */\n    stop(time) {\n        this.log(\"stop\", time);\n        this._stopGain(this.toSeconds(time));\n        return this;\n    }\n    /**\n     * Stop the source at the given time\n     * @param  time When to stop the source\n     */\n    _stopGain(time) {\n        assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n        // cancel the previous stop\n        this.cancelStop();\n        // the fadeOut time\n        const fadeOutTime = this.toSeconds(this._fadeOut);\n        // schedule the stop callback\n        this._stopTime = this.toSeconds(time) + fadeOutTime;\n        this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n        if (fadeOutTime > 0) {\n            // start the fade out curve at the given time\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n            }\n            else {\n                this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n            }\n        }\n        else {\n            // stop any ongoing ramps, and set the value to 0\n            this._gainNode.gain.cancelAndHoldAtTime(time);\n            this._gainNode.gain.setValueAtTime(0, time);\n        }\n        this.context.clearTimeout(this._timeout);\n        this._timeout = this.context.setTimeout(() => {\n            // allow additional time for the exponential curve to fully decay\n            const additionalTail = this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n            this._stopSource(this.now() + additionalTail);\n            this._onended();\n        }, this._stopTime - this.context.currentTime);\n        return this;\n    }\n    /**\n     * Invoke the onended callback\n     */\n    _onended() {\n        if (this.onended !== noOp) {\n            this.onended(this);\n            // overwrite onended to make sure it only is called once\n            this.onended = noOp;\n            // dispose when it's ended to free up for garbage collection only in the online context\n            if (!this.context.isOffline) {\n                const disposeCallback = () => this.dispose();\n                // @ts-ignore\n                if (typeof window.requestIdleCallback !== \"undefined\") {\n                    // @ts-ignore\n                    window.requestIdleCallback(disposeCallback);\n                }\n                else {\n                    setTimeout(disposeCallback, 1000);\n                }\n            }\n        }\n    }\n    /**\n     * Get the playback state at the current time\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Cancel a scheduled stop event\n     */\n    cancelStop() {\n        this.log(\"cancelStop\");\n        assert(this._startTime !== -1, \"Source is not started\");\n        // cancel the stop envelope\n        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n        this.context.clearTimeout(this._timeout);\n        this._stopTime = -1;\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=OneShotSource.js.map","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n        this.name = \"ToneConstantSource\";\n        /**\n         * The signal generator\n         */\n        this._source = this.context.createConstantSource();\n        const options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n        connect(this._source, this._gainNode);\n        this.offset = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._source.offset,\n            units: options.units,\n            value: options.offset,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            convert: true,\n            offset: 1,\n            units: \"number\",\n        });\n    }\n    /**\n     * Start the source node at the given time\n     * @param  time When to start the source\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._source.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._source.stop(time);\n    }\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._source.disconnect();\n        this.offset.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneConstantSource.js.map","import { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n        this.name = \"Signal\";\n        /**\n         * Indicates if the value should be overridden on connection.\n         */\n        this.override = true;\n        const options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        this.output = this._constantSource = new ToneConstantSource({\n            context: this.context,\n            convert: options.convert,\n            offset: options.value,\n            units: options.units,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this._constantSource.start(0);\n        this.input = this._param = this._constantSource.offset;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            units: \"number\",\n            value: 0,\n        });\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        // start it only when connected to something\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        this._constantSource.dispose();\n        return this;\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // just a proxy for the ConstantSourceNode's offset AudioParam\n    // all docs are generated from AbstractParam.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        this._param.setValueAtTime(value, time);\n        return this;\n    }\n    getValueAtTime(time) {\n        return this._param.getValueAtTime(time);\n    }\n    setRampPoint(time) {\n        this._param.setRampPoint(time);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        this._param.linearRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        this._param.exponentialRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        this._param.exponentialRampTo(value, rampTime, startTime);\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        this._param.linearRampTo(value, rampTime, startTime);\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        this._param.targetRampTo(value, rampTime, startTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        this._param.exponentialApproachValueAtTime(value, time, rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        this._param.setTargetAtTime(value, startTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling) {\n        this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n        return this;\n    }\n    cancelScheduledValues(time) {\n        this._param.cancelScheduledValues(time);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        this._param.cancelAndHoldAtTime(time);\n        return this;\n    }\n    rampTo(value, rampTime, startTime) {\n        this._param.rampTo(value, rampTime, startTime);\n        return this;\n    }\n    get value() {\n        return this._param.value;\n    }\n    set value(value) {\n        this._param.value = value;\n    }\n    get convert() {\n        return this._param.convert;\n    }\n    set convert(convert) {\n        this._param.convert = convert;\n    }\n    get units() {\n        return this._param.units;\n    }\n    get overridden() {\n        return this._param.overridden;\n    }\n    set overridden(overridden) {\n        this._param.overridden = overridden;\n    }\n    get maxValue() {\n        return this._param.maxValue;\n    }\n    get minValue() {\n        return this._param.minValue;\n    }\n    /**\n     * See [[Param.apply]].\n     */\n    apply(param) {\n        this._param.apply(param);\n        return this;\n    }\n}\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n    if (destination instanceof Param || isAudioParam(destination) ||\n        (destination instanceof Signal && destination.override)) {\n        // cancel changes\n        destination.cancelScheduledValues(0);\n        // reset the value\n        destination.setValueAtTime(0, 0);\n        // mark the value as overridden\n        if (destination instanceof Signal) {\n            destination.overridden = true;\n        }\n    }\n    connect(signal, destination, outputNum, inputNum);\n}\n//# sourceMappingURL=Signal.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam extends Param {\n    constructor() {\n        super(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickParam\";\n        /**\n         * The timeline which tracks all of the automations.\n         */\n        this._events = new Timeline(Infinity);\n        /**\n         * The internal holder for the multiplier value\n         */\n        this._multiplier = 1;\n        const options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n        // set the multiplier\n        this._multiplier = options.multiplier;\n        // clear the ticks from the beginning\n        this._events.cancel(0);\n        // set an initial event\n        this._events.add({\n            ticks: 0,\n            time: 0,\n            type: \"setValueAtTime\",\n            value: this._fromType(options.value),\n        });\n        this.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Param.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    setTargetAtTime(value, time, constant) {\n        // approximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        this.setRampPoint(time);\n        const computedValue = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        const segments = Math.round(Math.max(1 / constant, 1));\n        for (let i = 0; i <= segments; i++) {\n            const segTime = constant * i + time;\n            const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.setValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.linearRampToValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        // aproximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        const computedVal = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        // approx 10 segments per second\n        const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n        const segmentDur = ((time - prevEvent.time) / segments);\n        for (let i = 0; i <= segments; i++) {\n            const segTime = segmentDur * i + prevEvent.time;\n            const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  event The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    _getTicksUntilEvent(event, time) {\n        if (event === null) {\n            event = {\n                ticks: 0,\n                time: 0,\n                type: \"setValueAtTime\",\n                value: 0,\n            };\n        }\n        else if (isUndef(event.ticks)) {\n            const previousEvent = this._events.previousEvent(event);\n            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n        }\n        const val0 = this._fromType(this.getValueAtTime(event.time));\n        let val1 = this._fromType(this.getValueAtTime(time));\n        // if it's right on the line, take the previous value\n        const onTheLineEvent = this._events.get(time);\n        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n        }\n        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  time The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const event = this._events.get(computedTime);\n        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n    }\n    /**\n     * Return the elapsed time of the number of ticks from the given time\n     * @param ticks The number of ticks to calculate\n     * @param  time The time to get the next tick from\n     * @return The duration of the number of ticks from the given time in seconds\n     */\n    getDurationOfTicks(ticks, time) {\n        const computedTime = this.toSeconds(time);\n        const currentTick = this.getTicksAtTime(time);\n        return this.getTimeOfTick(currentTick + ticks) - computedTime;\n    }\n    /**\n     * Given a tick, returns the time that tick occurs at.\n     * @return The time that the tick occurs.\n     */\n    getTimeOfTick(tick) {\n        const before = this._events.get(tick, \"ticks\");\n        const after = this._events.getAfter(tick, \"ticks\");\n        if (before && before.ticks === tick) {\n            return before.time;\n        }\n        else if (before && after &&\n            after.type === \"linearRampToValueAtTime\" &&\n            before.value !== after.value) {\n            const val0 = this._fromType(this.getValueAtTime(before.time));\n            const val1 = this._fromType(this.getValueAtTime(after.time));\n            const delta = (val1 - val0) / (after.time - before.time);\n            const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n            const sol1 = (-val0 + k) / delta;\n            const sol2 = (-val0 - k) / delta;\n            return (sol1 > 0 ? sol1 : sol2) + before.time;\n        }\n        else if (before) {\n            if (before.value === 0) {\n                return Infinity;\n            }\n            else {\n                return before.time + (tick - before.ticks) / before.value;\n            }\n        }\n        else {\n            return tick / this._initialValue;\n        }\n    }\n    /**\n     * Convert some number of ticks their the duration in seconds accounting\n     * for any automation curves starting at the given time.\n     * @param  ticks The number of ticks to convert to seconds.\n     * @param  when  When along the automation timeline to convert the ticks.\n     * @return The duration in seconds of the ticks.\n     */\n    ticksToTime(ticks, when) {\n        return this.getDurationOfTicks(ticks, when);\n    }\n    /**\n     * The inverse of [[ticksToTime]]. Convert a duration in\n     * seconds to the corresponding number of ticks accounting for any\n     * automation curves starting at the given time.\n     * @param  duration The time interval to convert to ticks.\n     * @param  when When along the automation timeline to convert the ticks.\n     * @return The duration in ticks.\n     */\n    timeToTicks(duration, when) {\n        const computedTime = this.toSeconds(when);\n        const computedDuration = this.toSeconds(duration);\n        const startTicks = this.getTicksAtTime(computedTime);\n        const endTicks = this.getTicksAtTime(computedTime + computedDuration);\n        return endTicks - startTicks;\n    }\n    /**\n     * Convert from the type when the unit value is BPM\n     */\n    _fromType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return 1 / (60 / val / this.multiplier);\n        }\n        else {\n            return super._fromType(val);\n        }\n    }\n    /**\n     * Special case of type conversion where the units === \"bpm\"\n     */\n    _toType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return (val / this.multiplier) * 60;\n        }\n        else {\n            return super._toType(val);\n        }\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._multiplier;\n    }\n    set multiplier(m) {\n        // get and reset the current value with the new multiplier\n        // might be necessary to clear all the previous values\n        const currentVal = this.value;\n        this._multiplier = m;\n        this.cancelScheduledValues(0);\n        this.setValueAtTime(currentVal, 0);\n    }\n}\n//# sourceMappingURL=TickParam.js.map","import { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal extends Signal {\n    constructor() {\n        super(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickSignal\";\n        const options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n        this.input = this._param = new TickParam({\n            context: this.context,\n            convert: options.convert,\n            multiplier: options.multiplier,\n            param: this._constantSource.offset,\n            units: options.units,\n            value: options.value,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    ticksToTime(ticks, when) {\n        return this._param.ticksToTime(ticks, when);\n    }\n    timeToTicks(duration, when) {\n        return this._param.timeToTicks(duration, when);\n    }\n    getTimeOfTick(tick) {\n        return this._param.getTimeOfTick(tick);\n    }\n    getDurationOfTicks(ticks, time) {\n        return this._param.getDurationOfTicks(ticks, time);\n    }\n    getTicksAtTime(time) {\n        return this._param.getTicksAtTime(time);\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._param.multiplier;\n    }\n    set multiplier(m) {\n        this._param.multiplier = m;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSignal.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"TickSource\";\n        /**\n         * The state timeline\n         */\n        this._state = new StateTimeline();\n        /**\n         * The offset values of the ticks\n         */\n        this._tickOffset = new Timeline();\n        const options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n        this.frequency = new TickSignal({\n            context: this.context,\n            units: options.units,\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        // set the initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // add the first event\n        this.setTicksAtTime(0, 0);\n    }\n    static getDefaults() {\n        return Object.assign({\n            frequency: 1,\n            units: \"hertz\",\n        }, ToneWithContext.getDefaults());\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset The number of ticks to start the source at\n     */\n    start(time, offset) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (isDefined(offset)) {\n                this.setTicksAtTime(offset, computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        // cancel the previous stop\n        if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n            const event = this._state.get(computedTime);\n            if (event && event.time > 0) {\n                this._tickOffset.cancel(event.time);\n                this._state.cancel(event.time);\n            }\n        }\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this.setTicksAtTime(0, computedTime);\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n     * @param time When to clear the events after\n     */\n    cancel(time) {\n        time = this.toSeconds(time);\n        this._state.cancel(time);\n        this._tickOffset.cancel(time);\n        return this;\n    }\n    /**\n     * Get the elapsed ticks at the given time\n     * @param  time  When to get the tick value\n     * @return The number of ticks\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", computedTime);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time: computedTime };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = stopEvent;\n        let elapsedTicks = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedTicks = offsetEvent.ticks;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedTicks;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked. Returns -1 when stopped.\n     */\n    get ticks() {\n        return this.getTicksAtTime(this.now());\n    }\n    set ticks(t) {\n        this.setTicksAtTime(t, this.now());\n    }\n    /**\n     * The time since ticks=0 that the TickSource has been running. Accounts\n     * for tempo curves\n     */\n    get seconds() {\n        return this.getSecondsAtTime(this.now());\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this.frequency.timeToTicks(s, now);\n        this.setTicksAtTime(ticks, now);\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        time = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", time);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = stopEvent;\n        let elapsedSeconds = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedSeconds = offsetEvent.seconds;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedSeconds += e.time - periodStartTime;\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedSeconds;\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        time = this.toSeconds(time);\n        this._tickOffset.cancel(time);\n        this._tickOffset.add({\n            seconds: this.frequency.getDurationOfTicks(ticks, time),\n            ticks,\n            time,\n        });\n        return this;\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     */\n    getStateAtTime(time) {\n        time = this.toSeconds(time);\n        return this._state.getValueAtTime(time);\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        const offset = this._tickOffset.get(before);\n        const event = this._state.get(before);\n        const startTime = Math.max(offset.time, event.time);\n        const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n        return this.frequency.getTimeOfTick(absoluteTicks);\n    }\n    /**\n     * Invoke the callback event at all scheduled ticks between the\n     * start time and the end time\n     * @param  startTime  The beginning of the search range\n     * @param  endTime    The end of the search range\n     * @param  callback   The callback to invoke with each tick\n     */\n    forEachTickBetween(startTime, endTime, callback) {\n        // only iterate through the sections where it is \"started\"\n        let lastStateEvent = this._state.get(startTime);\n        this._state.forEachBetween(startTime, endTime, event => {\n            if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n                this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n            }\n            lastStateEvent = event;\n        });\n        let error = null;\n        if (lastStateEvent && lastStateEvent.state === \"started\") {\n            const maxStartTime = Math.max(lastStateEvent.time, startTime);\n            // figure out the difference between the frequency ticks and the\n            const startTicks = this.frequency.getTicksAtTime(maxStartTime);\n            const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n            const diff = startTicks - ticksAtStart;\n            let offset = Math.ceil(diff) - diff;\n            // guard against floating point issues\n            offset = EQ(offset, 1) ? 0 : offset;\n            let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n            while (nextTickTime < endTime) {\n                try {\n                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n                }\n                catch (e) {\n                    error = e;\n                    break;\n                }\n                nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n            }\n        }\n        if (error) {\n            throw error;\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._state.dispose();\n        this._tickOffset.dispose();\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSource.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n        this.name = \"Clock\";\n        /**\n         * The callback function to invoke at the scheduled tick.\n         */\n        this.callback = noOp;\n        /**\n         * The last time the loop callback was invoked\n         */\n        this._lastUpdate = 0;\n        /**\n         * Keep track of the playback state\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * Context bound reference to the _loop method\n         * This is necessary to remove the event in the end.\n         */\n        this._boundLoop = this._loop.bind(this);\n        const options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n        this.callback = options.callback;\n        this._tickSource = new TickSource({\n            context: this.context,\n            frequency: options.frequency,\n            units: options.units,\n        });\n        this._lastUpdate = 0;\n        this.frequency = this._tickSource.frequency;\n        readOnly(this, \"frequency\");\n        // add an initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // bind a callback to the worker thread\n        this.context.on(\"tick\", this._boundLoop);\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            frequency: 1,\n            units: \"hertz\",\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this._state.getValueAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset  Where the tick counter starts counting from.\n     */\n    start(time, offset) {\n        // make sure the context is running\n        assertContextRunning(this.context);\n        // start the loop\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            this._tickSource.start(computedTime, offset);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"start\", computedTime, offset);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     * @example\n     * const clock = new Tone.Clock(time => {\n     * \tconsole.log(time);\n     * }, 1);\n     * clock.start();\n     * // stop the clock after 10 seconds\n     * clock.stop(\"+10\");\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"stop\", computedTime);\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this._tickSource.stop(computedTime);\n        if (computedTime < this._lastUpdate) {\n            this.emit(\"stop\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n            this._tickSource.pause(computedTime);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"pause\", computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked.\n     */\n    get ticks() {\n        return Math.ceil(this.getTicksAtTime(this.now()));\n    }\n    set ticks(t) {\n        this._tickSource.ticks = t;\n    }\n    /**\n     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n     */\n    get seconds() {\n        return this._tickSource.seconds;\n    }\n    set seconds(s) {\n        this._tickSource.seconds = s;\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._tickSource.getSecondsAtTime(time);\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        this._tickSource.setTicksAtTime(ticks, time);\n        return this;\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        return this._tickSource.getTimeOfTick(tick, before);\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return this._tickSource.getTicksAtTime(time);\n    }\n    /**\n     * Get the time of the next tick\n     * @param  offset The tick number.\n     */\n    nextTickTime(offset, when) {\n        const computedTime = this.toSeconds(when);\n        const currentTick = this.getTicksAtTime(computedTime);\n        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n    }\n    /**\n     * The scheduling loop.\n     */\n    _loop() {\n        const startTime = this._lastUpdate;\n        const endTime = this.now();\n        this._lastUpdate = endTime;\n        this.log(\"loop\", startTime, endTime);\n        if (startTime !== endTime) {\n            // the state change events\n            this._state.forEachBetween(startTime, endTime, e => {\n                switch (e.state) {\n                    case \"started\":\n                        const offset = this._tickSource.getTicksAtTime(e.time);\n                        this.emit(\"start\", e.time, offset);\n                        break;\n                    case \"stopped\":\n                        if (e.time !== 0) {\n                            this.emit(\"stop\", e.time);\n                        }\n                        break;\n                    case \"paused\":\n                        this.emit(\"pause\", e.time);\n                        break;\n                }\n            });\n            // the tick callbacks\n            this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n                this.callback(time, ticks);\n            });\n        }\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     * @example\n     * const clock = new Tone.Clock();\n     * clock.start(\"+0.1\");\n     * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n     */\n    getStateAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        return this._state.getValueAtTime(computedTime);\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.context.off(\"tick\", this._boundLoop);\n        this._tickSource.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Clock);\n//# sourceMappingURL=Clock.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"A2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffers\";\n        /**\n         * All of the buffers\n         */\n        this._buffers = new Map();\n        /**\n         * Keep track of the number of loaded buffers\n         */\n        this._loadingCount = 0;\n        const options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        this.baseUrl = options.baseUrl;\n        // add each one\n        Object.keys(options.urls).forEach(name => {\n            this._loadingCount++;\n            const url = options.urls[name];\n            this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n        });\n    }\n    static getDefaults() {\n        return {\n            baseUrl: \"\",\n            onerror: noOp,\n            onload: noOp,\n            urls: {},\n        };\n    }\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param  name  The key or index of the buffer.\n     */\n    has(name) {\n        return this._buffers.has(name.toString());\n    }\n    /**\n     * Get a buffer by name. If an array was loaded,\n     * then use the array index.\n     * @param  name  The key or index of the buffer.\n     */\n    get(name) {\n        assert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n        return this._buffers.get(name.toString());\n    }\n    /**\n     * A buffer was loaded. decrement the counter.\n     */\n    _bufferLoaded(callback) {\n        this._loadingCount--;\n        if (this._loadingCount === 0 && callback) {\n            callback();\n        }\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n    }\n    /**\n     * Add a buffer by name and url to the Buffers\n     * @param  name      A unique name to give the buffer\n     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     * @param  onerror  Invoked if the buffer can't be loaded\n     */\n    add(name, url, callback = noOp, onerror = noOp) {\n        if (isString(url)) {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n        }\n        else {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n        }\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._buffers.forEach(buffer => buffer.dispose());\n        this._buffers.clear();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneAudioBuffers.js.map","import { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass } from \"./Frequency\";\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\nexport class MidiClass extends FrequencyClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"MidiClass\";\n        this.defaultUnits = \"midi\";\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return ftom(super._frequencyToUnits(freq));\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ftom(super._ticksToUnits(ticks));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return ftom(super._beatsToUnits(beats));\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return ftom(super._secondsToUnits(seconds));\n    }\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Midi(60).toMidi(); // 60\n     */\n    toMidi() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Midi(60).toFrequency(); // 261.6255653005986\n     */\n    toFrequency() {\n        return mtof(this.toMidi());\n    }\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return A new transposed MidiClass\n     * @example\n     * Tone.Midi(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new MidiClass(this.context, this.toMidi() + interval);\n    }\n}\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Midi(value, units) {\n    return new MidiClass(getContext(), value, units);\n}\n//# sourceMappingURL=Midi.js.map","import { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Ticks\";\n        this.defaultUnits = \"i\";\n    }\n    /**\n     * Get the current time in the given units\n     */\n    _now() {\n        return this.context.transport.ticks;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return this._getPPQ() * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ticks;\n    }\n    /**\n     * Return the time in ticks\n     */\n    toTicks() {\n        return this.valueOf();\n    }\n    /**\n     * Return the time in seconds\n     */\n    toSeconds() {\n        return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n    }\n}\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value, units) {\n    return new TicksClass(getContext(), value, units);\n}\n//# sourceMappingURL=Ticks.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        this.name = \"Draw\";\n        /**\n         * The duration after which events are not invoked.\n         */\n        this.expiration = 0.25;\n        /**\n         * The amount of time before the scheduled time\n         * that the callback can be invoked. Default is\n         * half the time of an animation frame (0.008 seconds).\n         */\n        this.anticipation = 0.008;\n        /**\n         * All of the events.\n         */\n        this._events = new Timeline();\n        /**\n         * The draw loop\n         */\n        this._boundDrawLoop = this._drawLoop.bind(this);\n        /**\n         * The animation frame id\n         */\n        this._animationFrame = -1;\n    }\n    /**\n     * Schedule a function at the given time to be invoked\n     * on the nearest animation frame.\n     * @param  callback  Callback is invoked at the given time.\n     * @param  time      The time relative to the AudioContext time to invoke the callback.\n     * @example\n     * Tone.Transport.scheduleRepeat(time => {\n     * \tTone.Draw.schedule(() => console.log(time), time);\n     * }, 1);\n     * Tone.Transport.start();\n     */\n    schedule(callback, time) {\n        this._events.add({\n            callback,\n            time: this.toSeconds(time),\n        });\n        // start the draw loop on the first event\n        if (this._events.length === 1) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n        return this;\n    }\n    /**\n     * Cancel events scheduled after the given time\n     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n    cancel(after) {\n        this._events.cancel(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * The draw loop\n     */\n    _drawLoop() {\n        const now = this.context.currentTime;\n        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n            const event = this._events.shift();\n            if (event && now - event.time <= this.expiration) {\n                event.callback();\n            }\n        }\n        if (this._events.length > 0) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        cancelAnimationFrame(this._animationFrame);\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.draw = new Draw({ context });\n});\nonContextClose(context => {\n    context.draw.dispose();\n});\n//# sourceMappingURL=Draw.js.map","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"IntervalTimeline\";\n        /**\n         * The root node of the inteval tree\n         */\n        this._root = null;\n        /**\n         * Keep track of the length of the timeline.\n         */\n        this._length = 0;\n    }\n    /**\n     * The event to add to the timeline. All events must\n     * have a time and duration value\n     * @param  event  The event to add to the timeline\n     */\n    add(event) {\n        assert(isDefined(event.time), \"Events must have a time property\");\n        assert(isDefined(event.duration), \"Events must have a duration parameter\");\n        event.time = event.time.valueOf();\n        let node = new IntervalNode(event.time, event.time + event.duration, event);\n        if (this._root === null) {\n            this._root = node;\n        }\n        else {\n            this._root.insert(node);\n        }\n        this._length++;\n        // Restructure tree to be balanced\n        while (node !== null) {\n            node.updateHeight();\n            node.updateMax();\n            this._rebalance(node);\n            node = node.parent;\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  event  The event to remove from the timeline\n     */\n    remove(event) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(event.time, results);\n            for (const node of results) {\n                if (node.event === event) {\n                    this._removeNode(node);\n                    this._length--;\n                    break;\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of items in the timeline.\n     * @readOnly\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * Remove events whose time time is after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        this.forEachFrom(after, event => this.remove(event));\n        return this;\n    }\n    /**\n     * Set the root node as the given node\n     */\n    _setRoot(node) {\n        this._root = node;\n        if (this._root !== null) {\n            this._root.parent = null;\n        }\n    }\n    /**\n     * Replace the references to the node in the node's parent\n     * with the replacement node.\n     */\n    _replaceNodeInParent(node, replacement) {\n        if (node.parent !== null) {\n            if (node.isLeftChild()) {\n                node.parent.left = replacement;\n            }\n            else {\n                node.parent.right = replacement;\n            }\n            this._rebalance(node.parent);\n        }\n        else {\n            this._setRoot(replacement);\n        }\n    }\n    /**\n     * Remove the node from the tree and replace it with\n     * a successor which follows the schema.\n     */\n    _removeNode(node) {\n        if (node.left === null && node.right === null) {\n            this._replaceNodeInParent(node, null);\n        }\n        else if (node.right === null) {\n            this._replaceNodeInParent(node, node.left);\n        }\n        else if (node.left === null) {\n            this._replaceNodeInParent(node, node.right);\n        }\n        else {\n            const balance = node.getBalance();\n            let replacement;\n            let temp = null;\n            if (balance > 0) {\n                if (node.left.right === null) {\n                    replacement = node.left;\n                    replacement.right = node.right;\n                    temp = replacement;\n                }\n                else {\n                    replacement = node.left.right;\n                    while (replacement.right !== null) {\n                        replacement = replacement.right;\n                    }\n                    if (replacement.parent) {\n                        replacement.parent.right = replacement.left;\n                        temp = replacement.parent;\n                        replacement.left = node.left;\n                        replacement.right = node.right;\n                    }\n                }\n            }\n            else if (node.right.left === null) {\n                replacement = node.right;\n                replacement.left = node.left;\n                temp = replacement;\n            }\n            else {\n                replacement = node.right.left;\n                while (replacement.left !== null) {\n                    replacement = replacement.left;\n                }\n                if (replacement.parent) {\n                    replacement.parent.left = replacement.right;\n                    temp = replacement.parent;\n                    replacement.left = node.left;\n                    replacement.right = node.right;\n                }\n            }\n            if (node.parent !== null) {\n                if (node.isLeftChild()) {\n                    node.parent.left = replacement;\n                }\n                else {\n                    node.parent.right = replacement;\n                }\n            }\n            else {\n                this._setRoot(replacement);\n            }\n            if (temp) {\n                this._rebalance(temp);\n            }\n        }\n        node.dispose();\n    }\n    /**\n     * Rotate the tree to the left\n     */\n    _rotateLeft(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.right the new root of this sub tree (instead of node)\n        const pivotNode = node.right;\n        if (pivotNode) {\n            node.right = pivotNode.left;\n            pivotNode.left = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Rotate the tree to the right\n     */\n    _rotateRight(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.left the new root of this sub tree (instead of node)\n        const pivotNode = node.left;\n        if (pivotNode) {\n            node.left = pivotNode.right;\n            pivotNode.right = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Balance the BST\n     */\n    _rebalance(node) {\n        const balance = node.getBalance();\n        if (balance > 1 && node.left) {\n            if (node.left.getBalance() < 0) {\n                this._rotateLeft(node.left);\n            }\n            else {\n                this._rotateRight(node);\n            }\n        }\n        else if (balance < -1 && node.right) {\n            if (node.right.getBalance() > 0) {\n                this._rotateRight(node.right);\n            }\n            else {\n                this._rotateLeft(node);\n            }\n        }\n    }\n    /**\n     * Get an event whose time and duration span the give time. Will\n     * return the match whose \"time\" value is closest to the given time.\n     * @return  The event which spans the desired time\n     */\n    get(time) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            if (results.length > 0) {\n                let max = results[0];\n                for (let i = 1; i < results.length; i++) {\n                    if (results[i].low > max.low) {\n                        max = results[i];\n                    }\n                }\n                return max.event;\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterate over everything in the timeline.\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        if (this._root !== null) {\n            const allNodes = [];\n            this._root.traverse(node => allNodes.push(node));\n            allNodes.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the given time\n     * overlaps with the time and duration time of the event.\n     * @param  time The time to check if items are overlapping\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the time is greater\n     * than or equal to the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.searchAfter(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        if (this._root !== null) {\n            this._root.traverse(node => node.dispose());\n        }\n        this._root = null;\n        return this;\n    }\n}\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n    constructor(low, high, event) {\n        // the nodes to the left\n        this._left = null;\n        // the nodes to the right\n        this._right = null;\n        // the parent node\n        this.parent = null;\n        // the number of child nodes\n        this.height = 0;\n        this.event = event;\n        // the low value\n        this.low = low;\n        // the high value\n        this.high = high;\n        // the high value for this and all child nodes\n        this.max = this.high;\n    }\n    /**\n     * Insert a node into the correct spot in the tree\n     */\n    insert(node) {\n        if (node.low <= this.low) {\n            if (this.left === null) {\n                this.left = node;\n            }\n            else {\n                this.left.insert(node);\n            }\n        }\n        else if (this.right === null) {\n            this.right = node;\n        }\n        else {\n            this.right.insert(node);\n        }\n    }\n    /**\n     * Search the tree for nodes which overlap\n     * with the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    search(point, results) {\n        // If p is to the right of the rightmost point of any interval\n        // in this node and all children, there won't be any matches.\n        if (point > this.max) {\n            return;\n        }\n        // Search left children\n        if (this.left !== null) {\n            this.left.search(point, results);\n        }\n        // Check this node\n        if (this.low <= point && this.high > point) {\n            results.push(this);\n        }\n        // If p is to the left of the time of this interval,\n        // then it can't be in any child to the right.\n        if (this.low > point) {\n            return;\n        }\n        // Search right children\n        if (this.right !== null) {\n            this.right.search(point, results);\n        }\n    }\n    /**\n     * Search the tree for nodes which are less\n     * than the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    searchAfter(point, results) {\n        // Check this node\n        if (this.low >= point) {\n            results.push(this);\n            if (this.left !== null) {\n                this.left.searchAfter(point, results);\n            }\n        }\n        // search the right side\n        if (this.right !== null) {\n            this.right.searchAfter(point, results);\n        }\n    }\n    /**\n     * Invoke the callback on this element and both it's branches\n     * @param  {Function}  callback\n     */\n    traverse(callback) {\n        callback(this);\n        if (this.left !== null) {\n            this.left.traverse(callback);\n        }\n        if (this.right !== null) {\n            this.right.traverse(callback);\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateHeight() {\n        if (this.left !== null && this.right !== null) {\n            this.height = Math.max(this.left.height, this.right.height) + 1;\n        }\n        else if (this.right !== null) {\n            this.height = this.right.height + 1;\n        }\n        else if (this.left !== null) {\n            this.height = this.left.height + 1;\n        }\n        else {\n            this.height = 0;\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateMax() {\n        this.max = this.high;\n        if (this.left !== null) {\n            this.max = Math.max(this.max, this.left.max);\n        }\n        if (this.right !== null) {\n            this.max = Math.max(this.max, this.right.max);\n        }\n    }\n    /**\n     * The balance is how the leafs are distributed on the node\n     * @return  Negative numbers are balanced to the right\n     */\n    getBalance() {\n        let balance = 0;\n        if (this.left !== null && this.right !== null) {\n            balance = this.left.height - this.right.height;\n        }\n        else if (this.left !== null) {\n            balance = this.left.height + 1;\n        }\n        else if (this.right !== null) {\n            balance = -(this.right.height + 1);\n        }\n        return balance;\n    }\n    /**\n     * @returns true if this node is the left child of its parent\n     */\n    isLeftChild() {\n        return this.parent !== null && this.parent.left === this;\n    }\n    /**\n     * get/set the left node\n     */\n    get left() {\n        return this._left;\n    }\n    set left(node) {\n        this._left = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * get/set the right node\n     */\n    get right() {\n        return this._right;\n    }\n    set right(node) {\n        this._right = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * null out references.\n     */\n    dispose() {\n        this.parent = null;\n        this._left = null;\n        this._right = null;\n        this.event = null;\n    }\n}\n//# sourceMappingURL=IntervalTimeline.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n        this.name = \"Volume\";\n        const options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n            gain: options.volume,\n            units: \"decibels\",\n        });\n        this.volume = this.output.gain;\n        readOnly(this, \"volume\");\n        this._unmutedVolume = options.volume;\n        // set the mute initially\n        this.mute = options.mute;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const vol = new Tone.Volume(-12).toDestination();\n     * const osc = new Tone.Oscillator().connect(vol).start();\n     * // mute the output\n     * vol.mute = true;\n     */\n    get mute() {\n        return this.volume.value === -Infinity;\n    }\n    set mute(mute) {\n        if (!this.mute && mute) {\n            this._unmutedVolume = this.volume.value;\n            // maybe it should ramp here?\n            this.volume.value = -Infinity;\n        }\n        else if (this.mute && !mute) {\n            this.volume.value = this._unmutedVolume;\n        }\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Volume.js.map","import { Volume } from \"../../component/channel/Volume\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { connectSeries, ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.getDestination());\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Destination.getDefaults(), arguments));\n        this.name = \"Destination\";\n        this.input = new Volume({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        /**\n         * The volume of the master output in decibels. -Infinity is silent, and 0 is no change.\n         * @example\n         * const osc = new Tone.Oscillator().toDestination();\n         * osc.start();\n         * // ramp the volume down to silent over 10 seconds\n         * Tone.getDestination().volume.rampTo(-Infinity, 10);\n         */\n        this.volume = this.input.volume;\n        const options = optionsFromArguments(Destination.getDefaults(), arguments);\n        connectSeries(this.input, this.output, this.context.rawContext.destination);\n        this.mute = options.mute;\n        this._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const oscillator = new Tone.Oscillator().start().toDestination();\n     * setTimeout(() => {\n     * \t// mute the output\n     * \tTone.Destination.mute = true;\n     * }, 1000);\n     */\n    get mute() {\n        return this.input.mute;\n    }\n    set mute(mute) {\n        this.input.mute = mute;\n    }\n    /**\n     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n     * chained in the master effects chain.\n     * @param args All arguments will be connected in a row and the Master will be routed through it.\n     * @example\n     * // route all audio through a filter and compressor\n     * const lowpass = new Tone.Filter(800, \"lowpass\");\n     * const compressor = new Tone.Compressor(-18);\n     * Tone.Destination.chain(lowpass, compressor);\n     */\n    chain(...args) {\n        this.input.disconnect();\n        args.unshift(this.input);\n        args.push(this.output);\n        connectSeries(...args);\n        return this;\n    }\n    /**\n     * The maximum number of channels the system can output\n     * @example\n     * console.log(Tone.Destination.maxChannelCount);\n     */\n    get maxChannelCount() {\n        return this.context.rawContext.destination.maxChannelCount;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.destination = new Destination({ context });\n});\nonContextClose(context => {\n    context.destination.dispose();\n});\n//# sourceMappingURL=Destination.js.map","import { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue extends Tone {\n    /**\n     * @param initialValue The value to return if there is no scheduled values\n     */\n    constructor(initialValue) {\n        super();\n        this.name = \"TimelineValue\";\n        /**\n         * The timeline which stores the values\n         */\n        this._timeline = new Timeline({ memory: 10 });\n        this._initialValue = initialValue;\n    }\n    /**\n     * Set the value at the given time\n     */\n    set(value, time) {\n        this._timeline.add({\n            value, time\n        });\n        return this;\n    }\n    /**\n     * Get the value at the given time\n     */\n    get(time) {\n        const event = this._timeline.get(time);\n        if (event) {\n            return event.value;\n        }\n        else {\n            return this._initialValue;\n        }\n    }\n}\n//# sourceMappingURL=TimelineValue.js.map","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        /**\n         * The unique id of the event\n         */\n        this.id = TransportEvent._eventId++;\n        const options = Object.assign(TransportEvent.getDefaults(), opts);\n        this.transport = transport;\n        this.callback = options.callback;\n        this._once = options.once;\n        this.time = options.time;\n    }\n    static getDefaults() {\n        return {\n            callback: noOp,\n            once: false,\n            time: 0,\n        };\n    }\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        if (this.callback) {\n            this.callback(time);\n            if (this._once) {\n                this.transport.clear(this.id);\n            }\n        }\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this.callback = undefined;\n        return this;\n    }\n}\n/**\n * Current ID counter\n */\nTransportEvent._eventId = 0;\n//# sourceMappingURL=TransportEvent.js.map","import { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        super(transport, opts);\n        /**\n         * The ID of the current timeline event\n         */\n        this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        this._nextTick = this.time;\n        /**\n         * a reference to the bound start method\n         */\n        this._boundRestart = this._restart.bind(this);\n        const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        this.duration = new TicksClass(transport.context, options.duration).valueOf();\n        this._interval = new TicksClass(transport.context, options.interval).valueOf();\n        this._nextTick = options.time;\n        this.transport.on(\"start\", this._boundRestart);\n        this.transport.on(\"loopStart\", this._boundRestart);\n        this.context = this.transport.context;\n        this._restart();\n    }\n    static getDefaults() {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    }\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        super.invoke(time);\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _createEvents(time) {\n        // schedule the next event\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _restart(time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this._nextTick = this.time;\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks > this.time) {\n            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n        }\n        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        this._nextTick += this._interval;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        return this;\n    }\n}\n//# sourceMappingURL=TransportRepeatEvent.js.map","import { TimeClass } from \"../../core/type/Time\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Transport.getDefaults(), arguments));\n        this.name = \"Transport\";\n        //-------------------------------------\n        // \tLOOPING\n        //-------------------------------------\n        /**\n         * If the transport loops or not.\n         */\n        this._loop = new TimelineValue(false);\n        /**\n         * The loop start position in ticks\n         */\n        this._loopStart = 0;\n        /**\n         * The loop end position in ticks\n         */\n        this._loopEnd = 0;\n        //-------------------------------------\n        // \tTIMELINE EVENTS\n        //-------------------------------------\n        /**\n         * All the events in an object to keep track by ID\n         */\n        this._scheduledEvents = {};\n        /**\n         * The scheduled events.\n         */\n        this._timeline = new Timeline();\n        /**\n         * Repeated events\n         */\n        this._repeatedEvents = new IntervalTimeline();\n        /**\n         * All of the synced Signals\n         */\n        this._syncedSignals = [];\n        /**\n         * The swing amount\n         */\n        this._swingAmount = 0;\n        const options = optionsFromArguments(Transport.getDefaults(), arguments);\n        // CLOCK/TEMPO\n        this._ppq = options.ppq;\n        this._clock = new Clock({\n            callback: this._processTick.bind(this),\n            context: this.context,\n            frequency: 0,\n            units: \"bpm\",\n        });\n        this._bindClockEvents();\n        this.bpm = this._clock.frequency;\n        this._clock.frequency.multiplier = options.ppq;\n        this.bpm.setValueAtTime(options.bpm, 0);\n        readOnly(this, \"bpm\");\n        this._timeSignature = options.timeSignature;\n        // SWING\n        this._swingTicks = options.ppq / 2; // 8n\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            bpm: 120,\n            loopEnd: \"4m\",\n            loopStart: 0,\n            ppq: 192,\n            swing: 0,\n            swingSubdivision: \"8n\",\n            timeSignature: 4,\n        });\n    }\n    //-------------------------------------\n    // \tTICKS\n    //-------------------------------------\n    /**\n     * called on every tick\n     * @param  tickTime clock relative tick time\n     */\n    _processTick(tickTime, ticks) {\n        // do the loop test\n        if (this._loop.get(tickTime)) {\n            if (ticks >= this._loopEnd) {\n                this.emit(\"loopEnd\", tickTime);\n                this._clock.setTicksAtTime(this._loopStart, tickTime);\n                ticks = this._loopStart;\n                this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n                this.emit(\"loop\", tickTime);\n            }\n        }\n        // handle swing\n        if (this._swingAmount > 0 &&\n            ticks % this._ppq !== 0 && // not on a downbeat\n            ticks % (this._swingTicks * 2) !== 0) {\n            // add some swing\n            const progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n            const amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n            tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n        }\n        // invoke the timeline events scheduled on this tick\n        this._timeline.forEachAtTime(ticks, event => event.invoke(tickTime));\n    }\n    //-------------------------------------\n    // \tSCHEDULABLE EVENTS\n    //-------------------------------------\n    /**\n     * Schedule an event along the timeline.\n     * @param callback The callback to be invoked at the time.\n     * @param time The time to invoke the callback at.\n     * @return The id of the event which can be used for canceling the event.\n     * @example\n     * // schedule an event on the 16th measure\n     * Tone.Transport.schedule((time) => {\n     * \t// invoked on measure 16\n     * \tconsole.log(\"measure 16!\");\n     * }, \"16:0:0\");\n     */\n    schedule(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Schedule a repeated event along the timeline. The event will fire\n     * at the `interval` starting at the `startTime` and for the specified\n     * `duration`.\n     * @param  callback   The callback to invoke.\n     * @param  interval   The duration between successive callbacks. Must be a positive number.\n     * @param  startTime  When along the timeline the events should start being invoked.\n     * @param  duration How long the event should repeat.\n     * @return  The ID of the scheduled event. Use this to cancel the event.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // a callback invoked every eighth note after the first measure\n     * Tone.Transport.scheduleRepeat((time) => {\n     * \tosc.start(time).stop(time + 0.1);\n     * }, \"8n\", \"1m\");\n     */\n    scheduleRepeat(callback, interval, startTime, duration = Infinity) {\n        const event = new TransportRepeatEvent(this, {\n            callback,\n            duration: new TimeClass(this.context, duration).toTicks(),\n            interval: new TimeClass(this.context, interval).toTicks(),\n            time: new TransportTimeClass(this.context, startTime).toTicks(),\n        });\n        // kick it off if the Transport is started\n        // @ts-ignore\n        return this._addEvent(event, this._repeatedEvents);\n    }\n    /**\n     * Schedule an event that will be removed after it is invoked.\n     * @param callback The callback to invoke once.\n     * @param time The time the callback should be invoked.\n     * @returns The ID of the scheduled event.\n     */\n    scheduleOnce(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            once: true,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Clear the passed in event id from the timeline\n     * @param eventId The id of the event.\n     */\n    clear(eventId) {\n        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n            const item = this._scheduledEvents[eventId.toString()];\n            item.timeline.remove(item.event);\n            item.event.dispose();\n            delete this._scheduledEvents[eventId.toString()];\n        }\n        return this;\n    }\n    /**\n     * Add an event to the correct timeline. Keep track of the\n     * timeline it was added to.\n     * @returns the event id which was just added\n     */\n    _addEvent(event, timeline) {\n        this._scheduledEvents[event.id.toString()] = {\n            event,\n            timeline,\n        };\n        timeline.add(event);\n        return event.id;\n    }\n    /**\n     * Remove scheduled events from the timeline after\n     * the given time. Repeated events will be removed\n     * if their startTime is after the given time\n     * @param after Clear all events after this time.\n     */\n    cancel(after = 0) {\n        const computedAfter = this.toTicks(after);\n        this._timeline.forEachFrom(computedAfter, event => this.clear(event.id));\n        this._repeatedEvents.forEachFrom(computedAfter, event => this.clear(event.id));\n        return this;\n    }\n    //-------------------------------------\n    // \tSTART/STOP/PAUSE\n    //-------------------------------------\n    /**\n     * Bind start/stop/pause events from the clock and emit them.\n     */\n    _bindClockEvents() {\n        this._clock.on(\"start\", (time, offset) => {\n            offset = new TicksClass(this.context, offset).toSeconds();\n            this.emit(\"start\", time, offset);\n        });\n        this._clock.on(\"stop\", (time) => {\n            this.emit(\"stop\", time);\n        });\n        this._clock.on(\"pause\", (time) => {\n            this.emit(\"pause\", time);\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n     */\n    get state() {\n        return this._clock.getStateAtTime(this.now());\n    }\n    /**\n     * Start the transport and all sources synced to the transport.\n     * @param  time The time when the transport should start.\n     * @param  offset The timeline offset to start the transport.\n     * @example\n     * // start the transport in one second starting at beginning of the 5th measure.\n     * Tone.Transport.start(\"+1\", \"4:0:0\");\n     */\n    start(time, offset) {\n        let offsetTicks;\n        if (isDefined(offset)) {\n            offsetTicks = this.toTicks(offset);\n        }\n        // start the clock\n        this._clock.start(time, offsetTicks);\n        return this;\n    }\n    /**\n     * Stop the transport and all sources synced to the transport.\n     * @param time The time when the transport should stop.\n     * @example\n     * Tone.Transport.stop();\n     */\n    stop(time) {\n        this._clock.stop(time);\n        return this;\n    }\n    /**\n     * Pause the transport and all sources synced to the transport.\n     */\n    pause(time) {\n        this._clock.pause(time);\n        return this;\n    }\n    /**\n     * Toggle the current state of the transport. If it is\n     * started, it will stop it, otherwise it will start the Transport.\n     * @param  time The time of the event\n     */\n    toggle(time) {\n        time = this.toSeconds(time);\n        if (this._clock.getStateAtTime(time) !== \"started\") {\n            this.start(time);\n        }\n        else {\n            this.stop(time);\n        }\n        return this;\n    }\n    //-------------------------------------\n    // \tSETTERS/GETTERS\n    //-------------------------------------\n    /**\n     * The time signature as just the numerator over 4.\n     * For example 4/4 would be just 4 and 6/8 would be 3.\n     * @example\n     * // common time\n     * Tone.Transport.timeSignature = 4;\n     * // 7/8\n     * Tone.Transport.timeSignature = [7, 8];\n     * // this will be reduced to a single number\n     * Tone.Transport.timeSignature; // returns 3.5\n     */\n    get timeSignature() {\n        return this._timeSignature;\n    }\n    set timeSignature(timeSig) {\n        if (isArray(timeSig)) {\n            timeSig = (timeSig[0] / timeSig[1]) * 4;\n        }\n        this._timeSignature = timeSig;\n    }\n    /**\n     * When the Transport.loop = true, this is the starting position of the loop.\n     */\n    get loopStart() {\n        return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n    }\n    set loopStart(startPosition) {\n        this._loopStart = this.toTicks(startPosition);\n    }\n    /**\n     * When the Transport.loop = true, this is the ending position of the loop.\n     */\n    get loopEnd() {\n        return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n    }\n    set loopEnd(endPosition) {\n        this._loopEnd = this.toTicks(endPosition);\n    }\n    /**\n     * If the transport loops or not.\n     */\n    get loop() {\n        return this._loop.get(this.now());\n    }\n    set loop(loop) {\n        this._loop.set(loop, this.now());\n    }\n    /**\n     * Set the loop start and stop at the same time.\n     * @example\n     * // loop over the first measure\n     * Tone.Transport.setLoopPoints(0, \"1m\");\n     * Tone.Transport.loop = true;\n     */\n    setLoopPoints(startPosition, endPosition) {\n        this.loopStart = startPosition;\n        this.loopEnd = endPosition;\n        return this;\n    }\n    /**\n     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n     */\n    get swing() {\n        return this._swingAmount;\n    }\n    set swing(amount) {\n        // scale the values to a normal range\n        this._swingAmount = amount;\n    }\n    /**\n     * Set the subdivision which the swing will be applied to.\n     * The default value is an 8th note. Value must be less\n     * than a quarter note.\n     */\n    get swingSubdivision() {\n        return new TicksClass(this.context, this._swingTicks).toNotation();\n    }\n    set swingSubdivision(subdivision) {\n        this._swingTicks = this.toTicks(subdivision);\n    }\n    /**\n     * The Transport's position in Bars:Beats:Sixteenths.\n     * Setting the value will jump to that position right away.\n     */\n    get position() {\n        const now = this.now();\n        const ticks = this._clock.getTicksAtTime(now);\n        return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n    }\n    set position(progress) {\n        const ticks = this.toTicks(progress);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's position in seconds\n     * Setting the value will jump to that position right away.\n     */\n    get seconds() {\n        return this._clock.seconds;\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this._clock.frequency.timeToTicks(s, now);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's loop position as a normalized value. Always\n     * returns 0 if the transport if loop is not true.\n     */\n    get progress() {\n        if (this.loop) {\n            const now = this.now();\n            const ticks = this._clock.getTicksAtTime(now);\n            return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The transports current tick position.\n     */\n    get ticks() {\n        return this._clock.ticks;\n    }\n    set ticks(t) {\n        if (this._clock.ticks !== t) {\n            const now = this.now();\n            // stop everything synced to the transport\n            if (this.state === \"started\") {\n                const ticks = this._clock.getTicksAtTime(now);\n                // schedule to start on the next tick, #573\n                const remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);\n                const time = now + remainingTick;\n                this.emit(\"stop\", time);\n                this._clock.setTicksAtTime(t, time);\n                // restart it with the new time\n                this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n            }\n            else {\n                this._clock.setTicksAtTime(t, now);\n            }\n        }\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return Math.round(this._clock.getTicksAtTime(time));\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._clock.getSecondsAtTime(time);\n    }\n    /**\n     * Pulses Per Quarter note. This is the smallest resolution\n     * the Transport timing supports. This should be set once\n     * on initialization and not set again. Changing this value\n     * after other objects have been created can cause problems.\n     */\n    get PPQ() {\n        return this._clock.frequency.multiplier;\n    }\n    set PPQ(ppq) {\n        this._clock.frequency.multiplier = ppq;\n    }\n    //-------------------------------------\n    // \tSYNCING\n    //-------------------------------------\n    /**\n     * Returns the time aligned to the next subdivision\n     * of the Transport. If the Transport is not started,\n     * it will return 0.\n     * Note: this will not work precisely during tempo ramps.\n     * @param  subdivision  The subdivision to quantize to\n     * @return  The context time of the next subdivision.\n     * @example\n     * // the transport must be started, otherwise returns 0\n     * Tone.Transport.start();\n     * Tone.Transport.nextSubdivision(\"4n\");\n     */\n    nextSubdivision(subdivision) {\n        subdivision = this.toTicks(subdivision);\n        if (this.state !== \"started\") {\n            // if the transport's not started, return 0\n            return 0;\n        }\n        else {\n            const now = this.now();\n            // the remainder of the current ticks and the subdivision\n            const transportPos = this.getTicksAtTime(now);\n            const remainingTicks = subdivision - transportPos % subdivision;\n            return this._clock.nextTickTime(remainingTicks, now);\n        }\n    }\n    /**\n     * Attaches the signal to the tempo control signal so that\n     * any changes in the tempo will change the signal in the same\n     * ratio.\n     *\n     * @param signal\n     * @param ratio Optionally pass in the ratio between the two signals.\n     * \t\t\tOtherwise it will be computed based on their current values.\n     */\n    syncSignal(signal, ratio) {\n        if (!ratio) {\n            // get the sync ratio\n            const now = this.now();\n            if (signal.getValueAtTime(now) !== 0) {\n                const bpm = this.bpm.getValueAtTime(now);\n                const computedFreq = 1 / (60 / bpm / this.PPQ);\n                ratio = signal.getValueAtTime(now) / computedFreq;\n            }\n            else {\n                ratio = 0;\n            }\n        }\n        const ratioSignal = new Gain(ratio);\n        // @ts-ignore\n        this.bpm.connect(ratioSignal);\n        // @ts-ignore\n        ratioSignal.connect(signal._param);\n        this._syncedSignals.push({\n            initial: signal.value,\n            ratio: ratioSignal,\n            signal,\n        });\n        signal.value = 0;\n        return this;\n    }\n    /**\n     * Unsyncs a previously synced signal from the transport's control.\n     * See Transport.syncSignal.\n     */\n    unsyncSignal(signal) {\n        for (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n            const syncedSignal = this._syncedSignals[i];\n            if (syncedSignal.signal === signal) {\n                syncedSignal.ratio.dispose();\n                syncedSignal.signal.value = syncedSignal.initial;\n                this._syncedSignals.splice(i, 1);\n            }\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._clock.dispose();\n        writable(this, \"bpm\");\n        this._timeline.dispose();\n        this._repeatedEvents.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Transport);\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.transport = new Transport({ context });\n});\nonContextClose(context => {\n    context.transport.dispose();\n});\n//# sourceMappingURL=Transport.js.map","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport class Source extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * Sources have no inputs\n         */\n        this.input = undefined;\n        /**\n         * Keep track of the scheduled state.\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * The synced `start` callback function from the transport\n         */\n        this._synced = false;\n        /**\n         * Keep track of all of the scheduled event ids\n         */\n        this._scheduled = [];\n        /**\n         * Placeholder functions for syncing/unsyncing to transport\n         */\n        this._syncedStart = noOp;\n        this._syncedStop = noOp;\n        this._state.memory = 100;\n        this._state.increasing = true;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            mute: options.mute,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this.onstop = options.onstop;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            onstop: noOp,\n            volume: 0,\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/ahntone_c3.mp3\", () => {\n     * \tplayer.start();\n     * \tconsole.log(player.state);\n     * }).toDestination();\n     */\n    get state() {\n        if (this._synced) {\n            if (this.context.transport.state === \"started\") {\n                return this._state.getValueAtTime(this.context.transport.seconds);\n            }\n            else {\n                return \"stopped\";\n            }\n        }\n        else {\n            return this._state.getValueAtTime(this.now());\n        }\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // mute the output\n     * osc.mute = true;\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    /**\n     * Ensure that the scheduled time is not before the current time.\n     * Should only be used when scheduled unsynced.\n     */\n    _clampToCurrentTime(time) {\n        if (this._synced) {\n            return time;\n        }\n        else {\n            return Math.max(time, this.context.currentTime);\n        }\n    }\n    /**\n     * Start the source at the specified time. If no time is given,\n     * start the source now.\n     * @param  time When the source should be started.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n     */\n    start(time, offset, duration) {\n        let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        // if it's started, stop it and restart it\n        if (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n            // time should be strictly greater than the previous start time\n            assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            this.log(\"restart\", computedTime);\n            this.restart(computedTime, offset, duration);\n        }\n        else {\n            this.log(\"start\", computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (this._synced) {\n                // add the offset time to the event\n                const event = this._state.get(computedTime);\n                if (event) {\n                    event.offset = this.toSeconds(defaultArg(offset, 0));\n                    event.duration = duration ? this.toSeconds(duration) : undefined;\n                }\n                const sched = this.context.transport.schedule(t => {\n                    this._start(t, offset, duration);\n                }, computedTime);\n                this._scheduled.push(sched);\n                // if the transport is already started\n                // and the time is greater than where the transport is\n                if (this.context.transport.state === \"started\" &&\n                    this.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {\n                    this._syncedStart(this.now(), this.context.transport.seconds);\n                }\n            }\n            else {\n                assertContextRunning(this.context);\n                this._start(computedTime, offset, duration);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the source at the specified time. If no time is given,\n     * stop the source now.\n     * @param  time When the source should be stopped.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start();\n     * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n     */\n    stop(time) {\n        let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        if (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n            this.log(\"stop\", computedTime);\n            if (!this._synced) {\n                this._stop(computedTime);\n            }\n            else {\n                const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n                this._scheduled.push(sched);\n            }\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"stopped\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Restart the source.\n     */\n    restart(time, offset, duration) {\n        time = this.toSeconds(time);\n        if (this._state.getValueAtTime(time) === \"started\") {\n            this._state.cancel(time);\n            this._restart(time, offset, duration);\n        }\n        return this;\n    }\n    /**\n     * Sync the source to the Transport so that all subsequent\n     * calls to `start` and `stop` are synced to the TransportTime\n     * instead of the AudioContext time.\n     *\n     * @example\n     * const osc = new Tone.Oscillator().toDestination();\n     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n     * osc.sync().start(0).stop(0.3);\n     * // start the transport.\n     * Tone.Transport.start();\n     * // set it to loop once a second\n     * Tone.Transport.loop = true;\n     * Tone.Transport.loopEnd = 1;\n     */\n    sync() {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncedStart = (time, offset) => {\n                if (offset > 0) {\n                    // get the playback state at that time\n                    const stateEvent = this._state.get(offset);\n                    // listen for start events which may occur in the middle of the sync'ed time\n                    if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n                        // get the offset\n                        const startOffset = offset - this.toSeconds(stateEvent.time);\n                        let duration;\n                        if (stateEvent.duration) {\n                            duration = this.toSeconds(stateEvent.duration) - startOffset;\n                        }\n                        this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n                    }\n                }\n            };\n            this._syncedStop = time => {\n                const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n                if (this._state.getValueAtTime(seconds) === \"started\") {\n                    this._stop(time);\n                }\n            };\n            this.context.transport.on(\"start\", this._syncedStart);\n            this.context.transport.on(\"loopStart\", this._syncedStart);\n            this.context.transport.on(\"stop\", this._syncedStop);\n            this.context.transport.on(\"pause\", this._syncedStop);\n            this.context.transport.on(\"loopEnd\", this._syncedStop);\n        }\n        return this;\n    }\n    /**\n     * Unsync the source to the Transport. See Source.sync\n     */\n    unsync() {\n        if (this._synced) {\n            this.context.transport.off(\"stop\", this._syncedStop);\n            this.context.transport.off(\"pause\", this._syncedStop);\n            this.context.transport.off(\"loopEnd\", this._syncedStop);\n            this.context.transport.off(\"start\", this._syncedStart);\n            this.context.transport.off(\"loopStart\", this._syncedStart);\n        }\n        this._synced = false;\n        // clear all of the scheduled ids\n        this._scheduled.forEach(id => this.context.transport.clear(id));\n        this._scheduled = [];\n        this._state.cancel(0);\n        // stop it also\n        this._stop(0);\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.onstop = noOp;\n        this.unsync();\n        this._volume.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Source.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"ToneBufferSource\";\n        /**\n         * The oscillator\n         */\n        this._source = this.context.createBufferSource();\n        this._internalChannels = [this._source];\n        /**\n         * indicators if the source has started/stopped\n         */\n        this._sourceStarted = false;\n        this._sourceStopped = false;\n        const options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n        connect(this._source, this._gainNode);\n        this._source.onended = () => this._stopSource();\n        /**\n         * The playbackRate of the buffer\n         */\n        this.playbackRate = new Param({\n            context: this.context,\n            param: this._source.playbackRate,\n            units: \"positive\",\n            value: options.playbackRate,\n        });\n        // set some values initially\n        this.loop = options.loop;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n        this._internalChannels.push(this._source);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            url: new ToneAudioBuffer(),\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n        });\n    }\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(t) {\n        this._fadeIn = t;\n    }\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(t) {\n        this._fadeOut = t;\n    }\n    /**\n     * The curve applied to the fades, either \"linear\" or \"exponential\"\n     */\n    get curve() {\n        return this._curve;\n    }\n    set curve(t) {\n        this._curve = t;\n    }\n    /**\n     * Start the buffer\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     * @param  gain  The gain to play the buffer back at.\n     */\n    start(time, offset, duration, gain = 1) {\n        assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n        const computedTime = this.toSeconds(time);\n        // apply the gain envelope\n        this._startGain(computedTime, gain);\n        // if it's a loop the default offset is the loopstart point\n        if (this.loop) {\n            offset = defaultArg(offset, this.loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // make sure the offset is not less than 0\n        let computedOffset = Math.max(this.toSeconds(offset), 0);\n        // start the buffer source\n        if (this.loop) {\n            // modify the offset if it's greater than the loop time\n            const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n            const loopStart = this.toSeconds(this.loopStart);\n            const loopDuration = loopEnd - loopStart;\n            // move the offset back\n            if (GTE(computedOffset, loopEnd)) {\n                computedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n            }\n            // when the offset is very close to the duration, set it to 0\n            if (EQ(computedOffset, this.buffer.duration)) {\n                computedOffset = 0;\n            }\n        }\n        // this.buffer.loaded would have return false if the AudioBuffer was undefined\n        this._source.buffer = this.buffer.get();\n        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n        if (LT(computedOffset, this.buffer.duration)) {\n            this._sourceStarted = true;\n            this._source.start(computedTime, computedOffset);\n        }\n        // if a duration is given, schedule a stop\n        if (isDefined(duration)) {\n            let computedDur = this.toSeconds(duration);\n            // make sure it's never negative\n            computedDur = Math.max(computedDur, 0);\n            this.stop(computedTime + computedDur);\n        }\n        return this;\n    }\n    _stopSource(time) {\n        if (!this._sourceStopped && this._sourceStarted) {\n            this._sourceStopped = true;\n            this._source.stop(this.toSeconds(time));\n            this._onended();\n        }\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._source.loopStart;\n    }\n    set loopStart(loopStart) {\n        this._source.loopStart = this.toSeconds(loopStart);\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._source.loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._source.loopEnd = this.toSeconds(loopEnd);\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get loop() {\n        return this._source.loop;\n    }\n    set loop(loop) {\n        this._source.loop = loop;\n        if (this._sourceStarted) {\n            this.cancelStop();\n        }\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._source.onended = null;\n        this._source.disconnect();\n        this._buffer.dispose();\n        this.playbackRate.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneBufferSource.js.map","import { __awaiter } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport function generateWaveform(instance, length) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const duration = length / instance.context.sampleRate;\n        const context = new OfflineContext(1, duration, instance.context.sampleRate);\n        const clone = new instance.constructor(Object.assign(instance.get(), {\n            // should do 2 iterations\n            frequency: 2 / duration,\n            // zero out the detune\n            detune: 0,\n            context\n        })).toDestination();\n        clone.start(0);\n        const buffer = yield context.render();\n        return buffer.getChannelData(0);\n    });\n}\n//# sourceMappingURL=OscillatorInterface.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"ToneOscillatorNode\";\n        /**\n         * The oscillator\n         */\n        this._oscillator = this.context.createOscillator();\n        this._internalChannels = [this._oscillator];\n        const options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        connect(this._oscillator, this._gainNode);\n        this.type = options.type;\n        this.frequency = new Param({\n            context: this.context,\n            param: this._oscillator.frequency,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Param({\n            context: this.context,\n            param: this._oscillator.detune,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            type: \"sine\",\n        });\n    }\n    /**\n     * Start the oscillator node at the given time\n     * @param  time When to start the oscillator\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._oscillator.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._oscillator.stop(time);\n    }\n    /**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n     */\n    setPeriodicWave(periodicWave) {\n        this._oscillator.setPeriodicWave(periodicWave);\n        return this;\n    }\n    /**\n     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n     */\n    get type() {\n        return this._oscillator.type;\n    }\n    set type(type) {\n        this._oscillator.type = type;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._oscillator.disconnect();\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneOscillatorNode.js.map","import { __awaiter } from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"Oscillator\";\n        /**\n         * the main oscillator\n         */\n        this._oscillator = null;\n        const options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, \"detune\");\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        this._type = options.type;\n        if (options.partialCount && options.type !== \"custom\") {\n            this._type = this.baseType + options.partialCount.toString();\n        }\n        this.phase = options.phase;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            partialCount: 0,\n            partials: [],\n            phase: 0,\n            type: \"sine\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        const computedTime = this.toSeconds(time);\n        // new oscillator with previous values\n        const oscillator = new ToneOscillatorNode({\n            context: this.context,\n            onended: () => this.onstop(this),\n        });\n        this._oscillator = oscillator;\n        if (this._wave) {\n            this._oscillator.setPeriodicWave(this._wave);\n        }\n        else {\n            this._oscillator.type = this._type;\n        }\n        // connect the control signal to the oscillator frequency & detune\n        this._oscillator.connect(this.output);\n        this.frequency.connect(this._oscillator.frequency);\n        this.detune.connect(this._oscillator.detune);\n        // start the oscillator\n        this._oscillator.start(computedTime);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._oscillator) {\n            this._oscillator.stop(computedTime);\n        }\n    }\n    /**\n     * Restart the oscillator. Does not stop the oscillator, but instead\n     * just cancels any scheduled 'stop' from being invoked.\n     */\n    _restart(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"restart\", computedTime);\n        if (this._oscillator) {\n            this._oscillator.cancelStop();\n        }\n        this._state.cancel(computedTime);\n        return this;\n    }\n    /**\n     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n     * will also affect the oscillators frequency.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * osc.frequency.value = 440;\n     * // the ratio between the bpm and the frequency will be maintained\n     * osc.syncFrequency();\n     * // double the tempo\n     * Tone.Transport.bpm.value *= 2;\n     * // the frequency of the oscillator is doubled to 880\n     */\n    syncFrequency() {\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Unsync the oscillator's frequency from the Transport.\n     * See Oscillator.syncFrequency\n     */\n    unsyncFrequency() {\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Get a cached periodic wave. Avoids having to recompute\n     * the oscillator values when they have already been computed\n     * with the same values.\n     */\n    _getCachedPeriodicWave() {\n        if (this._type === \"custom\") {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.phase === this._phase &&\n                    deepEquals(description.partials, this._partials);\n            });\n            return oscProps;\n        }\n        else {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.type === this._type &&\n                    description.phase === this._phase;\n            });\n            this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n            return oscProps;\n        }\n    }\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        const isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n        if (this._phase === 0 && isBasicType) {\n            this._wave = undefined;\n            this._partialCount = 0;\n            // just go with the basic approach\n            if (this._oscillator !== null) {\n                // already tested that it's a basic type\n                this._oscillator.type = type;\n            }\n        }\n        else {\n            // first check if the value is cached\n            const cache = this._getCachedPeriodicWave();\n            if (isDefined(cache)) {\n                const { partials, wave } = cache;\n                this._wave = wave;\n                this._partials = partials;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n            }\n            else {\n                const [real, imag] = this._getRealImaginary(type, this._phase);\n                const periodicWave = this.context.createPeriodicWave(real, imag);\n                this._wave = periodicWave;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n                // set the cache\n                Oscillator._periodicWaveCache.push({\n                    imag,\n                    partialCount: this._partialCount,\n                    partials: this._partials,\n                    phase: this._phase,\n                    real,\n                    type: this._type,\n                    wave: this._wave,\n                });\n                if (Oscillator._periodicWaveCache.length > 100) {\n                    Oscillator._periodicWaveCache.shift();\n                }\n            }\n        }\n    }\n    get baseType() {\n        return this._type.replace(this.partialCount.toString(), \"\");\n    }\n    set baseType(baseType) {\n        if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n            this.type = baseType + this.partialCount;\n        }\n        else {\n            this.type = baseType;\n        }\n    }\n    get partialCount() {\n        return this._partialCount;\n    }\n    set partialCount(p) {\n        assertRange(p, 0);\n        let type = this._type;\n        const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n        if (partial) {\n            type = partial[1];\n        }\n        if (this._type !== \"custom\") {\n            if (p === 0) {\n                this.type = type;\n            }\n            else {\n                this.type = type + p.toString();\n            }\n        }\n        else {\n            // extend or shorten the partials array\n            const fullPartials = new Float32Array(p);\n            // copy over the partials array\n            this._partials.forEach((v, i) => fullPartials[i] = v);\n            this._partials = Array.from(fullPartials);\n            this.type = this._type;\n        }\n    }\n    /**\n     * Returns the real and imaginary components based\n     * on the oscillator type.\n     * @returns [real: Float32Array, imaginary: Float32Array]\n     */\n    _getRealImaginary(type, phase) {\n        const fftSize = 4096;\n        let periodicWaveSize = fftSize / 2;\n        const real = new Float32Array(periodicWaveSize);\n        const imag = new Float32Array(periodicWaveSize);\n        let partialCount = 1;\n        if (type === \"custom\") {\n            partialCount = this._partials.length + 1;\n            this._partialCount = this._partials.length;\n            periodicWaveSize = partialCount;\n            // if the partial count is 0, don't bother doing any computation\n            if (this._partials.length === 0) {\n                return [real, imag];\n            }\n        }\n        else {\n            const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n            if (partial) {\n                partialCount = parseInt(partial[2], 10) + 1;\n                this._partialCount = parseInt(partial[2], 10);\n                type = partial[1];\n                partialCount = Math.max(partialCount, 2);\n                periodicWaveSize = partialCount;\n            }\n            else {\n                this._partialCount = 0;\n            }\n            this._partials = [];\n        }\n        for (let n = 1; n < periodicWaveSize; ++n) {\n            const piFactor = 2 / (n * Math.PI);\n            let b;\n            switch (type) {\n                case \"sine\":\n                    b = (n <= partialCount) ? 1 : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"square\":\n                    b = (n & 1) ? 2 * piFactor : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"sawtooth\":\n                    b = piFactor * ((n & 1) ? 1 : -1);\n                    this._partials[n - 1] = b;\n                    break;\n                case \"triangle\":\n                    if (n & 1) {\n                        b = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n                    }\n                    else {\n                        b = 0;\n                    }\n                    this._partials[n - 1] = b;\n                    break;\n                case \"custom\":\n                    b = this._partials[n - 1];\n                    break;\n                default:\n                    throw new TypeError(\"Oscillator: invalid type: \" + type);\n            }\n            if (b !== 0) {\n                real[n] = -b * Math.sin(phase * n);\n                imag[n] = b * Math.cos(phase * n);\n            }\n            else {\n                real[n] = 0;\n                imag[n] = 0;\n            }\n        }\n        return [real, imag];\n    }\n    /**\n     * Compute the inverse FFT for a given phase.\n     */\n    _inverseFFT(real, imag, phase) {\n        let sum = 0;\n        const len = real.length;\n        for (let i = 0; i < len; i++) {\n            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n        }\n        return sum;\n    }\n    /**\n     * Returns the initial value of the oscillator when stopped.\n     * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n     */\n    getInitialValue() {\n        const [real, imag] = this._getRealImaginary(this._type, 0);\n        let maxValue = 0;\n        const twoPi = Math.PI * 2;\n        const testPositions = 32;\n        // check for peaks in 16 places\n        for (let i = 0; i < testPositions; i++) {\n            maxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n        }\n        return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n    }\n    get partials() {\n        return this._partials.slice(0, this.partialCount);\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this.type = \"custom\";\n        }\n    }\n    get phase() {\n        return this._phase * (180 / Math.PI);\n    }\n    set phase(phase) {\n        this._phase = phase * Math.PI / 180;\n        // reset the type\n        this.type = this._type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this._oscillator !== null) {\n            this._oscillator.dispose();\n        }\n        this._wave = undefined;\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n/**\n * Cache the periodic waves to avoid having to redo computations\n */\nOscillator._periodicWaveCache = [];\n//# sourceMappingURL=Oscillator.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport class SignalOperator extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n}\n//# sourceMappingURL=SignalOperator.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n        this.name = \"WaveShaper\";\n        /**\n         * the waveshaper node\n         */\n        this._shaper = this.context.createWaveShaper();\n        /**\n         * The input to the waveshaper node.\n         */\n        this.input = this._shaper;\n        /**\n         * The output from the waveshaper node\n         */\n        this.output = this._shaper;\n        const options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n        if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n            this.curve = Float32Array.from(options.mapping);\n        }\n        else if (isFunction(options.mapping)) {\n            this.setMap(options.mapping, options.length);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            length: 1024,\n        });\n    }\n    /**\n     * Uses a mapping function to set the value of the curve.\n     * @param mapping The function used to define the values.\n     *                The mapping function take two arguments:\n     *                the first is the value at the current position\n     *                which goes from -1 to 1 over the number of elements\n     *                in the curve array. The second argument is the array position.\n     * @example\n     * const shaper = new Tone.WaveShaper();\n     * // map the input signal from [-1, 1] to [0, 10]\n     * shaper.setMap((val, index) => (val + 1) * 5);\n     */\n    setMap(mapping, length = 1024) {\n        const array = new Float32Array(length);\n        for (let i = 0, len = length; i < len; i++) {\n            const normalized = (i / (len - 1)) * 2 - 1;\n            array[i] = mapping(normalized, i);\n        }\n        this.curve = array;\n        return this;\n    }\n    /**\n     * The array to set as the waveshaper curve. For linear curves\n     * array length does not make much difference, but for complex curves\n     * longer arrays will provide smoother interpolation.\n     */\n    get curve() {\n        return this._shaper.curve;\n    }\n    set curve(mapping) {\n        this._shaper.curve = mapping;\n    }\n    /**\n     * Specifies what type of oversampling (if any) should be used when\n     * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        const isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n        assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n        this._shaper.oversample = oversampling;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._shaper.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=WaveShaper.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"AudioToGain\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => (x + 1) / 2,\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The GainRange output [0, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AudioToGain.js.map","import { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n        this.name = \"Multiply\";\n        /**\n         * Indicates if the value should be overridden on connection\n         */\n        this.override = false;\n        const options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n        this._mult = this.input = this.output = new Gain({\n            context: this.context,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this.factor = this._param = this._mult.gain;\n        this.factor.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Multiply.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * }, 0.2, 1);\n * @category Source\n */\nexport class AMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"AMOscillator\";\n        /**\n         * convert the -1,1 output to 0,1\n         */\n        this._modulationScale = new AudioToGain({ context: this.context });\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n        });\n        const options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.frequency = this._carrier.frequency,\n            this.detune = this._carrier.detune;\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        // connections\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n        this._carrier.chain(this._modulationNode, this.output);\n        readOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n    }\n    /**\n     * The type of the carrier oscillator\n     */\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this._modulationScale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst fmOsc = new Tone.FMOscillator({\n * \t\tfrequency: 200,\n * \t\ttype: \"square\",\n * \t\tmodulationType: \"triangle\",\n * \t\tharmonicity: 0.2,\n * \t\tmodulationIndex: 3\n * \t}).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class FMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"FMOscillator\";\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        const options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: 0,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.detune = this._carrier.detune;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        this.modulationIndex = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.modulationIndex,\n        });\n        // connections\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.frequency.chain(this.modulationIndex, this._modulationNode);\n        this._modulator.connect(this._modulationNode.gain);\n        this._modulationNode.connect(this._carrier.frequency);\n        this._carrier.connect(this.output);\n        this.detune.connect(this._modulator.detune);\n        readOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationIndex: 2,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n        return this;\n    }\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PulseOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n        this.name = \"PulseOscillator\";\n        /**\n         * gate the width amount\n         */\n        this._widthGate = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * Threshold the signal to turn it into a square\n         */\n        this._thresh = new WaveShaper({\n            context: this.context,\n            mapping: val => val <= 0 ? -1 : 1,\n        });\n        const options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n        this.width = new Signal({\n            context: this.context,\n            units: \"audioRange\",\n            value: options.width,\n        });\n        this._triangle = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: \"triangle\",\n        });\n        this.frequency = this._triangle.frequency;\n        this.detune = this._triangle.detune;\n        // connections\n        this._triangle.chain(this._thresh, this.output);\n        this.width.chain(this._widthGate, this._thresh);\n        readOnly(this, [\"width\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            phase: 0,\n            type: \"pulse\",\n            width: 0.2,\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._triangle.start(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._triangle.stop(time);\n        // the width is still connected to the output.\n        // that needs to be stopped also\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(0, time);\n    }\n    _restart(time) {\n        this._triangle.restart(time);\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._triangle.phase;\n    }\n    set phase(phase) {\n        this._triangle.phase = phase;\n    }\n    /**\n     * The type of the oscillator. Always returns \"pulse\".\n     */\n    get type() {\n        return \"pulse\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pulse\".\n     */\n    get baseType() {\n        return \"pulse\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * *Internal use* The carrier oscillator type is fed through the\n     * waveshaper node to create the pulse. Using different carrier oscillators\n     * changes oscillator's behavior.\n     */\n    set carrierType(type) {\n        this._triangle.type = type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up method.\n     */\n    dispose() {\n        super.dispose();\n        this._triangle.dispose();\n        this.width.dispose();\n        this._widthGate.dispose();\n        this._thresh.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PulseOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n        this.name = \"FatOscillator\";\n        /**\n         * The array of oscillators\n         */\n        this._oscillators = [];\n        const options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this._spread = options.spread;\n        this._type = options.type;\n        this._phase = options.phase;\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        // set the count initially\n        this.count = options.count;\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            count: 3,\n            spread: 20,\n            type: \"sawtooth\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.start(time));\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.stop(time));\n    }\n    _restart(time) {\n        this._forEach(osc => osc.restart(time));\n    }\n    /**\n     * Iterate over all of the oscillators\n     */\n    _forEach(iterator) {\n        for (let i = 0; i < this._oscillators.length; i++) {\n            iterator(this._oscillators[i], i);\n        }\n    }\n    /**\n     * The type of the oscillator\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        this._forEach(osc => osc.type = type);\n    }\n    /**\n     * The detune spread between the oscillators. If \"count\" is\n     * set to 3 oscillators and the \"spread\" is set to 40,\n     * the three oscillators would be detuned like this: [-20, 0, 20]\n     * for a total detune spread of 40 cents.\n     * @example\n     * const fatOsc = new Tone.FatOscillator().toDestination().start();\n     * fatOsc.spread = 70;\n     */\n    get spread() {\n        return this._spread;\n    }\n    set spread(spread) {\n        this._spread = spread;\n        if (this._oscillators.length > 1) {\n            const start = -spread / 2;\n            const step = spread / (this._oscillators.length - 1);\n            this._forEach((osc, i) => osc.detune.value = start + step * i);\n        }\n    }\n    /**\n     * The number of detuned oscillators. Must be an integer greater than 1.\n     * @example\n     * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n     * // use 4 sawtooth oscillators\n     * fatOsc.count = 4;\n     */\n    get count() {\n        return this._oscillators.length;\n    }\n    set count(count) {\n        assertRange(count, 1);\n        if (this._oscillators.length !== count) {\n            // dispose the previous oscillators\n            this._forEach(osc => osc.dispose());\n            this._oscillators = [];\n            for (let i = 0; i < count; i++) {\n                const osc = new Oscillator({\n                    context: this.context,\n                    volume: -6 - count * 1.1,\n                    type: this._type,\n                    phase: this._phase + (i / count) * 360,\n                    partialCount: this._partialCount,\n                    onstop: i === 0 ? () => this.onstop(this) : noOp,\n                });\n                if (this.type === \"custom\") {\n                    osc.partials = this._partials;\n                }\n                this.frequency.connect(osc.frequency);\n                this.detune.connect(osc.detune);\n                osc.detune.overridden = false;\n                osc.connect(this.output);\n                this._oscillators[i] = osc;\n            }\n            // set the spread\n            this.spread = this._spread;\n            if (this.state === \"started\") {\n                this._forEach(osc => osc.start());\n            }\n        }\n    }\n    get phase() {\n        return this._phase;\n    }\n    set phase(phase) {\n        this._phase = phase;\n        this._forEach((osc, i) => osc.phase = this._phase + (i / this.count) * 360);\n    }\n    get baseType() {\n        return this._oscillators[0].baseType;\n    }\n    set baseType(baseType) {\n        this._forEach(osc => osc.baseType = baseType);\n        this._type = this._oscillators[0].type;\n    }\n    get partials() {\n        return this._oscillators[0].partials;\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this._type = \"custom\";\n            this._forEach(osc => osc.partials = partials);\n        }\n    }\n    get partialCount() {\n        return this._oscillators[0].partialCount;\n    }\n    set partialCount(partialCount) {\n        this._partialCount = partialCount;\n        this._forEach(osc => osc.partialCount = partialCount);\n        this._type = this._oscillators[0].type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._forEach(osc => osc.dispose());\n        return this;\n    }\n}\n//# sourceMappingURL=FatOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * return Tone.Offline(() => {\n * \tconst pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PWMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n        this.name = \"PWMOscillator\";\n        this.sourceType = \"pwm\";\n        /**\n         * Scale the oscillator so it doesn't go silent\n         * at the extreme values.\n         */\n        this._scale = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        const options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n        this._pulse = new PulseOscillator({\n            context: this.context,\n            frequency: options.modulationFrequency,\n        });\n        // change the pulse oscillator type\n        this._pulse.carrierType = \"sine\";\n        this.modulationFrequency = this._pulse.frequency;\n        this._modulator = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n        });\n        this.frequency = this._modulator.frequency;\n        this.detune = this._modulator.detune;\n        // connections\n        this._modulator.chain(this._scale, this._pulse.width);\n        this._pulse.connect(this.output);\n        readOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            modulationFrequency: 0.4,\n            phase: 0,\n            type: \"pwm\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._modulator.start(time);\n        this._pulse.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._modulator.stop(time);\n        this._pulse.stop(time);\n    }\n    /**\n     * restart the oscillator\n     */\n    _restart(time) {\n        this._modulator.restart(time);\n        this._pulse.restart(time);\n    }\n    /**\n     * The type of the oscillator. Always returns \"pwm\".\n     */\n    get type() {\n        return \"pwm\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pwm\".\n     */\n    get baseType() {\n        return \"pwm\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._modulator.phase;\n    }\n    set phase(phase) {\n        this._modulator.phase = phase;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._pulse.dispose();\n        this._scale.dispose();\n        this._modulator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PWMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\nconst OmniOscillatorSourceMap = {\n    am: AMOscillator,\n    fat: FatOscillator,\n    fm: FMOscillator,\n    oscillator: Oscillator,\n    pulse: PulseOscillator,\n    pwm: PWMOscillator,\n};\n/**\n * OmniOscillator aggregates all of the oscillator types into one.\n * @example\n * return Tone.Offline(() => {\n * \tconst omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class OmniOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"OmniOscillator\";\n        const options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n        // set the options\n        this.set(options);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._oscillator.start(time);\n    }\n    /**\n     * start the oscillator\n     */\n    _stop(time) {\n        this._oscillator.stop(time);\n    }\n    _restart(time) {\n        this._oscillator.restart(time);\n        return this;\n    }\n    /**\n     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n     * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n     * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n     * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n     * when it's not.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n     * omniOsc.type = \"pwm\";\n     * // modulationFrequency is parameter which is available\n     * // only when the type is \"pwm\".\n     * omniOsc.modulationFrequency.value = 0.5;\n     */\n    get type() {\n        let prefix = \"\";\n        if ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n            prefix = this._sourceType;\n        }\n        return prefix + this._oscillator.type;\n    }\n    set type(type) {\n        if (type.substr(0, 2) === \"fm\") {\n            this._createNewOscillator(\"fm\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 2) === \"am\") {\n            this._createNewOscillator(\"am\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 3) === \"fat\") {\n            this._createNewOscillator(\"fat\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(3);\n        }\n        else if (type === \"pwm\") {\n            this._createNewOscillator(\"pwm\");\n            this._oscillator = this._oscillator;\n        }\n        else if (type === \"pulse\") {\n            this._createNewOscillator(\"pulse\");\n        }\n        else {\n            this._createNewOscillator(\"oscillator\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type;\n        }\n    }\n    /**\n     * The value is an empty array when the type is not \"custom\".\n     * This is not available on \"pwm\" and \"pulse\" oscillator types.\n     * See [[Oscillator.partials]]\n     */\n    get partials() {\n        return this._oscillator.partials;\n    }\n    set partials(partials) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partials = partials;\n        }\n    }\n    get partialCount() {\n        return this._oscillator.partialCount;\n    }\n    set partialCount(partialCount) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partialCount = partialCount;\n        }\n    }\n    set(props) {\n        // make sure the type is set first\n        if (Reflect.has(props, \"type\") && props.type) {\n            this.type = props.type;\n        }\n        // then set the rest\n        super.set(props);\n        return this;\n    }\n    /**\n     * connect the oscillator to the frequency and detune signals\n     */\n    _createNewOscillator(oscType) {\n        if (oscType !== this._sourceType) {\n            this._sourceType = oscType;\n            const OscConstructor = OmniOscillatorSourceMap[oscType];\n            // short delay to avoid clicks on the change\n            const now = this.now();\n            if (this._oscillator) {\n                const oldOsc = this._oscillator;\n                oldOsc.stop(now);\n                // dispose the old one\n                this.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n            }\n            this._oscillator = new OscConstructor({\n                context: this.context,\n            });\n            this.frequency.connect(this._oscillator.frequency);\n            this.detune.connect(this._oscillator.detune);\n            this._oscillator.connect(this.output);\n            this._oscillator.onstop = () => this.onstop(this);\n            if (this.state === \"started\") {\n                this._oscillator.start(now);\n            }\n        }\n    }\n    get phase() {\n        return this._oscillator.phase;\n    }\n    set phase(phase) {\n        this._oscillator.phase = phase;\n    }\n    /**\n     * The source type of the oscillator.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n     * console.log(omniOsc.sourceType); // 'fm'\n     */\n    get sourceType() {\n        return this._sourceType;\n    }\n    set sourceType(sType) {\n        // the basetype defaults to sine\n        let baseType = \"sine\";\n        if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n            baseType = this._oscillator.type;\n        }\n        // set the type\n        if (sType === \"fm\") {\n            this.type = \"fm\" + baseType;\n        }\n        else if (sType === \"am\") {\n            this.type = \"am\" + baseType;\n        }\n        else if (sType === \"fat\") {\n            this.type = \"fat\" + baseType;\n        }\n        else if (sType === \"oscillator\") {\n            this.type = baseType;\n        }\n        else if (sType === \"pulse\") {\n            this.type = \"pulse\";\n        }\n        else if (sType === \"pwm\") {\n            this.type = \"pwm\";\n        }\n    }\n    _getOscType(osc, sourceType) {\n        return osc instanceof OmniOscillatorSourceMap[sourceType];\n    }\n    /**\n     * The base type of the oscillator. See [[Oscillator.baseType]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n     * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n     */\n    get baseType() {\n        return this._oscillator.baseType;\n    }\n    set baseType(baseType) {\n        if (!this._getOscType(this._oscillator, \"pulse\") &&\n            !this._getOscType(this._oscillator, \"pwm\") &&\n            baseType !== \"pulse\" && baseType !== \"pwm\") {\n            this._oscillator.baseType = baseType;\n        }\n    }\n    /**\n     * The width of the oscillator when sourceType === \"pulse\".\n     * See [[PWMOscillator.width]]\n     */\n    get width() {\n        if (this._getOscType(this._oscillator, \"pulse\")) {\n            return this._oscillator.width;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The number of detuned oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get count() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set count(count) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n            this._oscillator.count = count;\n        }\n    }\n    /**\n     * The detune spread between the oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get spread() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.spread;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set spread(spread) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n            this._oscillator.spread = spread;\n        }\n    }\n    /**\n     * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get modulationType() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.modulationType;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set modulationType(mType) {\n        if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n            this._oscillator.modulationType = mType;\n        }\n    }\n    /**\n     * The modulation index when the sourceType === \"fm\"\n     * See [[FMOscillator]].\n     */\n    get modulationIndex() {\n        if (this._getOscType(this._oscillator, \"fm\")) {\n            return this._oscillator.modulationIndex;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get harmonicity() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.harmonicity;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n     * see [[PWMOscillator]]\n     * @min 0.1\n     * @max 5\n     */\n    get modulationFrequency() {\n        if (this._getOscType(this._oscillator, \"pwm\")) {\n            return this._oscillator.modulationFrequency;\n        }\n        else {\n            return undefined;\n        }\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.detune.dispose();\n        this.frequency.dispose();\n        this._oscillator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=OmniOscillator.js.map","import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(newValue, min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(this.toSeconds(newValue), min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n//# sourceMappingURL=Decorator.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gong_1.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source {\n    constructor() {\n        super(optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"Player\";\n        /**\n         * All of the active buffer source nodes\n         */\n        this._activeSources = new Set();\n        const options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n        this._buffer = new ToneAudioBuffer({\n            onload: this._onload.bind(this, options.onload),\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        this.autostart = options.autostart;\n        this._loop = options.loop;\n        this._loopStart = options.loopStart;\n        this._loopEnd = options.loopEnd;\n        this._playbackRate = options.playbackRate;\n        this.fadeIn = options.fadeIn;\n        this.fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            autostart: false,\n            fadeIn: 0,\n            fadeOut: 0,\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n            reverse: false,\n        });\n    }\n    /**\n     * Load the audio file as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * Note: this does not need to be called if a url\n     * was passed in to the constructor. Only use this\n     * if you want to manually load a new url.\n     * @param url The url of the buffer to load. Filetype support depends on the browser.\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._buffer.load(url);\n            this._onload();\n            return this;\n        });\n    }\n    /**\n     * Internal callback when the buffer is loaded.\n     */\n    _onload(callback = noOp) {\n        callback();\n        if (this.autostart) {\n            this.start();\n        }\n    }\n    /**\n     * Internal callback when the buffer is done playing.\n     */\n    _onSourceEnd(source) {\n        // invoke the onstop function\n        this.onstop(this);\n        // delete the source from the active sources\n        this._activeSources.delete(source);\n        if (this._activeSources.size === 0 && !this._synced &&\n            this._state.getValueAtTime(this.now()) === \"started\") {\n            // remove the 'implicitEnd' event and replace with an explicit end\n            this._state.cancel(this.now());\n            this._state.setStateAtTime(\"stopped\", this.now());\n        }\n    }\n    /**\n     * Play the buffer at the given startTime. Optionally add an offset\n     * and/or duration which will play the buffer from a position\n     * within the buffer for the given duration.\n     *\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     */\n    start(time, offset, duration) {\n        super.start(time, offset, duration);\n        return this;\n    }\n    /**\n     * Internal start method\n     */\n    _start(startTime, offset, duration) {\n        // if it's a loop the default offset is the loopStart point\n        if (this._loop) {\n            offset = defaultArg(offset, this._loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // compute the values in seconds\n        const computedOffset = this.toSeconds(offset);\n        // compute the duration which is either the passed in duration of the buffer.duration - offset\n        const origDuration = duration;\n        duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n        let computedDuration = this.toSeconds(duration);\n        // scale it by the playback rate\n        computedDuration = computedDuration / this._playbackRate;\n        // get the start time\n        startTime = this.toSeconds(startTime);\n        // make the source\n        const source = new ToneBufferSource({\n            url: this._buffer,\n            context: this.context,\n            fadeIn: this.fadeIn,\n            fadeOut: this.fadeOut,\n            loop: this._loop,\n            loopEnd: this._loopEnd,\n            loopStart: this._loopStart,\n            onended: this._onSourceEnd.bind(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        // set the looping properties\n        if (!this._loop && !this._synced) {\n            // cancel the previous stop\n            this._state.cancel(startTime + computedDuration);\n            // if it's not looping, set the state change at the end of the sample\n            this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n                implicitEnd: true,\n            });\n        }\n        // add it to the array of active sources\n        this._activeSources.add(source);\n        // start it\n        if (this._loop && isUndef(origDuration)) {\n            source.start(startTime, computedOffset);\n        }\n        else {\n            // subtract the fade out time\n            source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n        }\n    }\n    /**\n     * Stop playback.\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(source => source.stop(computedTime));\n    }\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    restart(time, offset, duration) {\n        super.restart(time, offset, duration);\n        return this;\n    }\n    _restart(time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n    }\n    /**\n     * Seek to a specific time in the player's buffer. If the\n     * source is no longer playing at that time, it will stop.\n     * @param offset The time to seek to.\n     * @param when The time for the seek event to occur.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3\", () => {\n     * \tplayer.start();\n     * \t// seek to the offset in 1 second from now\n     * \tplayer.seek(0.4, \"+1\");\n     * }).toDestination();\n     */\n    seek(offset, when) {\n        const computedTime = this.toSeconds(when);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            const computedOffset = this.toSeconds(offset);\n            // if it's currently playing, stop it\n            this._stop(computedTime);\n            // restart it at the given time\n            this._start(computedTime, computedOffset);\n        }\n        return this;\n    }\n    /**\n     * Set the loop start and end. Will only loop if loop is set to true.\n     * @param loopStart The loop start time\n     * @param loopEnd The loop end time\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3\").toDestination();\n     * // loop between the given points\n     * player.setLoopPoints(0.2, 0.3);\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    setLoopPoints(loopStart, loopEnd) {\n        this.loopStart = loopStart;\n        this.loopEnd = loopEnd;\n        return this;\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(loopStart) {\n        this._loopStart = loopStart;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach(source => {\n            source.loopStart = loopStart;\n        });\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = loopEnd;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach(source => {\n            source.loopEnd = loopEnd;\n        });\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/breakbeat.mp3\").toDestination();\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        // if no change, do nothing\n        if (this._loop === loop) {\n            return;\n        }\n        this._loop = loop;\n        // set the loop of all of the sources\n        this._activeSources.forEach(source => {\n            source.loop = loop;\n        });\n        if (loop) {\n            // remove the next stopEvent\n            const stopEvent = this._state.getNextState(\"stopped\", this.now());\n            if (stopEvent) {\n                this._state.cancel(stopEvent.time);\n            }\n        }\n    }\n    /**\n     * Normal speed is 1. The pitch will change with the playback rate.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3\").toDestination();\n     * // play at 1/4 speed\n     * player.playbackRate = 0.25;\n     * // play as soon as the buffer is loaded\n     * player.autostart = true;\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        const now = this.now();\n        // cancel the stop event since it's at a different time now\n        const stopEvent = this._state.getNextState(\"stopped\", now);\n        if (stopEvent && stopEvent.implicitEnd) {\n            this._state.cancel(stopEvent.time);\n            this._activeSources.forEach(source => source.cancelStop());\n        }\n        // set all the sources\n        this._activeSources.forEach(source => {\n            source.playbackRate.setValueAtTime(rate, now);\n        });\n    }\n    /**\n     * If the buffer should be reversed\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/chime_1.mp3\").toDestination();\n     * player.autostart = true;\n     * player.reverse = true;\n     */\n    get reverse() {\n        return this._buffer.reverse;\n    }\n    set reverse(rev) {\n        this._buffer.reverse = rev;\n    }\n    /**\n     * If the buffer is loaded\n     */\n    get loaded() {\n        return this._buffer.loaded;\n    }\n    dispose() {\n        super.dispose();\n        // disconnect all of the players\n        this._activeSources.forEach(source => source.dispose());\n        this._activeSources.clear();\n        this._buffer.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeIn\", void 0);\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeOut\", void 0);\n//# sourceMappingURL=Player.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst env = new Tone.Envelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 0.5,\n * \t\trelease: 0.8,\n * \t}).toDestination();\n * \tenv.triggerAttackRelease(0.5);\n * }, 1.5, 1);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"Envelope\";\n        /**\n         * the signal which is output.\n         */\n        this._sig = new Signal({\n            context: this.context,\n            value: 0,\n        });\n        /**\n         * The output signal of the envelope\n         */\n        this.output = this._sig;\n        /**\n         * Envelope has no input\n         */\n        this.input = undefined;\n        const options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        this.attack = options.attack;\n        this.decay = options.decay;\n        this.sustain = options.sustain;\n        this.release = options.release;\n        this.attackCurve = options.attackCurve;\n        this.releaseCurve = options.releaseCurve;\n        this.decayCurve = options.decayCurve;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.01,\n            attackCurve: \"linear\",\n            decay: 0.1,\n            decayCurve: \"exponential\",\n            release: 1,\n            releaseCurve: \"exponential\",\n            sustain: 0.5,\n        });\n    }\n    /**\n     * Read the current value of the envelope. Useful for\n     * synchronizing visual output to the envelope.\n     */\n    get value() {\n        return this.getValueAtTime(this.now());\n    }\n    /**\n     * Get the curve\n     * @param  curve\n     * @param  direction  In/Out\n     * @return The curve name\n     */\n    _getCurve(curve, direction) {\n        if (isString(curve)) {\n            return curve;\n        }\n        else {\n            // look up the name in the curves array\n            let curveName;\n            for (curveName in EnvelopeCurves) {\n                if (EnvelopeCurves[curveName][direction] === curve) {\n                    return curveName;\n                }\n            }\n            // return the custom curve\n            return curve;\n        }\n    }\n    /**\n     * Assign a the curve to the given name using the direction\n     * @param  name\n     * @param  direction In/Out\n     * @param  curve\n     */\n    _setCurve(name, direction, curve) {\n        // check if it's a valid type\n        if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n            const curveDef = EnvelopeCurves[curve];\n            if (isObject(curveDef)) {\n                if (name !== \"_decayCurve\") {\n                    this[name] = curveDef[direction];\n                }\n            }\n            else {\n                this[name] = curveDef;\n            }\n        }\n        else if (isArray(curve) && name !== \"_decayCurve\") {\n            this[name] = curve;\n        }\n        else {\n            throw new Error(\"Envelope: invalid curve: \" + curve);\n        }\n    }\n    /**\n     * The shape of the attack.\n     * Can be any of these strings:\n     * * \"linear\"\n     * * \"exponential\"\n     * * \"sine\"\n     * * \"cosine\"\n     * * \"bounce\"\n     * * \"ripple\"\n     * * \"step\"\n     *\n     * Can also be an array which describes the curve. Values\n     * in the array are evenly subdivided and linearly\n     * interpolated over the duration of the attack.\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope(0.4).toDestination();\n     * \tenv.attackCurve = \"linear\";\n     * \tenv.triggerAttack();\n     * }, 1, 1);\n     */\n    get attackCurve() {\n        return this._getCurve(this._attackCurve, \"In\");\n    }\n    set attackCurve(curve) {\n        this._setCurve(\"_attackCurve\", \"In\", curve);\n    }\n    /**\n     * The shape of the release. See the attack curve types.\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope({\n     * \t\trelease: 0.8\n     * \t}).toDestination();\n     * \tenv.triggerAttack();\n     * \t// release curve could also be defined by an array\n     * \tenv.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n     * \tenv.triggerRelease(0.2);\n     * }, 1, 1);\n     */\n    get releaseCurve() {\n        return this._getCurve(this._releaseCurve, \"Out\");\n    }\n    set releaseCurve(curve) {\n        this._setCurve(\"_releaseCurve\", \"Out\", curve);\n    }\n    /**\n     * The shape of the decay either \"linear\" or \"exponential\"\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope({\n     * \t\tsustain: 0.1,\n     * \t\tdecay: 0.5\n     * \t}).toDestination();\n     * \tenv.decayCurve = \"linear\";\n     * \tenv.triggerAttack();\n     * }, 1, 1);\n     */\n    get decayCurve() {\n        return this._decayCurve;\n    }\n    set decayCurve(curve) {\n        assert([\"linear\", \"exponential\"].some(c => c === curve), `Invalid envelope curve: ${curve}`);\n        this._decayCurve = curve;\n    }\n    /**\n     * Trigger the attack/decay portion of the ADSR envelope.\n     * @param  time When the attack should start.\n     * @param velocity The velocity of the envelope scales the vales.\n     *                             number between 0-1\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n     * env.triggerAttack(\"+0.5\", 0.2);\n     */\n    triggerAttack(time, velocity = 1) {\n        this.log(\"triggerAttack\", time, velocity);\n        time = this.toSeconds(time);\n        const originalAttack = this.toSeconds(this.attack);\n        let attack = originalAttack;\n        const decay = this.toSeconds(this.decay);\n        // check if it's not a complete attack\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            // subtract the current value from the attack time\n            const attackRate = 1 / attack;\n            const remainingDistance = 1 - currentValue;\n            // the attack is now the remaining time\n            attack = remainingDistance / attackRate;\n        }\n        // attack\n        if (attack < this.sampleTime) {\n            this._sig.cancelScheduledValues(time);\n            // case where the attack time is 0 should set instantly\n            this._sig.setValueAtTime(velocity, time);\n        }\n        else if (this._attackCurve === \"linear\") {\n            this._sig.linearRampTo(velocity, attack, time);\n        }\n        else if (this._attackCurve === \"exponential\") {\n            this._sig.targetRampTo(velocity, attack, time);\n        }\n        else {\n            this._sig.cancelAndHoldAtTime(time);\n            let curve = this._attackCurve;\n            // find the starting position in the curve\n            for (let i = 1; i < curve.length; i++) {\n                // the starting index is between the two values\n                if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n                    curve = this._attackCurve.slice(i);\n                    // the first index is the current value\n                    curve[0] = currentValue;\n                    break;\n                }\n            }\n            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n        }\n        // decay\n        if (decay && this.sustain < 1) {\n            const decayValue = velocity * this.sustain;\n            const decayStart = time + attack;\n            this.log(\"decay\", decayStart);\n            if (this._decayCurve === \"linear\") {\n                this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n            }\n            else {\n                this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n            }\n        }\n        return this;\n    }\n    /**\n     * Triggers the release of the envelope.\n     * @param  time When the release portion of the envelope should start.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator({\n     * \ttype: \"sawtooth\"\n     * }).connect(env).start();\n     * env.triggerAttack();\n     * // trigger the release half a second after the attack\n     * env.triggerRelease(\"+0.5\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        time = this.toSeconds(time);\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            const release = this.toSeconds(this.release);\n            if (release < this.sampleTime) {\n                this._sig.setValueAtTime(0, time);\n            }\n            else if (this._releaseCurve === \"linear\") {\n                this._sig.linearRampTo(0, release, time);\n            }\n            else if (this._releaseCurve === \"exponential\") {\n                this._sig.targetRampTo(0, release, time);\n            }\n            else {\n                assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n                this._sig.cancelAndHoldAtTime(time);\n                this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n            }\n        }\n        return this;\n    }\n    /**\n     * Get the scheduled value at the given time. This will\n     * return the unconverted (raw) value.\n     * @example\n     * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n     * env.triggerAttackRelease(2);\n     * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);\n     */\n    getValueAtTime(time) {\n        return this._sig.getValueAtTime(time);\n    }\n    /**\n     * triggerAttackRelease is shorthand for triggerAttack, then waiting\n     * some duration, then triggerRelease.\n     * @param duration The duration of the sustain.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity of the envelope.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the release 0.5 seconds after the attack\n     * env.triggerAttackRelease(0.5);\n     */\n    triggerAttackRelease(duration, time, velocity = 1) {\n        time = this.toSeconds(time);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + this.toSeconds(duration));\n        return this;\n    }\n    /**\n     * Cancels all scheduled envelope changes after the given time.\n     */\n    cancel(after) {\n        this._sig.cancelScheduledValues(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * Connect the envelope to a destination node.\n     */\n    connect(destination, outputNumber = 0, inputNumber = 0) {\n        connectSignal(this, destination, outputNumber, inputNumber);\n        return this;\n    }\n    /**\n     * Render the envelope curve to an array of the given length.\n     * Good for visualizing the envelope curve. Rescales the duration of the\n     * envelope to fit the length.\n     */\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const duration = length / this.context.sampleRate;\n            const context = new OfflineContext(1, duration, this.context.sampleRate);\n            // normalize the ADSR for the given duration with 20% sustain time\n            const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n            const envelopeDuration = attackPortion + this.toSeconds(this.release);\n            const sustainTime = envelopeDuration * 0.1;\n            const totalDuration = envelopeDuration + sustainTime;\n            // @ts-ignore\n            const clone = new this.constructor(Object.assign(this.get(), {\n                attack: duration * this.toSeconds(this.attack) / totalDuration,\n                decay: duration * this.toSeconds(this.decay) / totalDuration,\n                release: duration * this.toSeconds(this.release) / totalDuration,\n                context\n            }));\n            clone._sig.toDestination();\n            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n            const buffer = yield context.render();\n            return buffer.getChannelData(0);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._sig.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"decay\", void 0);\n__decorate([\n    range(0, 1)\n], Envelope.prototype, \"sustain\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"release\", void 0);\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves = (() => {\n    const curveLen = 128;\n    let i;\n    let k;\n    // cosine curve\n    const cosineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        cosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n    }\n    // ripple curve\n    const rippleCurve = [];\n    const rippleCurveFreq = 6.4;\n    for (i = 0; i < curveLen - 1; i++) {\n        k = (i / (curveLen - 1));\n        const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n        rippleCurve[i] = sineWave / 10 + k * 0.83;\n    }\n    rippleCurve[curveLen - 1] = 1;\n    // stairs curve\n    const stairsCurve = [];\n    const steps = 5;\n    for (i = 0; i < curveLen; i++) {\n        stairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n    }\n    // in-out easing curve\n    const sineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n    // a bounce curve\n    const bounceCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        const freq = Math.pow(k, 3) * 4 + 0.2;\n        const val = Math.cos(freq * Math.PI * 2 * k);\n        bounceCurve[i] = Math.abs(val * (1 - k));\n    }\n    /**\n     * Invert a value curve to make it work for the release\n     */\n    function invertCurve(curve) {\n        const out = new Array(curve.length);\n        for (let j = 0; j < curve.length; j++) {\n            out[j] = 1 - curve[j];\n        }\n        return out;\n    }\n    /**\n     * reverse the curve\n     */\n    function reverseCurve(curve) {\n        return curve.slice(0).reverse();\n    }\n    /**\n     * attack and release curve arrays\n     */\n    return {\n        bounce: {\n            In: invertCurve(bounceCurve),\n            Out: bounceCurve,\n        },\n        cosine: {\n            In: cosineCurve,\n            Out: reverseCurve(cosineCurve),\n        },\n        exponential: \"exponential\",\n        linear: \"linear\",\n        ripple: {\n            In: rippleCurve,\n            Out: invertCurve(rippleCurve),\n        },\n        sine: {\n            In: sineCurve,\n            Out: invertCurve(sineCurve),\n        },\n        step: {\n            In: stairsCurve,\n            Out: invertCurve(stairsCurve),\n        },\n    };\n})();\n//# sourceMappingURL=Envelope.js.map","import { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base-class for all instruments\n */\nexport class Instrument extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Instrument.getDefaults(), arguments));\n        /**\n         * Keep track of all events scheduled to the transport\n         * when the instrument is 'synced'\n         */\n        this._scheduledEvents = [];\n        /**\n         * If the instrument is currently synced\n         */\n        this._synced = false;\n        this._original_triggerAttack = this.triggerAttack;\n        this._original_triggerRelease = this.triggerRelease;\n        const options = optionsFromArguments(Instrument.getDefaults(), arguments);\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            volume: 0,\n        });\n    }\n    /**\n     * Sync the instrument to the Transport. All subsequent calls of\n     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n     * @example\n     * const fmSynth = new Tone.FMSynth().toDestination();\n     * fmSynth.volume.value = -6;\n     * fmSynth.sync();\n     * // schedule 3 notes when the transport first starts\n     * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n     * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n     * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n     * // start the transport to hear the notes\n     * Tone.Transport.start();\n     */\n    sync() {\n        if (this._syncState()) {\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 0);\n        }\n        return this;\n    }\n    /**\n     * set _sync\n     */\n    _syncState() {\n        let changed = false;\n        if (!this._synced) {\n            this._synced = true;\n            changed = true;\n        }\n        return changed;\n    }\n    /**\n     * Wrap the given method so that it can be synchronized\n     * @param method Which method to wrap and sync\n     * @param  timePosition What position the time argument appears in\n     */\n    _syncMethod(method, timePosition) {\n        const originalMethod = this[\"_original_\" + method] = this[method];\n        this[method] = (...args) => {\n            const time = args[timePosition];\n            const id = this.context.transport.schedule((t) => {\n                args[timePosition] = t;\n                originalMethod.apply(this, args);\n            }, time);\n            this._scheduledEvents.push(id);\n        };\n    }\n    /**\n     * Unsync the instrument from the Transport\n     */\n    unsync() {\n        this._scheduledEvents.forEach(id => this.context.transport.clear(id));\n        this._scheduledEvents = [];\n        if (this._synced) {\n            this._synced = false;\n            this.triggerAttack = this._original_triggerAttack;\n            this.triggerRelease = this._original_triggerRelease;\n        }\n        return this;\n    }\n    /**\n     * Trigger the attack and then the release after the duration.\n     * @param  note     The note to trigger.\n     * @param  duration How long the note should be held for before\n     *                         triggering the release. This value must be greater than 0.\n     * @param time  When the note should be triggered.\n     * @param  velocity The velocity the note should be triggered at.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger \"C4\" for the duration of an 8th note\n     * synth.triggerAttackRelease(\"C4\", \"8n\");\n     */\n    triggerAttackRelease(note, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        const computedDuration = this.toSeconds(duration);\n        this.triggerAttack(note, computedTime, velocity);\n        this.triggerRelease(computedTime + computedDuration);\n        return this;\n    }\n    /**\n     * clean up\n     * @returns {Instrument} this\n     */\n    dispose() {\n        super.dispose();\n        this._volume.dispose();\n        this.unsync();\n        this._scheduledEvents = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Instrument.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { timeRange } from \"../core/util/Decorator\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport class Monophonic extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Monophonic.getDefaults(), arguments));\n        const options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n        this.portamento = options.portamento;\n        this.onsilence = options.onsilence;\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            detune: 0,\n            onsilence: noOp,\n            portamento: 0,\n        });\n    }\n    /**\n     * Trigger the attack of the note optionally with a given velocity.\n     * @param  note The note to trigger.\n     * @param  time When the note should start.\n     * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger the note a half second from now at half velocity\n     * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n     */\n    triggerAttack(note, time, velocity = 1) {\n        this.log(\"triggerAttack\", note, time, velocity);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeAttack(seconds, velocity);\n        this.setNote(note, seconds);\n        return this;\n    }\n    /**\n     * Trigger the release portion of the envelope\n     * @param  time If no time is given, the release happens immediatly\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // trigger the release a second from now\n     * synth.triggerRelease(\"+1\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeRelease(seconds);\n        return this;\n    }\n    /**\n     * Set the note at the given time. If no time is given, the note\n     * will set immediately.\n     * @param note The note to change to.\n     * @param  time The time when the note should be set.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // change to F#6 in one quarter note from now.\n     * synth.setNote(\"F#6\", \"+4n\");\n     */\n    setNote(note, time) {\n        const computedTime = this.toSeconds(time);\n        const computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n            const portTime = this.toSeconds(this.portamento);\n            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n        }\n        else {\n            this.frequency.setValueAtTime(computedFrequency, computedTime);\n        }\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Monophonic.prototype, \"portamento\", void 0);\n//# sourceMappingURL=Monophonic.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst ampEnv = new Tone.AmplitudeEnvelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 1.0,\n * \t\trelease: 0.8\n * \t}).toDestination();\n * \t// create an oscillator and connect it\n * \tconst osc = new Tone.Oscillator().connect(ampEnv).start();\n * \t// trigger the envelopes attack and release \"8t\" apart\n * \tampEnv.triggerAttackRelease(\"8t\");\n * }, 1.5, 1);\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n    constructor() {\n        super(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"AmplitudeEnvelope\";\n        this._gainNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n        this._sig.connect(this._gainNode.gain);\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AmplitudeEnvelope.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(Synth.getDefaults(), arguments));\n        this.name = \"Synth\";\n        const options = optionsFromArguments(Synth.getDefaults(), arguments);\n        this.oscillator = new OmniOscillator(Object.assign({\n            context: this.context,\n            detune: options.detune,\n            onstop: () => this.onsilence(this),\n        }, options.oscillator));\n        this.frequency = this.oscillator.frequency;\n        this.detune = this.oscillator.detune;\n        this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: this.context,\n        }, options.envelope));\n        // connect the oscillators to the output\n        this.oscillator.chain(this.envelope, this.output);\n        readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.3,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]), {\n                type: \"triangle\",\n            }),\n        });\n    }\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        this.oscillator.start(time);\n        // if there is no release portion, stop the oscillator\n        if (this.envelope.sustain === 0) {\n            const computedAttack = this.toSeconds(this.envelope.attack);\n            const computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Synth.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth {\n    constructor() {\n        super(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n        this.name = \"MembraneSynth\";\n        /**\n         * Portamento is ignored in this synth. use pitch decay instead.\n         */\n        this.portamento = 0;\n        const options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n        this.pitchDecay = options.pitchDecay;\n        this.octaves = options.octaves;\n        readOnly(this, [\"oscillator\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n            envelope: {\n                attack: 0.001,\n                attackCurve: \"exponential\",\n                decay: 0.4,\n                release: 1.4,\n                sustain: 0.01,\n            },\n            octaves: 10,\n            oscillator: {\n                type: \"sine\",\n            },\n            pitchDecay: 0.05,\n        });\n    }\n    setNote(note, time) {\n        const seconds = this.toSeconds(time);\n        const hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n        const maxNote = hertz * this.octaves;\n        this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n        this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        return this;\n    }\n}\n__decorate([\n    range(0)\n], MembraneSynth.prototype, \"octaves\", void 0);\n__decorate([\n    timeRange(0)\n], MembraneSynth.prototype, \"pitchDecay\", void 0);\n//# sourceMappingURL=MembraneSynth.js.map","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext = new Set();\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction) {\n    workletContext.add(classOrFunction);\n}\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name, classDesc) {\n    const processor = /* javascript */ `registerProcessor(\"${name}\", ${classDesc})`;\n    workletContext.add(processor);\n}\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope() {\n    return Array.from(workletContext).join(\"\\n\");\n}\n//# sourceMappingURL=WorkletGlobalScope.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\naddToWorklet(toneAudioWorkletProcessor);\n//# sourceMappingURL=ToneAudioWorkletProcessor.worklet.js.map","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\naddToWorklet(singleIOProcess);\n//# sourceMappingURL=SingleIOProcessor.worklet.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\naddToWorklet(delayLine);\n//# sourceMappingURL=DelayLine.worklet.js.map","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"feedback-comb-filter\";\nconst feedbackCombFilter = /* javascript */ `\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, feedbackCombFilter);\n//# sourceMappingURL=FeedbackCombFilter.worklet.js.map","import { MidiClass } from \"../core/type/Midi\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"./Instrument\";\nimport { Synth } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second paramter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\nexport class PolySynth extends Instrument {\n    constructor() {\n        super(optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]));\n        this.name = \"PolySynth\";\n        /**\n         * The voices which are not currently in use\n         */\n        this._availableVoices = [];\n        /**\n         * The currently active voices\n         */\n        this._activeVoices = [];\n        /**\n         * All of the allocated voices for this synth.\n         */\n        this._voices = [];\n        /**\n         * The GC timeout. Held so that it could be cancelled when the node is disposed.\n         */\n        this._gcTimeout = -1;\n        /**\n         * A moving average of the number of active voices\n         */\n        this._averageActiveVoices = 0;\n        const options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]);\n        // check against the old API (pre 14.3.0)\n        assert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n        const defaults = options.voice.getDefaults();\n        this.options = Object.assign(defaults, options.options);\n        this.voice = options.voice;\n        this.maxPolyphony = options.maxPolyphony;\n        // create the first voice\n        this._dummyVoice = this._getNextAvailableVoice();\n        // remove it from the voices list\n        const index = this._voices.indexOf(this._dummyVoice);\n        this._voices.splice(index, 1);\n        // kick off the GC interval\n        this._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            maxPolyphony: 32,\n            options: {},\n            voice: Synth,\n        });\n    }\n    /**\n     * The number of active voices.\n     */\n    get activeVoices() {\n        return this._activeVoices.length;\n    }\n    /**\n     * Invoked when the source is done making sound, so that it can be\n     * readded to the pool of available voices\n     */\n    _makeVoiceAvailable(voice) {\n        this._availableVoices.push(voice);\n        // remove the midi note from 'active voices'\n        const activeVoiceIndex = this._activeVoices.findIndex((e) => e.voice === voice);\n        this._activeVoices.splice(activeVoiceIndex, 1);\n    }\n    /**\n     * Get an available voice from the pool of available voices.\n     * If one is not available and the maxPolyphony limit is reached,\n     * steal a voice, otherwise return null.\n     */\n    _getNextAvailableVoice() {\n        // if there are available voices, return the first one\n        if (this._availableVoices.length) {\n            return this._availableVoices.shift();\n        }\n        else if (this._voices.length < this.maxPolyphony) {\n            // otherwise if there is still more maxPolyphony, make a new voice\n            const voice = new this.voice(Object.assign(this.options, {\n                context: this.context,\n                onsilence: this._makeVoiceAvailable.bind(this),\n            }));\n            voice.connect(this.output);\n            this._voices.push(voice);\n            return voice;\n        }\n        else {\n            warn(\"Max polyphony exceeded. Note dropped.\");\n        }\n    }\n    /**\n     * Occasionally check if there are any allocated voices which can be cleaned up.\n     */\n    _collectGarbage() {\n        this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n        if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n            // take off an available note\n            const firstAvail = this._availableVoices.shift();\n            const index = this._voices.indexOf(firstAvail);\n            this._voices.splice(index, 1);\n            if (!this.context.isOffline) {\n                firstAvail.dispose();\n            }\n        }\n    }\n    /**\n     * Internal method which triggers the attack\n     */\n    _triggerAttack(notes, time, velocity) {\n        notes.forEach(note => {\n            const midiNote = new MidiClass(this.context, note).toMidi();\n            const voice = this._getNextAvailableVoice();\n            if (voice) {\n                voice.triggerAttack(note, time, velocity);\n                this._activeVoices.push({\n                    midi: midiNote, voice, released: false,\n                });\n                this.log(\"triggerAttack\", note, time);\n            }\n        });\n    }\n    /**\n     * Internal method which triggers the release\n     */\n    _triggerRelease(notes, time) {\n        notes.forEach(note => {\n            const midiNote = new MidiClass(this.context, note).toMidi();\n            const event = this._activeVoices.find(({ midi, released }) => midi === midiNote && !released);\n            if (event) {\n                // trigger release on that note\n                event.voice.triggerRelease(time);\n                // mark it as released\n                event.released = true;\n                this.log(\"triggerRelease\", note, time);\n            }\n        });\n    }\n    /**\n     * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n     * to wait for just-in-time scheduling\n     */\n    _scheduleEvent(type, notes, time, velocity) {\n        assert(!this.disposed, \"Synth was already disposed\");\n        // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n        if (time <= this.now()) {\n            // do it immediately\n            if (type === \"attack\") {\n                this._triggerAttack(notes, time, velocity);\n            }\n            else {\n                this._triggerRelease(notes, time);\n            }\n        }\n        else {\n            // schedule it to start in the future\n            this.context.setTimeout(() => {\n                this._scheduleEvent(type, notes, time, velocity);\n            }, time - this.now());\n        }\n    }\n    /**\n     * Trigger the attack portion of the note\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  The start time of the note.\n     * @param velocity The velocity of the note.\n     * @example\n     * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();\n     * // trigger a chord immediately with a velocity of 0.2\n     * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], Tone.now(), 0.2);\n     */\n    triggerAttack(notes, time, velocity) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        const computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"attack\", notes, computedTime, velocity);\n        return this;\n    }\n    /**\n     * Trigger the release of the note. Unlike monophonic instruments,\n     * a note (or array of notes) needs to be passed in as the first argument.\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  When the release will be triggered.\n     * @example\n     * @example\n     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n     * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n     * // trigger the release of the given notes.\n     * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n     * poly.triggerRelease(\"F5\", \"+3\");\n     */\n    triggerRelease(notes, time) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        const computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"release\", notes, computedTime);\n        return this;\n    }\n    /**\n     * Trigger the attack and release after the specified duration\n     * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n     * @param  duration the duration of the note\n     * @param  time  if no time is given, defaults to now\n     * @param  velocity the velocity of the attack (0-1)\n     * @example\n     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n     * // can pass in an array of durations as well\n     * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n     */\n    triggerAttackRelease(notes, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n            notes = notes;\n            for (let i = 0; i < notes.length; i++) {\n                const d = duration[Math.min(i, duration.length - 1)];\n                const durationSeconds = this.toSeconds(d);\n                assert(durationSeconds > 0, \"The duration must be greater than 0\");\n                this.triggerRelease(notes[i], computedTime + durationSeconds);\n            }\n        }\n        else {\n            const durationSeconds = this.toSeconds(duration);\n            assert(durationSeconds > 0, \"The duration must be greater than 0\");\n            this.triggerRelease(notes, computedTime + durationSeconds);\n        }\n        return this;\n    }\n    sync() {\n        if (this._syncState()) {\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 1);\n        }\n        return this;\n    }\n    /**\n     * Set a member/attribute of the voices\n     * @example\n     * const poly = new Tone.PolySynth().toDestination();\n     * // set all of the voices using an options object for the synth type\n     * poly.set({\n     * \tenvelope: {\n     * \t\tattack: 0.25\n     * \t}\n     * });\n     * poly.triggerAttackRelease(\"Bb3\", 0.2);\n     */\n    set(options) {\n        // remove options which are controlled by the PolySynth\n        const sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]);\n        // store all of the options\n        this.options = deepMerge(this.options, sanitizedOptions);\n        this._voices.forEach(voice => voice.set(sanitizedOptions));\n        this._dummyVoice.set(sanitizedOptions);\n        return this;\n    }\n    get() {\n        return this._dummyVoice.get();\n    }\n    /**\n     * Trigger the release portion of all the currently active voices immediately.\n     * Useful for silencing the synth.\n     */\n    releaseAll(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeVoices.forEach(({ voice }) => {\n            voice.triggerRelease(computedTime);\n        });\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._dummyVoice.dispose();\n        this._voices.forEach(v => v.dispose());\n        this._activeVoices = [];\n        this._availableVoices = [];\n        this.context.clearInterval(this._gcTimeout);\n        return this;\n    }\n}\n//# sourceMappingURL=PolySynth.js.map","import { __decorate } from \"tslib\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { ftomf, intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tA1: \"A1.mp3\",\n * \t\tA2: \"A2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t}\n * }).toDestination();\n * @category Instrument\n */\nexport class Sampler extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n        this.name = \"Sampler\";\n        /**\n         * The object of all currently playing BufferSources\n         */\n        this._activeSources = new Map();\n        const options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        const urlMap = {};\n        Object.keys(options.urls).forEach((note) => {\n            const noteNumber = parseInt(note, 10);\n            assert(isNote(note)\n                || (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n            if (isNote(note)) {\n                // convert the note name to MIDI\n                const mid = new FrequencyClass(this.context, note).toMidi();\n                urlMap[mid] = options.urls[note];\n            }\n            else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n                // otherwise if it's numbers assume it's midi\n                urlMap[noteNumber] = options.urls[noteNumber];\n            }\n        });\n        this._buffers = new ToneAudioBuffers({\n            urls: urlMap,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror,\n        });\n        this.attack = options.attack;\n        this.release = options.release;\n        this.curve = options.curve;\n        // invoke the callback if it's already loaded\n        if (this._buffers.loaded) {\n            // invoke onload deferred\n            Promise.resolve().then(options.onload);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            attack: 0,\n            baseUrl: \"\",\n            curve: \"exponential\",\n            onload: noOp,\n            onerror: noOp,\n            release: 0.1,\n            urls: {},\n        });\n    }\n    /**\n     * Returns the difference in steps between the given midi note at the closets sample.\n     */\n    _findClosest(midi) {\n        // searches within 8 octaves of the given midi note\n        const MAX_INTERVAL = 96;\n        let interval = 0;\n        while (interval < MAX_INTERVAL) {\n            // check above and below\n            if (this._buffers.has(midi + interval)) {\n                return -interval;\n            }\n            else if (this._buffers.has(midi - interval)) {\n                return interval;\n            }\n            interval++;\n        }\n        throw new Error(`No available buffers for note: ${midi}`);\n    }\n    /**\n     * @param  notes\tThe note to play, or an array of notes.\n     * @param  time     When to play the note\n     * @param  velocity The velocity to play the sample back.\n     */\n    triggerAttack(notes, time, velocity = 1) {\n        this.log(\"triggerAttack\", notes, time, velocity);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n            const midi = Math.round(midiFloat);\n            const remainder = midiFloat - midi;\n            // find the closest note pitch\n            const difference = this._findClosest(midi);\n            const closestNote = midi - difference;\n            const buffer = this._buffers.get(closestNote);\n            const playbackRate = intervalToFrequencyRatio(difference + remainder);\n            // play that note\n            const source = new ToneBufferSource({\n                url: buffer,\n                context: this.context,\n                curve: this.curve,\n                fadeIn: this.attack,\n                fadeOut: this.release,\n                playbackRate,\n            }).connect(this.output);\n            source.start(time, 0, buffer.duration / playbackRate, velocity);\n            // add it to the active sources\n            if (!isArray(this._activeSources.get(midi))) {\n                this._activeSources.set(midi, []);\n            }\n            this._activeSources.get(midi).push(source);\n            // remove it when it's done\n            source.onended = () => {\n                if (this._activeSources && this._activeSources.has(midi)) {\n                    const sources = this._activeSources.get(midi);\n                    const index = sources.indexOf(source);\n                    if (index !== -1) {\n                        sources.splice(index, 1);\n                    }\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * @param  notes\tThe note to release, or an array of notes.\n     * @param  time     \tWhen to release the note.\n     */\n    triggerRelease(notes, time) {\n        this.log(\"triggerRelease\", notes, time);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midi = new FrequencyClass(this.context, note).toMidi();\n            // find the note\n            if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {\n                const sources = this._activeSources.get(midi);\n                time = this.toSeconds(time);\n                sources.forEach(source => {\n                    source.stop(time);\n                });\n                this._activeSources.set(midi, []);\n            }\n        });\n        return this;\n    }\n    /**\n     * Release all currently active notes.\n     * @param  time     \tWhen to release the notes.\n     */\n    releaseAll(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(sources => {\n            while (sources.length) {\n                const source = sources.shift();\n                source.stop(computedTime);\n            }\n        });\n        return this;\n    }\n    sync() {\n        if (this._syncState()) {\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 1);\n        }\n        return this;\n    }\n    /**\n     * Invoke the attack phase, then after the duration, invoke the release.\n     * @param  notes\tThe note to play and release, or an array of notes.\n     * @param  duration The time the note should be held\n     * @param  time     When to start the attack\n     * @param  velocity The velocity of the attack\n     */\n    triggerAttackRelease(notes, duration, time, velocity = 1) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"notes must be an array when duration is array\");\n            notes.forEach((note, index) => {\n                const d = duration[Math.min(index, duration.length - 1)];\n                this.triggerRelease(note, computedTime + this.toSeconds(d));\n            });\n        }\n        else {\n            this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n        }\n        return this;\n    }\n    /**\n     * Add a note to the sampler.\n     * @param  note      The buffer's pitch.\n     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     */\n    add(note, url, callback) {\n        assert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n        if (isNote(note)) {\n            // convert the note name to MIDI\n            const mid = new FrequencyClass(this.context, note).toMidi();\n            this._buffers.add(mid, url, callback);\n        }\n        else {\n            // otherwise if it's numbers assume it's midi\n            this._buffers.add(note, url, callback);\n        }\n        return this;\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return this._buffers.loaded;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffers.dispose();\n        this._activeSources.forEach(sources => {\n            sources.forEach(source => source.dispose());\n        });\n        this._activeSources.clear();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"release\", void 0);\n//# sourceMappingURL=Sampler.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * return Tone.Offline(() => {\n * // move the input signal from right to left\n * \tconst panner = new Tone.Panner(1).toDestination();\n * \tpanner.pan.rampTo(-1, 0.5);\n * \tconst osc = new Tone.Oscillator(100).connect(panner).start();\n * }, 0.5, 2);\n * @category Component\n */\nexport class Panner extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n        this.name = \"Panner\";\n        /**\n         * the panner node\n         */\n        this._panner = this.context.createStereoPanner();\n        this.input = this._panner;\n        this.output = this._panner;\n        const options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n        this.pan = new Param({\n            context: this.context,\n            param: this._panner.pan,\n            value: options.pan,\n            minValue: -1,\n            maxValue: 1,\n        });\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        this._panner.channelCount = options.channelCount;\n        this._panner.channelCountMode = \"explicit\";\n        // initial value\n        readOnly(this, \"pan\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            channelCount: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._panner.disconnect();\n        this.pan.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Panner.js.map","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"bit-crusher\";\nexport const bitCrusherWorklet = /* javascript */ `\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, bitCrusherWorklet);\n//# sourceMappingURL=BitCrusher.worklet.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n        this.name = \"Solo\";\n        const options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n        });\n        if (!Solo._allSolos.has(this.context)) {\n            Solo._allSolos.set(this.context, new Set());\n        }\n        Solo._allSolos.get(this.context).add(this);\n        // set initially\n        this.solo = options.solo;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            solo: false,\n        });\n    }\n    /**\n     * Isolates this instance and mutes all other instances of Solo.\n     * Only one instance can be soloed at a time. A soloed\n     * instance will report `solo=false` when another instance is soloed.\n     */\n    get solo() {\n        return this._isSoloed();\n    }\n    set solo(solo) {\n        if (solo) {\n            this._addSolo();\n        }\n        else {\n            this._removeSolo();\n        }\n        Solo._allSolos.get(this.context).forEach(instance => instance._updateSolo());\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed\n     */\n    get muted() {\n        return this.input.gain.value === 0;\n    }\n    /**\n     * Add this to the soloed array\n     */\n    _addSolo() {\n        if (!Solo._soloed.has(this.context)) {\n            Solo._soloed.set(this.context, new Set());\n        }\n        Solo._soloed.get(this.context).add(this);\n    }\n    /**\n     * Remove this from the soloed array\n     */\n    _removeSolo() {\n        if (Solo._soloed.has(this.context)) {\n            Solo._soloed.get(this.context).delete(this);\n        }\n    }\n    /**\n     * Is this on the soloed array\n     */\n    _isSoloed() {\n        return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n    }\n    /**\n     * Returns true if no one is soloed\n     */\n    _noSolos() {\n        // either does not have any soloed added\n        return !Solo._soloed.has(this.context) ||\n            // or has a solo set but doesn't include any items\n            (Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0);\n    }\n    /**\n     * Solo the current instance and unsolo all other instances.\n     */\n    _updateSolo() {\n        if (this._isSoloed()) {\n            this.input.gain.value = 1;\n        }\n        else if (this._noSolos()) {\n            // no one is soloed\n            this.input.gain.value = 1;\n        }\n        else {\n            this.input.gain.value = 0;\n        }\n    }\n    dispose() {\n        super.dispose();\n        Solo._allSolos.get(this.context).delete(this);\n        this._removeSolo();\n        return this;\n    }\n}\n/**\n * Hold all of the solo'ed tracks belonging to a specific context\n */\nSolo._allSolos = new Map();\n/**\n * Hold the currently solo'ed instance(s)\n */\nSolo._soloed = new Map();\n//# sourceMappingURL=Solo.js.map","import { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n        this.name = \"PanVol\";\n        const options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n        this._panner = this.input = new Panner({\n            context: this.context,\n            pan: options.pan,\n            channelCount: options.channelCount,\n        });\n        this.pan = this._panner.pan;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        // connections\n        this._panner.connect(this._volume);\n        this.mute = options.mute;\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            pan: 0,\n            volume: 0,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    dispose() {\n        super.dispose();\n        this._panner.dispose();\n        this.pan.dispose();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PanVol.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls.\n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n        this.name = \"Channel\";\n        const options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n        this._solo = this.input = new Solo({\n            solo: options.solo,\n            context: this.context,\n        });\n        this._panVol = this.output = new PanVol({\n            context: this.context,\n            pan: options.pan,\n            volume: options.volume,\n            mute: options.mute,\n            channelCount: options.channelCount\n        });\n        this.pan = this._panVol.pan;\n        this.volume = this._panVol.volume;\n        this._solo.connect(this._panVol);\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            volume: 0,\n            mute: false,\n            solo: false,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n     */\n    get solo() {\n        return this._solo.solo;\n    }\n    set solo(solo) {\n        this._solo.solo = solo;\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed,\n     * or the channel is muted\n     */\n    get muted() {\n        return this._solo.muted || this.mute;\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._panVol.mute;\n    }\n    set mute(mute) {\n        this._panVol.mute = mute;\n    }\n    /**\n     * Get the gain node belonging to the bus name. Create it if\n     * it doesn't exist\n     * @param name The bus name\n     */\n    _getBus(name) {\n        if (!Channel.buses.has(name)) {\n            Channel.buses.set(name, new Gain({ context: this.context }));\n        }\n        return Channel.buses.get(name);\n    }\n    /**\n     * Send audio to another channel using a string. `send` is a lot like\n     * [[connect]], except it uses a string instead of an object. This can\n     * be useful in large applications to decouple sections since [[send]]\n     * and [[receive]] can be invoked separately in order to connect an object\n     * @param name The channel name to send the audio\n     * @param volume The amount of the signal to send.\n     * \tDefaults to 0db, i.e. send the entire signal\n     * @returns Returns the gain node of this connection.\n     */\n    send(name, volume = 0) {\n        const bus = this._getBus(name);\n        const sendKnob = new Gain({\n            context: this.context,\n            units: \"decibels\",\n            gain: volume,\n        });\n        this.connect(sendKnob);\n        sendKnob.connect(bus);\n        return sendKnob;\n    }\n    /**\n     * Receive audio from a channel which was connected with [[send]].\n     * @param name The channel name to receive audio from.\n     */\n    receive(name) {\n        const bus = this._getBus(name);\n        bus.connect(this);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._panVol.dispose();\n        this.pan.dispose();\n        this.volume.dispose();\n        this._solo.dispose();\n        return this;\n    }\n}\n/**\n * Store the send/receive channels by name.\n */\nChannel.buses = new Map();\n//# sourceMappingURL=Channel.js.map","import { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\nexport class Listener extends ToneAudioNode {\n    constructor() {\n        super(...arguments);\n        this.name = \"Listener\";\n        this.positionX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionZ,\n        });\n        this.forwardX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardX,\n        });\n        this.forwardY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardY,\n        });\n        this.forwardZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardZ,\n        });\n        this.upX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upX,\n        });\n        this.upY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upY,\n        });\n        this.upZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            forwardX: 0,\n            forwardY: 0,\n            forwardZ: -1,\n            upX: 0,\n            upY: 1,\n            upZ: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        this.forwardX.dispose();\n        this.forwardY.dispose();\n        this.forwardZ.dispose();\n        this.upX.dispose();\n        this.upY.dispose();\n        this.upZ.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.listener = new Listener({ context });\n});\nonContextClose(context => {\n    context.listener.dispose();\n});\n//# sourceMappingURL=Listener.js.map","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport function now() {\n    return getContext().now();\n}\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate() {\n    return getContext().immediate();\n}\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport() {\n    return getContext().transport;\n}\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination() {\n    return getContext().destination;\n}\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener() {\n    return getContext().listener;\n}\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n/**\n * Get the singleton attached to the global context.\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport function getDraw() {\n    return getContext().draw;\n}\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n    return ToneAudioBuffer.loaded();\n}\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer = ToneAudioBuffer;\nexport const Buffers = ToneAudioBuffers;\nexport const BufferSource = ToneBufferSource;\n//# sourceMappingURL=index.js.map","import { Subject }                      from 'rxjs/Subject'\nimport { currentTonality$, tonalities } from './tonality.js'\nimport * as Tone from 'tone'\n\n\nlet gSynth = null\n\nfunction synth () {\n  return gSynth || (gSynth = new Tone.PolySynth().toDestination())\n}\n\nexport const soundOut$ = new Subject()\n\nsoundOut$.subscribe((sound) => {\n  synth().volume.value = 0 // Normalize it from whatever it was\n  synth().triggerAttackRelease(sound.frequency, sound.duration, undefined, sound.velocity)\n  synth().volume.value = sound.volume\n})\n\n\nexport const newSoundData = normalized => {\n  const tonality  = normalized.tonality || currentTonality$.getValue()\n  const frequency = tonalities[tonality](normalized.mag)\n  return {\n    frequency,\n    volume:   normalized.sz * 20,   // 0.0 .. 1.0  => 30 .. 70\n    velocity: 1 - normalized.sz,\n    duration: normalized.sz,\n  }\n}\n","/*eslint-env browser */\nimport {Observable} from 'rxjs/Observable'\nimport 'rxjs/add/observable/combineLatest'\nimport 'rxjs/add/observable/from'\nimport 'rxjs/add/operator/combineLatest'\nimport 'rxjs/add/operator/mergeMap'\nimport 'rxjs/add/operator/concat'\nimport 'rxjs/add/operator/startWith'\nimport 'rxjs/add/operator/share'\n\n\n/**\n * makeDraggable\n *\n * @param draggableCntr -- element in which to watch for drags\n * @param mapDraggable -- given an element that the mouse is over, return an element that\n *                        is draggable. Return `null` if not draggable.\n * @param mapDropTarget -- given mouse position and the dragged element, return an element that can be dropped on, or null\n * @param createOutlineEl -- create an element that is explicitly sized and can\n *                be used to represent the outline of the object as it is dragged\n * @returns {Observable} of commands reflecting the drag in process\n */\nexport const ACTION_DRAG_START = 'dragstart',\nACTION_DRAG_MOVE               = 'drag',\nACTION_DRAG_END                = 'dragend'\n\n\nexport function makeDraggable({\n  draggableCntr,\n  mapDraggable,\n  mapDropTarget,\n  createOutlineEl}) {\n\n\n  const mouseup$   = Observable.fromEvent(document, 'mouseup'),\n        mousemove$ = Observable.fromEvent(document, 'mousemove'),\n        mousedown$ = Observable.fromEvent(draggableCntr, 'mousedown')\n\n  return mousedown$\n    .filter(e => !!mapDraggable(e.target, e))\n    .mergeMap(function(e) {\n                const el              = mapDraggable(e.target, e),\n                      start           = {x: e.clientX, y: e.clientY},\n                      startMs         = (new Date()).getTime(),\n                      outline         = createOutlineEl(el),\n                      originalTopLeft = {x: el.getClientRects()[0].left, y: el.getClientRects()[0].top},\n                      body            = document.getElementsByTagName('BODY')[0]\n\n                body.appendChild(outline)\n\n                function moveOutlineTo(offset) {\n                  outline.style.left = `${originalTopLeft.x + offset.x}px`\n                  outline.style.top  = `${originalTopLeft.y + offset.y}px`\n                }\n\n                const dragAction$ = Observable\n                        .from([e])\n                        .merge(mousemove$)\n                  .map((mme) => {\n                         return {\n                           name:   ACTION_DRAG_MOVE,\n                           dest:   mapDropTarget({\n                             x: mme.clientX,\n                             y: mme.clientY\n                           }, el),\n                           ms:     (new Date()).getTime() - startMs,\n                           offset: {x: mme.clientX - start.x, y: mme.clientY - start.y},\n                                   el,\n                                   outline\n                         }\n                       })\n                  .do(action => moveOutlineTo(action.offset))\n                  .distinctUntilChanged(function(a, b) {\n                                          return a === b ||\n                                                 (a !== null && b !== null && a.offset == b.offset)\n                                        })\n\n\n                const finishAction$ = Observable\n                  .from([{name: ACTION_DRAG_END}])\n                  .do(() => outline.parentNode.removeChild(outline))\n\n                return dragAction$\n                  .takeUntil(mouseup$)\n                  .concat(finishAction$)\n                  .withLatestFrom(dragAction$, (action, dragAction)=> {\n                                    if (action.name !== ACTION_DRAG_END) return action\n                                    return Object.assign({}, dragAction, action)\n                                  })\n                  .startWith({name: ACTION_DRAG_START, el: el})\n              })\n    .share()\n\n}\n","/*eslint-env browser */\nimport { patternStore$ } from './pattern-store.js'\nimport { editorCmdBus$ } from './editor.js'\n\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject'\nimport {newDeck} from './deck.js'\n\nconst renderPattern = function(pattern, cntr) {\n  cntr.innerHTML = pattern.svg\n}\n\nconst patternListCtx$ = new BehaviorSubject({\n  domCntr:    document.getElementById('drawer'),\n  renderItem: renderPattern\n})\n\nconst event$ = newDeck(patternListCtx$, patternStore$)\n\n// INTENTIONS\nevent$\n    .do(x => console.log('received event: ', x))\n    .filter(x => x.name == 'load')\n    .withLatestFrom(patternStore$, (e, patterns) => patterns[e.key])\n    .map(pattern => {\n           return {pattern, name: 'add pattern'}\n         })\n    .subscribe(editorCmdBus$)\n\nevent$\n    .do(x => console.log('received event: ', x))\n    .filter(x => x.name == 'delete')\n    .subscribe(editorCmdBus$)\n\n","/*eslint-env browser */\n\nimport 'rxjs/add/observable/combineLatest'\nimport 'rxjs/add/observable/from'\nimport 'rxjs/add/observable/range'\nimport 'rxjs/add/operator/combineLatest'\nimport 'rxjs/add/operator/mergeMap'\nimport 'rxjs/add/operator/bufferCount'\nimport 'rxjs/add/operator/concat'\nimport 'rxjs/add/operator/startWith'\nimport 'rxjs/add/operator/share'\nimport 'rxjs/add/operator/buffer'\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject'\nimport { Subject } from 'rxjs/Subject'\n\nimport { ptInRect, ptInInscribedCircle } from './lib/ndp-software/util.js'\n\nimport {\n  makeDraggable,\n  ACTION_DRAG_START,\n  ACTION_DRAG_MOVE,\n  ACTION_DRAG_END\n} from './draggable'\n\n//  returns events\nexport function newDeck(drawingCtx$, model$) {\n\n  // MODEL\n  const focus$ = new BehaviorSubject(null)\n  const state$ = focus$.combineLatest(model$, (focus, model)  => ({focus, model}))\n  const event$ = new Subject() // events we are returning, with 'load', 'delete', 'focus'\n\n  // VIEW\n  function findOrCreateListEl(domCntr) {\n    let listEl = domCntr.getElementsByClassName('deck')[0]\n    if (!listEl) {\n      listEl           = document.createElement('UL')\n      listEl.className = 'deck'\n      domCntr.appendChild(listEl)\n    }\n    return listEl\n  }\n\n  function findOrCreateListItem(model, listEl, precedingItemEl) {\n    let itemCntrEl = null,\n        itemEl     = document.querySelector(`[data-key='${model.key}']`)\n    if (itemEl) {\n      itemCntrEl = itemEl.children[0]\n    } else {\n      itemEl = document.createElement('LI')\n      itemEl.setAttribute('data-key', model.key)\n      listEl.insertBefore(itemEl, precedingItemEl)\n\n      itemCntrEl = document.createElement('DIV')\n      itemEl.appendChild(itemCntrEl)\n\n      appendNameSpan(model.name, itemEl)\n    }\n\n    itemEl.className = model.focused ? 'focus' : ''\n    return itemCntrEl\n  }\n\n  function appendNameSpan(name, cntrEl) {\n    const nameEl     = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n    nameEl.setAttributeNS('xmlns', 'xlink', 'http://www.w3.org/1999/xlink')\n    nameEl.setAttribute('version', '1.1')\n    nameEl.setAttribute('x', '0px')\n    nameEl.setAttribute('y', '0px')\n    nameEl.setAttribute('class', 'name')\n    nameEl.setAttribute('viewBox', '0 0 300 300')\n    nameEl.setAttribute('enable-background', 'new 0 0 300 300')\n    nameEl.innerHTML = `\n    <defs>\n        <path id=\"name-circle-path\" d=\"M 150, 150 m -120, 0 a 120,120 0 0,1 240,0 a 120,120 0 0,1 -240,0 \"/>\n    </defs>\n    <g>\n        <use xlink:href=\"#name-circle-path\" fill=\"none\"/>\n        <text>\n            <textPath xlink:href=\"#name-circle-path\">${name}</textPath>\n        </text>\n    </g>`\n    cntrEl.appendChild(nameEl)\n  }\n\n  state$\n    .combineLatest(drawingCtx$, (state, drawingCtx)  => ({state, drawingCtx}))\n    .subscribe(function({state, drawingCtx}) {\n                 if (state.model.length == 0) {\n                   drawingCtx.domCntr.innerHTML = ''\n                 }\n                 var listEl = findOrCreateListEl(drawingCtx.domCntr)\n\n                 const list          = Object.values(state.model).sort((a, b) => b.timestamp - a.timestamp)\n                 let precedingItemEl = null\n                 list.forEach(model => {\n                   const m          = Object.assign({}, model, {focused: state.focus == model || state.focus == model.key})\n                   const itemCntrEl = findOrCreateListItem(m, listEl, precedingItemEl ? precedingItemEl.parentNode : null)\n                   drawingCtx.renderItem(model, itemCntrEl)\n                   precedingItemEl  = itemCntrEl\n                 })\n               })\n\n  event$\n    .filter(e => e.name == 'focus')\n    .map(e => e.key)\n    .subscribe(focus$)\n\n\n  function deleteAllButtonEl() {\n    return document.getElementById('delete-all-btn')\n  }\n\n  const editorEl = () => document.getElementById('editor')\n\n  const drag$ = makeDraggable({\n\n    draggableCntr: drawingCtx$.getValue().domCntr,\n\n    mapDraggable(target, e) {\n      const lis = [...drawingCtx$.getValue().domCntr.getElementsByTagName('li')].reverse()\n      for (const li of lis) {\n        const rect = li.children[0].getClientRects()[0]\n        if (rect && ptInInscribedCircle({x: e.clientX, y: e.clientY}, rect)) {\n          return li\n        }\n      }\n      return null\n    },\n\n    mapDropTarget(pos, draggedEl) {\n      const key = draggedEl.getAttribute('data-key')\n      if (!key.match(/^template/)) {\n        const el     = deleteAllButtonEl()\n        const bounds = el.getBoundingClientRect()\n        if (ptInRect(pos, bounds)) return el\n      }\n\n      const editor = editorEl()\n      if (ptInInscribedCircle(pos, editor.getBoundingClientRect())) return editor\n\n      return null\n    },\n\n    createOutlineEl(el) {\n      const rect             = el.children[0].children[0].getClientRects()[0]\n      const outline          = document.createElement('DIV')\n      outline.style.position = 'fixed'\n      outline.style.top      = `${rect.top}px`\n      outline.style.left     = `${rect.left}px`\n      outline.style.width    = `${rect.width}px`\n      outline.style.height   = `${rect.height}px`\n      outline.appendChild(el.children[0].children[0].cloneNode(true))\n      return outline\n    }\n  })\n\n\n  // Draw 'delete all' button as a drop target.\n  drag$\n    .filter(action => action.name == ACTION_DRAG_START)\n    .subscribe(() => deleteAllButtonEl().classList.add('drop-target'))\n\n  // Remove 'delete all' drop as drop target.\n  drag$\n    .filter(action => action.name == ACTION_DRAG_END)\n    .subscribe(() => deleteAllButtonEl().classList.remove('drop-target'))\n\n  // Highlight hovered 'delete all' button\n  drag$\n    .filter(action => action.name == ACTION_DRAG_MOVE)\n    .subscribe(function(action) {\n                 if (action.dest == deleteAllButtonEl()) {\n                   action.outline.style.transition   = 'opacity 0.4'\n                   action.outline.style.opacity      = 0.3\n                   action.outline.style['transform'] = 'scale(.5,.5)'\n                 } else {\n                   action.outline.style.opacity      = 1\n                   action.outline.style['transform'] = ''\n                 }\n               })\n\n  // Drag over 'delete all' button previews deleting pattern.\n  drag$\n    .filter(action => action.name == ACTION_DRAG_MOVE)\n    .subscribe(action => action.el.style.display = (action.dest == deleteAllButtonEl()) ? 'none' : 'block')\n\n  // Trigger the actual delete.\n  drag$\n    .filter(action => action.name == ACTION_DRAG_END)\n    .filter(action => action.dest == deleteAllButtonEl())\n    .map(action => ({name: 'delete', key: action.el.getAttribute('data-key')}))\n    .subscribe(event$)\n\n  // Provide drag feedback over the editor\n  drag$.filter(action => action.name == ACTION_DRAG_MOVE)\n    .subscribe(action => editorEl().classList.toggle('drop-target', editorEl() == action.dest))\n\n  drag$.filter(action => action.name == ACTION_DRAG_END)\n    .subscribe(() =>  editorEl().classList.remove('drop-target'))\n\n  // Trigger the load of the pattern on drag\n  drag$\n    .filter(action => action.name == ACTION_DRAG_END)\n    .filter(action => action.dest == editorEl())\n    .map(action => {\n           return {\n             name: 'load',\n             key:  action.el.getAttribute('data-key')\n           }\n         })\n    .subscribe(event$)\n\n  // Detect simple click to load a pattern\n  const itemClick$ = drag$\n    .filter(action => action.name == ACTION_DRAG_END)\n    .filter(action => action.ms < 400)\n    .filter(action => (Math.abs(action.offset.x) + Math.abs(action.offset.y)) < 5)\n    .map(action => action.el)\n\n  itemClick$\n    .filter(el => el.classList.contains('focus'))\n    .map(el => el.getAttribute('data-key'))\n    .map(key => ({name: 'load', key}))\n    .subscribe(event$)\n\n  itemClick$\n    .filter(el => !el.classList.contains('focus'))\n    .map(x => ({name: 'focus', key: x.getAttribute('data-key')}))\n    .subscribe(event$)\n\n  return event$\n}\n","/*eslint-env browser */\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject'\n\nimport { newCmdBus$ } from 'pilota'\nimport { localStorageKeys } from './lib/ndp-software/util.js'\nimport { ownPropertiesIter } from './lib/ndp-software/generators.js'\nimport { tonalities } from './tonality.js'\n\n// hashmap of key => stored value\nexport const patternStore$ = new\n    BehaviorSubject(localStorageKeys()\n                        .filter(x => /^(pattern|template).*/.exec(x))\n                        .reduce((acc, x) => {\n                                  const item = localStorage.getItem(x)\n                                  try {\n                                    acc[x] = JSON.parse(item)\n                                  } catch (x) {\n                                    console.log(`Unable to load or parse [${x}]: ${ item}`)\n                                  }\n                                  return acc\n                                }, {}))\n\n\nexport const patternStoreBus$ = newCmdBus$(patternStore$, {\n\n  insert: function(state, cmd) {\n    const pattern      = cmd.pattern\n    pattern.timestamp  = (new Date()).getTime()\n    pattern.key        = pattern.key || `pattern-${pattern.timestamp}`\n    pattern.name       = pattern.name || `Pattern ${pattern.timestamp}`\n\n    localStorage.setItem(pattern.key, JSON.stringify(pattern))\n    state[pattern.key] = pattern\n\n    return state\n  },\n\n  delete: function(state, cmd) {\n    const key = cmd.key\n\n    localStorage.removeItem(key)\n    delete state[key]\n\n    return state\n  },\n\n  'delete all': function() {\n\n    localStorageKeys().forEach(key => {\n      if (!/pattern\\-/.exec(key)) return\n      localStorage.removeItem(key)\n    })\n\n    return {}\n  },\n\n  'create template': function(state, cmd) {\n    const tonality = cmd.tonality\n    const key      = `template-${tonality}`\n    if (!localStorage[key]) {\n\n      const template = {\n        key:      key,\n        name:     tonality,\n        tonality: tonality,\n        periodMs: 2000,\n        pegs:     [],\n        svg:      `<svg viewBox=\"0 0 1200 1200\"><g class=\"wheel ${tonality}\">\n        <circle class=\"bg\" cx=\"50%\" cy=\"50%\" r=\"49%\"></circle></g></svg>`\n      }\n\n      patternStoreBus$.next({name: 'insert', pattern: template})\n    }\n    return state\n  },\n\n  'create missing templates': function(state) {\n    for (const name of ownPropertiesIter(tonalities)()) {\n      patternStoreBus$.next({name: 'create template', tonality: name})\n    }\n    return state\n  }\n\n})\n\nsetTimeout(() => patternStoreBus$.next('create missing templates'), 3000)\n\n","/*eslint-env browser */\n\nimport {Observable} from 'rxjs/Observable'\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject'\nimport 'rxjs/add/observable/fromEvent'\nimport 'rxjs/add/operator/do'\nimport 'rxjs/add/operator/mapTo'\nimport 'rxjs/add/operator/filter'\nimport { newCmdBus$ } from 'pilota'\n\n// MODEL\nconst STORE_KEY         = 'play-pause'\nexport const playState$ = new BehaviorSubject('paused') // localStorage[STORE_KEY] ||\nplayState$\n    .subscribe(x => localStorage[STORE_KEY] = x)\n\nconst playStateBus$ = newCmdBus$(playState$)\nplayStateBus$.on('toggle', state => state == 'playing' ? 'paused' : 'playing')\n\n\n// VIEW\nconst playPauseEl = document.getElementById('play-pause')\n\nplayState$.subscribe(x => {\n  playPauseEl.className = playPauseEl.className.replace(/playing|paused/, x) // x = 'playing' or 'paused'\n})\n\n\n// INTENT\nObservable.fromEvent(playPauseEl, 'click')\n    .do(e => e.preventDefault())\n    .mapTo('toggle')\n    .subscribe(playStateBus$)\n\nObservable.fromEvent(document, 'keypress')\n    .filter(e => e.keyCode == 32) // space\n    .mapTo('toggle')\n    .subscribe(playStateBus$)\n","/*eslint-env browser */\n\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject'\nimport 'rxjs/add/operator/mapTo'\n\nimport {Observable} from 'rxjs/Observable'\nimport 'rxjs/add/observable/fromEvent'\n\nimport {linearScaleFns, humanizeTempo} from './lib/ndp-software/util.js'\nimport {mapBehaviorSubject} from './lib/ndp-software/map-behavior-subject.js'\nimport {newDial} from './dial.js'\n\nimport {newCmdBus$} from 'pilota'\n\n\n// MODEL\nexport const msPerPeriod$ = new BehaviorSubject(2000)\nconst [unwrapFn, wrapFn] = linearScaleFns(20000, 50)\nconst normalizedTempo$    = mapBehaviorSubject(msPerPeriod$,\n                                               wrapFn,\n                                               unwrapFn)\n\nconst msPerPeriodCmd$ = newCmdBus$(msPerPeriod$)\nmsPerPeriodCmd$.on('inc', state => state * 0.98)\nmsPerPeriodCmd$.on('incXL', state => state * 0.92)\nmsPerPeriodCmd$.on('dec', state => state * 1.02)\nmsPerPeriodCmd$.on('decXL', state => state * 1.08)\n\n// VIEW\nconst dial     = document.getElementById('tempo-dial')\nconst preview$ = newDial(dial, normalizedTempo$)\nconst textElem = () => dial.querySelector('text')\n\n// Show the value or the \"preview\" value inside the text element.\npreview$\n    .withLatestFrom(msPerPeriod$, (preview, state) => preview > 0 ? unwrapFn(preview) : state)\n    .merge(msPerPeriod$)\n    .map(humanizeTempo)\n    .subscribe((x)  => textElem().textContent = x)\n\n// Set a class on the text element.\nmsPerPeriod$\n    .mapTo('value')\n    .merge(preview$.map(x => x > 0 ? 'preview' : 'value'))\n    .subscribe((cls) => textElem().classList[cls == 'preview' ? 'add' : 'remove']('preview'))\n\n\n// INTENT\nconst keyDown$ = Observable.fromEvent(document, 'keydown')\n//keyDown$.subscribe((x) => console.log(x))\n\nkeyDown$\n    .filter(e => e.key.match(/^Arrow(Up|Down)/i))\n    .do(e => e.preventDefault())\n    .map(e => `${e.key.match(/Down/i) ? 'dec' : 'inc'}${e.shiftKey? 'XL' : ''}`)\n    .subscribe(msPerPeriodCmd$)\n\n//logCmdBus//(msPerPeriodCmd$)\n\n","import {BehaviorSubject} from 'rxjs/BehaviorSubject'\nimport 'rxjs/add/operator/distinct'\n\n\nexport function mapBehaviorSubject(subject$, wrapFn, unwrapFn) {\n  // Distinct keeps cycles from triggering.\n  const wrapped$ = new BehaviorSubject(wrapFn(subject$.getValue()))\n  subject$\n    .distinct()\n    .subscribe(function(x) {\n                 wrapped$.next(wrapFn(x))\n               },\n               function(err) {\n                 wrapped$.error(err)\n               },\n               function() {\n                 wrapped$.complete()\n               })\n\n  wrapped$\n    .distinct()\n    .subscribe(function(x) {\n                 subject$.next(unwrapFn(x))\n               },\n               function(err) {\n                 subject$.error(err)\n               },\n               function() {\n                 subject$.complete()\n               })\n  return wrapped$\n}\n\n\n","import * as generators from './lib/ndp-software/generators.js'\nimport {pin} from './lib/ndp-software/util.js'\n\nexport function createTonalities() {\n// equal tempered scale\n  const semitone = Math.pow(2, 1 / 12)\n// ref. http://www.phy.mtu.edu/~suits/NoteFreqCalcs.html\n\n  const semitoneAbove      = (ν) => ν * semitone\n  const majorSecondAbove   = (ν) => ν * semitone * semitone\n  const minorThirdAbove    = (ν) => ν * Math.pow(semitone, 3)\n  const majorThirdAbove    = (ν) => ν * 5.0 / 4.0\n  const perfectFourthAbove = (ν) => ν * 4.0 / 3.0\n  const flatFiveAbove      = (ν) => ν * Math.pow(semitone, 6)\n  const perfectFifthAbove  = (ν) => ν * 3.0 / 2.0\n  const minorSixthAbove    = (ν) => ν * Math.pow(semitone, 8)\n  const majorSixthAbove    = (ν) => ν * Math.pow(semitone, 9)\n  const minorSeventhAbove  = (ν) => ν * Math.pow(semitone, 10)\n  const majorSeventhAbove  = (ν) => ν * Math.pow(semitone, 11)\n\n  function buildOctaves(lo, hi) {\n    const octaveIter = generators.doubleIter(lo)\n    const notes      = generators.whileLessThan(octaveIter, hi)\n    return [...notes]\n  }\n\n  function buildRange(lo, hi) {\n    return [...generators.whileLessThan(generators.counterIter(lo), hi)]\n  }\n\n  function generateNotes(octaves, ...noteFns) {\n    const all = []\n    octaves.forEach(note => {\n      all.push(note)\n      for (const fn of noteFns) {\n        all.push(fn(note))\n      }\n    })\n    return all\n  }\n\n\n  const ν            = {\n    octaves: buildOctaves(110, 4000) // [110, 220, 440, 880, 1760, 3520]\n  }\n\n  // Give a name to the scale, and provide any number of\n  // functions to generate the notes above the tonic.\n  const buildTonality = generateNotes.bind(null, ν.octaves)\n\n  ν['fifths']        = buildTonality(perfectFifthAbove)\n  ν['perfect']       = buildTonality(perfectFourthAbove, perfectFifthAbove)\n  ν['majorTriad']    = buildTonality(majorThirdAbove, perfectFifthAbove)\n  ν['major']         = buildTonality(majorSecondAbove, majorThirdAbove, perfectFourthAbove, perfectFifthAbove, majorSixthAbove, majorSeventhAbove)\n  ν['harmonicMinor'] = buildTonality(majorSecondAbove, minorThirdAbove, perfectFourthAbove, perfectFifthAbove, majorSixthAbove, minorSeventhAbove)\n  ν['blues']         = buildTonality(minorThirdAbove, perfectFourthAbove, flatFiveAbove, perfectFifthAbove, minorSeventhAbove)\n  ν['chromatic']     = buildTonality(semitoneAbove, majorSecondAbove, minorThirdAbove, majorThirdAbove,\n                                     perfectFourthAbove, flatFiveAbove, perfectFifthAbove, minorSixthAbove,\n                                     majorSixthAbove, minorSeventhAbove, majorSeventhAbove)\n\n  ν['continuous'] = buildRange(100, 4000)\n\n  const tonalityCalculator = function(tonalityName) {\n    return function(x) {\n      const s = ν[tonalityName]\n      return s[Math.floor(pin(x, 0, 1) * s.length)]\n    }\n  }\n\n  const fns = {}\n  for (const t in ν) fns[t] = tonalityCalculator(t)\n  return fns\n}\n","import {BehaviorSubject} from 'rxjs/BehaviorSubject'\nimport {createTonalities} from './tonality-factory.js'\n\n// MODEL\nexport const tonalities = createTonalities()\n\nexport const currentTonality$ = new BehaviorSubject('blues')\n\n// VIEW\n/* global document */\n// Build scale control\nconst scaleCurrentElem    = document.getElementById('scale-current')\n\ncurrentTonality$.subscribe((s) => scaleCurrentElem.innerHTML = `${s}`) // &#127925;\n","require('../modules/es6.symbol');\nrequire('../modules/es6.object.create');\nrequire('../modules/es6.object.define-property');\nrequire('../modules/es6.object.define-properties');\nrequire('../modules/es6.object.get-own-property-descriptor');\nrequire('../modules/es6.object.get-prototype-of');\nrequire('../modules/es6.object.keys');\nrequire('../modules/es6.object.get-own-property-names');\nrequire('../modules/es6.object.freeze');\nrequire('../modules/es6.object.seal');\nrequire('../modules/es6.object.prevent-extensions');\nrequire('../modules/es6.object.is-frozen');\nrequire('../modules/es6.object.is-sealed');\nrequire('../modules/es6.object.is-extensible');\nrequire('../modules/es6.object.assign');\nrequire('../modules/es6.object.is');\nrequire('../modules/es6.object.set-prototype-of');\nrequire('../modules/es6.object.to-string');\nrequire('../modules/es6.function.bind');\nrequire('../modules/es6.function.name');\nrequire('../modules/es6.function.has-instance');\nrequire('../modules/es6.parse-int');\nrequire('../modules/es6.parse-float');\nrequire('../modules/es6.number.constructor');\nrequire('../modules/es6.number.to-fixed');\nrequire('../modules/es6.number.to-precision');\nrequire('../modules/es6.number.epsilon');\nrequire('../modules/es6.number.is-finite');\nrequire('../modules/es6.number.is-integer');\nrequire('../modules/es6.number.is-nan');\nrequire('../modules/es6.number.is-safe-integer');\nrequire('../modules/es6.number.max-safe-integer');\nrequire('../modules/es6.number.min-safe-integer');\nrequire('../modules/es6.number.parse-float');\nrequire('../modules/es6.number.parse-int');\nrequire('../modules/es6.math.acosh');\nrequire('../modules/es6.math.asinh');\nrequire('../modules/es6.math.atanh');\nrequire('../modules/es6.math.cbrt');\nrequire('../modules/es6.math.clz32');\nrequire('../modules/es6.math.cosh');\nrequire('../modules/es6.math.expm1');\nrequire('../modules/es6.math.fround');\nrequire('../modules/es6.math.hypot');\nrequire('../modules/es6.math.imul');\nrequire('../modules/es6.math.log10');\nrequire('../modules/es6.math.log1p');\nrequire('../modules/es6.math.log2');\nrequire('../modules/es6.math.sign');\nrequire('../modules/es6.math.sinh');\nrequire('../modules/es6.math.tanh');\nrequire('../modules/es6.math.trunc');\nrequire('../modules/es6.string.from-code-point');\nrequire('../modules/es6.string.raw');\nrequire('../modules/es6.string.trim');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/es6.string.code-point-at');\nrequire('../modules/es6.string.ends-with');\nrequire('../modules/es6.string.includes');\nrequire('../modules/es6.string.repeat');\nrequire('../modules/es6.string.starts-with');\nrequire('../modules/es6.string.anchor');\nrequire('../modules/es6.string.big');\nrequire('../modules/es6.string.blink');\nrequire('../modules/es6.string.bold');\nrequire('../modules/es6.string.fixed');\nrequire('../modules/es6.string.fontcolor');\nrequire('../modules/es6.string.fontsize');\nrequire('../modules/es6.string.italics');\nrequire('../modules/es6.string.link');\nrequire('../modules/es6.string.small');\nrequire('../modules/es6.string.strike');\nrequire('../modules/es6.string.sub');\nrequire('../modules/es6.string.sup');\nrequire('../modules/es6.date.now');\nrequire('../modules/es6.date.to-json');\nrequire('../modules/es6.date.to-iso-string');\nrequire('../modules/es6.date.to-string');\nrequire('../modules/es6.date.to-primitive');\nrequire('../modules/es6.array.is-array');\nrequire('../modules/es6.array.from');\nrequire('../modules/es6.array.of');\nrequire('../modules/es6.array.join');\nrequire('../modules/es6.array.slice');\nrequire('../modules/es6.array.sort');\nrequire('../modules/es6.array.for-each');\nrequire('../modules/es6.array.map');\nrequire('../modules/es6.array.filter');\nrequire('../modules/es6.array.some');\nrequire('../modules/es6.array.every');\nrequire('../modules/es6.array.reduce');\nrequire('../modules/es6.array.reduce-right');\nrequire('../modules/es6.array.index-of');\nrequire('../modules/es6.array.last-index-of');\nrequire('../modules/es6.array.copy-within');\nrequire('../modules/es6.array.fill');\nrequire('../modules/es6.array.find');\nrequire('../modules/es6.array.find-index');\nrequire('../modules/es6.array.species');\nrequire('../modules/es6.array.iterator');\nrequire('../modules/es6.regexp.constructor');\nrequire('../modules/es6.regexp.exec');\nrequire('../modules/es6.regexp.to-string');\nrequire('../modules/es6.regexp.flags');\nrequire('../modules/es6.regexp.match');\nrequire('../modules/es6.regexp.replace');\nrequire('../modules/es6.regexp.search');\nrequire('../modules/es6.regexp.split');\nrequire('../modules/es6.promise');\nrequire('../modules/es6.map');\nrequire('../modules/es6.set');\nrequire('../modules/es6.weak-map');\nrequire('../modules/es6.weak-set');\nrequire('../modules/es6.typed.array-buffer');\nrequire('../modules/es6.typed.data-view');\nrequire('../modules/es6.typed.int8-array');\nrequire('../modules/es6.typed.uint8-array');\nrequire('../modules/es6.typed.uint8-clamped-array');\nrequire('../modules/es6.typed.int16-array');\nrequire('../modules/es6.typed.uint16-array');\nrequire('../modules/es6.typed.int32-array');\nrequire('../modules/es6.typed.uint32-array');\nrequire('../modules/es6.typed.float32-array');\nrequire('../modules/es6.typed.float64-array');\nrequire('../modules/es6.reflect.apply');\nrequire('../modules/es6.reflect.construct');\nrequire('../modules/es6.reflect.define-property');\nrequire('../modules/es6.reflect.delete-property');\nrequire('../modules/es6.reflect.enumerate');\nrequire('../modules/es6.reflect.get');\nrequire('../modules/es6.reflect.get-own-property-descriptor');\nrequire('../modules/es6.reflect.get-prototype-of');\nrequire('../modules/es6.reflect.has');\nrequire('../modules/es6.reflect.is-extensible');\nrequire('../modules/es6.reflect.own-keys');\nrequire('../modules/es6.reflect.prevent-extensions');\nrequire('../modules/es6.reflect.set');\nrequire('../modules/es6.reflect.set-prototype-of');\nmodule.exports = require('../modules/_core');\n","require('../../modules/es7.array.flat-map');\nmodule.exports = require('../../modules/_core').Array.flatMap;\n","require('../../modules/es7.array.includes');\nmodule.exports = require('../../modules/_core').Array.includes;\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","require('../../modules/es7.object.get-own-property-descriptors');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertyDescriptors;\n","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","'use strict';\nrequire('../../modules/es6.promise');\nrequire('../../modules/es7.promise.finally');\nmodule.exports = require('../../modules/_core').Promise['finally'];\n","require('../../modules/es7.string.pad-end');\nmodule.exports = require('../../modules/_core').String.padEnd;\n","require('../../modules/es7.string.pad-start');\nmodule.exports = require('../../modules/_core').String.padStart;\n","require('../../modules/es7.string.trim-right');\nmodule.exports = require('../../modules/_core').String.trimRight;\n","require('../../modules/es7.string.trim-left');\nmodule.exports = require('../../modules/_core').String.trimLeft;\n","require('../../modules/es7.symbol.async-iterator');\nmodule.exports = require('../../modules/_wks-ext').f('asyncIterator');\n","require('../modules/es7.global');\nmodule.exports = require('../modules/_core').global;\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// https://github.com/tc39/proposal-global\nvar $export = require('./_export');\n\n$export($export.G, { global: require('./_global') });\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var cof = require('./_cof');\nmodule.exports = function (it, msg) {\n  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);\n  return +it;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","'use strict';\nvar at = require('./_string-at')(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","var aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar toLength = require('./_to-length');\n\nmodule.exports = function (that, callbackfn, aLen, memo, isRight) {\n  aFunction(callbackfn);\n  var O = toObject(that);\n  var self = IObject(O);\n  var length = toLength(O.length);\n  var index = isRight ? length - 1 : 0;\n  var i = isRight ? -1 : 1;\n  if (aLen < 2) for (;;) {\n    if (index in self) {\n      memo = self[index];\n      index += i;\n      break;\n    }\n    index += i;\n    if (isRight ? index < 0 : length <= index) {\n      throw TypeError('Reduce of empty array with no initial value');\n    }\n  }\n  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {\n    memo = callbackfn(memo, self[index], index, O);\n  }\n  return memo;\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","'use strict';\nvar redefineAll = require('./_redefine-all');\nvar getWeak = require('./_meta').getWeak;\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar createArrayMethod = require('./_array-methods');\nvar $has = require('./_has');\nvar validate = require('./_validate-collection');\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function () {\n  this.a = [];\n};\nvar findUncaughtFrozen = function (store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;      // collection type\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar redefineAll = require('./_redefine-all');\nvar meta = require('./_meta');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar $iterDetect = require('./_iter-detect');\nvar setToStringTag = require('./_set-to-string-tag');\nvar inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function (KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar fails = require('./_fails');\nvar getTime = Date.prototype.getTime;\nvar $toISOString = Date.prototype.toISOString;\n\nvar lz = function (num) {\n  return num > 9 ? num : '0' + num;\n};\n\n// PhantomJS / old WebKit has a broken implementations\nmodule.exports = (fails(function () {\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\n}) || !fails(function () {\n  $toISOString.call(new Date(NaN));\n})) ? function toISOString() {\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\n  var d = this;\n  var y = d.getUTCFullYear();\n  var m = d.getUTCMilliseconds();\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\n    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\n    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\n    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n} : $toISOString;\n","'use strict';\nvar anObject = require('./_an-object');\nvar toPrimitive = require('./_to-primitive');\nvar NUMBER = 'number';\n\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');\n  return toPrimitive(anObject(this), hint != NUMBER);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nrequire('./es6.regexp.exec');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\nvar regexpExec = require('./_regexp-exec');\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","module.exports = false;\n","// 20.2.2.14 Math.expm1(x)\nvar $expm1 = Math.expm1;\nmodule.exports = (!$expm1\n  // Old FF bug\n  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || $expm1(-2e-17) != -2e-17\n) ? function expm1(x) {\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n} : $expm1;\n","// 20.2.2.16 Math.fround(x)\nvar sign = require('./_math-sign');\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\nmodule.exports = Math.fround || function fround(x) {\n  var $abs = Math.abs(x);\n  var $sign = sign(x);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};\n","// 20.2.2.20 Math.log1p(x)\nmodule.exports = Math.log1p || function log1p(x) {\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n};\n","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","exports.f = {}.propertyIsEnumerable;\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// all object keys, includes non-enumerable and symbols\nvar gOPN = require('./_object-gopn');\nvar gOPS = require('./_object-gops');\nvar anObject = require('./_an-object');\nvar Reflect = require('./_global').Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = gOPN.f(anObject(it));\n  var getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n","'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","exports.f = require('./_wks');\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });\n\nrequire('./_add-to-unscopables')('copyWithin');\n","'use strict';\nvar $export = require('./_export');\nvar $every = require('./_array-methods')(4);\n\n$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {\n  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments[1]);\n  }\n});\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","'use strict';\nvar $export = require('./_export');\nvar $filter = require('./_array-methods')(2);\n\n$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {\n  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments[1]);\n  }\n});\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","'use strict';\nvar $export = require('./_export');\nvar $forEach = require('./_array-methods')(0);\nvar STRICT = require('./_strict-method')([].forEach, true);\n\n$export($export.P + $export.F * !STRICT, 'Array', {\n  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\n  forEach: function forEach(callbackfn /* , thisArg */) {\n    return $forEach(this, callbackfn, arguments[1]);\n  }\n});\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $indexOf = require('./_array-includes')(false);\nvar $native = [].indexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? $native.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments[1]);\n  }\n});\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","'use strict';\n// 22.1.3.13 Array.prototype.join(separator)\nvar $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar arrayJoin = [].join;\n\n// fallback for not array-like strings\n$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {\n  join: function join(separator) {\n    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar $native = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n    // convert -0 to +0\n    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;\n    var O = toIObject(this);\n    var length = toLength(O.length);\n    var index = length - 1;\n    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));\n    if (index < 0) index = length + index;\n    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;\n    return -1;\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $map = require('./_array-methods')(1);\n\n$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {\n  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments[1]);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar createProperty = require('./_create-property');\n\n// WebKit Array.of isn't generic\n$export($export.S + $export.F * require('./_fails')(function () {\n  function F() { /* empty */ }\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of(/* ...args */) {\n    var index = 0;\n    var aLen = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(aLen);\n    while (aLen > index) createProperty(result, index, arguments[index++]);\n    result.length = aLen;\n    return result;\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {\n  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], false);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar html = require('./_html');\nvar cof = require('./_cof');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nvar arraySlice = [].slice;\n\n// fallback for not array-like ES3 strings and DOM objects\n$export($export.P + $export.F * require('./_fails')(function () {\n  if (html) arraySlice.call(html);\n}), 'Array', {\n  slice: function slice(begin, end) {\n    var len = toLength(this.length);\n    var klass = cof(this);\n    end = end === undefined ? len : end;\n    if (klass == 'Array') return arraySlice.call(this, begin, end);\n    var start = toAbsoluteIndex(begin, len);\n    var upTo = toAbsoluteIndex(end, len);\n    var size = toLength(upTo - start);\n    var cloned = new Array(size);\n    var i = 0;\n    for (; i < size; i++) cloned[i] = klass == 'String'\n      ? this.charAt(start + i)\n      : this[start + i];\n    return cloned;\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $some = require('./_array-methods')(3);\n\n$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {\n  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments[1]);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","require('./_set-species')('Array');\n","// 20.3.3.1 / 15.9.4.4 Date.now()\nvar $export = require('./_export');\n\n$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });\n","// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar $export = require('./_export');\nvar toISOString = require('./_date-to-iso-string');\n\n// PhantomJS / old WebKit has a broken implementations\n$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {\n  toISOString: toISOString\n});\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","var TO_PRIMITIVE = require('./_wks')('toPrimitive');\nvar proto = Date.prototype;\n\nif (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));\n","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","'use strict';\nvar isObject = require('./_is-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar HAS_INSTANCE = require('./_wks')('hasInstance');\nvar FunctionProto = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {\n  if (typeof this != 'function' || !isObject(O)) return false;\n  if (!isObject(this.prototype)) return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n  return false;\n} });\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n","// 20.2.2.3 Math.acosh(x)\nvar $export = require('./_export');\nvar log1p = require('./_math-log1p');\nvar sqrt = Math.sqrt;\nvar $acosh = Math.acosh;\n\n$export($export.S + $export.F * !($acosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\n  && $acosh(Infinity) == Infinity\n), 'Math', {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? Math.log(x) + Math.LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n","// 20.2.2.5 Math.asinh(x)\nvar $export = require('./_export');\nvar $asinh = Math.asinh;\n\nfunction asinh(x) {\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n}\n\n// Tor Browser bug: Math.asinh(0) -> -0\n$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });\n","// 20.2.2.7 Math.atanh(x)\nvar $export = require('./_export');\nvar $atanh = Math.atanh;\n\n// Tor Browser bug: Math.atanh(-0) -> 0\n$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n  atanh: function atanh(x) {\n    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n  }\n});\n","// 20.2.2.9 Math.cbrt(x)\nvar $export = require('./_export');\nvar sign = require('./_math-sign');\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n","// 20.2.2.11 Math.clz32(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  clz32: function clz32(x) {\n    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n  }\n});\n","// 20.2.2.12 Math.cosh(x)\nvar $export = require('./_export');\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  cosh: function cosh(x) {\n    return (exp(x = +x) + exp(-x)) / 2;\n  }\n});\n","// 20.2.2.14 Math.expm1(x)\nvar $export = require('./_export');\nvar $expm1 = require('./_math-expm1');\n\n$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });\n","// 20.2.2.16 Math.fround(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { fround: require('./_math-fround') });\n","// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export');\nvar abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n","// 20.2.2.18 Math.imul(x, y)\nvar $export = require('./_export');\nvar $imul = Math.imul;\n\n// some WebKit versions fails with big numbers, some has wrong arity\n$export($export.S + $export.F * require('./_fails')(function () {\n  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n}), 'Math', {\n  imul: function imul(x, y) {\n    var UINT16 = 0xffff;\n    var xn = +x;\n    var yn = +y;\n    var xl = UINT16 & xn;\n    var yl = UINT16 & yn;\n    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n  }\n});\n","// 20.2.2.21 Math.log10(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log10: function log10(x) {\n    return Math.log(x) * Math.LOG10E;\n  }\n});\n","// 20.2.2.20 Math.log1p(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { log1p: require('./_math-log1p') });\n","// 20.2.2.22 Math.log2(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n","// 20.2.2.28 Math.sign(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { sign: require('./_math-sign') });\n","// 20.2.2.30 Math.sinh(x)\nvar $export = require('./_export');\nvar expm1 = require('./_math-expm1');\nvar exp = Math.exp;\n\n// V8 near Chromium 38 has a problem with very small numbers\n$export($export.S + $export.F * require('./_fails')(function () {\n  return !Math.sinh(-2e-17) != -2e-17;\n}), 'Math', {\n  sinh: function sinh(x) {\n    return Math.abs(x = +x) < 1\n      ? (expm1(x) - expm1(-x)) / 2\n      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n  }\n});\n","// 20.2.2.33 Math.tanh(x)\nvar $export = require('./_export');\nvar expm1 = require('./_math-expm1');\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  tanh: function tanh(x) {\n    var a = expm1(x = +x);\n    var b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n","// 20.2.2.34 Math.trunc(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  trunc: function trunc(it) {\n    return (it > 0 ? Math.floor : Math.ceil)(it);\n  }\n});\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","// 20.1.2.1 Number.EPSILON\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });\n","// 20.1.2.2 Number.isFinite(number)\nvar $export = require('./_export');\nvar _isFinite = require('./_global').isFinite;\n\n$export($export.S, 'Number', {\n  isFinite: function isFinite(it) {\n    return typeof it == 'number' && _isFinite(it);\n  }\n});\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n","// 20.1.2.5 Number.isSafeInteger(number)\nvar $export = require('./_export');\nvar isInteger = require('./_is-integer');\nvar abs = Math.abs;\n\n$export($export.S, 'Number', {\n  isSafeInteger: function isSafeInteger(number) {\n    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n  }\n});\n","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n","// 20.1.2.10 Number.MIN_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 20.1.2.12 Number.parseFloat(string)\n$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });\n","'use strict';\nvar $export = require('./_export');\nvar toInteger = require('./_to-integer');\nvar aNumberValue = require('./_a-number-value');\nvar repeat = require('./_string-repeat');\nvar $toFixed = 1.0.toFixed;\nvar floor = Math.floor;\nvar data = [0, 0, 0, 0, 0, 0];\nvar ERROR = 'Number.toFixed: incorrect invocation!';\nvar ZERO = '0';\n\nvar multiply = function (n, c) {\n  var i = -1;\n  var c2 = c;\n  while (++i < 6) {\n    c2 += n * data[i];\n    data[i] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\nvar divide = function (n) {\n  var i = 6;\n  var c = 0;\n  while (--i >= 0) {\n    c += data[i];\n    data[i] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\nvar numToString = function () {\n  var i = 6;\n  var s = '';\n  while (--i >= 0) {\n    if (s !== '' || i === 0 || data[i] !== 0) {\n      var t = String(data[i]);\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\n    }\n  } return s;\n};\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\n$export($export.P + $export.F * (!!$toFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !require('./_fails')(function () {\n  // V8 ~ Android 4.3-\n  $toFixed.call({});\n})), 'Number', {\n  toFixed: function toFixed(fractionDigits) {\n    var x = aNumberValue(this, ERROR);\n    var f = toInteger(fractionDigits);\n    var s = '';\n    var m = ZERO;\n    var e, z, j, k;\n    if (f < 0 || f > 20) throw RangeError(ERROR);\n    // eslint-disable-next-line no-self-compare\n    if (x != x) return 'NaN';\n    if (x <= -1e21 || x >= 1e21) return String(x);\n    if (x < 0) {\n      s = '-';\n      x = -x;\n    }\n    if (x > 1e-21) {\n      e = log(x * pow(2, 69, 1)) - 69;\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = f;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        m = numToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        m = numToString() + repeat.call(ZERO, f);\n      }\n    }\n    if (f > 0) {\n      k = m.length;\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\n    } else {\n      m = s + m;\n    } return m;\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $fails = require('./_fails');\nvar aNumberValue = require('./_a-number-value');\nvar $toPrecision = 1.0.toPrecision;\n\n$export($export.P + $export.F * ($fails(function () {\n  // IE7-\n  return $toPrecision.call(1, undefined) !== '1';\n}) || !$fails(function () {\n  // V8 ~ Android 4.3-\n  $toPrecision.call({});\n})), 'Number', {\n  toPrecision: function toPrecision(precision) {\n    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');\n    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);\n  }\n});\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","// 19.1.2.11 Object.isExtensible(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isExtensible', function ($isExtensible) {\n  return function isExtensible(it) {\n    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n  };\n});\n","// 19.1.2.12 Object.isFrozen(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isFrozen', function ($isFrozen) {\n  return function isFrozen(it) {\n    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n  };\n});\n","// 19.1.2.13 Object.isSealed(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isSealed', function ($isSealed) {\n  return function isSealed(it) {\n    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n  };\n});\n","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', { is: require('./_same-value') });\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// 19.1.2.15 Object.preventExtensions(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('preventExtensions', function ($preventExtensions) {\n  return function preventExtensions(it) {\n    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n  };\n});\n","// 19.1.2.17 Object.seal(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('seal', function ($seal) {\n  return function seal(it) {\n    return $seal && isObject(it) ? $seal(meta(it)) : it;\n  };\n});\n","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar rApply = (require('./_global').Reflect || {}).apply;\nvar fApply = Function.apply;\n// MS Edge argumentsList argument is optional\n$export($export.S + $export.F * !require('./_fails')(function () {\n  rApply(function () { /* empty */ });\n}), 'Reflect', {\n  apply: function apply(target, thisArgument, argumentsList) {\n    var T = aFunction(target);\n    var L = anObject(argumentsList);\n    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);\n  }\n});\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\nvar dP = require('./_object-dp');\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar toPrimitive = require('./_to-primitive');\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n$export($export.S + $export.F * require('./_fails')(function () {\n  // eslint-disable-next-line no-undef\n  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });\n}), 'Reflect', {\n  defineProperty: function defineProperty(target, propertyKey, attributes) {\n    anObject(target);\n    propertyKey = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      dP.f(target, propertyKey, attributes);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","// 26.1.4 Reflect.deleteProperty(target, propertyKey)\nvar $export = require('./_export');\nvar gOPD = require('./_object-gopd').f;\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  deleteProperty: function deleteProperty(target, propertyKey) {\n    var desc = gOPD(anObject(target), propertyKey);\n    return desc && !desc.configurable ? false : delete target[propertyKey];\n  }\n});\n","'use strict';\n// 26.1.5 Reflect.enumerate(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar Enumerate = function (iterated) {\n  this._t = anObject(iterated); // target\n  this._i = 0;                  // next index\n  var keys = this._k = [];      // keys\n  var key;\n  for (key in iterated) keys.push(key);\n};\nrequire('./_iter-create')(Enumerate, 'Object', function () {\n  var that = this;\n  var keys = that._k;\n  var key;\n  do {\n    if (that._i >= keys.length) return { value: undefined, done: true };\n  } while (!((key = keys[that._i++]) in that._t));\n  return { value: key, done: false };\n});\n\n$export($export.S, 'Reflect', {\n  enumerate: function enumerate(target) {\n    return new Enumerate(target);\n  }\n});\n","// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\nvar gOPD = require('./_object-gopd');\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n    return gOPD.f(anObject(target), propertyKey);\n  }\n});\n","// 26.1.8 Reflect.getPrototypeOf(target)\nvar $export = require('./_export');\nvar getProto = require('./_object-gpo');\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getPrototypeOf: function getPrototypeOf(target) {\n    return getProto(anObject(target));\n  }\n});\n","// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\n\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var desc, proto;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')\n    ? desc.value\n    : desc.get !== undefined\n      ? desc.get.call(receiver)\n      : undefined;\n  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', { get: get });\n","// 26.1.9 Reflect.has(target, propertyKey)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {\n  has: function has(target, propertyKey) {\n    return propertyKey in target;\n  }\n});\n","// 26.1.10 Reflect.isExtensible(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar $isExtensible = Object.isExtensible;\n\n$export($export.S, 'Reflect', {\n  isExtensible: function isExtensible(target) {\n    anObject(target);\n    return $isExtensible ? $isExtensible(target) : true;\n  }\n});\n","// 26.1.11 Reflect.ownKeys(target)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });\n","// 26.1.12 Reflect.preventExtensions(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar $preventExtensions = Object.preventExtensions;\n\n$export($export.S, 'Reflect', {\n  preventExtensions: function preventExtensions(target) {\n    anObject(target);\n    try {\n      if ($preventExtensions) $preventExtensions(target);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","// 26.1.14 Reflect.setPrototypeOf(target, proto)\nvar $export = require('./_export');\nvar setProto = require('./_set-proto');\n\nif (setProto) $export($export.S, 'Reflect', {\n  setPrototypeOf: function setPrototypeOf(target, proto) {\n    setProto.check(target, proto);\n    try {\n      setProto.set(target, proto);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = require('./_object-dp');\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","'use strict';\nvar regexpExec = require('./_regexp-exec');\nrequire('./_export')({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar sameValue = require('./_same-value');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","'use strict';\n// B.2.3.3 String.prototype.big()\nrequire('./_string-html')('big', function (createHTML) {\n  return function big() {\n    return createHTML(this, 'big', '', '');\n  };\n});\n","'use strict';\n// B.2.3.4 String.prototype.blink()\nrequire('./_string-html')('blink', function (createHTML) {\n  return function blink() {\n    return createHTML(this, 'blink', '', '');\n  };\n});\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","'use strict';\nvar $export = require('./_export');\nvar $at = require('./_string-at')(false);\n$export($export.P, 'String', {\n  // 21.1.3.3 String.prototype.codePointAt(pos)\n  codePointAt: function codePointAt(pos) {\n    return $at(this, pos);\n  }\n});\n","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","'use strict';\n// B.2.3.7 String.prototype.fontcolor(color)\nrequire('./_string-html')('fontcolor', function (createHTML) {\n  return function fontcolor(color) {\n    return createHTML(this, 'font', 'color', color);\n  };\n});\n","'use strict';\n// B.2.3.8 String.prototype.fontsize(size)\nrequire('./_string-html')('fontsize', function (createHTML) {\n  return function fontsize(size) {\n    return createHTML(this, 'font', 'size', size);\n  };\n});\n","var $export = require('./_export');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\n// B.2.3.9 String.prototype.italics()\nrequire('./_string-html')('italics', function (createHTML) {\n  return function italics() {\n    return createHTML(this, 'i', '', '');\n  };\n});\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite) {\n    var tpl = toIObject(callSite.raw);\n    var len = toLength(tpl.length);\n    var aLen = arguments.length;\n    var res = [];\n    var i = 0;\n    while (len > i) {\n      res.push(String(tpl[i++]));\n      if (i < aLen) res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","'use strict';\n// B.2.3.12 String.prototype.strike()\nrequire('./_string-html')('strike', function (createHTML) {\n  return function strike() {\n    return createHTML(this, 'strike', '', '');\n  };\n});\n","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n","'use strict';\n// B.2.3.14 String.prototype.sup()\nrequire('./_string-html')('sup', function (createHTML) {\n  return function sup() {\n    return createHTML(this, 'sup', '', '');\n  };\n});\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toObject = require('./_to-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $GOPS = require('./_object-gops');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","'use strict';\nvar $export = require('./_export');\nvar $typed = require('./_typed');\nvar buffer = require('./_typed-buffer');\nvar anObject = require('./_an-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nvar isObject = require('./_is-object');\nvar ArrayBuffer = require('./_global').ArrayBuffer;\nvar speciesConstructor = require('./_species-constructor');\nvar $ArrayBuffer = buffer.ArrayBuffer;\nvar $DataView = buffer.DataView;\nvar $isView = $typed.ABV && ArrayBuffer.isView;\nvar $slice = $ArrayBuffer.prototype.slice;\nvar VIEW = $typed.VIEW;\nvar ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it) {\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * require('./_fails')(function () {\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end) {\n    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix\n    var len = anObject(this).byteLength;\n    var first = toAbsoluteIndex(start, len);\n    var fin = toAbsoluteIndex(end === undefined ? len : end, len);\n    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));\n    var viewS = new $DataView(this);\n    var viewT = new $DataView(result);\n    var index = 0;\n    while (first < fin) {\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\nrequire('./_set-species')(ARRAY_BUFFER);\n","var $export = require('./_export');\n$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {\n  DataView: require('./_typed-buffer').DataView\n});\n","require('./_typed-array')('Float32', 4, function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Float64', 8, function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Int16', 2, function (init) {\n  return function Int16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Int32', 4, function (init) {\n  return function Int32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Int8', 1, function (init) {\n  return function Int8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint16', 2, function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint32', 4, function (init) {\n  return function Uint32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n","'use strict';\nvar global = require('./_global');\nvar each = require('./_array-methods')(0);\nvar redefine = require('./_redefine');\nvar meta = require('./_meta');\nvar assign = require('./_object-assign');\nvar weak = require('./_collection-weak');\nvar isObject = require('./_is-object');\nvar validate = require('./_validate-collection');\nvar NATIVE_WEAK_MAP = require('./_validate-collection');\nvar IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar InternalMap;\n\nvar wrapper = function (get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif (NATIVE_WEAK_MAP && IS_IE11) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      // store frozen objects on internal weakmap shim\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n","'use strict';\nvar weak = require('./_collection-weak');\nvar validate = require('./_validate-collection');\nvar WEAK_SET = 'WeakSet';\n\n// 23.4 WeakSet Objects\nrequire('./_collection')(WEAK_SET, function (get) {\n  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.4.3.1 WeakSet.prototype.add(value)\n  add: function add(value) {\n    return weak.def(validate(this, WEAK_SET), value, true);\n  }\n}, weak, false, true);\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export = require('./_export');\nvar ownKeys = require('./_own-keys');\nvar toIObject = require('./_to-iobject');\nvar gOPD = require('./_object-gopd');\nvar createProperty = require('./_create-property');\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIObject(object);\n    var getDesc = gOPD.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var i = 0;\n    var key, desc;\n    while (keys.length > i) {\n      desc = getDesc(O, key = keys[i++]);\n      if (desc !== undefined) createProperty(result, key, desc);\n    }\n    return result;\n  }\n});\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimLeft', function ($trim) {\n  return function trimLeft() {\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimRight', function ($trim) {\n  return function trimRight() {\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n","require('./_wks-define')('asyncIterator');\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","var $export = require('./_export');\nvar $task = require('./_task');\n$export($export.G + $export.B, {\n  setImmediate: $task.set,\n  clearImmediate: $task.clear\n});\n","// ie9- setTimeout & setInterval additional parameters fix\nvar global = require('./_global');\nvar $export = require('./_export');\nvar userAgent = require('./_user-agent');\nvar slice = [].slice;\nvar MSIE = /MSIE .\\./.test(userAgent); // <- dirty ie9- check\nvar wrap = function (set) {\n  return function (fn, time /* , ...args */) {\n    var boundArgs = arguments.length > 2;\n    var args = boundArgs ? slice.call(arguments, 2) : false;\n    return set(boundArgs ? function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);\n    } : fn, time);\n  };\n};\n$export($export.G + $export.B + $export.F * MSIE, {\n  setTimeout: wrap(global.setTimeout),\n  setInterval: wrap(global.setInterval)\n});\n","require('../modules/web.timers');\nrequire('../modules/web.immediate');\nrequire('../modules/web.dom.iterable');\nmodule.exports = require('../modules/_core');\n","!function(t,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define(\"pilota\",[],r):\"object\"==typeof exports?exports.pilota=r():t.pilota=r()}(this,function(){return function(t){function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}var e={};return r.m=t,r.c=e,r.i=function(t){return t},r.d=function(t,r,e){Object.defineProperty(t,r,{configurable:!1,enumerable:!0,get:e})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},r.p=\"\",r(r.s=39)}([function(t,r,e){\"use strict\";var n=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},i=e(9),o=e(3),s=e(16),c=e(5),u=function(t){function r(e,n,i){switch(t.call(this),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=s.empty;break;case 1:if(!e){this.destination=s.empty;break}if(\"object\"==typeof e){e instanceof r?(this.destination=e,this.destination.add(this)):(this.syncErrorThrowable=!0,this.destination=new h(this,e));break}default:this.syncErrorThrowable=!0,this.destination=new h(this,e,n,i)}}return n(r,t),r.prototype[c.$$rxSubscriber]=function(){return this},r.create=function(t,e,n){var i=new r(t,e,n);return i.syncErrorThrowable=!1,i},r.prototype.next=function(t){this.isStopped||this._next(t)},r.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},r.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},r.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},r.prototype._next=function(t){this.destination.next(t)},r.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},r.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},r}(o.Subscription);r.Subscriber=u;var h=function(t){function r(r,e,n,o){t.call(this),this._parent=r;var s,c=this;i.isFunction(e)?s=e:e&&(c=e,s=e.next,n=e.error,o=e.complete,i.isFunction(c.unsubscribe)&&this.add(c.unsubscribe.bind(c)),c.unsubscribe=this.unsubscribe.bind(this)),this._context=c,this._next=s,this._error=n,this._complete=o}return n(r,t),r.prototype.next=function(t){if(!this.isStopped&&this._next){var r=this._parent;r.syncErrorThrowable?this.__tryOrSetError(r,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},r.prototype.error=function(t){if(!this.isStopped){var r=this._parent;if(this._error)r.syncErrorThrowable?(this.__tryOrSetError(r,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else{if(!r.syncErrorThrowable)throw this.unsubscribe(),t;r.syncErrorValue=t,r.syncErrorThrown=!0,this.unsubscribe()}}},r.prototype.complete=function(){if(!this.isStopped){var t=this._parent;this._complete?t.syncErrorThrowable?(this.__tryOrSetError(t,this._complete),this.unsubscribe()):(this.__tryOrUnsub(this._complete),this.unsubscribe()):this.unsubscribe()}},r.prototype.__tryOrUnsub=function(t,r){try{t.call(this._context,r)}catch(t){throw this.unsubscribe(),t}},r.prototype.__tryOrSetError=function(t,r,e){try{r.call(this._context,e)}catch(r){return t.syncErrorValue=r,t.syncErrorThrown=!0,!0}return!1},r.prototype._unsubscribe=function(){var t=this._parent;this._context=null,this._parent=null,t.unsubscribe()},r}(u)},function(t,r,e){\"use strict\";(function(t){var e={boolean:!1,function:!0,object:!0,number:!1,string:!1,undefined:!1};r.root=e[typeof self]&&self||e[typeof window]&&window;var n=e[typeof t]&&t;!n||n.global!==n&&n.window!==n||(r.root=n)}).call(r,e(10))},function(t,r,e){\"use strict\";var n=e(1),i=e(37),o=e(6),s=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(r){var e=new t;return e.source=this,e.operator=r,e},t.prototype.subscribe=function(t,r,e){var n=this.operator,o=i.toSubscriber(t,r,e);if(n?n.call(o,this):o.add(this._subscribe(o)),o.syncErrorThrowable&&(o.syncErrorThrowable=!1,o.syncErrorThrown))throw o.syncErrorValue;return o},t.prototype.forEach=function(t,r){var e=this;if(r||(n.root.Rx&&n.root.Rx.config&&n.root.Rx.config.Promise?r=n.root.Rx.config.Promise:n.root.Promise&&(r=n.root.Promise)),!r)throw new Error(\"no Promise impl found\");return new r(function(r,n){var i=e.subscribe(function(r){if(i)try{t(r)}catch(t){n(t),i.unsubscribe()}else t(r)},n,r)})},t.prototype._subscribe=function(t){return this.source.subscribe(t)},t.prototype[o.$$observable]=function(){return this},t.create=function(r){return new t(r)},t}();r.Observable=s},function(t,r,e){\"use strict\";var n=e(8),i=e(34),o=e(9),s=e(38),c=e(7),u=e(33),h=function(){function t(t){this.closed=!1,t&&(this._unsubscribe=t)}return t.prototype.unsubscribe=function(){var t,r=!1;if(!this.closed){this.closed=!0;var e=this,h=e._unsubscribe,a=e._subscriptions;if(this._subscriptions=null,o.isFunction(h)){var p=s.tryCatch(h).call(this);p===c.errorObject&&(r=!0,(t=t||[]).push(c.errorObject.e))}if(n.isArray(a))for(var f=-1,l=a.length;++f<l;){var b=a[f];if(i.isObject(b)){var p=s.tryCatch(b.unsubscribe).call(b);if(p===c.errorObject){r=!0,t=t||[];var d=c.errorObject.e;d instanceof u.UnsubscriptionError?t=t.concat(d.errors):t.push(d)}}}if(r)throw new u.UnsubscriptionError(t)}},t.prototype.add=function(r){if(!r||r===t.EMPTY)return t.EMPTY;if(r===this)return this;var e=r;switch(typeof r){case\"function\":e=new t(r);case\"object\":if(e.closed||\"function\"!=typeof e.unsubscribe)break;this.closed?e.unsubscribe():(this._subscriptions||(this._subscriptions=[])).push(e);break;default:throw new Error(\"unrecognized teardown \"+r+\" added to Subscription.\")}return e},t.prototype.remove=function(r){if(null!=r&&r!==this&&r!==t.EMPTY){var e=this._subscriptions;if(e){var n=e.indexOf(r);n!==-1&&e.splice(n,1)}}},t.EMPTY=function(t){return t.closed=!0,t}(new t),t}();r.Subscription=h},function(t,r,e){\"use strict\";(function(t){function e(t,r){if(!t)throw r}function n(t){return\"function\"==typeof t}function i(r,e){r.subscribe(function(r){t.console.log(e+\".next:\",r)},function(r){t.console.log(e+\".error:\",r)},function(r){t.console.log(e+\".complete:\",r)})}Object.defineProperty(r,\"__esModule\",{value:!0}),r.precondition=e,r.isFunction=n,r.subscribeLog=i}).call(r,e(10))},function(t,r,e){\"use strict\";var n=e(1),i=n.root.Symbol;r.$$rxSubscriber=\"function\"==typeof i&&\"function\"==typeof i.for?i.for(\"rxSubscriber\"):\"@@rxSubscriber\"},function(t,r,e){\"use strict\";function n(t){var r,e=t.Symbol;return\"function\"==typeof e?e.observable?r=e.observable:(r=e(\"observable\"),e.observable=r):r=\"@@observable\",r}var i=e(1);r.getSymbolObservable=n,r.$$observable=n(i.root)},function(t,r){\"use strict\";r.errorObject={e:{}}},function(t,r){\"use strict\";r.isArray=Array.isArray||function(t){return t&&\"number\"==typeof t.length}},function(t,r){\"use strict\";function e(t){return\"function\"==typeof t}r.isFunction=e},function(t,r){var e;e=function(){return this}();try{e=e||Function(\"return this\")()||(0,eval)(\"this\")}catch(t){\"object\"==typeof window&&(e=window)}t.exports=e},function(t,r,e){\"use strict\";function n(t,r){var e=new o.Subject(s.async);if((0,c.isFunction)(r))e.dispatch=r;else{var n=(0,u.newObjectResolver)(r);e.dispatch=(0,h.newDispatcher)(n),e.addHandler=n.addHandler,e.on=e.addHandler}return e.map(function(t){return\"string\"==typeof t?{name:t}:t}).withLatestFrom(t,function(t,r){return e.dispatch(r,t)}).filter(function(t){return void 0!==t}).subscribe(t),e}function i(t){(0,c.subscribeLog)(t,\"cmdBus$\")}Object.defineProperty(r,\"__esModule\",{value:!0}),r.newCmdBus$=n,r.logCmdBus=i;var o=e(19);e(22),e(21),e(23);var s=e(30),c=e(4),u=e(14),h=e(13)},function(t,r){\"use strict\";function e(t,r){return\"undefined\"!=typeof r?function(e){for(var n=Object.assign({},e),i=arguments.length,o=Array(i>1?i-1:0),s=1;s<i;s++)o[s-1]=arguments[s];return n[t]=r.apply(void 0,[e[t]].concat(o)),n}:(r=t,function(t){return e(t,r)})}Object.defineProperty(r,\"__esModule\",{value:!0}),r.submodelCmd=e},function(t,r,e){\"use strict\";function n(t){(0,i.precondition)(t,\"resolver is required for a dispatcher\"),(0,i.precondition)((0,i.isFunction)(t),\"resolver must be a function\");var r=function(r,e){var n=t(e.name);return n?n.call(e,r,e):void 0};return r.addHandler=t.addHandler,r}Object.defineProperty(r,\"__esModule\",{value:!0}),r.newDispatcher=n;var i=e(4)},function(t,r,e){\"use strict\";function n(t){var r=Object.assign({},t),e=function(t){return r[t]||r[\"*\"]};return e.addHandler=function(t,e){(0,i.precondition)(t,\"requires a command name\"),(0,i.precondition)((0,i.isFunction)(e),\"requires a projection function\"),r[t]=e},e}Object.defineProperty(r,\"__esModule\",{value:!0}),r.newObjectResolver=n;var i=e(4)},function(t,r,e){\"use strict\";var n=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},i=e(0),o=function(t){function r(r,e,n){t.call(this),this.parent=r,this.outerValue=e,this.outerIndex=n,this.index=0}return n(r,t),r.prototype._next=function(t){this.parent.notifyNext(this.outerValue,t,this.outerIndex,this.index++,this)},r.prototype._error=function(t){this.parent.notifyError(t,this),this.unsubscribe()},r.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},r}(i.Subscriber);r.InnerSubscriber=o},function(t,r){\"use strict\";r.empty={closed:!0,next:function(t){},error:function(t){throw t},complete:function(){}}},function(t,r,e){\"use strict\";var n=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},i=e(0),o=function(t){function r(){t.apply(this,arguments)}return n(r,t),r.prototype.notifyNext=function(t,r,e,n,i){this.destination.next(r)},r.prototype.notifyError=function(t,r){this.destination.error(t)},r.prototype.notifyComplete=function(t){this.destination.complete()},r}(i.Subscriber);r.OuterSubscriber=o},function(t,r){\"use strict\";var e=function(){function t(r,e){void 0===e&&(e=t.now),this.SchedulerAction=r,this.now=e}return t.prototype.schedule=function(t,r,e){return void 0===r&&(r=0),new this.SchedulerAction(this,t).schedule(e,r)},t.now=Date.now?Date.now:function(){return+new Date},t}();r.Scheduler=e},function(t,r,e){\"use strict\";var n=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},i=e(2),o=e(0),s=e(3),c=e(32),u=e(20),h=e(5),a=function(t){function r(r){t.call(this,r),this.destination=r}return n(r,t),r}(o.Subscriber);r.SubjectSubscriber=a;var p=function(t){function r(){t.call(this),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}return n(r,t),r.prototype[h.$$rxSubscriber]=function(){return new a(this)},r.prototype.lift=function(t){var r=new f(this,this);return r.operator=t,r},r.prototype.next=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;if(!this.isStopped)for(var r=this.observers,e=r.length,n=r.slice(),i=0;i<e;i++)n[i].next(t)},r.prototype.error=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;this.hasError=!0,this.thrownError=t,this.isStopped=!0;for(var r=this.observers,e=r.length,n=r.slice(),i=0;i<e;i++)n[i].error(t);this.observers.length=0},r.prototype.complete=function(){if(this.closed)throw new c.ObjectUnsubscribedError;this.isStopped=!0;for(var t=this.observers,r=t.length,e=t.slice(),n=0;n<r;n++)e[n].complete();this.observers.length=0},r.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},r.prototype._subscribe=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;return this.hasError?(t.error(this.thrownError),s.Subscription.EMPTY):this.isStopped?(t.complete(),s.Subscription.EMPTY):(this.observers.push(t),new u.SubjectSubscription(this,t))},r.prototype.asObservable=function(){var t=new i.Observable;return t.source=this,t},r.create=function(t,r){return new f(t,r)},r}(i.Observable);r.Subject=p;var f=function(t){function r(r,e){t.call(this),this.destination=r,this.source=e}return n(r,t),r.prototype.next=function(t){var r=this.destination;r&&r.next&&r.next(t)},r.prototype.error=function(t){var r=this.destination;r&&r.error&&this.destination.error(t)},r.prototype.complete=function(){var t=this.destination;t&&t.complete&&this.destination.complete()},r.prototype._subscribe=function(t){var r=this.source;return r?this.source.subscribe(t):s.Subscription.EMPTY},r}(p);r.AnonymousSubject=f},function(t,r,e){\"use strict\";var n=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},i=e(3),o=function(t){function r(r,e){t.call(this),this.subject=r,this.subscriber=e,this.closed=!1}return n(r,t),r.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var t=this.subject,r=t.observers;if(this.subject=null,r&&0!==r.length&&!t.isStopped&&!t.closed){var e=r.indexOf(this.subscriber);e!==-1&&r.splice(e,1)}}},r}(i.Subscription);r.SubjectSubscription=o},function(t,r,e){\"use strict\";var n=e(2),i=e(24);n.Observable.prototype.filter=i.filter},function(t,r,e){\"use strict\";var n=e(2),i=e(25);n.Observable.prototype.map=i.map},function(t,r,e){\"use strict\";var n=e(2),i=e(26);n.Observable.prototype.withLatestFrom=i.withLatestFrom},function(t,r,e){\"use strict\";function n(t,r){return this.lift(new s(t,r))}var i=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},o=e(0);r.filter=n;var s=function(){function t(t,r){this.predicate=t,this.thisArg=r}return t.prototype.call=function(t,r){return r._subscribe(new c(t,this.predicate,this.thisArg))},t}(),c=function(t){function r(r,e,n){t.call(this,r),this.predicate=e,this.thisArg=n,this.count=0,this.predicate=e}return i(r,t),r.prototype._next=function(t){var r;try{r=this.predicate.call(this.thisArg,t,this.count++)}catch(t){return void this.destination.error(t)}r&&this.destination.next(t)},r}(o.Subscriber)},function(t,r,e){\"use strict\";function n(t,r){if(\"function\"!=typeof t)throw new TypeError(\"argument is not a function. Are you looking for `mapTo()`?\");return this.lift(new s(t,r))}var i=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},o=e(0);r.map=n;var s=function(){function t(t,r){this.project=t,this.thisArg=r}return t.prototype.call=function(t,r){return r._subscribe(new c(t,this.project,this.thisArg))},t}();r.MapOperator=s;var c=function(t){function r(r,e,n){t.call(this,r),this.project=e,this.count=0,this.thisArg=n||this}return i(r,t),r.prototype._next=function(t){var r;try{r=this.project.call(this.thisArg,t,this.count++)}catch(t){return void this.destination.error(t)}this.destination.next(r)},r}(o.Subscriber)},function(t,r,e){\"use strict\";function n(){for(var t=[],r=0;r<arguments.length;r++)t[r-0]=arguments[r];var e;\"function\"==typeof t[t.length-1]&&(e=t.pop());var n=t;return this.lift(new c(n,e))}var i=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},o=e(17),s=e(36);r.withLatestFrom=n;var c=function(){function t(t,r){this.observables=t,this.project=r}return t.prototype.call=function(t,r){return r._subscribe(new u(t,this.observables,this.project))},t}(),u=function(t){function r(r,e,n){t.call(this,r),this.observables=e,this.project=n,this.toRespond=[];var i=e.length;this.values=new Array(i);for(var o=0;o<i;o++)this.toRespond.push(o);for(var o=0;o<i;o++){var c=e[o];this.add(s.subscribeToResult(this,c,c,o))}}return i(r,t),r.prototype.notifyNext=function(t,r,e,n,i){this.values[e]=r;var o=this.toRespond;if(o.length>0){var s=o.indexOf(e);s!==-1&&o.splice(s,1)}},r.prototype.notifyComplete=function(){},r.prototype._next=function(t){if(0===this.toRespond.length){var r=[t].concat(this.values);this.project?this._tryProject(r):this.destination.next(r)}},r.prototype._tryProject=function(t){var r;try{r=this.project.apply(this,t)}catch(t){return void this.destination.error(t)}this.destination.next(r)},r}(o.OuterSubscriber)},function(t,r,e){\"use strict\";var n=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},i=e(3),o=function(t){function r(r,e){t.call(this)}return n(r,t),r.prototype.schedule=function(t,r){return void 0===r&&(r=0),this},r}(i.Subscription);r.Action=o},function(t,r,e){\"use strict\";var n=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},i=e(1),o=e(27),s=function(t){function r(r,e){t.call(this,r,e),this.scheduler=r,this.work=e,this.pending=!1}return n(r,t),r.prototype.schedule=function(t,r){if(void 0===r&&(r=0),this.closed)return this;this.state=t,this.pending=!0;var e=this.id,n=this.scheduler;return null!=e&&(this.id=this.recycleAsyncId(n,e,r)),this.delay=r,this.id=this.id||this.requestAsyncId(n,this.id,r),this},r.prototype.requestAsyncId=function(t,r,e){return void 0===e&&(e=0),i.root.setInterval(t.flush.bind(t,this),e)},r.prototype.recycleAsyncId=function(t,r,e){return void 0===e&&(e=0),null!==e&&this.delay===e?r:i.root.clearInterval(r)&&void 0||void 0},r.prototype.execute=function(t,r){if(this.closed)return new Error(\"executing a cancelled action\");this.pending=!1;var e=this._execute(t,r);return e?e:void(this.pending===!1&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null)))},r.prototype._execute=function(t,r){var e=!1,n=void 0;try{this.work(t)}catch(t){e=!0,n=!!t&&t||new Error(t)}if(e)return this.unsubscribe(),n},r.prototype._unsubscribe=function(){var t=this.id,r=this.scheduler,e=r.actions,n=e.indexOf(this);this.work=null,this.delay=null,this.state=null,this.pending=!1,this.scheduler=null,n!==-1&&e.splice(n,1),null!=t&&(this.id=this.recycleAsyncId(r,t,null))},r}(o.Action);r.AsyncAction=s},function(t,r,e){\"use strict\";var n=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},i=e(18),o=function(t){function r(){t.apply(this,arguments),this.actions=[],this.active=!1,this.scheduled=void 0}return n(r,t),r.prototype.flush=function(t){var r=this.actions;if(this.active)return void r.push(t);var e;this.active=!0;do if(e=t.execute(t.state,t.delay))break;while(t=r.shift());if(this.active=!1,e){for(;t=r.shift();)t.unsubscribe();throw e}},r}(i.Scheduler);r.AsyncScheduler=o},function(t,r,e){\"use strict\";var n=e(28),i=e(29);r.async=new i.AsyncScheduler(n.AsyncAction)},function(t,r,e){\"use strict\";var n=e(1),i=n.root.Symbol;if(\"function\"==typeof i)i.iterator?r.$$iterator=i.iterator:\"function\"==typeof i.for&&(r.$$iterator=i.for(\"iterator\"));else if(n.root.Set&&\"function\"==typeof(new n.root.Set)[\"@@iterator\"])r.$$iterator=\"@@iterator\";else if(n.root.Map)for(var o=Object.getOwnPropertyNames(n.root.Map.prototype),s=0;s<o.length;++s){var c=o[s];if(\"entries\"!==c&&\"size\"!==c&&n.root.Map.prototype[c]===n.root.Map.prototype.entries){r.$$iterator=c;break}}else r.$$iterator=\"@@iterator\"},function(t,r){\"use strict\";var e=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},n=function(t){function r(){var r=t.call(this,\"object unsubscribed\");this.name=r.name=\"ObjectUnsubscribedError\",this.stack=r.stack,this.message=r.message}return e(r,t),r}(Error);r.ObjectUnsubscribedError=n},function(t,r){\"use strict\";var e=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)},n=function(t){function r(r){t.call(this),this.errors=r;var e=Error.call(this,r?r.length+\" errors occurred during unsubscription:\\n  \"+r.map(function(t,r){return r+1+\") \"+t.toString()}).join(\"\\n  \"):\"\");this.name=e.name=\"UnsubscriptionError\",this.stack=e.stack,this.message=e.message}return e(r,t),r}(Error);r.UnsubscriptionError=n},function(t,r){\"use strict\";function e(t){return null!=t&&\"object\"==typeof t}r.isObject=e},function(t,r){\"use strict\";function e(t){return t&&\"function\"!=typeof t.subscribe&&\"function\"==typeof t.then}r.isPromise=e},function(t,r,e){\"use strict\";function n(t,r,e,n){var p=new h.InnerSubscriber(t,e,n);if(p.closed)return null;if(r instanceof c.Observable)return r._isScalar?(p.next(r.value),p.complete(),null):r.subscribe(p);if(o.isArray(r)){for(var f=0,l=r.length;f<l&&!p.closed;f++)p.next(r[f]);p.closed||p.complete()}else{if(s.isPromise(r))return r.then(function(t){p.closed||(p.next(t),p.complete())},function(t){return p.error(t)}).then(null,function(t){i.root.setTimeout(function(){throw t})}),p;if(\"function\"==typeof r[u.$$iterator])for(var b=r[u.$$iterator]();;){var d=b.next();if(d.done){p.complete();break}if(p.next(d.value),p.closed)break}else if(\"function\"==typeof r[a.$$observable]){var y=r[a.$$observable]();if(\"function\"==typeof y.subscribe)return y.subscribe(new h.InnerSubscriber(t,e,n));p.error(new Error(\"invalid observable\"))}else p.error(new TypeError(\"unknown type returned\"))}return null}var i=e(1),o=e(8),s=e(35),c=e(2),u=e(31),h=e(15),a=e(6);r.subscribeToResult=n},function(t,r,e){\"use strict\";function n(t,r,e){if(t){if(t instanceof i.Subscriber)return t;if(t[o.$$rxSubscriber])return t[o.$$rxSubscriber]()}return t||r||e?new i.Subscriber(t,r,e):new i.Subscriber}var i=e(0),o=e(5);r.toSubscriber=n},function(t,r,e){\"use strict\";function n(){try{return o.apply(this,arguments)}catch(t){return s.errorObject.e=t,s.errorObject}}function i(t){return o=t,n}var o,s=e(7);r.tryCatch=i},function(t,r,e){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n=e(11),i=e(12);r.default={newCmdBus$:n.newCmdBus$,logCmdBus:n.logCmdBus,submodelCmd:i.submodelCmd},t.exports=r.default}])});\n//# sourceMappingURL=pilota.js.map","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(66178);\n__webpack_require__(27119);\n__webpack_require__(92465);\n__webpack_require__(71255);\n__webpack_require__(54975);\n__webpack_require__(40369);\n__webpack_require__(17924);\n__webpack_require__(58376);\n__webpack_require__(10684);\n__webpack_require__(47536);\n__webpack_require__(56906);\nvar __webpack_exports__ = __webpack_require__(26981);\n"],"sourceRoot":""}